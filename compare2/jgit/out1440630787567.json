{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":676,"org.eclipse.jgit.api.RmCommandTest.testRemove":120,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":699,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtStart":895,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":116,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":824,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":452,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":39,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":475,"org.eclipse.jgit.api.TagCommandTest.testEmptyTagName":17,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting":659,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":735,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles":429,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":489,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":633,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":395,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":85,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":845,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":364,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":30,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk":790,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":852,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":805,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":640,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":708,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":363,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters":616,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":604,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":222,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":689,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot":769,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoHeadOtherThanMaster":611,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":273,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":696,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit":50,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":176,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent":870,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":36,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":675,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":839,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":435,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted":47,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":806,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":846,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePath":799,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindowsOnUnix":779,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":132,"org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit":181,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":321,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathSecondCheckout":781,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches":11,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":312,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows":803,"org.eclipse.jgit.util.RefListTest.testAddToEndOfList":866,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObjectTree_pruned":731,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified":37,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":331,"org.eclipse.jgit.api.RmCommandTest.testRemoveCached":119,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUpToDate":721,"org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits":483,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":567,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":568,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":569,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":713,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":218,"org.eclipse.jgit.api.TagCommandTest.testDeleteEmptyTagNames":16,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":419,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":565,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":462,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":566,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":892,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeleted":43,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":257,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":3,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":621,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":837,"org.eclipse.jgit.api.GitConstructionTest.testClose":408,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":193,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":187,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":224,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly":291,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":346,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile":670,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications":899,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":821,"org.eclipse.jgit.api.StatusCommandTest.testEmptyStatus":156,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":322,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":220,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot":780,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgLpt1":800,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":626,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":352,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":536,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":880,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":535,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":538,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":537,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":539,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag":267,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":141,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":279,"org.eclipse.jgit.api.DescribeCommandTest.noTargetSet":263,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":682,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":487,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":403,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":809,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":400,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":588,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":844,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":587,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule":594,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":589,"org.eclipse.jgit.util.RefListTest.testAddToMiddleOfListByInsertionPosition":865,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2":784,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1":783,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":586,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":585,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":635,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":864,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardUnknownObject":725,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":130,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADSOnUnix":788,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":620,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":49,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":265,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":454,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":756,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":84,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardForced":722,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":599,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":216,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":35,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":887,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":70,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":657,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":296,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":140,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":206,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":393,"org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput":747,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":245,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":59,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":886,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":198,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":396,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":150,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":307,"org.eclipse.jgit.api.ResetCommandTest.testResetDefaultMode":212,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":760,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":758,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":526,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":525,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":528,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":829,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":527,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":83,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":477,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":529,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":391,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":238,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":148,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":649,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeleted":61,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1OnUnix":804,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":242,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad":789,"org.eclipse.jgit.lib.ReflogConfigTest.testlogAllRefUpdates":891,"org.eclipse.jgit.api.GitConstructionTest.testWrap":410,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":814,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit":178,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteNotFound":631,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":855,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":488,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":450,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":835,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":882,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":294,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs":709,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":241,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":516,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":515,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs":851,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":493,"org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging":24,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":602,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":757,"org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile":175,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":236,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":817,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":680,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":624,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":833,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":863,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":111,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":334,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF2":160,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":808,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF1":159,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":858,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":412,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":131,"org.eclipse.jgit.api.TagCommandTest.testDeleteBadName":23,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":374,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":411,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":685,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":714,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":314,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseNonGitDescribe":825,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForward":726,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":495,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":496,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":497,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":498,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":499,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":226,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":518,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":517,"org.eclipse.jgit.api.NameRevCommandTest.ref":874,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":519,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":439,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":664,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case":776,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateOnReject":717,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":268,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":285,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":383,"org.eclipse.jgit.transport.PushProcessTest.testUpdateCreateRef":728,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":703,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":103,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":297,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":343,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":405,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":811,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":506,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_a":505,"org.eclipse.jgit.merge.MergeAlgorithmTest.testNoAgainstOneModification":903,"org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1":158,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d":508,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":507,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":32,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent":853,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":87,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":746,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":677,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":820,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned":847,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":26,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderIgnored":55,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":848,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":742,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":51,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon":764,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":818,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":392,"org.eclipse.jgit.api.CleanCommandTest.testClean":73,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":375,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":196,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":622,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":92,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":301,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":745,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":75,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":249,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":42,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":381,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":199,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":407,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows":802,"org.eclipse.jgit.api.CommitCommandTest.commitAmendOnInitialShouldFail":71,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":68,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":655,"org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged":174,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOk":763,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":416,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix":775,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":453,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":108,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":509,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":744,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":751,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":357,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":78,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath":878,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":54,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":58,"org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs":752,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":98,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":443,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":330,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk":770,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":449,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":335,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":385,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":118,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":623,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody":605,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch":205,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":171,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgDotCon":766,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":155,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":482,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":339,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":340,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":425,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":208,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":436,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit":618,"org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications":901,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":639,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":281,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":371,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":445,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":204,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":377,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored":25,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak":606,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":28,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":260,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":95,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":597,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime":66,"org.eclipse.jgit.api.TagCommandTest.testFailureOnSignedTags":14,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":250,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":422,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":638,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":691,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.oneCommit":10,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":641,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":182,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":306,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":366,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked":889,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":695,"org.eclipse.jgit.lib.ReflogResolveTest.resolveDate":812,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":82,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":842,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":652,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix":768,"org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog":180,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnUnbornBranch":207,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":209,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":69,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows":791,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":38,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":470,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":441,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetToNonexistingRef":213,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection":167,"org.eclipse.jgit.api.BlameCommandTest.testRename":338,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":430,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":658,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":358,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":298,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":859,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":750,"org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits":459,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":157,"org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName":421,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":827,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":446,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix":774,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":337,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":739,"org.eclipse.jgit.api.BranchCommandTest.testCreateAndList":272,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":329,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":145,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":233,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly":653,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":672,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":692,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":636,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":114,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations":231,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withCommitLoadedByDifferentRevWalk":8,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":215,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":458,"org.eclipse.jgit.api.PushCommandTest.testPush":151,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":463,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":834,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":490,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":687,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":583,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":584,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":843,"org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir":402,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":580,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":581,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":424,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":582,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":323,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":701,"org.eclipse.jgit.api.ApplyCommandTest.testDeleteD":165,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":378,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":232,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":353,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS":792,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":690,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":738,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":227,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":341,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1OnUnix":767,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":440,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":702,"org.eclipse.jgit.api.GitConstructionTest.testOpen":409,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":202,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":397,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":460,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":308,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":434,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":710,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":327,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":328,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":97,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockFrom":650,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":324,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":325,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":316,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":326,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":76,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":186,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":593,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test027_UnpackedRefHigherPriorityThanPacked":627,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgCon":793,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":137,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":240,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":442,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":464,"org.eclipse.jgit.lib.RefTest.testReadLooseRef":755,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":105,"org.eclipse.jgit.api.NameRevCommandTest.onePathMerge":876,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead":674,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":6,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":897,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":347,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":293,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":149,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":481,"org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor":875,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":154,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":287,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon1":785,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":356,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":67,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":106,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":598,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":122,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit":266,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":124,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":125,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":706,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit":479,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":860,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":761,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":647,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":77,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":271,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":173,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":320,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits":9,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":123,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":665,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":117,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.concurrentOnlyOneWritesPackedRefs":888,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":628,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":283,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":253,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":225,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":80,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":185,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":286,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":595,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":90,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":478,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":214,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit":41,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":146,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":370,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":648,"org.eclipse.jgit.api.TagCommandTest.testDeleteNonExisting":15,"org.eclipse.jgit.api.TagCommandTest.testInvalidTagName":21,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoOtherThanMaster":613,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked":62,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":823,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit":40,"org.eclipse.jgit.lib.IndexDiffTest.testStageState":748,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpr":765,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":642,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":112,"org.eclipse.jgit.util.RefMapTest.testPut_CollapseResolved":868,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":427,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":48,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":129,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge":7,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":65,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":854,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":361,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":360,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":417,"org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges":195,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":661,"org.eclipse.jgit.api.BranchCommandTest.testDelete":278,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":472,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":645,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":179,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":494,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":563,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":564,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad":782,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":560,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":561,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":562,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":45,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":431,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1":794,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2":795,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":310,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":93,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":698,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":603,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":387,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":740,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":147,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch":426,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":466,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":486,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":190,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":189,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":138,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues":168,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":344,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":540,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":542,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":541,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":544,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":816,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":91,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":543,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":309,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testOneBranch":619,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":404,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":315,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":243,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting":654,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":749,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":737,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTagsNoResult":873,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":274,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":386,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":1,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":262,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":276,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches":237,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":571,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":102,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":572,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":573,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":574,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt":72,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":153,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":570,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead":656,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":678,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkTwoLevels":787,"org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch":810,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":591,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":671,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSeperateModifications":896,"org.eclipse.jgit.api.StashDropCommandTest.dropNegativeRef":255,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":126,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":840,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":376,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":632,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":807,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":451,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case":778,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":362,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockFrom":637,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTwoBranches":615,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":110,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":12,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":289,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":63,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":336,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag":607,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":133,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":530,"org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart":269,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":532,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":531,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking":711,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":270,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":534,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":533,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":74,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":277,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":630,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":258,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":86,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":625,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":861,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":219,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":379,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":365,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":305,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":432,"org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder":20,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":292,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":600,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":520,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":29,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":359,"org.eclipse.jgit.api.NameRevCommandTest.nameExact":879,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":188,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes":856,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":0,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":248,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":736,"org.eclipse.jgit.api.ResetCommandTest.testResetToNonexistingHEAD":217,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":351,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":79,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":679,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":350,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":223,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":830,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":261,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches":612,"org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree":484,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":282,"org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers":64,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":596,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockHEAD":651,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":194,"org.eclipse.jgit.api.TagCommandTest.testTagging":13,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":295,"org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications":898,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":890,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":332,"org.eclipse.jgit.api.StashApplyCommandTest.unstashNoHead":456,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":819,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":200,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":100,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case":777,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":221,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":644,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":686,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":369,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":522,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory":669,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":299,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":521,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":700,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":524,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":523,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict":857,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":44,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":373,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":414,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":545,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":547,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":546,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":549,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":413,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":548,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout":838,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":474,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackRepoWithNoRefs":705,"org.eclipse.jgit.transport.PushProcessTest.testPushResult":724,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":850,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination":712,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":128,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":480,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateLooseBlob":666,"org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream":389,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockFrom":646,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":201,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":836,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":510,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":727,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":349,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":512,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedObjects_onlyExpiredPruned":733,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":511,"org.eclipse.jgit.util.RefListTest.testPutNewEntry":867,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":372,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":254,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":849,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":81,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":754,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":348,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri":608,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":275,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_existing":828,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":134,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":715,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":354,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified":60,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":688,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":841,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTags":872,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":143,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":251,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1":771,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2":772,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":401,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows3":773,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":88,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":673,"org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned":697,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive":56,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":514,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":513,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":390,"org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoTagsInRepository":19,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":109,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible":317,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":831,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues":166,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":461,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkSecondCheckout":798,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":31,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":302,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":300,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":418,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_a":500,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c":502,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_b":501,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e":504,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d":503,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":762,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":34,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":52,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":743,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":192,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":723,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":177,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":246,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2":797,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1":796,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":311,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":191,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":415,"org.eclipse.jgit.api.NotesCommandTest.testListNotes":94,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":473,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":384,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique":667,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":197,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":172,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":428,"org.eclipse.jgit.api.StashDropCommandTest.dropWithNoStashedCommits":256,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":89,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":815,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":304,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists":663,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":244,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":318,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent":877,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefUpdatedRefUpdateSucceeds":885,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":259,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":592,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":555,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":881,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":183,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":559,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":491,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":558,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":741,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":557,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":556,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter":609,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":444,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":319,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":394,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":252,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue":169,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderUntracked":57,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":467,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":694,"org.eclipse.jgit.api.ApplyCommandTest.testModifyX":162,"org.eclipse.jgit.api.ApplyCommandTest.testModifyY":163,"org.eclipse.jgit.api.ApplyCommandTest.testModifyZ":164,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":139,"org.eclipse.jgit.api.ApplyCommandTest.testModifyE":161,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed":610,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":115,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":264,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":235,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoNonConflictingModifications":894,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange":643,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":107,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":230,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":229,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":333,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":683,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModified":33,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":662,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":693,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommitted":27,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":382,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":438,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":420,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateDisabled":729,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_nonexisting":813,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits":485,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixNameExists":629,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":684,"org.eclipse.jgit.notes.NoteMapMergerTest.testNoChange":862,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":718,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":144,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":550,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":551,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":552,"org.eclipse.jgit.merge.MergeAlgorithmTest.testDeleteVsModify":902,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":553,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":554,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":832,"org.eclipse.jgit.api.FetchCommandTest.testFetch":96,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":826,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":579,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":759,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":575,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemoteVsForce":719,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":576,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":492,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":577,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":578,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1":786,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":448,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":355,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":399,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToNullCommit":2,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":367,"org.eclipse.jgit.api.NameRevCommandTest.prefix":871,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":234,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.repackEmptyRepo_noPackCreated":704,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":368,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":398,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSameModification":900,"org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint":280,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":203,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":465,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix":801,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":136,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":135,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":211,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":99,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":471,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":170,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":142,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":284,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":210,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":433,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":121,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":342,"org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit":476,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":388,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":303,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":457,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":753,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":239,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":469,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":590,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":732,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":601,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":406,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":884,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":313,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObject_pruned":730,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase":893,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":345,"org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName":437,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":668,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":152,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoSymbolicRefHeadPointingToMaster":617,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":734,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":822,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":455,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":380,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":127,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemote":716,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":46,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":423,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":288,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":447,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":290,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":18,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":720,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":468,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":634,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":660,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":883,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":101,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch":614,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":113,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":707,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":681,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":247,"org.eclipse.jgit.api.TagCommandTest.testDelete":22,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsNoMerge":869,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":53,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":104,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":184,"org.eclipse.jgit.api.RevertCommandTest.testRevert":228},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,408,409,409,410,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848],"tindex":"02f7365d-4c48-11e5-8c0d-d73ad41d0b88","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:686","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevTree.copy()"},"variableMap":{"tree":"rev"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:430","type":"CtSwitchImpl","sourcecode":"switch (char[][int]) {\n    case '^' :\n        if (org.eclipse.jgit.revwalk.RevObject == null) {\n            if (java.lang.String == null)\n                if (int == 0)\n                    java.lang.String = new java.lang.String(char[] , int , int);\n                else {\n                    int = int + 1;\n                    break;\n                }\n            \n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.Repository.parseSimple(org.eclipse.jgit.revwalk.RevWalk, java.lang.String);\n            java.lang.String = null;\n            if (org.eclipse.jgit.revwalk.RevObject == null)\n                return null;\n            \n        } \n        if ((int + 1) < (char[].int)) {\n            switch (char[][(int + 1)]) {\n                case '0' :\n                case '1' :\n                case '2' :\n                case '3' :\n                case '4' :\n                case '5' :\n                case '6' :\n                case '7' :\n                case '8' :\n                case '9' :\n                    int int;\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevObject);\n                    for (int = int + 1 ; int < (char[].int) ; ++int) {\n                        if (!(java.lang.Character.isDigit(char[][int])))\n                            break;\n                        \n                    }\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + 1) , ((int - int) - 1));\n                    int int;\n                    try {\n                        int = java.lang.Integer.parseInt(java.lang.String);\n                    } catch (java.lang.NumberFormatException e) {\n                        throw new org.eclipse.jgit.errors.RevisionSyntaxException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.lang.String);\n                    }\n                    if (int != 0) {\n                        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n                        if (int > (org.eclipse.jgit.revwalk.RevCommit.getParentCount()))\n                            org.eclipse.jgit.revwalk.RevObject = null;\n                        else\n                            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent((int - 1));\n                        \n                    } \n                    int = int - 1;\n                    int = int;\n                    break;\n                case '{' :\n                    int int;\n                    java.lang.String java.lang.String = null;\n                    for (int = int + 2 ; int < (char[].int) ; ++int) {\n                        if ((char[][int]) == '}') {\n                            java.lang.String = new java.lang.String(char[] , (int + 2) , ((int - int) - 2));\n                            break;\n                        } \n                    }\n                    int = int;\n                    if (java.lang.String != null)\n                        if (java.lang.String.equals(\"tree\")) {\n                            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.revwalk.RevObject);\n                        } else if (java.lang.String.equals(\"commit\")) {\n                            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevObject);\n                        } else if (java.lang.String.equals(\"blob\")) {\n                            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n                            if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevBlob))\n                                throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n                            \n                        } else if (java.lang.String.equals(\"\")) {\n                            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n                        } else\n                            throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                        \n                    else\n                        throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                    \n                    int = int;\n                    break;\n                default :\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n                    if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) {\n                        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n                        if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0)\n                            org.eclipse.jgit.revwalk.RevObject = null;\n                        else\n                            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n                        \n                    } else\n                        throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n                    \n            }\n        } else {\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n            if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) {\n                org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n                if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0)\n                    org.eclipse.jgit.revwalk.RevObject = null;\n                else\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n                \n            } else\n                throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n            \n        }\n        int = int + 1;\n        break;\n    case '~' :\n        if (org.eclipse.jgit.revwalk.RevObject == null) {\n            if (java.lang.String == null)\n                if (int == 0)\n                    java.lang.String = new java.lang.String(char[] , int , int);\n                else {\n                    int = int + 1;\n                    break;\n                }\n            \n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.Repository.parseSimple(org.eclipse.jgit.revwalk.RevWalk, java.lang.String);\n            java.lang.String = null;\n            if (org.eclipse.jgit.revwalk.RevObject == null)\n                return null;\n            \n        } \n        org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n        if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit))\n            throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n        \n        int int;\n        for (int = int + 1 ; int < (char[].int) ; ++int) {\n            if (!(java.lang.Character.isDigit(char[][int])))\n                break;\n            \n        }\n        int int;\n        if ((int - int) > 1) {\n            java.lang.String java.lang.String = new java.lang.String(char[] , (int + 1) , ((int - int) - 1));\n            try {\n                int = java.lang.Integer.parseInt(java.lang.String);\n            } catch (java.lang.NumberFormatException e) {\n                throw new org.eclipse.jgit.errors.RevisionSyntaxException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.lang.String);\n            }\n        } else\n            int = 1;\n        \n        while (int > 0) {\n            org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n            if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0) {\n                org.eclipse.jgit.revwalk.RevObject = null;\n                break;\n            } \n            org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n            org.eclipse.jgit.revwalk.RevWalk.parseHeaders(org.eclipse.jgit.revwalk.RevCommit);\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit;\n            --int;\n        }\n        int = int - 1;\n        int = int;\n        break;\n    case '@' :\n        if (org.eclipse.jgit.revwalk.RevObject != null)\n            throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n        \n        if (((int + 1) < (char[].int)) && ((char[][(int + 1)]) != '{'))\n            continue;\n        \n        int int;\n        java.lang.String java.lang.String = null;\n        for (int = int + 2 ; int < (char[].int) ; ++int) {\n            if ((char[][int]) == '}') {\n                java.lang.String = new java.lang.String(char[] , (int + 2) , ((int - int) - 2));\n                break;\n            } \n        }\n        if (java.lang.String != null) {\n            if (java.lang.String.equals(\"upstream\")) {\n                if (java.lang.String == null)\n                    java.lang.String = new java.lang.String(char[] , int , int);\n                \n                if (java.lang.String.equals(\"\"))\n                    java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n                \n                if (!(org.eclipse.jgit.lib.Repository.isValidRefName((\"x/\" + java.lang.String))))\n                    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                \n                org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(java.lang.String);\n                java.lang.String = null;\n                if (org.eclipse.jgit.lib.Ref == null)\n                    return null;\n                \n                if (org.eclipse.jgit.lib.Ref.isSymbolic())\n                    org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Ref.getLeaf();\n                \n                java.lang.String = org.eclipse.jgit.lib.Ref.getName();\n                org.eclipse.jgit.transport.RemoteConfig org.eclipse.jgit.transport.RemoteConfig;\n                try {\n                    org.eclipse.jgit.transport.RemoteConfig = new org.eclipse.jgit.transport.RemoteConfig(org.eclipse.jgit.lib.Repository.getConfig() , \"origin\");\n                } catch (java.net.URISyntaxException e) {\n                    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                }\n                java.lang.String java.lang.String = org.eclipse.jgit.lib.Repository.getConfig().getString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, org.eclipse.jgit.lib.Repository.shortenRefName(org.eclipse.jgit.lib.Ref.getName()), org.eclipse.jgit.lib.ConfigConstants.java.lang.String);\n                java.util.List<org.eclipse.jgit.transport.RefSpec> java.util.List<org.eclipse.jgit.transport.RefSpec> = org.eclipse.jgit.transport.RemoteConfig.getFetchRefSpecs();\n                for (org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec : java.util.List<org.eclipse.jgit.transport.RefSpec>) {\n                    if (org.eclipse.jgit.transport.RefSpec.matchSource(java.lang.String)) {\n                        org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = org.eclipse.jgit.transport.RefSpec.expandFromSource(java.lang.String);\n                        java.lang.String = org.eclipse.jgit.transport.RefSpec.getDestination();\n                        break;\n                    } \n                }\n                if (java.lang.String == null)\n                    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                \n            } else if (java.lang.String.matches(\"^-\\\\d+$\")) {\n                if (java.lang.String != null)\n                    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                else {\n                    java.lang.String java.lang.String = org.eclipse.jgit.lib.Repository.resolveReflogCheckout(-(java.lang.Integer.parseInt(java.lang.String)));\n                    if (org.eclipse.jgit.lib.ObjectId.isId(java.lang.String))\n                        org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.Repository.parseSimple(org.eclipse.jgit.revwalk.RevWalk, java.lang.String);\n                    else\n                        java.lang.String = java.lang.String;\n                    \n                }\n            } else {\n                if (java.lang.String == null)\n                    java.lang.String = new java.lang.String(char[] , int , int);\n                \n                if (java.lang.String.equals(\"\"))\n                    java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n                \n                if (!(org.eclipse.jgit.lib.Repository.isValidRefName((\"x/\" + java.lang.String))))\n                    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                \n                org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(java.lang.String);\n                java.lang.String = null;\n                if (org.eclipse.jgit.lib.Ref == null)\n                    return null;\n                \n                if (org.eclipse.jgit.lib.Ref.isSymbolic())\n                    org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Ref.getLeaf();\n                \n                org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.Repository.resolveReflog(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.Ref, java.lang.String);\n            }\n            int = int;\n        } else\n            throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n        \n        break;\n    case ':' :\n        {\n            org.eclipse.jgit.revwalk.RevTree org.eclipse.jgit.revwalk.RevTree;\n            if (org.eclipse.jgit.revwalk.RevObject == null) {\n                if (java.lang.String == null)\n                    java.lang.String = new java.lang.String(char[] , int , int);\n                \n                if (java.lang.String.equals(\"\"))\n                    java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n                \n                org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.Repository.parseSimple(org.eclipse.jgit.revwalk.RevWalk, java.lang.String);\n                java.lang.String = null;\n            } \n            if (org.eclipse.jgit.revwalk.RevObject == null)\n                return null;\n            \n            org.eclipse.jgit.revwalk.RevTree = org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.revwalk.RevObject);\n            if (int == ((char[].int) - 1))\n                return org.eclipse.jgit.revwalk.RevTree.copy();\n            \n            org.eclipse.jgit.treewalk.TreeWalk org.eclipse.jgit.treewalk.TreeWalk = org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.revwalk.RevWalk.getObjectReader(), new java.lang.String(char[] , (int + 1) , (((char[].int) - int) - 1)), org.eclipse.jgit.revwalk.RevTree);\n            return org.eclipse.jgit.treewalk.TreeWalk != null ? org.eclipse.jgit.treewalk.TreeWalk.getObjectId(0) : null;\n        }\n    default :\n        if (org.eclipse.jgit.revwalk.RevObject != null)\n            throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n        \n}"},"status":-1},{"failures":[849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864],"tindex":"02f7d29e-4c48-11e5-8c0d-4b95d72ca824","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.NoteMapMerger:284","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.notes.Note = org.eclipse.jgit.notes.Note"},"variableMap":{"min":"note","o":"note"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.LeafBucket:233","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.notes.Note[][(int)++] = org.eclipse.jgit.notes.Note"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,865,866,867,868,12,13,18,20,22,23,24,73,74,75,76,77,78,79,102,103,104,105,106,107,108,109,110,111,112,113,114,80,81,82,83,84,85,86,87,88,89,90,91,92,93,31,32,35,39,40,41,42,44,45,48,50,51,63,65,66,67,68,69,70,72,115,116,117,118,94,95,96,97,98,99,100,101,869,870,871,872,873,874,875,876,877,878,879,137,138,139,140,141,142,143,144,145,146,147,148,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,149,150,151,152,153,154,155,166,167,168,169,177,170,171,172,198,199,200,179,180,181,201,202,203,204,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,206,208,209,210,211,214,215,216,218,219,220,245,246,247,248,249,250,251,240,241,242,243,244,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,252,253,254,257,258,259,671,672,673,260,261,262,264,265,342,343,408,408,409,409,410,410,405,406,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,411,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,438,439,440,441,442,443,444,445,446,447,448,449,450,451,487,488,478,480,481,482,483,485,486,452,453,454,455,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,591,489,490,491,495,496,497,498,499,502,503,504,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,620,621,622,623,624,625,626,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,628,880,881,668,691,692,702,703,706,707,696,697,690,698,699,700,701,882,883,884,732,694,632,633,635,636,637,638,639,640,642,646,647,649,650,651,653,654,655,657,660,662,663,664,845,846,847,695,708,885,848,886,887,888,889,715,890,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,734,735,736,737,738,739,740,891,752,754,741,742,743,744,745,746,747,749,750,751,892,893,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,819,821,825,807,808,809,810,811,812,756,757,758,759,760,761,762,835,836,837,838,839,840,841,842,843],"tindex":"02f7d29f-4c48-11e5-8c0d-3df18d3096f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefList:256","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(org.eclipse.jgit.lib.Ref[], 0, org.eclipse.jgit.lib.Ref[], 0, int)"},"status":-1},{"failures":[439,440,443,448,820],"tindex":"02f7f9b0-4c48-11e5-8c0d-99e6a3e4517a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.Daemon:193","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"git-\" + java.lang.String"},"variableMap":{"name":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:676","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.lang.String(char[] , int , int)"},"status":-1},{"failures":[],"tindex":"02f7f9b1-4c48-11e5-8c0d-2d827ae27df9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:165","type":"CtIfImpl","sourcecode":"if (int > int)\n    return -1;\n"},"variableMap":{"tokenBegin":"pathOffset","lineEnd":"pathOffset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:359","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    final org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    final org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    if ((org.eclipse.jgit.treewalk.AbstractTreeIterator == null) || (org.eclipse.jgit.treewalk.AbstractTreeIterator == null))\n        return 0;\n    \n    if ((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) == (org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator))\n        return org.eclipse.jgit.treewalk.AbstractTreeIterator.int;\n    \n    org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n}"},"status":-2},{"failures":[],"tindex":"02f820c2-4c48-11e5-8c0d-831f94982efa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:166","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ProgressMonitor.start(6)"},"status":-2},{"failures":[],"tindex":"02f820c3-4c48-11e5-8c0d-3b33590139ba","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:64","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.isSupported()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:441","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-2},{"failures":[51,286,298,305,318,477,894,895,896,897,898,899,900,901,902,903,102,350,352,360,390,396,401,620,623,624,742,749,677],"tindex":"02f820c4-4c48-11e5-8c0d-3939cd492b89","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.BlockList:333","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    throw new java.lang.IllegalStateException();\n"},"variableMap":{"index":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:301","type":"CtIfImpl","sourcecode":"if (int < (S.size())) {\n    org.eclipse.jgit.merge.MergeResult<S>.add(0, int, S.size(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n} "},"status":-1},{"failures":[],"tindex":"02f820c5-4c48-11e5-8c0d-17335935f9fc","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:625","type":"CtIfImpl","sourcecode":"if ((((((int - int) >= 4) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 2)])) == 'm')) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 1)])) == 'o')) && org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.isPositiveDigit(byte[][(int + 3)]))) && (((int - int) == 4) || ((byte[][(int + 4)]) == '.')))\n    throw new org.eclipse.jgit.errors.CorruptObjectException(((\"invalid name \\'COM\" + ((char)(byte[][(int + 3)]))) + \"\\'\"));\n"},"status":0},{"failures":[],"tindex":"02f820c6-4c48-11e5-8c0d-ff45e97fbdd6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectInserter:265","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.io.EOFException(\"Unexpected end of input\");\n"},"variableMap":{"n":"endB"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Candidate:253","type":"CtDoImpl","sourcecode":"do {\n    if (int <= (org.eclipse.jgit.blame.Region.int))\n        org.eclipse.jgit.blame.Region.int -= int;\n    \n    org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Region.org.eclipse.jgit.blame.Region;\n} while (org.eclipse.jgit.blame.Region != null )"},"status":-2},{"failures":[],"tindex":"02f847d7-4c48-11e5-8c0d-35b0054ac508","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:262","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:858","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-2},{"failures":[],"tindex":"02f847d8-4c48-11e5-8c0d-b12cd67a8819","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:149","type":"CtOperatorAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.int |= org.eclipse.jgit.revwalk.PendingGenerator.int"},"variableMap":{"p":"src","flags":"w4","org.eclipse.jgit.revwalk.PendingGenerator.SEEN":"w4"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.MutableObjectId:150","type":"CtAssignmentImpl","sourcecode":"this.int = org.eclipse.jgit.lib.AnyObjectId.int"},"status":0},{"failures":[691,692,702,703,706,707,732,695,700,701],"tindex":"02f847d9-4c48-11e5-8c0d-fbad952570d2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LocalObjectToPack:68","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackFile = null"},"variableMap":{"pack":"heads"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:550","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackFile = org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Collections.<org.eclipse.jgit.lib.ObjectId>emptySet(), java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriter.ObjectIdSet>)"},"status":-1},{"failures":[],"tindex":"02f847da-4c48-11e5-8c0d-5dfed6f169da","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RefRename:142","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.RefUpdate.Result"},"variableMap":{"result":"org.eclipse.jgit.lib.RefUpdate.Result.LOCK_FAILURE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefUpdate:605","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result"},"status":-2},{"failures":[],"tindex":"02f847db-4c48-11e5-8c0d-e79aa98ddc5a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.NoteMapMerger:274","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.notes.LeafBucket != null ? org.eclipse.jgit.notes.LeafBucket : org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.LeafBucket"},"variableMap":{"b":"leaf","org.eclipse.jgit.notes.NoteMapMerger.EMPTY_LEAF":"leaf"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteParser:147","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.notes.LeafBucket"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}