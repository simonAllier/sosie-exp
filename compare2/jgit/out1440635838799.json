{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":141,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":151,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":106,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":145,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":20,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":99,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":30,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":75,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase3":199,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":47,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":131,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":68,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase0":196,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase2":198,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase1":197,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase5":162,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":122,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCntrlGroupCase1":166,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase3":161,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase2":160,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase1":159,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_ConnectionAttempts":156,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase0":158,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":128,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":152,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible":87,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase3":186,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase2":185,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase4":187,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase3":193,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":54,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase4":194,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase1":191,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase2":192,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":110,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":129,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":153,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase5":195,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":120,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":40,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":81,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":98,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase3":170,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase2":169,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":17,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":65,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":135,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":48,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":37,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":147,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase2":181,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":36,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase1":180,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":84,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase0":179,"org.eclipse.jgit.transport.LongMapTest.testRemoveOne":149,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase5":184,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase4":183,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase3":182,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":66,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":5,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":94,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":126,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":41,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":13,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":146,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":108,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":12,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":59,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":74,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testLowerGroupCase4":165,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testLowerGroupCase1":164,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":2,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":88,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":144,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testLowerGroupCase0":163,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":8,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":9,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":35,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":34,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":143,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":55,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":28,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":113,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":22,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":137,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":138,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase1":168,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase0":167,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":19,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":38,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":32,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":60,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":132,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":42,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime":71,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":103,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":18,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":45,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":44,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":24,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":150,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":116,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":82,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":121,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":102,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":3,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testBlankGroupCase0":188,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testBlankGroupCase1":189,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":105,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":123,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat":134,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":63,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUnsupportedGroupCase1":176,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUnsupportedGroupCase0":175,"org.eclipse.jgit.api.BlameCommandTest.testRename":7,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":107,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":118,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":80,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod":111,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":70,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":46,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":49,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":117,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPunctGroupCase1":178,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":130,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPunctGroupCase0":177,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":6,"org.eclipse.jgit.dircache.DirCachePathEditTest.testPathEditShouldBeCalledForEachStage":154,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":1,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":23,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":52,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":79,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":104,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":14,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":56,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":0,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":83,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":119,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":33,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":58,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":97,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":96,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":16,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":64,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":11,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":69,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":26,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":109,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":43,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":73,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":10,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":39,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":127,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":78,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":53,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":139,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":51,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii":133,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":27,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":72,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":62,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase3":174,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase2":173,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase1":172,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase0":171,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":86,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":31,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":142,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":85,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":25,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":114,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":57,"org.eclipse.jgit.transport.LongMapTest.testRemoveCollision2":148,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":50,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":67,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":140,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":115,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":93,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":124,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase0":190,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii":136,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":4,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":77,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":76,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":112,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":61,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":89,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":21,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":91,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":92,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":100,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase2":157,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":15,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":95,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":125,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":155,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":29,"org.eclipse.jgit.api.RevertCommandTest.testRevert":101,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":90},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"c5bbe513-4c53-11e5-8921-ff487cf3fb38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Candidate:226","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Candidate.add(org.eclipse.jgit.blame.Region, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Region)"},"status":-1},{"failures":[],"tindex":"c5bc0c24-4c53-11e5-8921-e5f563e5b415","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BranchConfig:178","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return org.eclipse.jgit.lib.Constants.java.lang.String;\nelse\n    return java.lang.String;\n"},"variableMap":{"org.eclipse.jgit.lib.Constants.DEFAULT_REMOTE_NAME":"ourCommitName","remote":"ourCommitName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:328","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null)\n    return java.lang.String;\n"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"c5bc0c25-4c53-11e5-8921-d781372a472d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.CommitBuilder:225","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-1},{"failures":[143,144,145,146,147],"tindex":"c5bc0c26-4c53-11e5-8921-a5eeba612d81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:681","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.storage.file.FileBasedConfig.load();\n} catch (org.eclipse.jgit.errors.ConfigInvalidException err) {\n    throw new java.lang.IllegalArgumentException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File.getAbsolutePath(), org.eclipse.jgit.errors.ConfigInvalidException.getMessage()));\n}"},"status":-1},{"failures":[],"tindex":"c5bc0c27-4c53-11e5-8921-0162612c9800","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:392","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"status":-2},{"failures":[],"tindex":"c5bc0c28-4c53-11e5-8921-35289dd8407f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:152","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], 0, int)"},"status":0},{"failures":[148,149],"tindex":"c5bc3339-4c53-11e5-8921-590ea9237ead","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.LongMap:86","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.transport.LongMap.Node<V>[][org.eclipse.jgit.transport.LongMap<V>.index(long)] = org.eclipse.jgit.transport.LongMap.Node<V>.org.eclipse.jgit.transport.LongMap.Node<V>"},"status":-1},{"failures":[150,151,152,153,154],"tindex":"c5bc333a-4c53-11e5-8921-63ceab314685","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:331","type":"CtOperatorAssignmentImpl","sourcecode":"int += (org.eclipse.jgit.lib.Constants.int) + 1"},"variableMap":{"org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH":"mid","ptr":"mid"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:781","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"c5bc333b-4c53-11e5-8921-4d8c2ba65d5f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter:110","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \".*\" + java.lang.String"},"variableMap":{"pattern":"decoded"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.storage.file.FileBasedConfig:159","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.util.RawParseUtils.decode(byte[])"},"status":-2},{"failures":[],"tindex":"c5bc333c-4c53-11e5-8921-0d9f415f2620","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:189","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.dircache.DirCacheIterator.(eof()))\n    org.eclipse.jgit.dircache.DirCacheIterator.parseEntry();\n"},"variableMap":{"this":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:123","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator.next(1)"},"status":-2},{"failures":[155],"tindex":"c5bc333d-4c53-11e5-8921-69ea1535451f","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.TagBuilder:186","type":"CtInvocationImpl","sourcecode":"java.io.OutputStreamWriter.close()"},"variableMap":{"w":"w"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleWriter:224","type":"CtInvocationImpl","sourcecode":"java.io.Writer.write('\\n')"},"status":-1},{"failures":[156],"tindex":"c5bc333e-4c53-11e5-8921-5f88d9fb87b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:243","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"StrictHostKeyChecking\", java.lang.String)) {\n    java.lang.String java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String);\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = java.lang.String;\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"ConnectionAttempts\", java.lang.String)) {\n    try {\n        final int int = java.lang.Integer.parseInt(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        if (int > 0) {\n            for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n                if ((org.eclipse.jgit.transport.OpenSshConfig.Host.int) == 0)\n                    org.eclipse.jgit.transport.OpenSshConfig.Host.int = int;\n                \n        } \n    } catch (java.lang.NumberFormatException nfe) {\n    }\n} "},"status":-1},{"failures":[],"tindex":"c5bc5a4f-4c53-11e5-8921-99c1139e77f7","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:362","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.transport.RefSpec.matchSource(org.eclipse.jgit.lib.Ref)) && (java.util.Set<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref)))\n    org.eclipse.jgit.transport.FetchProcess.want(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.transport.RefSpec.expandFromSource(org.eclipse.jgit.lib.Ref));\n"},"status":-2},{"failures":[],"tindex":"c5bc5a50-4c53-11e5-8921-d982818c6228","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FormatError:112","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.patch.FormatError.getLineText())"},"status":0},{"failures":[157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],"tindex":"c5bc5a51-4c53-11e5-8921-4f0186ff8625","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:84","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"[:blank:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern(' '));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('\\t'));\n} else if (java.lang.String.equals(\"[:cntrl:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('\u0000' , '\u001f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern(''));\n} else if (java.lang.String.equals(\"[:digit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:graph:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('!' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:lower:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LowerPattern.org.eclipse.jgit.fnmatch.GroupHead.LowerPattern);\n} else if (java.lang.String.equals(\"[:print:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange(' ' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:punct:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.PunctPattern.org.eclipse.jgit.fnmatch.GroupHead.PunctPattern);\n} else if (java.lang.String.equals(\"[:space:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern.org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern);\n} else if (java.lang.String.equals(\"[:upper:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.UpperPattern.org.eclipse.jgit.fnmatch.GroupHead.UpperPattern);\n} else if (java.lang.String.equals(\"[:xdigit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('0' , '9'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('a' , 'f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('A' , 'F'));\n} else if (java.lang.String.equals(\"[:word:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('_'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else {\n    final java.lang.String java.lang.String = java.lang.String.format(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    throw new org.eclipse.jgit.errors.InvalidPatternException(java.lang.String , java.lang.String);\n}"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}