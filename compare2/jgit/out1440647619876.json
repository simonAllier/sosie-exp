{"failureDictionary":{"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged":75,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":44,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":61,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":28,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":21,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":76,"org.eclipse.jgit.notes.NoteMapTest.testGetCachedBytes":43,"org.eclipse.jgit.notes.NoteMapMergerTest.testNoChange":36,"org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38":42,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":52,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":38,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":1,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs":22,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent":24,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent":68,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":0,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":16,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit":70,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":33,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":53,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":57,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":56,"org.eclipse.jgit.notes.NoteMapTest.testReadFlatTwoNotes":39,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":12,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":50,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":13,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":47,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict":31,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder1":2,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":20,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":23,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":72,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":15,"org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneFIFO":11,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":60,"org.eclipse.jgit.api.NameRevCommandTest.onePathMerge":67,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":54,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":35,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":37,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":80,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":48,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":18,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile":73,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":62,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":29,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":78,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test3":5,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test4":6,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":25,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1":3,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test2":4,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":32,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":9,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test5":7,"org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor":66,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6":8,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat":49,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":55,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes":30,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":45,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testFileNameWildcards":81,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent":65,"org.eclipse.jgit.revwalk.RevObjectTest.testHasAllFlag":79,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":59,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testTargetWithoutLeadingSlash":82,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":17,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":41,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":27,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId":74,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath":69,"org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertOutOfOrder":10,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":34,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":14,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsNoMerge":64,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit":71,"org.eclipse.jgit.notes.NoteMapTest.testEditFlat":40,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":58,"org.eclipse.jgit.notes.NoteMapMergerTest.testDeleteDifferentNotes":26,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":19,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":46,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":51,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":77,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":63},"transformations":[{"failures":[],"tindex":"33cdbc79-4c6f-11e5-af59-c5a6ddad3861","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:548","type":"CtInvocationImpl","sourcecode":"java.lang.System.exit(1)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker:88","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.BitmapIndex.Bitmap != null)\n    org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.or(org.eclipse.jgit.lib.BitmapIndex.Bitmap);\n"},"status":-1},{"failures":[],"tindex":"33cde38a-4c6f-11e5-af59-ffa3d23ef501","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEditor:142","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheEditor.PathEdit instanceof org.eclipse.jgit.dircache.DirCacheEditor.DeletePath)\n    continue;\n"},"status":-2},{"failures":[],"tindex":"33cde38b-4c6f-11e5-af59-277bf9628404","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getGlobalListenerList().dispatch(new org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:698","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, null, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"33cde38c-4c6f-11e5-af59-6174320c07c4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:154","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[])"},"status":-1},{"failures":[],"tindex":"33cde38d-4c6f-11e5-af59-7b1e05e82101","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:165","type":"CtAssignmentImpl","sourcecode":"int = int == (int) ? org.eclipse.jgit.internal.storage.file.PackBitmapIndex.int : 0"},"variableMap":{"nextIn":"flags","maxCommits":"mask","nextFlg":"mask","org.eclipse.jgit.internal.storage.file.PackBitmapIndex.FLAG_REUSE":"mask"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevObject:153","type":"CtOperatorAssignmentImpl","sourcecode":"int &= ~(org.eclipse.jgit.revwalk.RevFlag.int)"},"status":-2},{"failures":[],"tindex":"33ce0a9e-4c6f-11e5-af59-c30176d58855","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:258","type":"CtWhileImpl","sourcecode":"while ((((org.eclipse.jgit.diff.Edit.int) < int) && ((org.eclipse.jgit.diff.Edit.int) < int)) && (org.eclipse.jgit.diff.HashedSequenceComparator<S>.equals(org.eclipse.jgit.diff.HashedSequence<S>, (int - 1), org.eclipse.jgit.diff.HashedSequence<S>, (int - 1)))) {\n    int--;\n    int--;\n    if (1 < int)\n        int = java.lang.Math.min(int, org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recCnt(long[][int[][(int - (int))]]));\n    \n}"},"status":0},{"failures":[],"tindex":"33ce0a9f-4c6f-11e5-af59-4df41b9224a4","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:491","type":"CtIfImpl","sourcecode":"if ((byte[][(int + 1)]) == '.')\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid name \\'..\\'\");\n"},"variableMap":{"raw":"b","ptr":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:312","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.NB.encodeInt32(byte[], (int + 12), int)"},"status":-2},{"failures":[],"tindex":"33ce0aa0-4c6f-11e5-af59-1d12734a8d03","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:690","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (!(org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored()))) {\n    if (!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode))) {\n        if ((org.eclipse.jgit.lib.ObjectId == null) || (!org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryObjectId(), org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode())))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, null, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            return ;\n        } \n    } \n} "},"variableMap":{"org.eclipse.jgit.lib.FileMode.GITLINK":"mMode","mMode":"org.eclipse.jgit.lib.FileMode.TREE","f":"f","name":"name","h":"h","this":"this","mId":"mId","m":"m"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:749","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n    if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) || (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))) {\n        if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) && (org.eclipse.jgit.treewalk.NameConflictTreeWalk.isDirectoryFileConflict())) {\n            if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator == null) || (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))))\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            else\n                org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n        \n    } else\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    \n} else if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n    if (org.eclipse.jgit.lib.FileMode == (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode)) {\n        org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n    } else {\n        if (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n            if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))) {\n                if ((!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode()))) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode)))\n                    return ;\n                else\n                    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                \n            } else\n                org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        \n    }\n} else {\n    if (((!org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    else if ((!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n        if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode()))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        } else if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader())))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        } else {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        }\n    } else {\n        org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    }\n}"},"status":-2},{"failures":[],"tindex":"33ce31b1-4c6f-11e5-af59-6d35c8a9d33b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.LongMap:130","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.transport.LongMap.Node<V> = org.eclipse.jgit.transport.LongMap.Node<V>"},"status":-2},{"failures":[70,71,72,73,74,75,76,77,78],"tindex":"33ce31b2-4c6f-11e5-af59-b5f165114ea7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:722","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.NB.encodeInt32(byte[], int, ((int)(long / 1000)))"},"status":-1},{"failures":[79],"tindex":"33ce58c3-4c6f-11e5-af59-89a5b58120a0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevObject:119","type":"CtReturnImpl","sourcecode":"return ((int) & (org.eclipse.jgit.revwalk.RevFlagSet.int)) == (org.eclipse.jgit.revwalk.RevFlagSet.int)"},"status":-1},{"failures":[],"tindex":"33ce58c4-4c6f-11e5-af59-0374b3782281","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.Merger:284","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevCommit"},"variableMap":{"base":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:86","type":"CtTryImpl","sourcecode":"try {\n    return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.parse(new org.eclipse.jgit.revwalk.RevWalk(((org.eclipse.jgit.lib.ObjectReader)(null))), byte[]);\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException(java.io.IOException);\n}"},"status":-2},{"failures":[80],"tindex":"33ce58c5-4c6f-11e5-af59-152b5d45db9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:406","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int++] = org.eclipse.jgit.revwalk.RevCommit"},"status":-1},{"failures":[81,82],"tindex":"33ce58c6-4c6f-11e5-af59-39d17018c0f1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:385","type":"CtIfImpl","sourcecode":"if (java.lang.String[] == null)\n    return false;\n"},"variableMap":{"entries":"segments"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:241","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.fnmatch.FileNameMatcher.isMatch()) && org.eclipse.jgit.ignore.IgnoreRule.(doesMatchDirectoryExpectations(boolean, int, java.lang.String[].int)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"33ce58c7-4c6f-11e5-af59-bf10a71f93a6","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RevertCommand:247","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.api.RevertCommand.include(org.eclipse.jgit.lib.AnyObjectId.getName(), org.eclipse.jgit.lib.AnyObjectId)"},"variableMap":{"commit":"commit","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:258","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.api.RevertCommand.include(new org.eclipse.jgit.lib.ObjectIdRef.Unpeeled(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , java.lang.String , org.eclipse.jgit.lib.AnyObjectId.copy()))"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}