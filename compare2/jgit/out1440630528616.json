{"failureDictionary":{"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":26,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":492,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":486,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":182,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":55,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":46,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":185,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":249,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":25,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":136,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":259,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose":497,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting":534,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":74,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles":127,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":308,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":522,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":331,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":254,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpr":449,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":302,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk":472,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":525,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":243,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":438,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":301,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":125,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":43,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":517,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot":453,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":91,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":299,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":298,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":115,"org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges":177,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":279,"org.eclipse.jgit.api.BranchCommandTest.testDelete":282,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":35,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":383,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":384,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":511,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad":465,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":380,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":381,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":382,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":129,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":443,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1":476,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":133,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2":477,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":416,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":208,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePath":480,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindowsOnUnix":463,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":229,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":262,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":14,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":217,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":324,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose":501,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":209,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows":484,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":75,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch":124,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":147,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":102,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":385,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":386,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":172,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":387,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":171,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":66,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":117,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues":164,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":143,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":283,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":375,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":57,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":377,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":29,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":376,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":379,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":260,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":378,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":404,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":441,"org.eclipse.jgit.api.GitConstructionTest.testClose":0,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":207,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsKeywordCaseInsensitive":548,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":175,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":169,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":212,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":160,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting":531,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":45,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":422,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":285,"org.eclipse.jgit.transport.OpenSshConfigTest.testSeparatorParsing":547,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":280,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":323,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":403,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":86,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":281,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches":80,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":389,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot":464,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":390,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgLpt1":481,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":391,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":34,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":392,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":290,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt":94,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":247,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":388,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":512,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead":532,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":371,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":370,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":373,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":372,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":374,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":224,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":69,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":314,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":412,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":276,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case":462,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":300,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":414,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadNotExistingBranchConfig":539,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":336,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2":467,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1":466,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":400,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":399,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":234,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":227,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADSOnUnix":470,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":28,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":188,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":90,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":106,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":88,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":427,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":230,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":253,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":365,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":367,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":366,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":369,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":368,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":58,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":255,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":33,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":93,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":316,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":303,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":130,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":203,"org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder":236,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":194,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":190,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":68,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":238,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":329,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":60,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":519,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":355,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":332,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":205,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":244,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":297,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":170,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":431,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":429,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":402,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose":489,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":361,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":360,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":363,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":362,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":252,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":289,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":156,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":364,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":327,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":513,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":288,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":44,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":76,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":527,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":85,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1OnUnix":485,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":181,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":159,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad":471,"org.eclipse.jgit.api.GitConstructionTest.testWrap":83,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockHEAD":528,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":176,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteNotFound":521,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":193,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":275,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":405,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":439,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":491,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":192,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":158,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":351,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":350,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":103,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":425,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":53,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":40,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case":461,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":428,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":42,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":307,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":357,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":15,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":197,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":356,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":359,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":358,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":32,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":311,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":112,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":111,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout":442,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":154,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":226,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":413,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":228,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":440,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":312,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":345,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":347,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":346,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":211,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":18,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":310,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":507,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":56,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":250,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":410,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":287,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":47,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":353,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":352,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":354,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":264,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case":460,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":537,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":184,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":231,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":320,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":292,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":10,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":516,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":444,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":434,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":195,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":2,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":71,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":19,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":415,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1":455,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d":343,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2":456,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":337,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":342,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows3":457,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":257,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":510,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritPreferredAuthentications":550,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":256,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":421,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":426,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":488,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":349,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":348,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_ConnectionAttempts":543,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":326,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":437,"org.eclipse.jgit.transport.OpenSshConfigTest.testQuoteParsing":546,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":518,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":142,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues":162,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":418,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon":448,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":200,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":328,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":313,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":30,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":178,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":198,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":261,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":116,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":199,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":420,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":63,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c":339,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":318,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e":341,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d":340,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":433,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":52,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows":483,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsSet":541,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOk":447,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":114,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix":459,"org.eclipse.jgit.lib.RefTest.testResolvedSymRef":409,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritBatchMode":542,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":137,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":174,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":344,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":419,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":423,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":295,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":61,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":498,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2":479,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1":478,"org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs":408,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":173,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":508,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":38,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":268,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":113,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":101,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk":454,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":153,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":274,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":105,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":322,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":321,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":179,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":23,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":27,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":126,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":258,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":31,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":424,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid":17,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":202,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists":536,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":22,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgDotCon":450,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":89,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":161,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":214,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":108,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":500,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":109,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":59,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":123,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":239,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":134,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":505,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":504,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":503,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":502,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":166,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":407,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":417,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":524,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":269,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":180,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":270,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":309,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":215,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":330,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":54,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue":165,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":4,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":148,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":84,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsInherit":544,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime":92,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":67,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":64,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":120,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":24,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":87,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":506,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":79,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":6,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":204,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":304,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":5,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig":538,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":51,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":50,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":251,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":445,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":104,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":529,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix":452,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":13,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead":526,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows":473,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":151,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":266,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":319,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":263,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":118,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection":163,"org.eclipse.jgit.api.BlameCommandTest.testRename":107,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":128,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixNameExists":520,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_PreferredAuthentications":549,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":72,"org.eclipse.jgit.api.FetchCommandTest.testFetch":36,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":533,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":296,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":196,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":395,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":430,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":393,"org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits":140,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":394,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1":469,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":273,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":293,"org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName":119,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":335,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":271,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix":458,"org.eclipse.jgit.api.BranchCommandTest.testCreateAndList":278,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":100,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":305,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":73,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":7,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":78,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":509,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly":530,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":523,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations":77,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":242,"org.eclipse.jgit.api.PushCommandTest.testPush":245,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":306,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":334,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":496,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":144,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":406,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":515,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptObjectIdReference":540,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":397,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":398,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":446,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":146,"org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir":338,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix":482,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":233,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":122,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":232,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":396,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":218,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":16,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":241,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_BatchModeYes":545,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":315,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":39,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":152,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":21,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":70,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":183,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":291,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS":474,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":240,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":131,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":48,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":110,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1OnUnix":451,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":265,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":219,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":9,"org.eclipse.jgit.api.GitConstructionTest.testOpen":82,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":1,"org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit":155,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":333,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":325,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":141,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":201,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":206,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":132,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":139,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":81,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":8,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":150,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":401,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":98,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":99,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":37,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":95,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":96,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":499,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":97,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":213,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":20,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":168,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgCon":475,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":494,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":210,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":65,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":157,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":267,"org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName":135,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":284,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":145,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":246,"org.eclipse.jgit.lib.RefTest.testReadSymRefToPacked":411,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":138,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":286,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":191,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":317,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":225,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":487,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":3,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":121,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch":490,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":187,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":248,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":272,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":186,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon1":468,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":189,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":294,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":436,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":235,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":149,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":220,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":222,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":495,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":223,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":11,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":493,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":535,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":41,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":12,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":514,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":62,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":432,"org.eclipse.jgit.api.TagCommandTest.testDelete":237,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":277,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":435,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":167,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":216,"org.eclipse.jgit.api.RevertCommandTest.testRevert":49,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":221},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"689ee1e4-4c47-11e5-80f0-3316a33346bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder:124","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.PositionEntry>.add(new org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.PositionEntry(org.eclipse.jgit.internal.storage.pack.ObjectToPack[][int] , int))"},"status":-1},{"failures":[],"tindex":"689f08f5-4c47-11e5-80f0-bbdc3a7d717b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:198","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= org.eclipse.jgit.lib.ObjectIdOwnerMap.int"},"variableMap":{"h":"nDeleted","org.eclipse.jgit.lib.ObjectIdOwnerMap.SEGMENT_SHIFT":"nDeleted"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:129","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.patch.CombinedHunkHeader.CombinedOldImage.int = 0"},"status":-2},{"failures":[],"tindex":"689f08f6-4c47-11e5-80f0-3130a3b91b68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:417","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.file.ByteArrayWindow = org.eclipse.jgit.internal.storage.file.WindowCursor.quickCopy(this, long, long);\n    if (boolean && (org.eclipse.jgit.internal.storage.file.PackFile.idx().hasCRC32Support())) {\n        long = org.eclipse.jgit.internal.storage.file.PackFile.idx().findCRC32(org.eclipse.jgit.internal.storage.file.LocalObjectToPack);\n        if (org.eclipse.jgit.internal.storage.file.ByteArrayWindow != null) {\n            org.eclipse.jgit.internal.storage.file.ByteArrayWindow.crc32(java.util.zip.CRC32, long, ((int)(long)));\n        } else {\n            long long = long;\n            long long = long;\n            while (long > 0) {\n                final int int = ((int)(java.lang.Math.min(long, byte[].int)));\n                org.eclipse.jgit.internal.storage.file.PackFile.readFully(long, byte[], 0, int, org.eclipse.jgit.internal.storage.file.WindowCursor);\n                java.util.zip.CRC32.update(byte[], 0, int);\n                long += int;\n                long -= int;\n            }\n        }\n        if ((java.util.zip.CRC32.getValue()) != long) {\n            org.eclipse.jgit.internal.storage.file.PackFile.setCorrupt(org.eclipse.jgit.internal.storage.file.LocalObjectToPack.long);\n            throw new org.eclipse.jgit.errors.CorruptObjectException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Long.valueOf(org.eclipse.jgit.internal.storage.file.LocalObjectToPack.long), org.eclipse.jgit.internal.storage.file.PackFile.getPackFile()));\n        } \n    } else if (boolean) {\n        java.util.zip.Inflater java.util.zip.Inflater = org.eclipse.jgit.internal.storage.file.WindowCursor.inflater();\n        byte[] byte[] = new byte[1024];\n        if (org.eclipse.jgit.internal.storage.file.ByteArrayWindow != null) {\n            org.eclipse.jgit.internal.storage.file.ByteArrayWindow.check(java.util.zip.Inflater, byte[], long, ((int)(long)));\n        } else {\n            long long = long;\n            long long = long;\n            while (long > 0) {\n                final int int = ((int)(java.lang.Math.min(long, byte[].int)));\n                org.eclipse.jgit.internal.storage.file.PackFile.readFully(long, byte[], 0, int, org.eclipse.jgit.internal.storage.file.WindowCursor);\n                java.util.zip.CRC32.update(byte[], 0, int);\n                java.util.zip.Inflater.setInput(byte[], 0, int);\n                while ((java.util.zip.Inflater.inflate(byte[], 0, byte[].int)) > 0)\n                    continue;\n                long += int;\n                long -= int;\n            }\n        }\n        if ((!(java.util.zip.Inflater.finished())) || ((java.util.zip.Inflater.getBytesRead()) != long)) {\n            org.eclipse.jgit.internal.storage.file.PackFile.setCorrupt(org.eclipse.jgit.internal.storage.file.LocalObjectToPack.long);\n            throw new java.io.EOFException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Long.valueOf(org.eclipse.jgit.internal.storage.file.LocalObjectToPack.long)));\n        } \n        long = java.util.zip.CRC32.getValue();\n    } else {\n        long = -1;\n    }\n} catch (java.util.zip.DataFormatException dataFormat) {\n    org.eclipse.jgit.internal.storage.file.PackFile.setCorrupt(org.eclipse.jgit.internal.storage.file.LocalObjectToPack.long);\n    org.eclipse.jgit.errors.CorruptObjectException org.eclipse.jgit.errors.CorruptObjectException = new org.eclipse.jgit.errors.CorruptObjectException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Long.valueOf(org.eclipse.jgit.internal.storage.file.LocalObjectToPack.long), org.eclipse.jgit.internal.storage.file.PackFile.getPackFile()));\n    org.eclipse.jgit.errors.CorruptObjectException.initCause(java.util.zip.DataFormatException);\n    org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException;\n    org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException = new org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException(org.eclipse.jgit.internal.storage.file.LocalObjectToPack);\n    org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException.initCause(org.eclipse.jgit.errors.CorruptObjectException);\n    throw org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException;\n} catch (java.io.IOException ioError) {\n    org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException;\n    org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException = new org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException(org.eclipse.jgit.internal.storage.file.LocalObjectToPack);\n    org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException.initCause(java.io.IOException);\n    throw org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException;\n}"},"status":-2},{"failures":[],"tindex":"689f3007-4c47-11e5-80f0-8146580ec6ed","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate:135","type":"CtReturnImpl","sourcecode":"return \"created\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Constants:418","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Constants.java.lang.String"},"status":-2},{"failures":[],"tindex":"689f3008-4c47-11e5-80f0-25b07280eed7","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector:339","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:597","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"689f3009-4c47-11e5-80f0-4ba759152947","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RmCommand:183","type":"CtAssignmentImpl","sourcecode":"java.io.File = java.io.File.getParentFile()"},"status":0},{"failures":[],"tindex":"689f300a-4c47-11e5-80f0-a7e122242344","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:576","type":"CtIfImpl","sourcecode":"if (byte[] != null)\n    return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n"},"variableMap":{"data":"tempId","type":"org.eclipse.jgit.lib.Constants.OBJ_COMMIT"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:706","type":"CtTryImpl","sourcecode":"try {\n    final byte[] byte[] = org.eclipse.jgit.internal.storage.file.WindowCursor.byte[];\n    org.eclipse.jgit.internal.storage.file.PackFile.Delta org.eclipse.jgit.internal.storage.file.PackFile.Delta = null;\n    byte[] byte[] = null;\n    int int = org.eclipse.jgit.lib.Constants.int;\n    boolean boolean = false;\n    SEARCH : for ( ;  ; ) {\n        org.eclipse.jgit.internal.storage.file.PackFile.readFully(long, byte[], 0, 20, org.eclipse.jgit.internal.storage.file.WindowCursor);\n        int int = (byte[][0]) & 255;\n        final int int = (int >> 4) & 7;\n        long long = int & 15;\n        int int = 4;\n        int int = 1;\n        while ((int & 128) != 0) {\n            int = (byte[][int++]) & 255;\n            long += ((long)((int & 127))) << int;\n            int += 7;\n        }\n        switch (int) {\n            case org.eclipse.jgit.lib.Constants.int :\n            case org.eclipse.jgit.lib.Constants.int :\n            case org.eclipse.jgit.lib.Constants.int :\n            case org.eclipse.jgit.lib.Constants.int :\n                {\n                    if ((org.eclipse.jgit.internal.storage.file.PackFile.Delta != null) || (long < (org.eclipse.jgit.internal.storage.file.WindowCursor.getStreamFileThreshold())))\n                        byte[] = org.eclipse.jgit.internal.storage.file.PackFile.decompress((long + int), ((int)(long)), org.eclipse.jgit.internal.storage.file.WindowCursor);\n                    \n                    if (org.eclipse.jgit.internal.storage.file.PackFile.Delta != null) {\n                        int = int;\n                        break SEARCH;\n                    } \n                    if (byte[] != null)\n                        return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n                    else\n                        return new org.eclipse.jgit.internal.storage.file.LargePackedWholeObject(int , long , long , int , this , org.eclipse.jgit.internal.storage.file.WindowCursor.org.eclipse.jgit.internal.storage.file.FileObjectDatabase);\n                    \n                }\n            case org.eclipse.jgit.lib.Constants.int :\n                {\n                    int = (byte[][int++]) & 255;\n                    long long = int & 127;\n                    while ((int & 128) != 0) {\n                        long += 1;\n                        int = (byte[][int++]) & 255;\n                        long <<= 7;\n                        long += int & 127;\n                    }\n                    long = long - long;\n                    org.eclipse.jgit.internal.storage.file.PackFile.Delta = new org.eclipse.jgit.internal.storage.file.PackFile.Delta(org.eclipse.jgit.internal.storage.file.PackFile.Delta , long , ((int)(long)) , int , long);\n                    if (long != (org.eclipse.jgit.internal.storage.file.PackFile.Delta.int))\n                        break SEARCH;\n                    \n                    org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry = org.eclipse.jgit.internal.storage.file.WindowCursor.getDeltaBaseCache().get(this, long);\n                    if (org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry != null) {\n                        int = org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry.int;\n                        byte[] = org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry.byte[];\n                        boolean = true;\n                        break SEARCH;\n                    } \n                    long = long;\n                    continue SEARCH;\n                }\n            case org.eclipse.jgit.lib.Constants.int :\n                {\n                    org.eclipse.jgit.internal.storage.file.PackFile.readFully((long + int), byte[], 0, 20, org.eclipse.jgit.internal.storage.file.WindowCursor);\n                    long long = org.eclipse.jgit.internal.storage.file.PackFile.findDeltaBase(org.eclipse.jgit.lib.ObjectId.fromRaw(byte[]));\n                    org.eclipse.jgit.internal.storage.file.PackFile.Delta = new org.eclipse.jgit.internal.storage.file.PackFile.Delta(org.eclipse.jgit.internal.storage.file.PackFile.Delta , long , ((int)(long)) , (int + 20) , long);\n                    if (long != (org.eclipse.jgit.internal.storage.file.PackFile.Delta.int))\n                        break SEARCH;\n                    \n                    org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry = org.eclipse.jgit.internal.storage.file.WindowCursor.getDeltaBaseCache().get(this, long);\n                    if (org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry != null) {\n                        int = org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry.int;\n                        byte[] = org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry.byte[];\n                        boolean = true;\n                        break SEARCH;\n                    } \n                    long = long;\n                    continue SEARCH;\n                }\n            default :\n                throw new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.valueOf(int)));\n        }\n    }\n    if (byte[] == null)\n        throw new java.io.IOException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    do {\n        if (boolean)\n            boolean = false;\n        else if ((org.eclipse.jgit.internal.storage.file.PackFile.Delta.org.eclipse.jgit.internal.storage.file.PackFile.Delta) == null)\n            org.eclipse.jgit.internal.storage.file.WindowCursor.getDeltaBaseCache().store(this, org.eclipse.jgit.internal.storage.file.PackFile.Delta.long, byte[], int);\n        \n        long = org.eclipse.jgit.internal.storage.file.PackFile.Delta.long;\n        final byte[] byte[] = org.eclipse.jgit.internal.storage.file.PackFile.decompress((long + (org.eclipse.jgit.internal.storage.file.PackFile.Delta.int)), org.eclipse.jgit.internal.storage.file.PackFile.Delta.int, org.eclipse.jgit.internal.storage.file.WindowCursor);\n        if (byte[] == null) {\n            byte[] = null;\n            throw new org.eclipse.jgit.errors.LargeObjectException.OutOfMemory(new java.lang.OutOfMemoryError());\n        } \n        final long long = org.eclipse.jgit.internal.storage.pack.BinaryDelta.getResultSize(byte[]);\n        if ((java.lang.Integer.int) <= long)\n            throw new org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit();\n        \n        final byte[] byte[];\n        try {\n            byte[] = new byte[((int)(long))];\n        } catch (java.lang.OutOfMemoryError tooBig) {\n            byte[] = null;\n            throw new org.eclipse.jgit.errors.LargeObjectException.OutOfMemory(java.lang.OutOfMemoryError);\n        }\n        org.eclipse.jgit.internal.storage.pack.BinaryDelta.apply(byte[], byte[], byte[]);\n        byte[] = byte[];\n        org.eclipse.jgit.internal.storage.file.PackFile.Delta = org.eclipse.jgit.internal.storage.file.PackFile.Delta.org.eclipse.jgit.internal.storage.file.PackFile.Delta;\n    } while (org.eclipse.jgit.internal.storage.file.PackFile.Delta != null );\n    return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n} catch (java.util.zip.DataFormatException dfe) {\n    org.eclipse.jgit.errors.CorruptObjectException org.eclipse.jgit.errors.CorruptObjectException = new org.eclipse.jgit.errors.CorruptObjectException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Long.valueOf(long), org.eclipse.jgit.internal.storage.file.PackFile.getPackFile()));\n    org.eclipse.jgit.errors.CorruptObjectException.initCause(java.util.zip.DataFormatException);\n    throw org.eclipse.jgit.errors.CorruptObjectException;\n}"},"status":-2},{"failures":[17],"tindex":"689f571b-4c47-11e5-80f0-19b4921d0afc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:159","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.dircache.DirCacheTree) != null)\n    return org.eclipse.jgit.dircache.DirCacheTree.isValid();\n"},"status":-1},{"failures":[],"tindex":"689f571c-4c47-11e5-80f0-27055a110670","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV1:180","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"low":"newCnt","mid":"newCnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RewriteGenerator:168","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"689f571d-4c47-11e5-80f0-9ba5724807bf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:295","type":"CtIfImpl","sourcecode":"if (!(java.util.LinkedList<java.lang.String>.isEmpty())) {\n    java.lang.String java.lang.String = java.util.LinkedList<java.lang.String>.getLast();\n    while ((!(java.util.LinkedList<java.lang.String>.isEmpty())) && (java.util.LinkedList<java.lang.String>.getLast().startsWith(java.lang.String)))\n        java.util.LinkedList<java.lang.String>.removeLast();\n    java.util.LinkedList<java.lang.String>.addLast(java.lang.String);\n} "},"variableMap":{"ret":"paths","untrackedParentFolders":"paths"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StatusCommand:111","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.lang.String>) == null)\n    java.util.List<java.lang.String> = new java.util.LinkedList<java.lang.String>();\n"},"status":-2},{"failures":[],"tindex":"689f7e2e-4c47-11e5-80f0-07820e77a278","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:653","type":"CtReturnImpl","sourcecode":"return byte[].clone()"},"variableMap":{"path":"dstbuf"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:342","type":"CtReturnImpl","sourcecode":"return byte[]"},"status":0},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,0,0,82,82,83,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,3,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537],"tindex":"689f7e2f-4c47-11e5-80f0-871072b8c70f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase:196","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.ObjectIdRef.PeeledNonTag(org.eclipse.jgit.lib.Ref.getStorage() , org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.Ref.getObjectId())"},"variableMap":{"leaf":"ref"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:734","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.SymbolicRef(org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.Ref)"},"status":-1},{"failures":[538,539,540],"tindex":"689fa540-4c47-11e5-80f0-3349ded00652","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:238","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid tree\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:952","type":"CtThrowImpl","sourcecode":"throw java.io.IOException"},"status":-1},{"failures":[541,542,543,544,545,546,547,548,549,550],"tindex":"689fa541-4c47-11e5-80f0-7ffa551bdde2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:1164","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.diff.DiffEntry.java.lang.String"},"variableMap":{"org.eclipse.jgit.diff.DiffEntry.DEV_NULL":"line","oldp":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:184","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim()"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}