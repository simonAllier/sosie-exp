{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":40,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadRightLog":41,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":50,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":44,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockFrom":11,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":66,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":127,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTwoBranches":100,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixNameExists":3,"org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38":114,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":144,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":9,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":81,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":33,"org.eclipse.jgit.internal.storage.file.PackIndexV1Test.testIteratorMethodsContract":120,"org.eclipse.jgit.internal.storage.file.PackIndexV1Test.testCompareEntriesOffsetsWithGetOffsets":121,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting":34,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":112,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":76,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag":92,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":23,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":48,"org.eclipse.jgit.notes.NoteMapTest.testCreateFromEmpty":113,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":7,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":78,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoOtherThanMaster":98,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking":86,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":105,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":147,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":4,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting":55,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":14,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":56,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":16,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":2,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly":28,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":10,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":58,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters":101,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":110,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":32,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoHeadOtherThanMaster":96,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":106,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":36,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":139,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":57,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidParent5":142,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":140,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":132,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":138,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":20,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":30,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":137,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":131,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":129,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":46,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":52,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":79,"org.eclipse.jgit.lib.RefTest.testResolvedNamesBranch":70,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree2":128,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":53,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":80,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":24,"org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs":67,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches":97,"org.eclipse.jgit.internal.storage.file.PackIndexV1Test.testCompareEntriesOffsetsWithFindOffsets":124,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockHEAD":26,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteNotFound":5,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":60,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":109,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":74,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody":90,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists":38,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":68,"org.eclipse.jgit.internal.storage.file.PackIndexV1Test.testCRC32":119,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":126,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs":84,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":49,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":85,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":47,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockFrom":25,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":107,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoAuthor":143,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":54,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":108,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit":103,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":19,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":89,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":45,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":75,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter":94,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":13,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":145,"org.eclipse.jgit.api.GitConstructionTest.testClose":65,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":82,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoSymbolicRefHeadPointingToMaster":102,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":125,"org.eclipse.jgit.lib.RefTest.testReadLooseRef":71,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testOneBranch":104,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak":91,"org.eclipse.jgit.lib.RefTest.testReadSymRefToPacked":73,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":77,"org.eclipse.jgit.internal.storage.file.PackIndexV1Test.testIteratorReturnedValues2":123,"org.eclipse.jgit.lib.RefTest.testReadLoosePackedRef":72,"org.eclipse.jgit.internal.storage.file.PackIndexV1Test.testIteratorReturnedValues1":122,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting":29,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination":87,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":117,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":64,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockFrom":21,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed":95,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment":43,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":12,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":146,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":136,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":1,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":88,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":135,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":111,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":134,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":133,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":15,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":115,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":69,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":141,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri":93,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject":116,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange":17,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testNoLog":42,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":8,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":35,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":51,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":62,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead":31,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch":99,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked":59,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":118,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":63,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":0,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":39,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":22,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":27,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":37,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":83,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":6,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead":18,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":130,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":61},"transformations":[{"failures":[],"tindex":"10bdfe32-4c66-11e5-9e5f-759e4d43db92","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommit:113","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revplot.PlotLane[] = org.eclipse.jgit.revplot.PlotLane[]"},"variableMap":{"lanes":"lanes","n":"lanes"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommit:108","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revplot.PlotLane[] = new org.eclipse.jgit.revplot.PlotLane[]{ org.eclipse.jgit.revplot.PlotLane[][0] , org.eclipse.jgit.revplot.PlotLane }"},"status":0},{"failures":[],"tindex":"10be2543-4c66-11e5-9e5f-d3b05ce612fe","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:1265","type":"CtAssignmentImpl","sourcecode":"boolean = !boolean"},"variableMap":{"quote":"space"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1232","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"10be2544-4c66-11e5-9e5f-4d2a70919c41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:779","type":"CtWhileImpl","sourcecode":"while ((java.lang.String = java.io.BufferedReader.readLine()) != null) {\n    if ((java.lang.String.charAt(0)) == '#') {\n        if (java.lang.String.startsWith(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String)) {\n            java.lang.String = java.lang.String.substring(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String.length());\n            boolean = java.lang.String.contains(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String);\n        } \n        continue;\n    } \n    if ((java.lang.String.charAt(0)) == '^') {\n        if (org.eclipse.jgit.lib.Ref == null)\n            throw new java.io.IOException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String.substring(1));\n        org.eclipse.jgit.lib.Ref = new org.eclipse.jgit.lib.ObjectIdRef.PeeledTag(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.Ref.getObjectId() , org.eclipse.jgit.lib.ObjectId);\n        org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>.set(((org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>.size()) - 1), org.eclipse.jgit.lib.Ref);\n        continue;\n    } \n    int int = java.lang.String.indexOf(' ');\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String.substring(0, int));\n    java.lang.String java.lang.String = org.eclipse.jgit.internal.storage.file.RefDirectory.org.eclipse.jgit.internal.storage.file.RefDirectory.copy(java.lang.String, (int + 1), java.lang.String.length());\n    org.eclipse.jgit.lib.ObjectIdRef org.eclipse.jgit.lib.ObjectIdRef;\n    if (boolean)\n        org.eclipse.jgit.lib.ObjectIdRef = new org.eclipse.jgit.lib.ObjectIdRef.PeeledNonTag(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , java.lang.String , org.eclipse.jgit.lib.ObjectId);\n    else\n        org.eclipse.jgit.lib.ObjectIdRef = new org.eclipse.jgit.lib.ObjectIdRef.Unpeeled(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , java.lang.String , org.eclipse.jgit.lib.ObjectId);\n    \n    if ((org.eclipse.jgit.lib.Ref != null) && ((org.eclipse.jgit.lib.RefComparator.compareTo(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.ObjectIdRef)) > 0))\n        boolean = true;\n    \n    org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.ObjectIdRef);\n    org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.ObjectIdRef;\n}"},"status":-1},{"failures":[111,112],"tindex":"10be4c55-4c66-11e5-9e5f-7117269c7349","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1419","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"unspecified reason\")"},"variableMap":{"r":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:396","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String, int, int)"},"status":-1},{"failures":[],"tindex":"10be4c56-4c66-11e5-9e5f-7b892eca0f6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PullCommand:358","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.api.PullResult>.checkCallable()"},"status":0},{"failures":[113,114,115],"tindex":"10be4c57-4c66-11e5-9e5f-29508380fbfa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMap:313","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.notes.InMemoryNoteBucket == null) {\n    org.eclipse.jgit.notes.InMemoryNoteBucket = new org.eclipse.jgit.notes.LeafBucket(0);\n    org.eclipse.jgit.notes.InMemoryNoteBucket.org.eclipse.jgit.notes.NonNoteEntry = org.eclipse.jgit.notes.InMemoryNoteBucket.org.eclipse.jgit.notes.NonNoteEntry;\n} "},"status":-1},{"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,79],"tindex":"10be4c58-4c66-11e5-9e5f-b9b300da1ce0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndex:137","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.internal.storage.file.PackIndexV2(java.io.InputStream)"},"variableMap":{"fd":"fd"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndex:144","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.internal.storage.file.PackIndexV1(java.io.InputStream , byte[])"},"status":-1},{"failures":[],"tindex":"10be4c59-4c66-11e5-9e5f-f756b7b2283b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.RenameDetector:390","type":"CtReturnImpl","sourcecode":"return java.util.Collections.unmodifiableList(java.util.List<org.eclipse.jgit.diff.DiffEntry>)"},"variableMap":{"entries":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DiffCommand:157","type":"CtReturnImpl","sourcecode":"return java.util.List<org.eclipse.jgit.diff.DiffEntry>"},"status":-2},{"failures":[],"tindex":"10be4c5a-4c66-11e5-9e5f-ed6719e64779","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.PullCommand:193","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))) {\n    throw new org.eclipse.jgit.api.errors.DetachedHeadException();\n} "},"variableMap":{"org.eclipse.jgit.lib.Constants.R_HEADS":"pattern","fullBranch":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.attributes.AttributesRule:136","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(\"/\"))) {\n    java.lang.String = \"/\" + java.lang.String;\n} "},"status":-2},{"failures":[],"tindex":"10be736b-4c66-11e5-9e5f-d1328028e100","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:921","type":"CtReturnImpl","sourcecode":"return new java.util.HashMap<java.lang.String, org.eclipse.jgit.lib.Ref>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteConfig:279","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.String>"},"status":-2},{"failures":[],"tindex":"10be736c-4c66-11e5-9e5f-6538591a2cc4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:305","type":"CtLocalVariableImpl","sourcecode":"final int int = int + int"},"variableMap":{"pathLen":"startOffset","len":"startOffset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:196","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int)"},"status":-2},{"failures":[142,143],"tindex":"10be736d-4c66-11e5-9e5f-734696ff741a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:246","type":"CtIfImpl","sourcecode":"if ((int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.lib.ObjectChecker.byte[])) < 0)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"no author\");\n"},"status":-1},{"failures":[129,130,131,132,133,134,135,136,137,138,139,140,144,141,61,145,146,83,147],"tindex":"10be736e-4c66-11e5-9e5f-9d4bbd70f4c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:488","type":"CtDoImpl","sourcecode":"do {\n    SEARCH : for ( ;  ; ) {\n        org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList>.get();\n        for (org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.PackFile[]) {\n            try {\n                long long = org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId);\n                if (0 <= long)\n                    return long;\n                \n            } catch (org.eclipse.jgit.errors.PackMismatchException e) {\n                if (org.eclipse.jgit.internal.storage.file.ObjectDirectory.searchPacksAgain(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList))\n                    continue SEARCH;\n                \n            } catch (java.io.IOException e) {\n                org.eclipse.jgit.internal.storage.file.ObjectDirectory.removePack(org.eclipse.jgit.internal.storage.file.PackFile);\n            }\n        }\n        break SEARCH;\n    }\n} while (org.eclipse.jgit.internal.storage.file.ObjectDirectory.searchPacksAgain(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList) )"},"status":-1},{"failures":[],"tindex":"10be736f-4c66-11e5-9e5f-ddb4ace3d414","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.internal.Strings:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('\\\\').append('.')"},"variableMap":{"sb":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.errors.CheckoutConflictException:80","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n\")"},"status":0},{"failures":[],"tindex":"10be7370-4c66-11e5-9e5f-07b2db4f9b07","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:91","type":"CtLocalVariableImpl","sourcecode":"final int int = (org.eclipse.jgit.util.FileUtils.int) | (org.eclipse.jgit.util.FileUtils.int)"},"variableMap":{"org.eclipse.jgit.util.FileUtils.SKIP_MISSING":"end","org.eclipse.jgit.util.FileUtils.RETRY":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:696","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}