{"failureDictionary":{"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":44,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents":61,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":99,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":16,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":54,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":36,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":11,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_mixed_encoded":55,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod":59,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":5,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":41,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":34,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":49,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":53,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":74,"org.eclipse.jgit.lib.IndexDiffTest.testStageState":69,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":76,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":94,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":66,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":39,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":28,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":42,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":93,"org.eclipse.jgit.api.PushCommandTest.testPush":79,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":95,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":92,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":38,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":68,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":51,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":37,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":78,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":19,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":65,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":88,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":87,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":64,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":23,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":67,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":71,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_incompleteAuthorAndCommitter":60,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":91,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":1,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":35,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":98,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":31,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":33,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":22,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":10,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":46,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":27,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":25,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":75,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":52,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":48,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":47,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded":58,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":89,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":4,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":8,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":9,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":13,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":17,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":21,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":20,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":14,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":29,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":3,"org.eclipse.jgit.diff.EditTest.testEquals1":72,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":90,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_encoded":62,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":80,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":24,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":18,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":30,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":70,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":96,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateLooseBlob":100,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":77,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime":6,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":82,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":97,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":2,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":0,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":84,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":85,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_UTF8_encoded":56,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":32,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt":7,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":12,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":81,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":40,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":73,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded2":57,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":86,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":45,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":43,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat":63,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":15,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":83},"transformations":[{"failures":[],"tindex":"28fc0880-4c62-11e5-b24e-1dcbbc674923","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:170","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.DateRevQueue.everbodyHasFlag(org.eclipse.jgit.revwalk.MergeBaseGenerator.int))\n    return null;\n"},"variableMap":{"org.eclipse.jgit.revwalk.MergeBaseGenerator.MERGE_BASE":"org.eclipse.jgit.revwalk.MergeBaseGenerator.POPPED","pending":"pending"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:137","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.DateRevQueue.next();\n    if (org.eclipse.jgit.revwalk.RevCommit == null) {\n        org.eclipse.jgit.revwalk.RevWalk.org.eclipse.jgit.lib.ObjectReader.walkAdviceEnd();\n        return null;\n    } \n    for (final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit[]) {\n        if (((org.eclipse.jgit.revwalk.RevCommit.int) & (org.eclipse.jgit.revwalk.MergeBaseGenerator.int)) != 0)\n            continue;\n        \n        if (((org.eclipse.jgit.revwalk.RevCommit.int) & (org.eclipse.jgit.revwalk.MergeBaseGenerator.int)) == 0)\n            org.eclipse.jgit.revwalk.RevCommit.parseHeaders(org.eclipse.jgit.revwalk.RevWalk);\n        \n        org.eclipse.jgit.revwalk.RevCommit.int |= org.eclipse.jgit.revwalk.MergeBaseGenerator.int;\n        org.eclipse.jgit.revwalk.DateRevQueue.add(org.eclipse.jgit.revwalk.RevCommit);\n    }\n    int int = (org.eclipse.jgit.revwalk.RevCommit.int) & (int);\n    boolean boolean = int == (int);\n    if (boolean) {\n        int |= org.eclipse.jgit.revwalk.MergeBaseGenerator.int;\n    } \n    org.eclipse.jgit.revwalk.MergeBaseGenerator.carryOntoHistory(org.eclipse.jgit.revwalk.RevCommit, int);\n    if (((org.eclipse.jgit.revwalk.RevCommit.int) & (org.eclipse.jgit.revwalk.MergeBaseGenerator.int)) != 0) {\n        if (org.eclipse.jgit.revwalk.DateRevQueue.everbodyHasFlag(org.eclipse.jgit.revwalk.MergeBaseGenerator.int))\n            return null;\n        \n        continue;\n    } \n    org.eclipse.jgit.revwalk.RevCommit.int |= org.eclipse.jgit.revwalk.MergeBaseGenerator.int;\n    if (boolean) {\n        org.eclipse.jgit.revwalk.RevCommit.int |= org.eclipse.jgit.revwalk.MergeBaseGenerator.int;\n        return org.eclipse.jgit.revwalk.RevCommit;\n    } \n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"28fc2f91-4c62-11e5-b24e-f3dc78c4d94b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:151","type":"CtAssignmentImpl","sourcecode":"int = int != int ? org.eclipse.jgit.internal.storage.pack.BaseSearch.int : int"},"variableMap":{"mode":"ptr","pathLen":"ptr","org.eclipse.jgit.internal.storage.pack.BaseSearch.M_TREE":"ptr","end":"ptr","tailMode":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:569","type":"CtOperatorAssignmentImpl","sourcecode":"int += 46"},"status":-1},{"failures":[],"tindex":"28fc2f92-4c62-11e5-b24e-9dee8955efaa","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:250","type":"CtReturnImpl","sourcecode":"return "},"status":-2},{"failures":[65,11,31,38,66,67,68,69,70,71],"tindex":"28fc2f93-4c62-11e5-b24e-23a39dc41543","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:362","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.TreeWalk.isSubtree())\n    org.eclipse.jgit.treewalk.TreeWalk.enterSubtree();\n"},"variableMap":{"walk":"treeWalk"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:440","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n    final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry();\n    if (org.eclipse.jgit.dircache.DirCacheEntry != null) {\n        int int = org.eclipse.jgit.dircache.DirCacheEntry.getStage();\n        if (int > 0) {\n            java.lang.String java.lang.String = org.eclipse.jgit.treewalk.TreeWalk.getPathString();\n            org.eclipse.jgit.lib.IndexDiff.addConflict(java.lang.String, int);\n            continue;\n        } \n    } \n} "},"status":-1},{"failures":[72],"tindex":"28fc56a4-4c62-11e5-b24e-7743e8fec456","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:104","type":"CtReturnImpl","sourcecode":"return !(org.eclipse.jgit.util.SystemReader.getInstance().isMacOS())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.Edit:232","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"28fc56a5-4c62-11e5-b24e-ef3e96fbdb87","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:1215","type":"CtIfImpl","sourcecode":"if (int == int)\n    break;\n"},"variableMap":{"eol":"size","c":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:378","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommitList<E>.enter(int, ((E)(org.eclipse.jgit.revwalk.RevCommit)))"},"status":-2},{"failures":[73,74,75],"tindex":"28fc56a6-4c62-11e5-b24e-c36e7e058abc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:213","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry = null"},"variableMap":{"bestBase":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry:89","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry = org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry"},"status":-1},{"failures":[76,77,78,79,80,81,82],"tindex":"28fc56a7-4c62-11e5-b24e-47e83a7f6ab2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner:119","type":"CtOperatorAssignmentImpl","sourcecode":"int -= org.eclipse.jgit.internal.storage.pack.DeltaIndex.int"},"variableMap":{"org.eclipse.jgit.internal.storage.pack.DeltaIndex.BLKSZ":"refNameEnd","ptr":"refNameEnd"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:328","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.length()"},"status":-1},{"failures":[],"tindex":"28fc56a8-4c62-11e5-b24e-d9a5ec4725ff","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.FetchHeadRecord:75","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"remote branch\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else {\n    java.lang.String = \"\";\n    java.lang.String = java.lang.String;\n}"},"variableMap":{"org.eclipse.jgit.lib.Constants.R_REMOTES":"tip","name":"tip","sourceName":"tip","type":"tip"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:174","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId : java.util.List<org.eclipse.jgit.lib.ObjectId>) {\n    org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.ObjectId);\n    if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.api.NameRevCommand.NameRevCommit) {\n        org.eclipse.jgit.api.NameRevCommand.NameRevCommit org.eclipse.jgit.api.NameRevCommand.NameRevCommit = ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit)(org.eclipse.jgit.revwalk.RevObject));\n        if ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String) != null)\n            java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.put(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.api.NameRevCommand.org.eclipse.jgit.api.NameRevCommand.simplify(org.eclipse.jgit.api.NameRevCommand.NameRevCommit.format().toString()));\n        \n    } else {\n        java.lang.String java.lang.String = java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.get(org.eclipse.jgit.lib.ObjectId);\n        if (java.lang.String != null)\n            java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.put(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.api.NameRevCommand.org.eclipse.jgit.api.NameRevCommand.simplify(java.lang.String));\n        \n    }\n}"},"status":-2},{"failures":[],"tindex":"28fc7db9-4c62-11e5-b24e-95c2e9bc5ef5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:414","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.patch.HunkHeader.getOldImage().getLineCount())"},"status":0},{"failures":[],"tindex":"28fc7dba-4c62-11e5-b24e-a79623f08aa8","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:316","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.fnmatch.Head>.clear()"},"status":-2},{"failures":[],"tindex":"28fc7dbb-4c62-11e5-b24e-07704355215d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:226","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator.next(int)"},"variableMap":{"stepsBack":"org.eclipse.jgit.dircache.DirCacheEntry.STAGE_2","t":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:978","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.AbstractTreeIterator != null) && (!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryFileMode())))) {\n    org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryPathString() , org.eclipse.jgit.dircache.DirCacheEntry.int);\n    org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryFileMode());\n    org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId());\n    org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry);\n} "},"status":-2},{"failures":[83,84,85,86,87,88,9,10,89,29,90,30,31,91,32,33,34,35,36,37,38,92,39,93,40,94,95,41,42,43,96,44,45,46,97,47,48,49,98,50,51,52,53,99,54,100],"tindex":"28fc7dbc-4c62-11e5-b24e-77812649eb8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:348","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(org.eclipse.jgit.lib.ObjectId)) == 0)\n    java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.ObjectId);\n"},"status":-1},{"failures":[],"tindex":"28fc7dbd-4c62-11e5-b24e-7b9614463c67","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:538","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"variableMap":{"keyEnd":"ffMask"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:587","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.CanonicalTreeParser != null)\n    int = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode) ? 3328 : 3840;\n"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}