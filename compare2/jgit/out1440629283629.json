{"failureDictionary":{"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":27,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugEmptyLineAndSob":60,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":29,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLine":50,"org.eclipse.jgit.lib.IndexDiffTest.testRemoved":5,"org.eclipse.jgit.lib.IndexDiffTest.testModified":4,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementWithChangeIdInCommitMessage":35,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NoBodySobAndBug":59,"org.eclipse.jgit.util.ChangeIdUtilTest.testWithEndingURL":52,"org.eclipse.jgit.util.ChangeIdUtilTest.testFirstParentAltersId":43,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":33,"org.eclipse.jgit.util.ChangeIdUtilTest.testDirCacheAltersId":63,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBug_NonFooterLineAndSob":57,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":25,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":15,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":32,"org.eclipse.jgit.util.ChangeIdUtilTest.testKernelStyleFooter":42,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugLineWithASpaceAndSob":46,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAlreadySetWithReplacement":45,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithBug_SubButNoBody":62,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithSpacesBeforeId":49,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessages":53,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":16,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":30,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":17,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":24,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithSignedOffBy":48,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAfterBugOrIssue":44,"org.eclipse.jgit.util.ChangeIdUtilTest.testNoteInMiddle":56,"org.eclipse.jgit.lib.T0002_TreeTest.test006_addDeepTree":2,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommit":54,"org.eclipse.jgit.util.ChangeIdUtilTest.testTimeAltersId":40,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":23,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":22,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":6,"org.eclipse.jgit.util.ChangeIdUtilTest.testId":41,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommitWithSob_ButNoBody":39,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":31,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":21,"org.eclipse.jgit.util.ChangeIdUtilTest.testOnelinerFollowedByBlank":38,"org.eclipse.jgit.util.ChangeIdUtilTest.testATwoLines":37,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NonFooterAndBugAndSob":55,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacement":61,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":10,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":3,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":14,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":13,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithoutFooter":58,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test012_SubtreeExternalSorting":0,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":19,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":8,"org.eclipse.jgit.util.ChangeIdUtilTest.testOneliner":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":18,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":20,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessagesWithSignedOffBy":47,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugBrackersAndSob":34,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":7,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":12,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":28,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":26,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLineNoLineBreak":51,"org.eclipse.jgit.lib.T0002_TreeTest.test004_addTree":1,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":9},"transformations":[{"failures":[],"tindex":"828c7c54-4c44-11e5-80da-972d3aec82c8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:229","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RefUpdate.disableRefLog()"},"status":0},{"failures":[],"tindex":"828ca365-4c44-11e5-80da-e17e23513be6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getGlobalListenerList().dispatch(new org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddCommand:141","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.dircache.DirCache = org.eclipse.jgit.lib.Repository.lockDirCache();\n    org.eclipse.jgit.dircache.DirCacheIterator org.eclipse.jgit.dircache.DirCacheIterator;\n    org.eclipse.jgit.dircache.DirCacheBuilder org.eclipse.jgit.dircache.DirCacheBuilder = org.eclipse.jgit.dircache.DirCache.builder();\n    final org.eclipse.jgit.treewalk.TreeWalk org.eclipse.jgit.treewalk.TreeWalk = new org.eclipse.jgit.treewalk.TreeWalk(org.eclipse.jgit.lib.Repository);\n    org.eclipse.jgit.treewalk.TreeWalk.addTree(new org.eclipse.jgit.dircache.DirCacheBuildIterator(org.eclipse.jgit.dircache.DirCacheBuilder));\n    if ((org.eclipse.jgit.treewalk.WorkingTreeIterator) == null)\n        org.eclipse.jgit.treewalk.WorkingTreeIterator = new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository);\n    \n    org.eclipse.jgit.treewalk.TreeWalk.addTree(org.eclipse.jgit.treewalk.WorkingTreeIterator);\n    org.eclipse.jgit.treewalk.TreeWalk.setRecursive(true);\n    if (!boolean)\n        org.eclipse.jgit.treewalk.TreeWalk.setFilter(org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(java.util.Collection<java.lang.String>));\n    \n    java.lang.String java.lang.String = null;\n    while (org.eclipse.jgit.treewalk.TreeWalk.next()) {\n        java.lang.String java.lang.String = org.eclipse.jgit.treewalk.TreeWalk.getPathString();\n        org.eclipse.jgit.treewalk.WorkingTreeIterator org.eclipse.jgit.treewalk.WorkingTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(1, org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator);\n        if ((((org.eclipse.jgit.treewalk.TreeWalk.getTree(0, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator)) == null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator != null)) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored())) {\n        } else if (!(java.lang.String.equals(java.lang.String))) {\n            if (!((boolean) && ((org.eclipse.jgit.treewalk.TreeWalk.getTree(0, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator)) == null))) {\n                org.eclipse.jgit.dircache.DirCacheIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(0, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator);\n                if (org.eclipse.jgit.treewalk.WorkingTreeIterator != null) {\n                    long long = org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLength();\n                    org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(java.lang.String);\n                    if (((org.eclipse.jgit.dircache.DirCacheIterator == null) || ((org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry()) == null)) || (!(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry().isAssumeValid()))) {\n                        org.eclipse.jgit.lib.FileMode org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.treewalk.WorkingTreeIterator.getIndexFileMode(org.eclipse.jgit.dircache.DirCacheIterator);\n                        org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.lib.FileMode);\n                        if ((org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode) != org.eclipse.jgit.lib.FileMode) {\n                            org.eclipse.jgit.dircache.DirCacheEntry.setLength(long);\n                            org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLastModified());\n                            long long = org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryContentLength();\n                            java.io.InputStream java.io.InputStream = org.eclipse.jgit.treewalk.WorkingTreeIterator.openEntryStream();\n                            try {\n                                org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.Constants.int, long, java.io.InputStream));\n                            } finally {\n                                java.io.InputStream.close();\n                            }\n                        } else\n                            org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryObjectId());\n                        \n                        org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry);\n                        java.lang.String = java.lang.String;\n                    } else {\n                        org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry());\n                    }\n                } else if ((org.eclipse.jgit.dircache.DirCacheIterator != null) && ((!(boolean)) || ((org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode) == (org.eclipse.jgit.dircache.DirCacheIterator.getEntryFileMode()))))\n                    org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry());\n                \n            } \n        } \n    }\n    org.eclipse.jgit.lib.ObjectInserter.flush();\n    org.eclipse.jgit.dircache.DirCacheBuilder.commit();\n    org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.dircache.DirCache>.setCallable(false);\n} catch (java.io.IOException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.io.IOException);\n} finally {\n    org.eclipse.jgit.lib.ObjectInserter.release();\n    if (org.eclipse.jgit.dircache.DirCache != null)\n        org.eclipse.jgit.dircache.DirCache.unlock();\n    \n}"},"status":-2},{"failures":[],"tindex":"828cca76-4c44-11e5-80da-754f3165eaea","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:128","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[int >>> 2]"},"variableMap":{"intNameLen":"nParents"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:195","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[int]"},"status":0},{"failures":[],"tindex":"828cca77-4c44-11e5-80da-cb48a4392daa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:284","type":"CtIfImpl","sourcecode":"if (int == int)\n    continue;\n"},"variableMap":{"lastIdx":"org.eclipse.jgit.lib.Constants.OBJ_BLOB","i":"org.eclipse.jgit.lib.Constants.OBJ_BLOB"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RmCommand:157","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    final org.eclipse.jgit.lib.FileMode org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.treewalk.TreeWalk.getFileMode(0);\n    if ((org.eclipse.jgit.lib.FileMode.getObjectType()) == (org.eclipse.jgit.lib.Constants.int)) {\n        final java.io.File java.io.File = new java.io.File(org.eclipse.jgit.lib.Repository.getWorkTree() , org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n        org.eclipse.jgit.api.RmCommand.delete(java.io.File);\n    } \n} "},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"828cca78-4c44-11e5-80da-c9ee4be39883","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:1313","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TreeEntry:235","type":"CtReturnImpl","sourcecode":"return '/'"},"status":-1},{"failures":[],"tindex":"828cca79-4c44-11e5-80da-8bb67825fed7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:271","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:522","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.lib.AbbreviatedObjectId.mask(int, 3, int)"},"status":-2},{"failures":[],"tindex":"828cca7a-4c44-11e5-80da-e7f71b9c2074","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleSyncCommand:157","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.StoredConfig.save()"},"status":0},{"failures":[],"tindex":"828cca7b-4c44-11e5-80da-d5c180847a9d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.PersonIdent:219","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(8)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.PersonIdent:296","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"828cca7c-4c44-11e5-80da-316089dab470","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.StashApplyCommand:224","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"stashed HEAD\" , \"HEAD\" , \"untracked files\" })"},"variableMap":{"untrackedMerger":"merger"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:155","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger.setBase(org.eclipse.jgit.revwalk.RevCommit.getTree())"},"status":-1},{"failures":[],"tindex":"828cf18d-4c44-11e5-80da-4dcf13d618dc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.resolver.FileResolver:124","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.transport.resolver.ServiceNotEnabledException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleAddCommand:144","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"status":-2},{"failures":[],"tindex":"828cf18e-4c44-11e5-80da-17079c0ae7af","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:121","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.MergeResult<S>.add(1, 0, 0, org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState)"},"status":0},{"failures":[],"tindex":"828cf18f-4c44-11e5-80da-c10660a5f111","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:89","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern(''))"},"status":0},{"failures":[],"tindex":"828cf190-4c44-11e5-80da-2359e7c0cb1b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.BatchRefUpdate:115","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"allow":"startSpecified","allowNonFastForwards":"startSpecified"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.LogCommand:331","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"828cf191-4c44-11e5-80da-73a9bba82e97","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.PersonIdent:301","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"PersonIdent[\")"},"variableMap":{"r":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:115","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.lib.PersonIdent.toExternalString())"},"status":-1},{"failures":[],"tindex":"828cf192-4c44-11e5-80da-efc682eab3c0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.QuotedString:252","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.QuotedString.GitPathStyle.byte[]['\\\"'] = '\\\"'"},"variableMap":{"org.eclipse.jgit.util.QuotedString.GitPathStyle.quote":"org.eclipse.jgit.util.RawParseUtils.footerLineKeyChars"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:106","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.RawParseUtils.byte[][char] = 1"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}