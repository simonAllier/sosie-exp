{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":82,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":41,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":53,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":6,"org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive":55,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":101,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":7,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":54,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":71,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":67,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":66,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":75,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":93,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":9,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":37,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":84,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":47,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":52,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":79,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NoHeader":85,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":90,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":35,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":8,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":49,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":94,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":32,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":38,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":33,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":98,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":36,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":91,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":3,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":31,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":30,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":29,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":20,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":19,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":76,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":95,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":61,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":25,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":28,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":5,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":24,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":99,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":27,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":11,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":60,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":78,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":13,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":103,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":43,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback":88,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":69,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":56,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":51,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":46,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":45,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":80,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":57,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":10,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":14,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":12,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":62,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterSmallObjects":86,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":97,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":1,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":21,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":0,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":58,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":83,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":68,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":22,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":74,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects":89,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":23,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":59,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":96,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":100,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":40,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":77,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReaderResolve":87,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":92,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":2,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":44,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":72,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":65,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":70,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":16,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":17,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":26,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":102,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":63,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":34,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":81,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":106,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":105,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":4,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":18,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":42,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":64,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":73,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":39,"org.eclipse.jgit.api.RevertCommandTest.testRevert":104,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":15},"transformations":[{"failures":[],"tindex":"1653d3e6-4c5d-11e5-a9bb-8140c7ea3468","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:288","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)))\n    continue;\n"},"variableMap":{"org.eclipse.jgit.lib.Constants.R_HEADS":"taskName","n":"taskName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandProgressMonitor:88","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.SideBandProgressMonitor.format(java.lang.StringBuilder, java.lang.String, int, int, int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"1653faf7-4c5d-11e5-a9bb-e39129db601e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:176","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.api.CherryPickResult(org.eclipse.jgit.merge.ResolveMerger.getFailingPaths())"},"variableMap":{"merger":"merger"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:158","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)) {\n    if (org.eclipse.jgit.lib.AnyObjectId.equals(org.eclipse.jgit.revwalk.RevCommit.getTree().getId(), org.eclipse.jgit.merge.ResolveMerger.getResultTreeId()))\n        continue;\n    \n    org.eclipse.jgit.dircache.DirCacheCheckout org.eclipse.jgit.dircache.DirCacheCheckout = new org.eclipse.jgit.dircache.DirCacheCheckout(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.revwalk.RevCommit.getTree() , org.eclipse.jgit.lib.Repository.lockDirCache() , org.eclipse.jgit.merge.ResolveMerger.getResultTreeId());\n    org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true);\n    org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n    if (!(boolean))\n        org.eclipse.jgit.revwalk.RevCommit = new org.eclipse.jgit.api.Git(org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.api.CherryPickResult>.getRepository()).commit().setMessage(org.eclipse.jgit.revwalk.RevCommit.getFullMessage()).setReflogComment((((java.lang.String) + \" \") + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage()))).setAuthor(org.eclipse.jgit.revwalk.RevCommit.getAuthorIdent()).call();\n    \n    java.util.List<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref);\n} else {\n    if (org.eclipse.jgit.merge.ResolveMerger.failed())\n        return new org.eclipse.jgit.api.CherryPickResult(org.eclipse.jgit.merge.ResolveMerger.getFailingPaths());\n    \n    java.lang.String java.lang.String = new org.eclipse.jgit.merge.MergeMessageFormatter().formatWithConflicts(org.eclipse.jgit.revwalk.RevCommit.getFullMessage(), org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths());\n    if (!(boolean))\n        org.eclipse.jgit.lib.Repository.writeCherryPickHead(org.eclipse.jgit.revwalk.RevCommit.getId());\n    \n    org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(java.lang.String);\n    return org.eclipse.jgit.api.CherryPickResult.org.eclipse.jgit.api.CherryPickResult;\n}"},"status":-1},{"failures":[],"tindex":"16542208-4c5d-11e5-a9bb-35adf6a27265","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:558","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ProgressMonitor.isCancelled())\n    throw new org.eclipse.jgit.transport.BasePackFetchConnection.CancelledException();\n"},"variableMap":{"monitor":"pm"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:284","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.diff.SimilarityIndex = org.eclipse.jgit.diff.SimilarityRenameDetector.hash(org.eclipse.jgit.diff.DiffEntry.Side.org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry);\n} catch (org.eclipse.jgit.diff.SimilarityIndex.TableFullException tableFull) {\n    if (java.util.BitSet == null)\n        java.util.BitSet = new java.util.BitSet(java.util.List<org.eclipse.jgit.diff.DiffEntry>.size());\n    \n    java.util.BitSet.set(int);\n    boolean = true;\n    org.eclipse.jgit.lib.ProgressMonitor.update(1);\n    continue;\n}"},"status":-2},{"failures":[],"tindex":"16542209-4c5d-11e5-a9bb-17665581154b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RewriteGenerator:161","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit == null)\n    continue;\n"},"status":-2},{"failures":[55],"tindex":"1654220a-4c5d-11e5-a9bb-c38d4a9c7144","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:529","type":"CtIfImpl","sourcecode":"if (int == int)\n    int = int;\n"},"variableMap":{"tab":"c","end":"c","ptr":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:275","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.Patch.byte[])) >= 0)\n    break;\n"},"status":-1},{"failures":[56,57,58,13,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"1654220b-4c5d-11e5-a9bb-cf8ab7bf932f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1334","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.BatchRefUpdate.setRefLogMessage(\"push\", true)"},"variableMap":{"batch":"batch"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:209","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.BatchRefUpdate.addCommand(org.eclipse.jgit.transport.TrackingRefUpdate.asReceiveCommand())"},"status":-1},{"failures":[85],"tindex":"1654220c-4c5d-11e5-a9bb-899afb613f43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:115","type":"CtIfImpl","sourcecode":"if (int < 5)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-1},{"failures":[86,87,88,89],"tindex":"1654220d-4c5d-11e5-a9bb-4128dadbb6f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:377","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.ReentrantLock.lock()"},"status":-1},{"failures":[],"tindex":"1654491e-4c5d-11e5-a9bb-012251e695a6","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:167","type":"CtLocalVariableImpl","sourcecode":"int int = 46"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:585","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.internal.storage.file.RefDirectory.(org.eclipse.jgit.internal.storage.file.RefDirectory.levelsIn(java.lang.String)) - 2"},"status":-2},{"failures":[],"tindex":"1654491f-4c5d-11e5-a9bb-357eee93dab8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:177","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0)\n    int = (byte[][int++]) & 255;\n"},"variableMap":{"deltaPtr":"ptr","delta":"org.eclipse.jgit.patch.CombinedFileHeader.MODE","cmd":"length","copyOffset":"eol"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedFileHeader:164","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.patch.CombinedFileHeader.parseModeLine((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int)"},"status":-2},{"failures":[],"tindex":"16544920-4c5d-11e5-a9bb-bff7bc427d08","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:191","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = new org.eclipse.jgit.transport.RefSpec()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:263","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = new org.eclipse.jgit.transport.RefSpec(this)"},"status":-2},{"failures":[90,91,92,93,94,95,96],"tindex":"16544921-4c5d-11e5-a9bb-b73f842e1cbc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:102","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.RawParseUtils.byte[]['-'] = 1"},"variableMap":{"org.eclipse.jgit.util.RawParseUtils.footerLineKeyChars":"nameBuf"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.FanoutBucket:283","type":"CtAssignmentImpl","sourcecode":"byte[][1] = org.eclipse.jgit.notes.FanoutBucket.byte[][(int & 15)]"},"status":-1},{"failures":[],"tindex":"16544922-4c5d-11e5-a9bb-bb16f1d8554e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.TreeWalk:548","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = true;\n    boolean = true;\n    return true;\n} "},"variableMap":{"postOrderTraversal":"result","postChildren":"result","advance":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.FetchCommand:213","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"16544923-4c5d-11e5-a9bb-33f5e68b7f89","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:101","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.RawParseUtils.byte[] = new byte['z' + 1]"},"variableMap":{"org.eclipse.jgit.util.RawParseUtils.footerLineKeyChars":"log"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ReflogReaderImpl:97","type":"CtAssignmentImpl","sourcecode":"byte[] = org.eclipse.jgit.util.IO.readFully(java.io.File)"},"status":-2},{"failures":[97,98,99,100,101,102,103,104,105,106],"tindex":"16547034-4c5d-11e5-a9bb-f92a0492f676","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:231","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"PUBLIC-READ\", java.lang.String))\n    java.lang.String = \"public-read\";\nelse if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"PUBLIC_READ\", java.lang.String))\n    java.lang.String = \"public-read\";\nelse\n    throw new java.lang.IllegalArgumentException((\"Invalid acl: \" + java.lang.String));\n"},"variableMap":{"acl":"revertName","pacl":"revertName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:168","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"BASE\" , java.lang.String , java.lang.String })"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}