{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":103,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":0,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":24,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":11,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":52,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testCheckout":4,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutMergeBranch":55,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":38,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":100,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":19,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":33,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":28,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":90,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":74,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":47,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":29,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":49,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":97,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":71,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":26,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort":106,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":17,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":89,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":42,"org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection":67,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":91,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":18,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":15,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags":50,"org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet":3,"org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive":63,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout":44,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":58,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":14,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":61,"org.eclipse.jgit.util.RefMapTest.testRemove":104,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":23,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":93,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":7,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":102,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":30,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":32,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":77,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":2,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":6,"org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode":108,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnNullWithoutMergeBranchForLocalBranch":59,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":96,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":75,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":73,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":82,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":34,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":25,"org.eclipse.jgit.lib.ConfigTest.test010_readNamesInSubSection":68,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":81,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":65,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":98,"org.eclipse.jgit.lib.ConfigTest.testGetEnum":64,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":43,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":40,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":53,"org.eclipse.jgit.lib.BranchConfigTest.isRebase":56,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":78,"org.eclipse.jgit.api.GitConstructionTest.testOpen":20,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":66,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":22,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort":107,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":85,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":79,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":60,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":72,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":95,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":10,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort":111,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":8,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":31,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":88,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":84,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":87,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions":62,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":92,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":27,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":13,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch":54,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":1,"org.eclipse.jgit.transport.URIishTest.testScpStyleWithUser":109,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":80,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort":105,"org.eclipse.jgit.transport.URIishTest.testGetSet":110,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":51,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule":36,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":41,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":5,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":37,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":12,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutFetchSpec":57,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":94,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":86,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":39,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":101,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":35,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":70,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":16,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":76,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":99,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":9,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":45,"org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum":69,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags":46,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":83,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":21,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":48},"transformations":[{"failures":[],"tindex":"22d542c9-4c7e-11e5-85b0-c5ed5d91397a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:282","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.nio.channels.FileChannel java.nio.channels.FileChannel = java.io.FileOutputStream.getChannel();\n    java.nio.ByteBuffer java.nio.ByteBuffer = java.nio.ByteBuffer.wrap(byte[]);\n    while (0 < (java.nio.ByteBuffer.remaining()))\n        java.nio.channels.FileChannel.write(java.nio.ByteBuffer);\n    java.nio.channels.FileChannel.force(true);\n} else {\n    java.io.FileOutputStream.write(byte[]);\n}"},"status":-2},{"failures":[0,1,2,3],"tindex":"22d569da-4c7e-11e5-85b0-a7994ea49ab4","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:124","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = null"},"variableMap":{"t":"newTree","matches":"newTree"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DiffCommand:140","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator = new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository)"},"status":-1},{"failures":[4,5],"tindex":"22d590eb-4c7e-11e5-85b0-0357ea0a4b15","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:252","type":"CtReturnImpl","sourcecode":"return \"jgit receive-pack\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.CheckoutEntryImpl:69","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"22d590ec-4c7e-11e5-85b0-13c3a1f9990b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:152","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaCache.Ref = null"},"variableMap":{"cachedDelta":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:146","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaCache.Ref = org.eclipse.jgit.internal.storage.pack.DeltaCache.Ref"},"status":0},{"failures":[],"tindex":"22d590ed-4c7e-11e5-85b0-1d657f6d8520","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:558","type":"CtReturnImpl","sourcecode":"return (\"\\'\" + (new java.lang.String(byte[] , 0 , 4 , \"ISO-8859-1\"))) + \"\\'\""},"variableMap":{"hdr":"os"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:293","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.RawParseUtils.decode(byte[], 0, int)"},"status":-2},{"failures":[6,7,8,9,10,11,12,13],"tindex":"22d590ee-4c7e-11e5-85b0-e59d6f448baa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:280","type":"CtWhileImpl","sourcecode":"while ((int < int) && (int > 0))\n    int <<= 1;"},"variableMap":{"newCapacity":"len","capacity":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:345","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.write(byte[], 0, int)"},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"22d5b7ff-4c7e-11e5-85b0-a50d17f04475","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1123","type":"CtIfImpl","sourcecode":"if ((' ' == int) || ('\\t' == int)) {\n    for ( ;  ; ) {\n        int = org.eclipse.jgit.lib.Config.StringReader.read();\n        if (int < 0)\n            throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        if ('\\\"' == int) {\n            org.eclipse.jgit.lib.Config.StringReader.reset();\n            break;\n        } \n        if ((' ' == int) || ('\\t' == int))\n            continue;\n        \n        throw new org.eclipse.jgit.errors.ConfigInvalidException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.StringBuilder));\n    }\n    break;\n} "},"status":-1},{"failures":[],"tindex":"22d5b800-4c7e-11e5-85b0-d3fb296b34e4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:291","type":"CtIfImpl","sourcecode":"if (int == 0)\n    break TRY_LOCATIONS;\n"},"variableMap":{"np":"clearFlags"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1244","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.FIFORevQueue.next();\n    if (org.eclipse.jgit.revwalk.RevCommit == null)\n        break;\n    \n    if ((org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit[]) == null)\n        continue;\n    \n    for (final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit[]) {\n        if (((org.eclipse.jgit.revwalk.RevCommit.int) & int) == 0)\n            continue;\n        \n        org.eclipse.jgit.revwalk.RevCommit.int &= int;\n        org.eclipse.jgit.revwalk.RevCommit.reset();\n        org.eclipse.jgit.revwalk.FIFORevQueue.add(org.eclipse.jgit.revwalk.RevCommit);\n    }\n}"},"status":-2},{"failures":[],"tindex":"22d5b801-4c7e-11e5-85b0-713bf24734b6","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.PacketLineIn:189","type":"CtIfImpl","sourcecode":"if ((int != 0) && (int < 4))\n    throw new java.lang.ArrayIndexOutOfBoundsException();\n"},"variableMap":{"len":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedFileHeader:154","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseOldName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.CombinedFileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.CombinedFileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.CombinedFileHeader.parseModeLine((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.CombinedFileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.CombinedFileHeader.parseDeletedFileMode((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":0},{"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"22d5df12-4c7e-11e5-85b0-ffa3a4315f1e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RefMap:332","type":"CtIfImpl","sourcecode":"if (int == 0)\n    (int)++;\n"},"variableMap":{"cmp":"nParents","packedIdx":"nParents"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:185","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(org.eclipse.jgit.revwalk.RevCommit[], 0, org.eclipse.jgit.revwalk.RevCommit[], 0, int)"},"status":-1},{"failures":[],"tindex":"22d5df13-4c7e-11e5-85b0-f7ac8d4dd847","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:191","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = new org.eclipse.jgit.transport.RefSpec()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:181","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = new org.eclipse.jgit.transport.RefSpec(this)"},"status":-2},{"failures":[104],"tindex":"22d5df14-4c7e-11e5-85b0-db5524daebf9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RefRename:174","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Ref.getTarget()"},"variableMap":{"head":"res"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:198","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(java.lang.String)"},"status":-1},{"failures":[],"tindex":"22d60625-4c7e-11e5-85b0-b30ebad4d949","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:396","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.ObjectWalk.markStart(org.eclipse.jgit.revwalk.ObjectWalk.parseAny(org.eclipse.jgit.lib.Ref.getObjectId()))"},"status":0},{"failures":[45,51,105,106,107,108,109,110,111],"tindex":"22d60626-4c7e-11e5-85b0-c52e4a086e26","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.internal.Strings:300","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('\\\\').append(']')"},"variableMap":{"sb":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:621","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.transport.URIish.org.eclipse.jgit.transport.URIish.escape(org.eclipse.jgit.transport.URIish.getUser(), true, boolean))"},"status":-1},{"failures":[],"tindex":"22d60627-4c7e-11e5-85b0-835f9f59f4b4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1167","type":"CtOperatorAssignmentImpl","sourcecode":"int &= ~(int)"},"variableMap":{"carryFlags":"available","delayFreeFlags":"org.eclipse.jgit.transport.SideBandOutputStream.HDR_SIZE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:165","type":"CtOperatorAssignmentImpl","sourcecode":"int -= org.eclipse.jgit.transport.SideBandOutputStream.int"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}