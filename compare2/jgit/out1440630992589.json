{"failureDictionary":{"org.eclipse.jgit.api.GitConstructionTest.testWrap":59,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":21,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":22,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":42,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":56,"org.eclipse.jgit.api.GitConstructionTest.testOpen":58,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":19,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":64,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":31,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":41,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":67,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":52,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":53,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":17,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":1,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter":6,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":11,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":51,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":9,"org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindNextOffset":72,"org.eclipse.jgit.api.InitCommandTest.testInitWithExplicitGitDir":36,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":60,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":29,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":8,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":48,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter0":5,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":62,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":49,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":25,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":26,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":27,"org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsNonBare":34,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":23,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":54,"org.eclipse.jgit.api.GitConstructionTest.testClose":57,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":50,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":16,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead":18,"org.eclipse.jgit.api.InitCommandTest.testInitBareRepository":33,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":44,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":55,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":43,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":69,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter":7,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":28,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":3,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":4,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":61,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithInitializedSubmodule":66,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":14,"org.eclipse.jgit.api.InitCommandTest.testInitRepository":39,"org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsBare":35,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":40,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":70,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":12,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":10,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":45,"org.eclipse.jgit.api.InitCommandTest.testInitNonEmptyRepository":38,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":65,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":73,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":15,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":47,"org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindObject":71,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":20,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":2,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":13,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":46,"org.eclipse.jgit.transport.RefSpecTest.invalidWhenSourceOnlyAndWildcard":0,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":24,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":32,"org.eclipse.jgit.api.InitCommandTest.testInitWithOnlyExplicitGitDir":37,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":30,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":63,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":68},"transformations":[{"failures":[],"tindex":"7d2ac7d5-4c48-11e5-81bc-4707a2caacd0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:220","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.treewalk.TreeWalk.getRawMode(int)) != int) || (!(org.eclipse.jgit.treewalk.TreeWalk.idEqual(int, int))))\n    return true;\n"},"variableMap":{"tw":"walker","i":"i","dm":"m","dirCache":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter:85","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.treewalk.TreeWalk.getRawMode(int)) != int) || (!(org.eclipse.jgit.treewalk.TreeWalk.idEqual(int, org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter.int))))\n    return true;\n"},"status":0},{"failures":[],"tindex":"7d2aeee6-4c48-11e5-81bc-f79eb083f4cc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:283","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.AbstractTreeIterator != null) {\n    for (final org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator : org.eclipse.jgit.treewalk.AbstractTreeIterator[])\n        if ((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) == org.eclipse.jgit.treewalk.AbstractTreeIterator)\n            org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n        \n    if ((org.eclipse.jgit.treewalk.AbstractTreeIterator) == null)\n        org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    \n    return org.eclipse.jgit.treewalk.AbstractTreeIterator;\n} "},"variableMap":{"treeMatch":"minRef","minRef":"matches","trees":"trees","matches":"matches","dfConflict":"minRef"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:119","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.NameConflictTreeWalk.org.eclipse.jgit.treewalk.NameConflictTreeWalk.isTree(org.eclipse.jgit.treewalk.AbstractTreeIterator)) {\n    if (org.eclipse.jgit.treewalk.NameConflictTreeWalk.skipEntry(org.eclipse.jgit.treewalk.AbstractTreeIterator)) {\n        for (final org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator : org.eclipse.jgit.treewalk.AbstractTreeIterator[]) {\n            if ((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) == org.eclipse.jgit.treewalk.AbstractTreeIterator) {\n                org.eclipse.jgit.treewalk.AbstractTreeIterator.next(1);\n                org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = null;\n            } \n        }\n        continue;\n    } \n    return org.eclipse.jgit.treewalk.AbstractTreeIterator;\n} "},"status":-2},{"failures":[],"tindex":"7d2b15f7-4c48-11e5-81bc-5580ce1ee4e2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:605","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.MutableObjectId.equals(org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.lib.ObjectId))\n    return org.eclipse.jgit.blame.BlameGenerator.blameEntireRegionOnParent(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.revwalk.RevCommit);\n"},"variableMap":{"sourceBlob":"o","parent":"o","this":"o","idBuf":"o","n":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevFlagSet:91","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.eclipse.jgit.revwalk.RevFlag)\n    return ((int) & (((org.eclipse.jgit.revwalk.RevFlag)(java.lang.Object)).int)) != 0;\n"},"status":-2},{"failures":[],"tindex":"7d2b15f8-4c48-11e5-81bc-63a7244bef42","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RefMap:279","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (java.lang.String) + java.lang.String"},"variableMap":{"prefix":"lockMessage","name":"lockMessage"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:207","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":0},{"failures":[],"tindex":"7d2b15f9-4c48-11e5-81bc-2f71ddd1f8bc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:813","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    byte[] = null;\n    throw new org.eclipse.jgit.errors.LargeObjectException.OutOfMemory(new java.lang.OutOfMemoryError());\n} "},"variableMap":{"data":"org.eclipse.jgit.lib.CommitBuilder.hauthor","cmds":"org.eclipse.jgit.lib.CommitBuilder.hparent"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.CommitBuilder:265","type":"CtTryImpl","sourcecode":"try {\n    java.io.ByteArrayOutputStream.write(org.eclipse.jgit.lib.CommitBuilder.byte[]);\n    java.io.ByteArrayOutputStream.write(' ');\n    org.eclipse.jgit.lib.CommitBuilder.getTreeId().copyTo(java.io.ByteArrayOutputStream);\n    java.io.ByteArrayOutputStream.write('\\n');\n    for (org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId : org.eclipse.jgit.lib.CommitBuilder.getParentIds()) {\n        java.io.ByteArrayOutputStream.write(org.eclipse.jgit.lib.CommitBuilder.byte[]);\n        java.io.ByteArrayOutputStream.write(' ');\n        org.eclipse.jgit.lib.ObjectId.copyTo(java.io.ByteArrayOutputStream);\n        java.io.ByteArrayOutputStream.write('\\n');\n    }\n    java.io.ByteArrayOutputStream.write(org.eclipse.jgit.lib.CommitBuilder.byte[]);\n    java.io.ByteArrayOutputStream.write(' ');\n    java.io.OutputStreamWriter.write(org.eclipse.jgit.lib.CommitBuilder.getAuthor().toExternalString());\n    java.io.OutputStreamWriter.flush();\n    java.io.ByteArrayOutputStream.write('\\n');\n    java.io.ByteArrayOutputStream.write(org.eclipse.jgit.lib.CommitBuilder.byte[]);\n    java.io.ByteArrayOutputStream.write(' ');\n    java.io.OutputStreamWriter.write(org.eclipse.jgit.lib.CommitBuilder.getCommitter().toExternalString());\n    java.io.OutputStreamWriter.flush();\n    java.io.ByteArrayOutputStream.write('\\n');\n    if (org.eclipse.jgit.lib.CommitBuilder.(getEncoding()) != (org.eclipse.jgit.lib.Constants.java.nio.charset.Charset)) {\n        java.io.ByteArrayOutputStream.write(org.eclipse.jgit.lib.CommitBuilder.byte[]);\n        java.io.ByteArrayOutputStream.write(' ');\n        java.io.ByteArrayOutputStream.write(org.eclipse.jgit.lib.Constants.encodeASCII(org.eclipse.jgit.lib.CommitBuilder.getEncoding().name()));\n        java.io.ByteArrayOutputStream.write('\\n');\n    } \n    java.io.ByteArrayOutputStream.write('\\n');\n    if (org.eclipse.jgit.lib.CommitBuilder.(getMessage()) != null) {\n        java.io.OutputStreamWriter.write(org.eclipse.jgit.lib.CommitBuilder.getMessage());\n        java.io.OutputStreamWriter.flush();\n    } \n} catch (java.io.IOException err) {\n    throw new java.lang.RuntimeException(java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"7d2b15fa-4c48-11e5-81bc-1f28b7e708f2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:548","type":"CtInvocationImpl","sourcecode":"java.lang.System.exit(1)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:809","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.ObjectIdRef)"},"status":-1},{"failures":[0],"tindex":"7d2b3d0b-4c48-11e5-81bc-1f5fad0d0634","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:151","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.RefSpec.org.eclipse.jgit.transport.RefSpec.isWildcard(java.lang.String))\n    throw new java.lang.IllegalArgumentException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n"},"status":-1},{"failures":[],"tindex":"7d2b3d0c-4c48-11e5-81bc-75929ae155d1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:184","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.FileRepository"},"variableMap":{"parent":"repository"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:191","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Repository"},"status":0},{"failures":[1],"tindex":"7d2b3d0d-4c48-11e5-81bc-4750caac099c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:332","type":"CtOperatorAssignmentImpl","sourcecode":"int += (org.eclipse.jgit.lib.Constants.int) / 4"},"variableMap":{"levelTwo":"ptr","org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.BinaryHunk:125","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.BinaryHunk.byte[].int)), null)"},"status":-1},{"failures":[],"tindex":"7d2b3d0e-4c48-11e5-81bc-fff3f3740841","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += org.eclipse.jgit.lib.Constants.int"},"variableMap":{"org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH":"rewriteFlag","nextPtr":"flags"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:164","type":"CtOperatorAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.int |= int"},"status":-2},{"failures":[2,3,4,5,6,7],"tindex":"7d2b3d0f-4c48-11e5-81bc-a74ce311b28f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.filter.SkipRevFilter:87","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,57,58,58,59,59,60,61,62,63,64,65,66,67,68,69],"tindex":"7d2b6420-4c48-11e5-81bc-c5ade7af741b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.InitCommand:86","type":"CtIfImpl","sourcecode":"if ((java.io.File) != null) {\n    if (boolean)\n        org.eclipse.jgit.lib.RepositoryBuilder.setGitDir(java.io.File);\n    else {\n        org.eclipse.jgit.lib.RepositoryBuilder.setWorkTree(java.io.File);\n        if ((java.io.File) == null)\n            org.eclipse.jgit.lib.RepositoryBuilder.setGitDir(new java.io.File(java.io.File , org.eclipse.jgit.lib.Constants.java.lang.String));\n        \n    }\n} else if ((org.eclipse.jgit.lib.RepositoryBuilder.getGitDir()) == null) {\n    java.lang.String java.lang.String = org.eclipse.jgit.util.SystemReader.getInstance().getProperty(\"user.dir\");\n    if (java.lang.String == null)\n        java.lang.String = \".\";\n    \n    java.io.File java.io.File = new java.io.File(java.lang.String);\n    if (!(boolean))\n        java.io.File = new java.io.File(java.io.File , org.eclipse.jgit.lib.Constants.java.lang.String);\n    \n    org.eclipse.jgit.lib.RepositoryBuilder.setGitDir(java.io.File);\n} else {\n    if (!(boolean)) {\n        java.lang.String java.lang.String = org.eclipse.jgit.util.SystemReader.getInstance().getProperty(\"user.dir\");\n        if (java.lang.String == null)\n            java.lang.String = \".\";\n        \n        org.eclipse.jgit.lib.RepositoryBuilder.setWorkTree(new java.io.File(java.lang.String));\n    } \n}"},"status":-1},{"failures":[70,71,72,73],"tindex":"7d2b6421-4c48-11e5-81bc-cd431fbee60d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackReverseIndex:140","type":"CtIfImpl","sourcecode":"if (long > (long[][int[][(int - 1)]]))\n    break;\n"},"status":-2},{"failures":[],"tindex":"7d2b6422-4c48-11e5-81bc-d1402173b318","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommit:208","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revplot.PlotLane[] = org.eclipse.jgit.revplot.PlotCommit.org.eclipse.jgit.revplot.PlotLane[]"},"variableMap":{"org.eclipse.jgit.revplot.PlotCommit.NO_LANES":"n","forkingOffLanes":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommit:113","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revplot.PlotLane[] = org.eclipse.jgit.revplot.PlotLane[]"},"status":-2},{"failures":[],"tindex":"7d2b6423-4c48-11e5-81bc-25c300f20c7c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:104","type":"CtReturnImpl","sourcecode":"return !(org.eclipse.jgit.util.SystemReader.getInstance().isMacOS())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:144","type":"CtReturnImpl","sourcecode":"return true"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}