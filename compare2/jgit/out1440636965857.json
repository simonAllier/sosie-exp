{"failureDictionary":{"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":69,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":41,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":55,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":51,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":46,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":45,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":53,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":6,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":56,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":10,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":7,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":20,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs":72,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":18,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":54,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":65,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":61,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":58,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":9,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123":66,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":75,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":1,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":37,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":67,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":21,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":0,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":47,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":52,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking":73,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":64,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":22,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":35,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertWholeObject_Length12":71,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":8,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":49,"org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest.test":63,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":23,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":32,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination":74,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":40,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":38,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":68,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":33,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":57,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":36,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":3,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":31,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":30,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":2,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":70,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":44,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":60,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":29,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":13,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":14,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":17,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":16,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":34,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":25,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":28,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":5,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":24,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":27,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":11,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":4,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":15,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":42,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":39,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":59,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":62,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":19,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":43,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":12},"transformations":[{"failures":[],"tindex":"65845dbd-4c56-11e5-8888-a9f0d332983a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:177","type":"CtOperatorAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.int |= org.eclipse.jgit.revwalk.MergeBaseGenerator.int"},"status":0},{"failures":[],"tindex":"6585210e-4c56-11e5-8888-8f743425f1c2","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.PullCommand:193","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))) {\n    throw new org.eclipse.jgit.api.errors.DetachedHeadException();\n} "},"variableMap":{"org.eclipse.jgit.lib.Constants.R_HEADS":"name","fullBranch":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:619","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheCheckout.equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode))\n    org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\nelse\n    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n"},"status":-2},{"failures":[],"tindex":"6585210f-4c56-11e5-8888-31d580030b13","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:1159","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.SystemReader.getInstance().checkPath(java.lang.String)"},"variableMap":{"refName":"characterClassIsNotSupported"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:102","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"[:punct:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.PunctPattern.org.eclipse.jgit.fnmatch.GroupHead.PunctPattern);\n} else if (java.lang.String.equals(\"[:space:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern.org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern);\n} else if (java.lang.String.equals(\"[:upper:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.UpperPattern.org.eclipse.jgit.fnmatch.GroupHead.UpperPattern);\n} else if (java.lang.String.equals(\"[:xdigit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('0' , '9'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('a' , 'f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('A' , 'F'));\n} else if (java.lang.String.equals(\"[:word:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('_'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else {\n    final java.lang.String java.lang.String = java.lang.String.format(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    throw new org.eclipse.jgit.errors.InvalidPatternException(java.lang.String , java.lang.String);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"65852110-4c56-11e5-8888-77e004960696","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:245","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.api.CherryPickCommand.include(org.eclipse.jgit.lib.AnyObjectId.getName(), org.eclipse.jgit.lib.AnyObjectId)"},"variableMap":{"commit":"commit","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:256","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.api.CherryPickCommand.include(new org.eclipse.jgit.lib.ObjectIdRef.Unpeeled(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , java.lang.String , org.eclipse.jgit.lib.AnyObjectId.copy()))"},"status":-1},{"failures":[55,56,57],"tindex":"65854821-4c56-11e5-8888-31241b430954","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.GarbageCollectCommand:226","type":"CtInvocationImpl","sourcecode":"java.util.Properties.put(\"sizeOfLooseObjects\", org.eclipse.jgit.internal.storage.file.GC.RepoStatistics.long)"},"status":-1},{"failures":[],"tindex":"65854822-4c56-11e5-8888-cbaa033b4f9e","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase:168","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref.isPeeled()) || ((org.eclipse.jgit.lib.Ref.getObjectId()) == null))\n    return org.eclipse.jgit.lib.Ref;\n"},"variableMap":{"oldLeaf":"f","ref":"f"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:694","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref.getPeeledObjectId()) != null)\n    return new org.eclipse.jgit.lib.ObjectIdRef.PeeledTag(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.Ref.getObjectId() , org.eclipse.jgit.lib.Ref.getPeeledObjectId());\nelse\n    return new org.eclipse.jgit.lib.ObjectIdRef.PeeledNonTag(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.Ref.getObjectId());\n"},"status":-2},{"failures":[58],"tindex":"6585e463-4c56-11e5-8888-578cc1b25fde","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:692","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode))) {\n    if ((org.eclipse.jgit.lib.ObjectId == null) || (!org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryObjectId(), org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode())))) {\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, null, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        return ;\n    } \n} "},"status":-1},{"failures":[59,60],"tindex":"65860b74-4c56-11e5-8888-8f150bf08726","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:706","type":"CtIfImpl","sourcecode":"if ((boolean && (int == (org.eclipse.jgit.lib.FileMode.int))) && (int == (org.eclipse.jgit.lib.FileMode.int)))\n    boolean = false;\n"},"status":-1},{"failures":[61,62,63,64],"tindex":"65860b75-4c56-11e5-8888-ab5d3940eea9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:296","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException();\n"},"variableMap":{"idx":"i","cardinality":"lastw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:113","type":"CtIfImpl","sourcecode":"if (int < int) {\n    java.io.OutputStream.write(byte[], int, (int - int));\n} "},"status":-1},{"failures":[65,66,67,68,69,70,71],"tindex":"65860b76-4c56-11e5-8888-e52b23e9ed1d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:251","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(java.io.OutputStream, byte[], 0)"},"status":-1},{"failures":[],"tindex":"65863287-4c56-11e5-8888-9b29dcd67e37","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.NB:65","type":"CtReturnImpl","sourcecode":"return (int & 1) - (int & 1)"},"variableMap":{"a":"cmp","b":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:247","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[72,73,74,75],"tindex":"65863288-4c56-11e5-8888-0775d26a5dd4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.OpenSshConfig:284","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(1, ((java.lang.String.length()) - 1))"},"variableMap":{"value":"srcRef"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteRefUpdate:399","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"65863289-4c56-11e5-8888-e3e4b45876b8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:333","type":"CtAssignmentImpl","sourcecode":"int = 100"},"variableMap":{"dirScoreLtr":"shift"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:251","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"658680aa-4c56-11e5-8888-b7b420447a2a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:290","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DiffCommand:123","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(((org.eclipse.jgit.lib.Constants.java.lang.String) + \"^{tree}\"))"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}