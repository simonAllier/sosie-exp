{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":100,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":97,"org.eclipse.jgit.api.BlameCommandTest.testRename":29,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":71,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":150,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":53,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":112,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":10,"org.eclipse.jgit.api.FetchCommandTest.testFetch":117,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":132,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":158,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":160,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":116,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":77,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":157,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":27,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":58,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":83,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":107,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":74,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":135,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":154,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":155,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":105,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":28,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":62,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":93,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":20,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":156,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":9,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":115,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":96,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":162,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":131,"org.eclipse.jgit.api.PushCommandTest.testPush":146,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":95,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":50,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":84,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":52,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":80,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":12,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":13,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":43,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":49,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":145,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":48,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":78,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":76,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack1":39,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":42,"org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob":70,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeFullBlob":69,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":138,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":38,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":137,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack2":40,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":7,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":59,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testIndexSize":11,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":120,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":153,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":102,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":119,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":61,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":21,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":141,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":108,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":26,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":134,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":32,"org.eclipse.jgit.api.GitConstructionTest.testWrap":89,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":99,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":123,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":1,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":113,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":164,"org.eclipse.jgit.api.GitConstructionTest.testOpen":88,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":163,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":159,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":63,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":82,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":109,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":165,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":143,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":22,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":140,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":5,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":18,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjects":51,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":19,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":23,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":30,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":31,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":118,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":14,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":34,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":15,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":121,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":16,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":17,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":75,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":37,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":68,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":64,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":6,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":85,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":139,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":103,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":104,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":101,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":161,"org.eclipse.jgit.transport.PackParserTest.test1":65,"org.eclipse.jgit.api.GitConstructionTest.testClose":87,"org.eclipse.jgit.transport.PackParserTest.test2":66,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead":72,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":147,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":57,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":33,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":166,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":36,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":142,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":130,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":35,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":129,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":60,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":25,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":144,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":106,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":149,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":133,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":73,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":55,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":111,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":92,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":47,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":8,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":46,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":45,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":124,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":44,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":126,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":127,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":151,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":54,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":91,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":3,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":122,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":148,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":86,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":4,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":114,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":0,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":98,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":79,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":152,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":24,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":128,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":67,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":94,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":136,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":90,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":56,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":110,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":41,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":2,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":81,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":125},"transformations":[{"failures":[],"tindex":"043d09cd-4c28-11e5-9291-099c633708fe","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:923","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.ServiceMayNotContinueException.setOutput()"},"variableMap":{"fail":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:279","type":"CtTryImpl","sourcecode":"try {\n    for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : org.eclipse.jgit.lib.Repository.getRefDatabase().getRefs(org.eclipse.jgit.lib.Constants.java.lang.String).values()) {\n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId();\n        if ((org.eclipse.jgit.lib.ObjectId != null) && ((org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.ObjectId)) instanceof org.eclipse.jgit.revwalk.RevTag))\n            org.eclipse.jgit.api.NameRevCommand.addRef(org.eclipse.jgit.lib.Ref);\n        \n    }\n} catch (java.io.IOException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"043d30de-4c28-11e5-9291-8d4a47e3ecf4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LocalObjectToPack:68","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackFile = null"},"variableMap":{"pack":"heads"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:550","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackFile = org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Collections.<org.eclipse.jgit.lib.ObjectId>emptySet(), java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriter.ObjectIdSet>)"},"status":-1},{"failures":[],"tindex":"043d30df-4c28-11e5-9291-07e6c7dfe54a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:139","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(1000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:297","type":"CtIfImpl","sourcecode":"if (boolean)\n    org.eclipse.jgit.dircache.DirCache = org.eclipse.jgit.merge.Merger.getRepository().lockDirCache();\n"},"status":-2},{"failures":[],"tindex":"043d30e0-4c28-11e5-9291-25543df1ce01","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.Transport:930","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && ((java.lang.String.length()) > 0))\n    this.java.lang.String = java.lang.String;\nelse\n    this.java.lang.String = org.eclipse.jgit.transport.RemoteConfig.java.lang.String;\n"},"variableMap":{"org.eclipse.jgit.transport.RemoteConfig.DEFAULT_RECEIVE_PACK":"org.eclipse.jgit.lib.RefDatabase.ALL","optionReceivePack":"org.eclipse.jgit.lib.RefDatabase.ALL"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:247","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.RefDirectory.LooseScanner.scan(org.eclipse.jgit.lib.RefDatabase.java.lang.String)"},"status":-2},{"failures":[],"tindex":"043d30e1-4c28-11e5-9291-21f9f53f877c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:326","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<org.eclipse.jgit.lib.ObjectId> java.util.Set<org.eclipse.jgit.lib.ObjectId> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:524","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<org.eclipse.jgit.lib.ObjectId> java.util.Set<org.eclipse.jgit.lib.ObjectId> = new java.util.HashSet<org.eclipse.jgit.lib.ObjectId>()"},"status":-2},{"failures":[10,11],"tindex":"043d57f2-4c28-11e5-9291-adb81f3496dc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:395","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaIndex.getSourceSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:211","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.sizeOf(int[])"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"043d57f3-4c28-11e5-9291-57eca69982d6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameResult:138","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.diff.RawText = null"},"variableMap":{"resultContents":"sourceText"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Candidate:168","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.diff.RawText = new org.eclipse.jgit.diff.RawText(org.eclipse.jgit.lib.ObjectLoader.getCachedBytes(java.lang.Integer.int))"},"status":-1},{"failures":[],"tindex":"043d57f4-4c28-11e5-9291-475156fabd94","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:182","type":"CtForEachImpl","sourcecode":"for (java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> : java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>) {\n    org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit = java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.get(((java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.size()) - 1));\n    if (org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.contains(org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit))\n        java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.add(java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>);\n    \n}"},"variableMap":{"running":"running","fullBitmap":"bitmapableCommits","matches":"running"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:146","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.WalkResult) {\n    if (!(org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.contains(org.eclipse.jgit.revwalk.RevCommit)))\n        continue;\n    \n    int++;\n    int--;\n    org.eclipse.jgit.lib.ProgressMonitor.update(1);\n    if (org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.WalkResult.java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>.remove(org.eclipse.jgit.revwalk.RevCommit)) {\n        if (int > 0)\n            int = 0;\n        \n    } else if ((!boolean) && ((int > 0) || (((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) <= 1) && (int > (-(int)))))) {\n        continue;\n    } \n    int int = int;\n    int = org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.nextSelectionDistance(int, int);\n    int = int == (int) ? org.eclipse.jgit.internal.storage.file.PackBitmapIndex.int : 0;\n    boolean = int == 0;\n    org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder = org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.newBitmapBuilder();\n    org.eclipse.jgit.revwalk.RevWalk.reset();\n    org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevCommit);\n    for (org.eclipse.jgit.lib.AnyObjectId org.eclipse.jgit.lib.AnyObjectId : org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.WalkResult.java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>)\n        org.eclipse.jgit.revwalk.RevWalk.markUninteresting(org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.AnyObjectId));\n    org.eclipse.jgit.revwalk.RevWalk.setRevFilter(org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker.newRevFilter(null, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder));\n    while ((org.eclipse.jgit.revwalk.RevWalk.next()) != null) {\n    }\n    java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>> java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>> = new java.util.ArrayList<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>();\n    for (java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> : java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>) {\n        org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit = java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.get(((java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.size()) - 1));\n        if (org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.contains(org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit))\n            java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.add(java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>);\n        \n    }\n    java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>;\n    if (java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.isEmpty()) {\n        java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> = new java.util.ArrayList<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>();\n        java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.add(java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>);\n    } else {\n        java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> = java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.get(0);\n        for (java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> : java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>) {\n            if ((java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.size()) > (java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.size()))\n                java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> = java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>;\n            \n        }\n    }\n    java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.add(new org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit(org.eclipse.jgit.revwalk.RevCommit , !(java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.isEmpty()) , int));\n    org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.addBitmap(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder, 0);\n}"},"status":0},{"failures":[],"tindex":"043d7f05-4c28-11e5-9291-cbe059e2d9f9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1598","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.TemporaryBuffer.Heap.writeTo(java.util.zip.DeflaterOutputStream, null)"},"variableMap":{"dst":"out","delta":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandOutputStream:171","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write(byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"043d7f06-4c28-11e5-9291-7bcf98a3e38a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:334","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ProgressMonitor.update(1)"},"status":0},{"failures":[],"tindex":"043da617-4c28-11e5-9291-1f047568b284","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:752","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:147","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[((int)(long))]"},"status":-2},{"failures":[33,34,35,36],"tindex":"043da618-4c28-11e5-9291-cb3b8b3dbb91","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TagBuilder:185","type":"CtInvocationImpl","sourcecode":"java.io.OutputStreamWriter.write(org.eclipse.jgit.lib.TagBuilder.getMessage())"},"status":-1},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,87,88,88,89,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"043da619-4c28-11e5-9291-95be4546fd86","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder:130","type":"CtIfImpl","sourcecode":"if (java.io.File != null)\n    throw new java.lang.IllegalArgumentException();\n"},"variableMap":{"gitDir":"finalPack"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:496","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.file.PackFile = org.eclipse.jgit.internal.storage.file.FileObjectDatabase.openPack(java.io.File);\n} catch (java.io.IOException err) {\n    org.eclipse.jgit.internal.storage.file.PackLock.unlock();\n    if (java.io.File.exists())\n        org.eclipse.jgit.util.FileUtils.delete(java.io.File);\n    \n    if (java.io.File.exists())\n        org.eclipse.jgit.util.FileUtils.delete(java.io.File);\n    \n    throw java.io.IOException;\n}"},"status":-1},{"failures":[166],"tindex":"043da61a-4c28-11e5-9291-ed4ba1719fe4","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:238","type":"CtAssignmentImpl","sourcecode":"java.io.File = new java.io.File(((java.io.File.getPath()) + \".keep\"))"},"variableMap":{"packFile":"packdir","keepFile":"tmpPack"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:709","type":"CtAssignmentImpl","sourcecode":"java.io.File = java.io.File.createTempFile(\"gc_\", \".pack_tmp\", java.io.File)"},"status":-1},{"failures":[],"tindex":"043dcd2b-4c28-11e5-9291-5309712a4143","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:159","type":"CtIfImpl","sourcecode":"if (int == 0)\n    continue;\n"},"variableMap":{"h":"msk"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectIdSubclassMap:220","type":"CtWhileImpl","sourcecode":"while ((V[][int]) != null)\n    int = (int + 1) & int;"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}