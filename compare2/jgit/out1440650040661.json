{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":140,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":145,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross":217,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":1,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":15,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":19,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":151,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":155,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":78,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":38,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":177,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":199,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":235,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":163,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":106,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":71,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":2,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":196,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors2":209,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":98,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":133,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":102,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":143,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":198,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":16,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":202,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":126,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":61,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":108,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":128,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":81,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":194,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":17,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":46,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":104,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":122,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":93,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":12,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":117,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":187,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":10,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":76,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge":218,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":92,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":91,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":109,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":138,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":69,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":132,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":225,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent":171,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":0,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":142,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":58,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":184,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":228,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath":174,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":183,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":52,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":170,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":32,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":188,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":116,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter":213,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":119,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":191,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":21,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":65,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":75,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":160,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":55,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":161,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":162,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent":173,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":159,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":182,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":181,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":62,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":83,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":175,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":157,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":118,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":37,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":192,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder2":219,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":153,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":154,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":185,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":179,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":54,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":168,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":189,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":77,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":110,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":85,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":147,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":82,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1":222,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":224,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":197,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6":223,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE":220,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":101,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":56,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":150,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":149,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches":146,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":127,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":14,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":13,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":89,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange":129,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":49,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":144,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":95,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow":211,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":80,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":6,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":27,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":135,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":100,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":5,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":124,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead":130,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":141,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":67,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":234,"org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter":208,"org.eclipse.jgit.util.io.AutoCRLFInputStreamTest.test":236,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":20,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":203,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":136,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":30,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":230,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":44,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":11,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":200,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter":215,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":40,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":59,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":229,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":33,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":201,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":105,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO":221,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":112,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":123,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow":210,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":158,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":96,"org.eclipse.jgit.revwalk.RevWalkMergedIntoTest.testOldCommitWalk":216,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":121,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":60,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":94,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":97,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":152,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":41,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":113,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":63,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":205,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":9,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":231,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":180,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":167,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":36,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":35,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":57,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":233,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":68,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":88,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":72,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":18,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":103,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":87,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":90,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":22,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":134,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":148,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":74,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":186,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":43,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":166,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":47,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":51,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":165,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":206,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":73,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":169,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":114,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":195,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithMerges":214,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":115,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":178,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":131,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":8,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":53,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":45,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":193,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":3,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":120,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":204,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":84,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":64,"org.eclipse.jgit.api.NameRevCommandTest.onePathMerge":172,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":164,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":70,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":86,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":29,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":42,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":28,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":31,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":39,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":107,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":99,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":7,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":227,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":111,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":23,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":66,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":232,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":156,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":25,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":26,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":207,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":125,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":137,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NO_MERGES":212,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":139,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":4,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":34,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":190,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":226,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":176,"org.eclipse.jgit.api.RevertCommandTest.testRevert":79,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":24},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"d6b4abeb-4c74-11e5-b29b-8f39066bf6e7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.StashApplyCommand:224","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"stashed HEAD\" , \"HEAD\" , \"untracked files\" })"},"variableMap":{"untrackedMerger":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:467","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.dircache.DirCacheBuildIterator == null) || ((org.eclipse.jgit.dircache.DirCacheBuildIterator.getDirCacheEntry()) == null)) {\n    if (org.eclipse.jgit.merge.ResolveMerger.org.eclipse.jgit.merge.ResolveMerger.nonTree(int)) {\n        org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath());\n        org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectId(org.eclipse.jgit.merge.ResolveMerger.int));\n        org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getFileMode(org.eclipse.jgit.merge.ResolveMerger.int));\n    } \n} else {\n    org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheBuildIterator.getDirCacheEntry();\n}"},"status":-1},{"failures":[],"tindex":"d6b4abec-4c74-11e5-b29b-0d3e9df7436e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:104","type":"CtReturnImpl","sourcecode":"return !(org.eclipse.jgit.util.SystemReader.getInstance().isMacOS())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:586","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"d6b4d2fd-4c74-11e5-b29b-4b1d5aa22aaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaCache:76","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"status":0},{"failures":[111,112,113,114,115,116,117,11,118,12,119,120,121,13,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,0,1,144,5,7,8,9,145,146,23,24,25,26,28,29,31,32,33,34,35,36,147,148,149,150,18,151,39,40,43,152,45,46,52,53,153,57,154,155,156,157,158,159,160,161,162,163,58,59,164,165,60,166,61,62,63,64,167,65,168,66,169,67,68,69,170,70,71,72,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,84,85,87,88,91,92,94,99,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224],"tindex":"d6b4d2fe-4c74-11e5-b29b-852f405e3572","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:229","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit[] = new org.eclipse.jgit.revwalk.RevCommit[]{ org.eclipse.jgit.revwalk.RevCommit }"},"variableMap":{"p":"p","c":"p","parents":"pList"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:179","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit[] = new org.eclipse.jgit.revwalk.RevCommit[]{ org.eclipse.jgit.revwalk.RevCommit[][0] , org.eclipse.jgit.revwalk.RevCommit }"},"status":-1},{"failures":[],"tindex":"d6b4d2ff-4c74-11e5-b29b-17b424293ae5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:1069","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.RepositoryState.org.eclipse.jgit.lib.RepositoryState"},"variableMap":{"org.eclipse.jgit.lib.RepositoryState.BARE":"org.eclipse.jgit.lib.RepositoryState.REVERTING_RESOLVED"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1124","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.lib.Repository.readDirCache().hasUnmergedPaths())) {\n    return org.eclipse.jgit.lib.RepositoryState.org.eclipse.jgit.lib.RepositoryState;\n} "},"status":-2},{"failures":[],"tindex":"d6b4d300-4c74-11e5-b29b-21681d163332","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:687","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId[][int] = org.eclipse.jgit.lib.MutableObjectId.toObjectId()"},"variableMap":{"ids":"newParents","pIdx":"length","idBuf":"additionalParent"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.CommitBuilder:208","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId[][org.eclipse.jgit.lib.ObjectId[].int] = org.eclipse.jgit.lib.AnyObjectId.copy()"},"status":-2},{"failures":[],"tindex":"d6b4d301-4c74-11e5-b29b-6912821fdc55","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushProcess:204","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.transport.RemoteRefUpdate.isExpectingOldObjectId()) && (!(org.eclipse.jgit.transport.RemoteRefUpdate.getExpectedOldObjectId().equals(org.eclipse.jgit.lib.ObjectId)))) {\n    org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"d6b4fa12-4c74-11e5-b29b-17de4ff5a7c6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:2071","type":"CtIfImpl","sourcecode":"if ((int & 2) != 0)\n    return true;\n"},"variableMap":{"type":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaCache:75","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    long += int;\n    return true;\n} "},"status":0},{"failures":[],"tindex":"d6b4fa13-4c74-11e5-b29b-3fce6a7961d6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportBundleFile:145","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.NotSupportedException(org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"variableMap":{"pushIsNotSupportedForBundleTransport":"wholePattern"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:120","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.InvalidPatternException(java.lang.String , java.lang.String)"},"status":-2},{"failures":[],"tindex":"d6b4fa14-4c74-11e5-b29b-478af796786f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.URIish:713","type":"CtAssignmentImpl","sourcecode":"java.lang.String[] = java.lang.String.split(\"/+\")"},"variableMap":{"s":"s","elements":"elements"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:711","type":"CtAssignmentImpl","sourcecode":"java.lang.String[] = java.lang.String.split(((\"[\\\\\" + (java.io.File.char)) + \"/]\"))"},"status":0},{"failures":[],"tindex":"d6b4fa15-4c74-11e5-b29b-8773a6fce558","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.RenameDetector:390","type":"CtReturnImpl","sourcecode":"return java.util.Collections.unmodifiableList(java.util.List<org.eclipse.jgit.diff.DiffEntry>)"},"variableMap":{"entries":"srcs"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:183","type":"CtReturnImpl","sourcecode":"return java.util.List<org.eclipse.jgit.diff.DiffEntry>"},"status":0},{"failures":[116,225,226,227,228,83,86,229,230,231,93,95,97,98,232,100,233,234,104,105,193,196,200,203,235],"tindex":"d6b4fa16-4c74-11e5-b29b-2dcc4f5b6d17","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:402","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.ObjectWalk.dispose()"},"variableMap":{"w":"rw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:571","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n    if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0) {\n        org.eclipse.jgit.revwalk.RevObject = null;\n        break;\n    } \n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n    org.eclipse.jgit.revwalk.RevWalk.parseHeaders(org.eclipse.jgit.revwalk.RevCommit);\n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit;\n    --int;\n}"},"status":-1},{"failures":[236],"tindex":"d6b4fa17-4c74-11e5-b29b-5bba2071f701","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:269","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 4"},"variableMap":{"cmd":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.AutoCRLFInputStream:124","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"d6b52128-4c74-11e5-b29b-5f42a37c7a7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleSyncCommand:143","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.lib.StoredConfig.getString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String)"},"status":0},{"failures":[],"tindex":"d6b52129-4c74-11e5-b29b-6b5b30b91e68","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:282","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.diff.DiffEntry org.eclipse.jgit.diff.DiffEntry : java.util.List<org.eclipse.jgit.diff.DiffEntry>) {\n    if (org.eclipse.jgit.revwalk.TreeRevFilter.(org.eclipse.jgit.revwalk.TreeRevFilter.isRename(org.eclipse.jgit.diff.DiffEntry)) && (org.eclipse.jgit.diff.DiffEntry.getNewPath().equals(org.eclipse.jgit.revwalk.FollowFilter.getPath()))) {\n        org.eclipse.jgit.treewalk.filter.TreeFilter = org.eclipse.jgit.revwalk.FollowFilter.create(org.eclipse.jgit.diff.DiffEntry.getOldPath(), org.eclipse.jgit.diff.DiffConfig);\n        org.eclipse.jgit.revwalk.RenameCallback org.eclipse.jgit.revwalk.RenameCallback = org.eclipse.jgit.revwalk.FollowFilter.getRenameCallback();\n        if (org.eclipse.jgit.revwalk.RenameCallback != null) {\n            org.eclipse.jgit.revwalk.RenameCallback.renamed(org.eclipse.jgit.diff.DiffEntry);\n            ((org.eclipse.jgit.revwalk.FollowFilter)(org.eclipse.jgit.treewalk.filter.TreeFilter)).setRenameCallback(org.eclipse.jgit.revwalk.RenameCallback);\n        } \n        break;\n    } \n}"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}