{"failureDictionary":{"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBackslash":74,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross":4,"org.eclipse.jgit.transport.RemoteConfigTest.singlePushInsteadOf":232,"org.eclipse.jgit.util.ReadLinesTest.testReadLines_LF":20,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":238,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":186,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase6":26,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSimpleStarCase3":66,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase3":106,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase3":24,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase4":25,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSimpleStarCase1":65,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":201,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase1":22,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase2":23,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase0":21,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":194,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":196,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritPreferredAuthentications":120,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":227,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase0":103,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase7":27,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase2":105,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":193,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase1":104,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":231,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase5":43,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCntrlGroupCase1":50,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":131,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase3":42,"org.eclipse.jgit.transport.RemoteConfigTest.noInsteadOf":239,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase2":41,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase1":40,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase0":39,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":191,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase3":90,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase2":89,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase4":91,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoGroupsCase1":64,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoGroupsCase0":63,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase3":100,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase4":101,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleWirdcardCase0":29,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase1":98,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase2":99,"org.eclipse.jgit.transport.RemoteConfigTest.multiplePushInsteadOf":228,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase5":102,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testNameOnlyMatches":124,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":198,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase3":61,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":166,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase2":60,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":136,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":156,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":13,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":12,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":143,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testFileNameWildcards":122,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritBatchMode":118,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase2":81,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase1":80,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":241,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase0":79,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":205,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":216,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase5":84,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase4":83,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase3":82,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testParentDirectoryGitIgnores":121,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":222,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":169,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMultipleEscapedCharacters1":62,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":240,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":202,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":209,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":199,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":195,"org.eclipse.jgit.lib.ConfigTest.test005_PutGetStringList":127,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":150,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testLowerGroupCase4":49,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testLowerGroupCase1":48,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testLowerGroupCase0":47,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testIncompleteRangesInOneGroupCase2":78,"org.eclipse.jgit.util.ReadLinesTest.testReadLines_CRLF":19,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testAlnumGroupCase1":108,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testIncompleteRangesInOneGroupCase0":77,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testAlnumGroupCase0":107,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testAlphaGroupCase0":54,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCopyConstructor":38,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues":181,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":144,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":133,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":217,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":218,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testAlphaGroupCase2":55,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":197,"org.eclipse.jgit.api.GitConstructionTest.testClose":183,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase1":59,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase0":58,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue":182,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":5,"org.eclipse.jgit.util.ReadLinesTest.testReadLines_endLF":17,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":237,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsInherit":119,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":200,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":153,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":178,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":130,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":225,"org.eclipse.jgit.util.ReadLinesTest.testReadLines_singleLine":16,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupRangeCase3":73,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":188,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testBlankGroupCase0":92,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":163,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testBlankGroupCase1":93,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":155,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupRangeCase2":72,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":230,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupRangeCase1":71,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase1":109,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase2":110,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":224,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":125,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase4":111,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":214,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":211,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection":180,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.test2AlphaGroupsCase0":53,"org.eclipse.jgit.api.FetchCommandTest.testFetch":203,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":167,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":140,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":234,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":221,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":137,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":170,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":190,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPunctGroupCase1":76,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPunctGroupCase0":75,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":219,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":6,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":154,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":192,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":226,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":157,"org.eclipse.jgit.lib.ConfigTest.testEmptyString":128,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":134,"org.eclipse.jgit.api.PushCommandTest.testPush":176,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":7,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBracket6":117,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":132,"org.eclipse.jgit.transport.RemoteConfigTest.singleInsteadOf":236,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBracket5":116,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":175,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBracket4":115,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBracket1":114,"org.eclipse.jgit.util.ReadLinesTest.testReadLines_mixed":18,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":141,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":139,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":173,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":172,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":206,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":11,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":189,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":10,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testSimple":3,"org.eclipse.jgit.transport.RemoteConfigTest.multipleInsteadOf":229,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCreateMatcherForSuffix":45,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":149,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleWildCardCase2":28,"org.eclipse.jgit.api.GitConstructionTest.testWrap":185,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimplePatternCase0":51,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":213,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":158,"org.eclipse.jgit.util.ReadLinesTest.testReadLines_endCRLF":15,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimplePatternCase2":52,"org.eclipse.jgit.api.GitConstructionTest.testOpen":184,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":126,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":223,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":210,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":0,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testReset":46,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":148,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase3":70,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase2":69,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase1":68,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase0":67,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":146,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":204,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleStarCase1":95,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":135,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleStarCase2":96,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":207,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":8,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleStarCase0":94,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":138,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase2":2,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase1":1,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":147,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase":145,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":215,"org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue":129,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":9,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCombinedRangesInOneGroupCase0":30,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":177,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":165,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":164,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase0":97,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":174,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCombinedRangesInOneGroupCase2":31,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":179,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":220,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testInversedGroupCase3":57,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":168,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":14,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":159,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase5":37,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":161,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testFilePathSimpleCase":44,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":162,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":187,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":152,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":208,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testTargetWithoutLeadingSlash":123,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase1":86,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupCase0":112,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase0":32,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase0":85,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupCase1":113,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase1":33,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase2":34,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":212,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase3":35,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase4":36,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testInversedGroupCase0":56,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":142,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase3":88,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":171,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase2":87,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":151,"org.eclipse.jgit.transport.RemoteConfigTest.noPushInsteadOf":235,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":160,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":233},"transformations":[{"failures":[0],"tindex":"0e561fac-4c5e-11e5-a7c9-e34b81e85a33","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:690","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref.getStorage().isPacked()) && (org.eclipse.jgit.lib.Ref.isPeeled()))\n    return org.eclipse.jgit.lib.Ref;\n"},"variableMap":{"f":"old"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:496","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref.isSymbolic()) {\n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.internal.storage.file.RefDirectory.org.eclipse.jgit.internal.storage.file.RefDirectory.recreate(org.eclipse.jgit.lib.Ref.getTarget(), org.eclipse.jgit.lib.ObjectIdRef);\n    return new org.eclipse.jgit.lib.SymbolicRef(org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.Ref);\n} "},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"0e5646bd-4c5e-11e5-a7c9-d1f1c1ed30ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:155","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int |= org.eclipse.jgit.revwalk.MergeBaseGenerator.int;\n} "},"status":-1},{"failures":[],"tindex":"0e5646be-4c5e-11e5-a7c9-4391b4f5c1bb","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:76","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.lang.String).getParentFile()"},"variableMap":{"w":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:445","type":"CtLocalVariableImpl","sourcecode":"final java.io.File java.io.File = new java.io.File(java.io.File , ((\"pack-\" + java.lang.String) + \".idx\"))"},"status":-2},{"failures":[],"tindex":"0e5646bf-4c5e-11e5-a7c9-e5287510fc03","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:151","type":"CtAssignmentImpl","sourcecode":"int = int != int ? org.eclipse.jgit.internal.storage.pack.BaseSearch.int : int"},"variableMap":{"mode":"n","pathLen":"n","org.eclipse.jgit.internal.storage.pack.BaseSearch.M_TREE":"n","end":"n","tailMode":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:918","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-2},{"failures":[],"tindex":"0e5646c0-4c5e-11e5-a7c9-97ca569b5d80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:244","type":"CtIfImpl","sourcecode":"if (int == int) {\n    long += java.lang.Math.min(org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.countOf(long[][int]), org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.countOf(long[][int]));\n    if ((++int) == (long[].int))\n        break;\n    \n    int = org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.keyOf(long[][int]);\n    if ((++int) == (long[].int))\n        break;\n    \n    int = org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.keyOf(long[][int]);\n} else if (int < int) {\n    if ((++int) == (long[].int))\n        break;\n    \n    int = org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.keyOf(long[][int]);\n} else {\n    if ((++int) == (long[].int))\n        break;\n    \n    int = org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.keyOf(long[][int]);\n}"},"status":-2},{"failures":[],"tindex":"0e5646c1-4c5e-11e5-a7c9-8dec6771b442","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.filter.AuthorRevFilter:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0)\n    throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"variableMap":{"pattern":"org.eclipse.jgit.lib.RefDatabase.ALL","cannotMatchOnEmptyString":"org.eclipse.jgit.lib.RefDatabase.ALL"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:221","type":"CtTryImpl","sourcecode":"try {\n    final org.eclipse.jgit.revwalk.RevFlag org.eclipse.jgit.revwalk.RevFlag = org.eclipse.jgit.revwalk.RevWalk.newFlag(\"PREREQ\");\n    final org.eclipse.jgit.revwalk.RevFlag org.eclipse.jgit.revwalk.RevFlag = org.eclipse.jgit.revwalk.RevWalk.newFlag(\"SEEN\");\n    final java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String> java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String> = new java.util.HashMap<org.eclipse.jgit.lib.ObjectId, java.lang.String>();\n    final java.util.List<org.eclipse.jgit.revwalk.RevObject> java.util.List<org.eclipse.jgit.revwalk.RevObject> = new java.util.ArrayList<org.eclipse.jgit.revwalk.RevObject>();\n    for (final java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String> java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String> : java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.entrySet()) {\n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String>.getKey();\n        try {\n            final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId);\n            if (!(org.eclipse.jgit.revwalk.RevCommit.has(org.eclipse.jgit.revwalk.RevFlag))) {\n                org.eclipse.jgit.revwalk.RevCommit.add(org.eclipse.jgit.revwalk.RevFlag);\n                java.util.List<org.eclipse.jgit.revwalk.RevObject>.add(org.eclipse.jgit.revwalk.RevCommit);\n            } \n        } catch (org.eclipse.jgit.errors.MissingObjectException notFound) {\n            java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.put(org.eclipse.jgit.lib.ObjectId, java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String>.getValue());\n        } catch (java.io.IOException err) {\n            throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.Transport.org.eclipse.jgit.transport.URIish , java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.ObjectId.name()) , java.io.IOException);\n        }\n    }\n    if (!(java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.isEmpty()))\n        throw new org.eclipse.jgit.errors.MissingBundlePrerequisiteException(org.eclipse.jgit.transport.Transport.org.eclipse.jgit.transport.URIish , java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>);\n    \n    java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref> java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>;\n    try {\n        java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.transport.Transport.org.eclipse.jgit.lib.Repository.getRefDatabase().getRefs(org.eclipse.jgit.lib.RefDatabase.java.lang.String);\n    } catch (java.io.IOException e) {\n        throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.Transport.org.eclipse.jgit.transport.URIish , java.io.IOException.getMessage() , java.io.IOException);\n    }\n    for (final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>.values()) {\n        try {\n            org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Ref.getObjectId()));\n        } catch (java.io.IOException readError) {\n        }\n    }\n    int int = java.util.List<org.eclipse.jgit.revwalk.RevObject>.size();\n    try {\n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit;\n        while ((org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.next()) != null) {\n            if (org.eclipse.jgit.revwalk.RevCommit.has(org.eclipse.jgit.revwalk.RevFlag)) {\n                org.eclipse.jgit.revwalk.RevCommit.add(org.eclipse.jgit.revwalk.RevFlag);\n                if ((--int) == 0)\n                    break;\n                \n            } \n        }\n    } catch (java.io.IOException err) {\n        throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.Transport.org.eclipse.jgit.transport.URIish , org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.io.IOException);\n    }\n    if (int > 0) {\n        for (final org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject : java.util.List<org.eclipse.jgit.revwalk.RevObject>) {\n            if (!(org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag)))\n                java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.put(org.eclipse.jgit.revwalk.RevObject, java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.get(org.eclipse.jgit.revwalk.RevObject));\n            \n        }\n        throw new org.eclipse.jgit.errors.MissingBundlePrerequisiteException(org.eclipse.jgit.transport.Transport.org.eclipse.jgit.transport.URIish , java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>);\n    } \n} finally {\n    org.eclipse.jgit.revwalk.RevWalk.release();\n}"},"status":-2},{"failures":[15,16,17,18,19,20],"tindex":"0e566dd2-4c5e-11e5-a7c9-05a036dcebee","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_Win32:157","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(\"/c\")"},"variableMap":{"argv":"l"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:370","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(java.lang.StringBuilder.toString())"},"status":-1},{"failures":[],"tindex":"0e566dd3-4c5e-11e5-a7c9-996fc05d09b7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RewriteGenerator:179","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : org.eclipse.jgit.revwalk.RevCommit[]) {\n    if (org.eclipse.jgit.revwalk.RevCommit != null) {\n        org.eclipse.jgit.revwalk.RevCommit[][int++] = org.eclipse.jgit.revwalk.RevCommit;\n        org.eclipse.jgit.revwalk.RevCommit.int &= ~(org.eclipse.jgit.revwalk.RewriteGenerator.int);\n    } \n}"},"variableMap":{"oldList":"ids","newCnt":"pIdx","flags":"pIdx","newList":"ids","org.eclipse.jgit.revwalk.RewriteGenerator.DUPLICATE":"pIdx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:696","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.ObjectId[] != null) && ((org.eclipse.jgit.lib.ObjectId[][int]) != null))\n    continue;\n"},"status":-2},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"0e566dd4-4c5e-11e5-a7c9-e58f0df5f05e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:396","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"0e5694e5-4c5e-11e5-a7c9-1710df7c0706","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:841","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.LargeObjectException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:126","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"status":-2},{"failures":[],"tindex":"0e5694e6-4c5e-11e5-a7c9-3d57750b7311","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:85","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.PendingGenerator.org.eclipse.jgit.revwalk.RevCommit = new org.eclipse.jgit.revwalk.RevCommit(org.eclipse.jgit.lib.ObjectId.zeroId())"},"variableMap":{"org.eclipse.jgit.revwalk.PendingGenerator.INIT_LAST":"id"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1412","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.lookupCommit(org.eclipse.jgit.lib.ObjectId)"},"status":-2},{"failures":[],"tindex":"0e5694e7-4c5e-11e5-a7c9-f75035b60f8f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:488","type":"CtInvocationImpl","sourcecode":"java.io.BufferedInputStream.mark(21)"},"status":-2},{"failures":[],"tindex":"0e5694e8-4c5e-11e5-a7c9-65751f4c0bbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:309","type":"CtOperatorAssignmentImpl","sourcecode":"long += org.eclipse.jgit.internal.storage.file.ByteWindow.setInput(long, java.util.zip.Inflater)"},"status":0},{"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,5,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,183,184,184,185,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240],"tindex":"0e5694e9-4c5e-11e5-a7c9-f9a522d6aadb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.ChangeIdUtil:231","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(java.lang.String)"},"variableMap":{"delimiter":"section","message":"section"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:475","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = org.eclipse.jgit.lib.Config.getRawStringList(java.lang.String, java.lang.String, java.lang.String)"},"status":-1},{"failures":[241],"tindex":"0e56bbfa-4c5e-11e5-a7c9-c7171443aa98","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:490","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.PersonIdent = org.eclipse.jgit.lib.PersonIdent"},"variableMap":{"committer":"person","author":"person"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashCreateCommand:158","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.lib.PersonIdent = org.eclipse.jgit.lib.PersonIdent"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}