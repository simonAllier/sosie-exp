{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":93,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":5,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":29,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":38,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":103,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":18,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":48,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":57,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":86,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":83,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":68,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":110,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":111,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":79,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":109,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":40,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":76,"org.eclipse.jgit.transport.PushProcessTest.testUpdateDeleteNonExisting":117,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":99,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":80,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":78,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":107,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":97,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":20,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":42,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":54,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":82,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":108,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":61,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":58,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":25,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":113,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":67,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":53,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":21,"org.eclipse.jgit.transport.PushProcessTest.testUpdateMixedCases":115,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":16,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":70,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegateAllExceptJavaInSrc":123,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":17,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":9,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":15,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":63,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":14,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":66,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":8,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":6,"org.eclipse.jgit.attributes.AttributesMatcherTest.testParentDirectoryGitAttributes":121,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":50,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":41,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":84,"org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindObject":1,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":106,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":120,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":81,"org.eclipse.jgit.internal.storage.file.PackIndexV2Test.testCRC32":26,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":65,"org.eclipse.jgit.internal.storage.file.PackIndexV1Test.testCompareEntriesOffsetsWithFindOffsets":0,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":100,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles":34,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":89,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique":3,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":73,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":87,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":90,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":114,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":24,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":43,"org.eclipse.jgit.transport.PushProcessTest.testUpdateDelete":116,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":101,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":44,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":91,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":28,"org.eclipse.jgit.util.NBTest.testDecodeUInt64":47,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":118,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegationAllExceptJavaInSrcAndExceptChildDirInSrc":122,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":22,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":23,"org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindNextOffset":2,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":62,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":75,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":60,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":95,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":74,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":96,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":35,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":94,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":112,"org.eclipse.jgit.api.GitConstructionTest.testClose":52,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead":31,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":27,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":39,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":77,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":119,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":88,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree":32,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":98,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":4,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":51,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":59,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":36,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":85,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":13,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":49,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":12,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":30,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":11,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":10,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_LsFiles":33,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":104,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":19,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":45,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":56,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":69,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":92,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":72,"org.eclipse.jgit.util.NBTest.testDecodeUInt32":46,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":105,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":64,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":37,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":71,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":55,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":102,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":7},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"7e5c7510-4c6e-11e5-904a-f1925186a243","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.NB:152","type":"CtOperatorAssignmentImpl","sourcecode":"int |= (byte[][(int + 2)]) & 255"},"status":-2},{"failures":[],"tindex":"7e5c9c21-4c6e-11e5-904a-778665644a75","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:290","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = org.eclipse.jgit.internal.JGitText.get().java.lang.String;\n"},"variableMap":{"description":"cannotParseGitURIish","blameNotCommittedYet":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:277","type":"CtIfImpl","sourcecode":"if (byte == '%') {\n    if ((int + 2) >= (byte[].int))\n        throw new java.net.URISyntaxException(java.lang.String , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    byte byte = byte[][(int + 1)];\n    byte byte = byte[][(int + 2)];\n    int int;\n    try {\n        int = org.eclipse.jgit.transport.URIish.org.eclipse.jgit.transport.URIish.parseHexByte(byte, byte);\n    } catch (java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new java.net.URISyntaxException(java.lang.String , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    }\n    byte[][int++] = ((byte)(int));\n    int += 2;\n} else\n    byte[][int++] = byte;\n"},"status":-2},{"failures":[],"tindex":"7e5c9c22-4c6e-11e5-904a-5bdc564ba518","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:332","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.blame.BlameGenerator.(find(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter)))\n    return this;\n"},"variableMap":{"commit":"id","this":"this","resultPath":"resultPath"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:319","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.ObjectLoader.getType()) == (org.eclipse.jgit.lib.Constants.int)) {\n    if (java.lang.String == null)\n        java.lang.String = org.eclipse.jgit.internal.JGitText.get().java.lang.String;\n    \n    org.eclipse.jgit.blame.Candidate.BlobCandidate org.eclipse.jgit.blame.Candidate.BlobCandidate = new org.eclipse.jgit.blame.Candidate.BlobCandidate(java.lang.String , org.eclipse.jgit.treewalk.filter.PathFilter);\n    org.eclipse.jgit.blame.Candidate.BlobCandidate.org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.AnyObjectId.toObjectId();\n    org.eclipse.jgit.blame.Candidate.BlobCandidate.org.eclipse.jgit.diff.RawText = new org.eclipse.jgit.diff.RawText(org.eclipse.jgit.lib.ObjectLoader.getCachedBytes(java.lang.Integer.int));\n    org.eclipse.jgit.blame.Candidate.BlobCandidate.org.eclipse.jgit.blame.Region = new org.eclipse.jgit.blame.Region(0 , 0 , org.eclipse.jgit.blame.Candidate.BlobCandidate.org.eclipse.jgit.diff.RawText.size());\n    int = org.eclipse.jgit.blame.Candidate.BlobCandidate.org.eclipse.jgit.diff.RawText.size();\n    org.eclipse.jgit.blame.BlameGenerator.push(org.eclipse.jgit.blame.Candidate.BlobCandidate);\n    return this;\n} "},"status":-2},{"failures":[115,116,117],"tindex":"7e5cc333-4c6e-11e5-904a-9fcd3c4185cc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ApplyCommand:258","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteRefUpdate:375","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectId.zeroId().equals(org.eclipse.jgit.lib.ObjectId)"},"status":-1},{"failures":[],"tindex":"7e5cc334-4c6e-11e5-904a-a1e261d3a7b8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.RenameDetector:367","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ProgressMonitor == null)\n    org.eclipse.jgit.lib.ProgressMonitor = org.eclipse.jgit.lib.NullProgressMonitor.org.eclipse.jgit.lib.NullProgressMonitor;\n"},"variableMap":{"org.eclipse.jgit.lib.NullProgressMonitor.INSTANCE":"pm","pm":"pm"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:175","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ProgressMonitor.endTask()"},"status":0},{"failures":[],"tindex":"7e5cc335-4c6e-11e5-904a-4174e6b0621a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.DeleteBranchCommand:114","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    continue;\n"},"variableMap":{"branchName":"badEntryDelimiter"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1161","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    int = org.eclipse.jgit.lib.Config.StringReader.read();\n    if (int < 0)\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    if ('=' == int)\n        break;\n    \n    if (((';' == int) || ('#' == int)) || ('\\n' == int)) {\n        org.eclipse.jgit.lib.Config.StringReader.reset();\n        break;\n    } \n    if ((' ' == int) || ('\\t' == int))\n        continue;\n    \n    throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n}"},"status":-2},{"failures":[118,119,120],"tindex":"7e5cea46-4c6e-11e5-904a-299f42062049","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:153","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository)))"},"variableMap":{"repo":"repo","strategy":"strategy"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:222","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository, true)))"},"status":-1},{"failures":[],"tindex":"7e5cea47-4c6e-11e5-904a-278a94a19687","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:391","type":"CtIfImpl","sourcecode":"if ((int > int) || (int > int)) {\n    int = int;\n    int = int;\n} "},"variableMap":{"y1":"c","x1":"c","y2":"c","x2":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1166","type":"CtIfImpl","sourcecode":"if ('=' == int)\n    break;\n"},"status":0},{"failures":[],"tindex":"7e5cea48-4c6e-11e5-904a-bde23e49d2ef","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.LsRemoteCommand:200","type":"CtLocalVariableImpl","sourcecode":"java.util.Collection<org.eclipse.jgit.lib.Ref> java.util.Collection<org.eclipse.jgit.lib.Ref>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:284","type":"CtLocalVariableImpl","sourcecode":"final java.util.Collection<org.eclipse.jgit.lib.Ref> java.util.Collection<org.eclipse.jgit.lib.Ref> = new java.util.ArrayList<org.eclipse.jgit.lib.Ref>(java.util.HashMap<org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.Ref>.values())"},"status":-2},{"failures":[],"tindex":"7e5cea49-4c6e-11e5-904a-fd56df4e45b0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getGlobalListenerList().dispatch(new org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:287","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RenameCallback.renamed(org.eclipse.jgit.diff.DiffEntry)"},"status":-2},{"failures":[],"tindex":"7e5d115a-4c6e-11e5-904a-2f6af457903a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.SystemReader:116","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null) {\n    try {\n        java.net.InetAddress java.net.InetAddress = java.net.InetAddress.getLocalHost();\n        java.lang.String = java.net.InetAddress.getCanonicalHostName();\n    } catch (java.net.UnknownHostException e) {\n        java.lang.String = \"localhost\";\n    }\n    assert (java.lang.String) != null;\n} "},"variableMap":{"hostname":"segmentName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:239","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.fnmatch.FileNameMatcher.append((\"/\" + java.lang.String))"},"status":-2},{"failures":[],"tindex":"7e5d115b-4c6e-11e5-904a-0f80446f363f","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:461","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 10 ; int++) {\n    if (java.io.File.delete())\n        return true;\n    \n    try {\n        java.lang.Thread.sleep(100);\n    } catch (java.lang.InterruptedException e) {\n        return false;\n    }\n}"},"variableMap":{"ref":"objects"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:184","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.FS.exists(java.io.File)"},"status":-2},{"failures":[121,122,123],"tindex":"7e5d115c-4c6e-11e5-904a-e3456405b112","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ApplyCommand:258","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.TrailingAsteriskMatcher:68","type":"CtReturnImpl","sourcecode":"return true"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":13,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}