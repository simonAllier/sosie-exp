{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":182,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":86,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":262,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":279,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":71,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":144,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":37,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":55,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":249,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":269,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":79,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":81,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":119,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":217,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":78,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":51,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":124,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":274,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":7,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":172,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test008_FailOnWrongVersion":260,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":54,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":76,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_Seek2IsEOF":208,"org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection":238,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":60,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":191,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":168,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":49,"org.eclipse.jgit.api.CleanCommandTest.testClean":184,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":70,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":83,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":96,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout":271,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":10,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":222,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":186,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":179,"org.eclipse.jgit.lib.ConfigTest.testNoFinalNewline":240,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":18,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":135,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":170,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":175,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek3IsEOF":207,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":270,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":130,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":255,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":214,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":257,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":264,"org.eclipse.jgit.lib.ConfigTest.test010_readNamesInSubSection":241,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":29,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":151,"org.eclipse.jgit.lib.ConfigTest.testGetEnum":232,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":157,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":194,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":99,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_BackwardsTwo":206,"org.eclipse.jgit.lib.BranchConfigTest.isRebase":219,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":280,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":113,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":34,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":38,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":84,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":80,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":69,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":127,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":46,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":235,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":183,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":263,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":23,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":106,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":189,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":261,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":110,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":259,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":112,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":192,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":9,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":166,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":152,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":47,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":153,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":82,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions":227,"org.eclipse.jgit.api.GitConstructionTest.testClose":31,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":216,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":105,"org.eclipse.jgit.lib.ConfigTest.test009_readNamesInSection":234,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":114,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":22,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts1":204,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts2":205,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":44,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":278,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":252,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsTwo":211,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":52,"org.eclipse.jgit.lib.ConfigTest.test008_readSectionNames":244,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":248,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":198,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":201,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":85,"org.eclipse.jgit.lib.ConfigTest.test_ReadNamesInSectionRecursive":230,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":165,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":36,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":25,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":64,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":167,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject":43,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":196,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":1,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":111,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":117,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":87,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":73,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":93,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":174,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":27,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":180,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":272,"org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum":242,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":161,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":159,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":133,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags":273,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":3,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":149,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":213,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":146,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":2,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":107,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":128,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":163,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":268,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":61,"org.eclipse.jgit.api.FetchCommandTest.testFetch":28,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":177,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":97,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":254,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":56,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":15,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":115,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff1":225,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2":226,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":276,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":156,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":12,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":75,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":100,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":57,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":215,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":154,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":185,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":26,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":65,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":126,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsOneAtATime":209,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":160,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":77,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":267,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":118,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":164,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":11,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags":277,"org.eclipse.jgit.lib.ConfigTest.testEmptyString":239,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":199,"org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive":231,"org.eclipse.jgit.api.PushCommandTest.testPush":42,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":176,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":220,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":258,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":66,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":212,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":63,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":142,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":8,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":253,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":143,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":141,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":41,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":140,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":16,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":14,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":134,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":103,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":102,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":132,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":58,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":125,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":74,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":59,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":233,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse1":246,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion":266,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":173,"org.eclipse.jgit.lib.ConfigTest.test001_ReadBareKey":237,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":21,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":200,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2":247,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":251,"org.eclipse.jgit.api.GitConstructionTest.testWrap":33,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":45,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":148,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":88,"org.eclipse.jgit.api.GitConstructionTest.testOpen":32,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":116,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":158,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":5,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":35,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":190,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek2":203,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":20,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":50,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":67,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":221,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":30,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":68,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":197,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":13,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.invalidRepositoryFormatVersion":265,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":187,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwards_ConfusingPathName":210,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":169,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":108,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":19,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":48,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":120,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":150,"org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue":245,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":62,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":193,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":123,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch":218,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":53,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":195,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":202,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":95,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":94,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":40,"org.eclipse.jgit.lib.ConfigTest.testReadLong":236,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":155,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":98,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":131,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":256,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":121,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":129,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":139,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":39,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":138,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":89,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":137,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":136,"org.eclipse.jgit.internal.storage.pack.IntSetTest.testAdd":0,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":91,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":72,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":92,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":6,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":145,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":250,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":162,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":178,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":109,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":147,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":243,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":181,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":17,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":171,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":101,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":24,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":188,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":122,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge":224,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":104,"org.eclipse.jgit.lib.ConfigTest.test006_readCaseInsensitive":223,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo1":228,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":90,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2":229,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":275},"transformations":[{"failures":[],"tindex":"44f78423-4c73-11e5-878c-510a69e9bd98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:161","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.RawParseUtils.parseHexInt4(byte[][int++])"},"status":0},{"failures":[],"tindex":"44f7ab34-4c73-11e5-878c-691952cd39e5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:200","type":"CtIfImpl","sourcecode":"if ((int == int) && (org.eclipse.jgit.treewalk.TreeWalk.idEqual(int, int)))\n    continue;\n"},"variableMap":{"myMode":"org.eclipse.jgit.lib.Constants.OBJ_BLOB","tw":"tw","nParents":"org.eclipse.jgit.lib.Constants.OBJ_BLOB","i":"org.eclipse.jgit.lib.Constants.OBJ_BLOB","pMode":"org.eclipse.jgit.lib.Constants.OBJ_BLOB"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddCommand:170","type":"CtIfImpl","sourcecode":"if (!((boolean) && ((org.eclipse.jgit.treewalk.TreeWalk.getTree(0, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator)) == null))) {\n    org.eclipse.jgit.dircache.DirCacheIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(0, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator);\n    if (org.eclipse.jgit.treewalk.WorkingTreeIterator != null) {\n        long long = org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLength();\n        org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(java.lang.String);\n        if (((org.eclipse.jgit.dircache.DirCacheIterator == null) || ((org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry()) == null)) || (!(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry().isAssumeValid()))) {\n            org.eclipse.jgit.lib.FileMode org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.treewalk.WorkingTreeIterator.getIndexFileMode(org.eclipse.jgit.dircache.DirCacheIterator);\n            org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.lib.FileMode);\n            if ((org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode) != org.eclipse.jgit.lib.FileMode) {\n                org.eclipse.jgit.dircache.DirCacheEntry.setLength(long);\n                org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLastModified());\n                long long = org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryContentLength();\n                java.io.InputStream java.io.InputStream = org.eclipse.jgit.treewalk.WorkingTreeIterator.openEntryStream();\n                try {\n                    org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.Constants.int, long, java.io.InputStream));\n                } finally {\n                    java.io.InputStream.close();\n                }\n            } else\n                org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryObjectId());\n            \n            org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry);\n            java.lang.String = java.lang.String;\n        } else {\n            org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry());\n        }\n    } else if ((org.eclipse.jgit.dircache.DirCacheIterator != null) && ((!(boolean)) || ((org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode) == (org.eclipse.jgit.dircache.DirCacheIterator.getEntryFileMode()))))\n        org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry());\n    \n} "},"status":-2},{"failures":[],"tindex":"44f7ab35-4c73-11e5-878c-a7ee5955a675","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:318","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.ArrayIndexOutOfBoundsException();\n"},"variableMap":{"r":"msk"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:187","type":"CtWhileImpl","sourcecode":"while ((byte[][][int]) != null)\n    int = (int + 1) & int;"},"status":0},{"failures":[],"tindex":"44f7d246-4c73-11e5-878c-5de011df08bd","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:466","type":"CtIfImpl","sourcecode":"if (int < 1)\n    break;\n"},"variableMap":{"l":"org.eclipse.jgit.revplot.AbstractPlotRenderer.LINE_WIDTH"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.AbstractPlotRenderer:114","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revplot.AbstractPlotRenderer<TLane, TColor>.drawLine(TColor, int, int, int, ((int + int) / 2), org.eclipse.jgit.revplot.AbstractPlotRenderer.int)"},"status":-2},{"failures":[0],"tindex":"44f7d247-4c73-11e5-878c-db77a83451e1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.IntSet:62","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,31,32,32,33,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182],"tindex":"44f7d248-4c73-11e5-878c-617a571dbfe5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:679","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.readFully(byte[], 0, 12)"},"status":-1},{"failures":[],"tindex":"44f7d249-4c73-11e5-878c-3dfe07c50fec","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:518","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.assertNotStarted()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:308","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : java.util.Collection<org.eclipse.jgit.revwalk.RevCommit>)\n    org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevCommit);"},"status":0},{"failures":[8,9,183,184,185,186,187,188,189,190,191,192,193,194,195,13,196,197,198,199,200],"tindex":"44f7f95a-4c73-11e5-878c-f740b59a0463","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:473","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n    if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n        java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n    \n} else {\n    if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (!(org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored()))) {\n        java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n    } \n}"},"status":-1},{"failures":[201,202],"tindex":"44f7f95b-4c73-11e5-878c-4ff0a8f9c42d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:381","type":"CtWhileImpl","sourcecode":"while (((int == 0) || ((int) <= int)) && (!(org.eclipse.jgit.revwalk.RevCommit.equals(org.eclipse.jgit.revwalk.RevCommit)))) {\n    int int = int;\n    org.eclipse.jgit.revwalk.RevObjectList.Block org.eclipse.jgit.revwalk.RevObjectList.Block = org.eclipse.jgit.revwalk.RevObjectList.Block;\n    while ((int >> (org.eclipse.jgit.revwalk.RevObjectList.Block.int)) >= (org.eclipse.jgit.revwalk.RevObjectList.int)) {\n        org.eclipse.jgit.revwalk.RevObjectList.Block = new org.eclipse.jgit.revwalk.RevObjectList.Block(((org.eclipse.jgit.revwalk.RevObjectList.Block.int) + (org.eclipse.jgit.revwalk.RevObjectList.int)));\n        org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][0] = org.eclipse.jgit.revwalk.RevObjectList.Block;\n        org.eclipse.jgit.revwalk.RevObjectList.Block = org.eclipse.jgit.revwalk.RevObjectList.Block;\n    }\n    while ((org.eclipse.jgit.revwalk.RevObjectList.Block.int) > 0) {\n        final int int = int >> (org.eclipse.jgit.revwalk.RevObjectList.Block.int);\n        int -= int << (org.eclipse.jgit.revwalk.RevObjectList.Block.int);\n        if ((org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][int]) == null)\n            org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][int] = new org.eclipse.jgit.revwalk.RevObjectList.Block(((org.eclipse.jgit.revwalk.RevObjectList.Block.int) - (org.eclipse.jgit.revwalk.RevObjectList.int)));\n        \n        org.eclipse.jgit.revwalk.RevObjectList.Block = ((org.eclipse.jgit.revwalk.RevObjectList.Block)(org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][int]));\n    }\n    final java.lang.Object[] java.lang.Object[] = org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[];\n    while ((((int == 0) || ((int) <= int)) && (int < (org.eclipse.jgit.revwalk.RevObjectList.int))) && (!(org.eclipse.jgit.revwalk.RevCommit.equals(org.eclipse.jgit.revwalk.RevCommit)))) {\n        org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.next();\n        if (org.eclipse.jgit.revwalk.RevCommit == null) {\n            org.eclipse.jgit.revwalk.RevWalk = null;\n            return ;\n        } \n        org.eclipse.jgit.revwalk.RevCommitList<E>.enter((int)++, ((E)(org.eclipse.jgit.revwalk.RevCommit)));\n        java.lang.Object[][int++] = org.eclipse.jgit.revwalk.RevCommit;\n    }\n}"},"status":-1},{"failures":[],"tindex":"44f7f95c-4c73-11e5-878c-1b15d313f5a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:89","type":"CtAssignmentImpl","sourcecode":"int = (int + 1) & int"},"status":-2},{"failures":[],"tindex":"44f7f95d-4c73-11e5-878c-8b273986d1d7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions:130","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.min(long, (long / 4))"},"variableMap":{"sft":"expectedCRC","maxMem":"expectedCRC"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:474","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":-2},{"failures":[],"tindex":"44f7f95e-4c73-11e5-878c-757add289fce","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:577","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[20]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:395","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.eclipse.jgit.lib.Constants.int]"},"status":-2},{"failures":[203,204,205,206,207,208,209,210,211],"tindex":"44f8206f-4c73-11e5-878c-c3028e0e9aab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:295","type":"CtOperatorAssignmentImpl","sourcecode":"int += (org.eclipse.jgit.lib.Constants.int) + 1"},"status":-1},{"failures":[212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,1,253,254,255,3,4,7,8,9,10,256,11,257,73,76,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280],"tindex":"44fe13e0-4c73-11e5-878c-0532b22baf25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1052","type":"CtIfImpl","sourcecode":"if ((';' == char) || ('#' == char)) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = java.lang.String.valueOf(char);\n} else if (((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null) && (java.lang.Character.isWhitespace(char))) {\n    if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null)\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n    \n    org.eclipse.jgit.lib.ConfigLine.java.lang.String += char;\n} else if ('[' == char) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readSectionName(org.eclipse.jgit.lib.Config.StringReader);\n    int = org.eclipse.jgit.lib.Config.StringReader.read();\n    if ('\\\"' == int) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, true, '\\\"');\n        int = org.eclipse.jgit.lib.Config.StringReader.read();\n    } \n    if (']' != int)\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n} else if (org.eclipse.jgit.lib.ConfigLine != null) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n    org.eclipse.jgit.lib.Config.StringReader.reset();\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readKeyName(org.eclipse.jgit.lib.Config.StringReader);\n    if (org.eclipse.jgit.lib.ConfigLine.java.lang.String.endsWith(\"\\n\")) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String.substring(0, ((org.eclipse.jgit.lib.ConfigLine.java.lang.String.length()) - 1));\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.java.lang.String;\n    } else\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, false, -1);\n    \n} else\n    throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-1},{"failures":[],"tindex":"44feb021-4c73-11e5-878c-41471c525b73","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:409","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= 4"},"variableMap":{"sz":"beginB"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:280","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.diff.Edit.int = int"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}