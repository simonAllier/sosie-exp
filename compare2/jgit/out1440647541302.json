{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":83,"org.eclipse.jgit.api.RmCommandTest.testRemove":168,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":28,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":382,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":317,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":288,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":390,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":273,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":125,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":52,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":104,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":376,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":368,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":445,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwice":409,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":3,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":25,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked":141,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit":126,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict":503,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":442,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":119,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":482,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":151,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":75,"org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet":272,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":90,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":314,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":407,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":157,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":74,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":73,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":327,"org.eclipse.jgit.transport.PacketLineInTest.testReadString_Len0004":510,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":20,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127":501,"org.eclipse.jgit.api.AddCommandTest.testAddRemovedFile":411,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":282,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":103,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":239,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":240,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":417,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":123,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":428,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":236,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":237,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":238,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":130,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":468,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":26,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted":132,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":483,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":40,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":61,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":509,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":14,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":303,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":457,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":297,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":369,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObjectTree_pruned":23,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":47,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":344,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":112,"org.eclipse.jgit.api.RmCommandTest.testRemoveCached":167,"org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits":109,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":243,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":244,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":245,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":395,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":378,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":394,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":329,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":360,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":241,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":45,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":242,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":66,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeleted":128,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":216,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":384,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":218,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":217,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":220,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":219,"org.eclipse.jgit.api.GitConstructionTest.testClose":4,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":295,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":398,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":268,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":392,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":41,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":15,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":165,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":95,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":316,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":68,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile":169,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":29,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":79,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine":413,"org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo":418,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":247,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":380,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":142,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":248,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":249,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":92,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":250,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject":1,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":435,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":246,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":429,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":10,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":212,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":211,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":214,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":213,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":215,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":406,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":363,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":469,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":78,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":86,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":500,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":441,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":267,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":264,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":464,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":263,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":265,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":262,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":261,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":150,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":408,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":133,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":506,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":349,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree":505,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":16,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":274,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":62,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":206,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":208,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":207,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":210,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":209,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":305,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":385,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":377,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":122,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":379,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":161,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":450,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":76,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":37,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":335,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":291,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":289,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":362,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":372,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":460,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":139,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":9,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":196,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":118,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":284,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":461,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":39,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":440,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":393,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":487,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":485,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":7,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":155,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":202,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":201,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":204,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":203,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":71,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":53,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":205,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":80,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":310,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":430,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":70,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":315,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":370,"org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree":110,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":164,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":399,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit":422,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":33,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":17,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":499,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":466,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":290,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":163,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":192,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":191,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":345,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":102,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":286,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFile":426,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":484,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":313,"org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile":416,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":89,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":444,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":198,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":13,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":35,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":197,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":200,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":199,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":129,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":447,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":221,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":324,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":223,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":222,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":225,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":224,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":323,"org.eclipse.jgit.api.AddCommandTest.testAddNonExistingSingleFile":425,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":51,"org.eclipse.jgit.transport.PushProcessTest.testPushResult":0,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":59,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":106,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":508,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":347,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":100,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":60,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":355,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":467,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":99,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":88,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":186,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedObjects_onlyExpiredPruned":24,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":188,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":434,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":187,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":299,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":383,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":172,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":173,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":174,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":175,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":176,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":433,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":318,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":194,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":193,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":195,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":490,"org.eclipse.jgit.api.AddCommandTest.testAddFolder":421,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":63,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":454,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":6,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":436,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":19,"org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles":420,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified":140,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":432,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":470,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":143,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":365,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":269,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":182,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_a":181,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d":184,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":183,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":465,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":120,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":475,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":478,"org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned":21,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":84,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned":27,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":190,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":189,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":459,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":116,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":149,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":44,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":93,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":134,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":81,"org.eclipse.jgit.api.CleanCommandTest.testClean":304,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":448,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":91,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":400,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":328,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":292,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":94,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":306,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c":178,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":127,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_b":177,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":452,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e":180,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d":179,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":489,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":8,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":271,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":285,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":121,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":135,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":159,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":476,"org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged":415,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":326,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile":424,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":42,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":148,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":397,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":185,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":477,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":481,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":419,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId":170,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":439,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":309,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":154,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":137,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":138,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":296,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":396,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":325,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":343,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":283,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":498,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":348,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":456,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":455,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":401,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":333,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":293,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch":371,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":166,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":311,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":301,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":108,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":352,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":353,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":386,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":332,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":231,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":11,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":235,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":388,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":114,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":234,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":474,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":233,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":232,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":493,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":30,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":446,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":494,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":358,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":449,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored":115,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":381,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":117,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":280,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":361,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":156,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":331,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":12,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":473,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":387,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":38,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":77,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":147,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":18,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":322,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":321,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":471,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":87,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":346,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":373,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":160,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":124,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":49,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":491,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":453,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":330,"org.eclipse.jgit.api.BlameCommandTest.testRename":351,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":334,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits":111,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":431,"org.eclipse.jgit.lib.IndexDiffTest.testModified":479,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":226,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":366,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":227,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":228,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":229,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":230,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":34,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":255,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":486,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":251,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":252,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":101,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":253,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":480,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":254,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":497,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":437,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":312,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":82,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":495,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":350,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":342,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":367,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":403,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":404,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine":427,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":153,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":43,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":443,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":463,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":410,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":278,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":113,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":259,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":260,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":357,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":472,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":279,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":256,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":65,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":257,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":64,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":258,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":375,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":50,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset":502,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":364,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":402,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":72,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":287,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":374,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":336,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":319,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileInSubDir":414,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":354,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged":171,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":405,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":97,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":356,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":462,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":458,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":277,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":36,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":294,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":276,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":96,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":266,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":281,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":340,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":341,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":337,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":338,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":300,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":339,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":270,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":307,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":391,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":298,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":359,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":162,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObject_pruned":22,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":492,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":67,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":46,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":145,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne":504,"org.eclipse.jgit.api.AddCommandTest.testAddIgnoredFile":423,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":275,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":69,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":32,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":451,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":58,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":131,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":5,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":107,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":496,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":31,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":438,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":507,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":158,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":146,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":48,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":54,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":56,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":57,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":98,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":152,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit":105,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":85,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":488,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":308,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":136,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":144,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":412,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":389,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":302,"org.eclipse.jgit.api.RevertCommandTest.testRevert":320,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":55},"transformations":[{"failures":[0],"tindex":"04f95d3f-4c6f-11e5-8ac5-3547dc6379e2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:664","type":"CtInvocationImpl","sourcecode":"java.lang.System.runFinalization()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushProcess:156","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PushResult.setAdvertisedRefs(org.eclipse.jgit.transport.Transport.getURI(), org.eclipse.jgit.transport.PushConnection.getRefsMap())"},"status":-1},{"failures":[1],"tindex":"04f98450-4c6f-11e5-8ac5-cb7a8adaebc5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:206","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\".pack\"))\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - (\".pack\".length())));\n"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"04f98451-4c6f-11e5-8ac5-81d830ffe23b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:2360","type":"CtReturnImpl","sourcecode":"return ((((long) + (long)) + (long)) + (long)) + (long)"},"variableMap":{"timeWriting":"count","timeCompressing":"count","timeSearchingForReuse":"count","timeSearchingForSizes":"count","timeCounting":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackOutputStream:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"04f9ab62-4c6f-11e5-8ac5-d9ae0c5f8689","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:247","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.notes.InMemoryNoteBucket.org.eclipse.jgit.notes.NonNoteEntry = org.eclipse.jgit.notes.NonNoteEntry"},"variableMap":{"r":"base","nonNotes":"nonNotes"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMapMerger:169","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.notes.InMemoryNoteBucket.org.eclipse.jgit.notes.NonNoteEntry = org.eclipse.jgit.notes.NoteMapMerger.mergeNonNotes(org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.nonNotes(org.eclipse.jgit.notes.InMemoryNoteBucket), org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.nonNotes(org.eclipse.jgit.notes.InMemoryNoteBucket), org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.nonNotes(org.eclipse.jgit.notes.InMemoryNoteBucket))"},"status":-2},{"failures":[20,21,22,23,24,25,26,27,12,28,13],"tindex":"04f9ab63-4c6f-11e5-8ac5-9bfc4491f786","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommit:127","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revplot.PlotCommit.getId().equals(org.eclipse.jgit.revplot.PlotCommit.getId()))\n    return ;\n"},"variableMap":{"c":"ro","pc":"ro"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:452","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.revwalk.RevObject != null) {\n    if ((java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>.remove(org.eclipse.jgit.revwalk.RevObject.getId())) != null)\n        if (java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>.isEmpty())\n            return ;\n        \n    \n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.ObjectWalk.next();\n}"},"status":-1},{"failures":[],"tindex":"04f9ab64-4c6f-11e5-8ac5-a57af713b1fa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getGlobalListenerList().dispatch(new org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:198","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    java.lang.System.arraycopy(byte[], int, byte[], int, int);\n    int += int;\n    int += int;\n} else {\n    throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"04f9d275-4c6f-11e5-8ac5-afb7590d2d94","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:152","type":"CtLocalVariableImpl","sourcecode":"int int = (byte[][int++]) & 255"},"variableMap":{"raw":"b","ptr":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:1074","type":"CtLocalVariableImpl","sourcecode":"final int int = byte[].int"},"status":-2},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"04f9d276-4c6f-11e5-8ac5-e9256f5c5299","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:464","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n    return false;\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:487","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[96,97,98],"tindex":"04f9d277-4c6f-11e5-8ac5-632403049cac","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:563","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.GC.prunePacked()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:557","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<org.eclipse.jgit.lib.ObjectId>.isEmpty())) {\n    org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile = org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriter.ObjectIdSet>);\n    if (org.eclipse.jgit.internal.storage.file.PackFile != null)\n        java.util.List<org.eclipse.jgit.internal.storage.file.PackFile>.add(org.eclipse.jgit.internal.storage.file.PackFile);\n    \n} "},"status":-1},{"failures":[99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,42,274,275,276,43,277,44,45,278,46,279,280,48,281,49,50,282,283,51,52,284,285,286,30,287,288,289,32,290,291,34,35,292,36,293,37,38,39,294,295,40,296,297,298,299,41,300,301,302,303,304,305,306,307,308,309,310,311,312,2,3,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,54,55,56,57,406,58,59,407,408,60,61,62,63,64,65,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,83,84,429,430,85,86,431,88,89,432,90,66,67,68,69,433,434,70,71,435,72,436,437,438,439,440,73,74,441,75,442,76,77,443,444,445,446,447,448,78,449,450,451,452,453,454,455,456,79,457,458,459,80,81,460,461,462,463,82,464,465,466,467,468,469,470,471,472,473,474,475,93,476,477,94,478,479,95,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500],"tindex":"04f9d278-4c6f-11e5-8ac5-3ba210ca0022","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportAmazonS3:271","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : java.util.HashSet<java.lang.String>) {\n    if ((!(java.lang.String.startsWith(\"pack-\"))) || (!(java.lang.String.endsWith(\".pack\"))))\n        continue;\n    \n    final java.lang.String java.lang.String = (java.lang.String.substring(0, ((java.lang.String.length()) - 5))) + \".idx\";\n    if (java.util.HashSet<java.lang.String>.contains(java.lang.String))\n        java.util.Collection<java.lang.String>.add(java.lang.String);\n    \n}"},"variableMap":{"have":"filepatterns","packs":"filepatterns"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddCommand:141","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.dircache.DirCache = org.eclipse.jgit.lib.Repository.lockDirCache();\n    org.eclipse.jgit.dircache.DirCacheIterator org.eclipse.jgit.dircache.DirCacheIterator;\n    org.eclipse.jgit.dircache.DirCacheBuilder org.eclipse.jgit.dircache.DirCacheBuilder = org.eclipse.jgit.dircache.DirCache.builder();\n    final org.eclipse.jgit.treewalk.TreeWalk org.eclipse.jgit.treewalk.TreeWalk = new org.eclipse.jgit.treewalk.TreeWalk(org.eclipse.jgit.lib.Repository);\n    org.eclipse.jgit.treewalk.TreeWalk.addTree(new org.eclipse.jgit.dircache.DirCacheBuildIterator(org.eclipse.jgit.dircache.DirCacheBuilder));\n    if ((org.eclipse.jgit.treewalk.WorkingTreeIterator) == null)\n        org.eclipse.jgit.treewalk.WorkingTreeIterator = new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository);\n    \n    org.eclipse.jgit.treewalk.TreeWalk.addTree(org.eclipse.jgit.treewalk.WorkingTreeIterator);\n    org.eclipse.jgit.treewalk.TreeWalk.setRecursive(true);\n    if (!boolean)\n        org.eclipse.jgit.treewalk.TreeWalk.setFilter(org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(java.util.Collection<java.lang.String>));\n    \n    java.lang.String java.lang.String = null;\n    while (org.eclipse.jgit.treewalk.TreeWalk.next()) {\n        java.lang.String java.lang.String = org.eclipse.jgit.treewalk.TreeWalk.getPathString();\n        org.eclipse.jgit.treewalk.WorkingTreeIterator org.eclipse.jgit.treewalk.WorkingTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(1, org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator);\n        if ((((org.eclipse.jgit.treewalk.TreeWalk.getTree(0, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator)) == null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator != null)) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored())) {\n        } else if (!(java.lang.String.equals(java.lang.String))) {\n            if (!((boolean) && ((org.eclipse.jgit.treewalk.TreeWalk.getTree(0, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator)) == null))) {\n                org.eclipse.jgit.dircache.DirCacheIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(0, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator);\n                if (org.eclipse.jgit.treewalk.WorkingTreeIterator != null) {\n                    long long = org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLength();\n                    org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(java.lang.String);\n                    if (((org.eclipse.jgit.dircache.DirCacheIterator == null) || ((org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry()) == null)) || (!(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry().isAssumeValid()))) {\n                        org.eclipse.jgit.lib.FileMode org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.treewalk.WorkingTreeIterator.getIndexFileMode(org.eclipse.jgit.dircache.DirCacheIterator);\n                        org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.lib.FileMode);\n                        if ((org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode) != org.eclipse.jgit.lib.FileMode) {\n                            org.eclipse.jgit.dircache.DirCacheEntry.setLength(long);\n                            org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLastModified());\n                            long long = org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryContentLength();\n                            java.io.InputStream java.io.InputStream = org.eclipse.jgit.treewalk.WorkingTreeIterator.openEntryStream();\n                            try {\n                                org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.Constants.int, long, java.io.InputStream));\n                            } finally {\n                                java.io.InputStream.close();\n                            }\n                        } else\n                            org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryObjectId());\n                        \n                        org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry);\n                        java.lang.String = java.lang.String;\n                    } else {\n                        org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry());\n                    }\n                } else if ((org.eclipse.jgit.dircache.DirCacheIterator != null) && ((!(boolean)) || ((org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode) == (org.eclipse.jgit.dircache.DirCacheIterator.getEntryFileMode()))))\n                    org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry());\n                \n            } \n        } \n    }\n    org.eclipse.jgit.lib.ObjectInserter.flush();\n    org.eclipse.jgit.dircache.DirCacheBuilder.commit();\n    org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.dircache.DirCache>.setCallable(false);\n} catch (java.io.IOException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.io.IOException);\n} finally {\n    org.eclipse.jgit.lib.ObjectInserter.release();\n    if (org.eclipse.jgit.dircache.DirCache != null)\n        org.eclipse.jgit.dircache.DirCache.unlock();\n    \n}"},"status":-1},{"failures":[501,502,503,504,505,506,507,266,86,88,467,508,509,480],"tindex":"04fa2099-4c6f-11e5-8ac5-5f1535c8cb45","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:318","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 3"},"variableMap":{"nextMode":"nextSubtreePos"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:253","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"04fa209a-4c6f-11e5-8ac5-9f108e943fe1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:548","type":"CtInvocationImpl","sourcecode":"java.lang.System.exit(1)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.LogCommand:133","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<java.lang.Iterable<org.eclipse.jgit.revwalk.RevCommit>>.checkCallable()"},"status":-1},{"failures":[],"tindex":"04fa209b-4c6f-11e5-8ac5-a70e8fb898d9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:356","type":"CtTryImpl","sourcecode":"try {\n    java.io.OutputStream.flush();\n} catch (java.io.IOException e) {\n}"},"variableMap":{"msgOut":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackConnection:290","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.close()"},"status":0},{"failures":[510],"tindex":"04fa209c-4c6f-11e5-8ac5-ef5b37bc42d2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.FooterLine:142","type":"CtIfImpl","sourcecode":"if ((int) < int)\n    return null;\n"},"variableMap":{"gt":"len","valEnd":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PacketLineIn:143","type":"CtIfImpl","sourcecode":"if (int == 0)\n    return \"\";\n"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}