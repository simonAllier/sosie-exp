{"failureDictionary":{"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":132,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":5,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":630,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":619,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":196,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":443,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":79,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":116,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":150,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":45,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":131,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":342,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":539,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":126,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":363,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":23,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting":642,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":206,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":580,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit":541,"org.eclipse.jgit.lib.T0001_PersonIdentTest.test001_NewIdent":585,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":436,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles":107,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":479,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":518,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":597,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":502,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":44,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":121,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit":540,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":473,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":35,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":635,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":19,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":384,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":472,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":105,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":545,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":3,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":18,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":440,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":188,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":470,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":469,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":95,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":222,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":521,"org.eclipse.jgit.util.ChangeIdUtilTest.testId":556,"org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges":618,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit":546,"org.eclipse.jgit.api.BranchCommandTest.testDelete":227,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":360,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":517,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NonFooterAndBugAndSob":570,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":139,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":314,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":315,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":4,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":594,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":311,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":312,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":313,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":544,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":109,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":69,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":113,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":36,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":173,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":240,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":129,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":184,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":496,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":583,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLine":565,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":175,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch":104,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":437,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":354,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":398,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":29,"org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits":27,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":590,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":318,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":319,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":84,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":320,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":83,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":209,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":97,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":428,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":316,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":317,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":350,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":453,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":291,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":198,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":293,"org.eclipse.jgit.util.ChangeIdUtilTest.testKernelStyleFooter":557,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":62,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":292,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":601,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":39,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":295,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":63,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":127,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":294,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":68,"org.eclipse.jgit.api.GitConstructionTest.testClose":212,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":172,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":87,"org.eclipse.jgit.api.RebaseCommandTest.testAuthorScriptConverter":588,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":81,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":178,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":137,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithSignedOffBy":563,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting":639,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":57,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":442,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly":155,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":455,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":43,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":223,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":495,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":60,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":185,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":225,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":247,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches":413,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":211,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":322,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":323,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":374,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":324,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":325,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":606,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":461,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":7,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt":194,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":321,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":627,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead":640,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":287,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":286,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":289,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":288,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":290,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag":216,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":235,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":228,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":431,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":70,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":485,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":11,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":31,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":514,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":535,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":471,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":33,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":30,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":339,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":507,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":338,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":340,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":337,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":336,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":382,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementWithChangeIdInCommitMessage":550,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":140,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":238,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBug_NonFooterLineAndSob":572,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":600,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":153,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod":587,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":187,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":402,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":249,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":344,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":612,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":120,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":241,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":281,"org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart":218,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":283,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":282,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":219,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":285,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":284,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":1,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":226,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":199,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":208,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":538,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":122,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":605,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":210,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":193,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAfterBugOrIssue":559,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":488,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":474,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":110,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":168,"org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder":143,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":160,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommit":569,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":156,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":201,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":430,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":501,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":418,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":645,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":271,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":424,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":503,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":170,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":468,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":510,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":82,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":75,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":614,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":59,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":421,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":277,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":276,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":47,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":279,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":581,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":278,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":119,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":460,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":280,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":364,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":8,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":499,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":459,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":414,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":441,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":48,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":438,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":519,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":246,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":147,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":136,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLineNoLineBreak":566,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":37,"org.eclipse.jgit.api.GitConstructionTest.testWrap":214,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":88,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteNotFound":632,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugEmptyLineAndSob":575,"org.eclipse.jgit.api.TagCommandTest.testTagging":141,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":159,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":534,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":64,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":66,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":628,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":158,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":135,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":267,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":266,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":548,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":42,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":426,"org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging":145,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":372,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":613,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":439,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":516,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":15,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":478,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":273,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":163,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":272,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":412,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":275,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":40,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":274,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":9,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAlreadySetWithReplacement":560,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":604,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":482,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":543,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessages":568,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":51,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":92,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":296,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":298,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":297,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":300,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":91,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":299,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":362,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":383,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":24,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":237,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii":595,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":400,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":32,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":239,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":67,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":449,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":20,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":483,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommitWithSob_ButNoBody":554,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":14,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":261,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":263,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":458,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":262,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":177,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":481,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":197,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":250,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":117,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":251,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":22,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":252,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":253,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":254,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":457,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":224,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":444,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":269,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":268,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":270,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":523,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":644,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":217,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":149,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":242,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":492,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":463,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":17,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":71,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":375,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":161,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":387,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":433,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":365,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NoBodySobAndBug":574,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":34,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d":259,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":258,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":508,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":537,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":124,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":647,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":123,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":611,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":6,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":609,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":265,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":264,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":498,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":381,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible":180,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":49,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":349,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":53,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":41,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":547,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":165,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":500,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":536,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":484,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":89,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":602,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":128,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":620,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":96,"org.eclipse.jgit.util.ChangeIdUtilTest.testTimeAltersId":555,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":164,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":56,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":422,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c":255,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":490,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":542,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e":257,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d":256,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":617,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":425,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":54,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":191,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacement":576,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":94,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":343,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":86,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":380,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":55,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":58,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":260,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":74,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":466,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":419,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugBrackersAndSob":549,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":174,"org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs":607,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":85,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":370,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":527,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":93,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":397,"org.eclipse.jgit.api.NotesCommandTest.testListNotes":416,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":361,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":533,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":401,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":494,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":493,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":90,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":390,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":106,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":133,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":125,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":603,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":38,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":167,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists":643,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":389,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":138,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":367,"org.eclipse.jgit.util.ChangeIdUtilTest.testWithEndingURL":567,"org.eclipse.jgit.util.ChangeIdUtilTest.testFirstParentAltersId":558,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":181,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":26,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":405,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":406,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":200,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":103,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":202,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":114,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":306,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":77,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":310,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":309,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":599,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":610,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":308,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":307,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":634,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":528,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":146,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":480,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":529,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":452,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":486,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":182,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":624,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":195,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":589,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":355,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":591,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":245,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":417,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime":189,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":429,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":100,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":423,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":130,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":248,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":411,"org.eclipse.jgit.util.ChangeIdUtilTest.testATwoLines":552,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":76,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":169,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":475,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":379,"org.eclipse.jgit.util.ChangeIdUtilTest.testOneliner":551,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":448,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":447,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":72,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":118,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":12,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":399,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessagesWithSignedOffBy":562,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":637,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat":593,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead":636,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":203,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":192,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":358,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":525,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":491,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":522,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":98,"org.eclipse.jgit.api.BlameCommandTest.testRename":404,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":108,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits":28,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":13,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixNameExists":631,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":301,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":434,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":302,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":303,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":304,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":50,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":305,"org.eclipse.jgit.api.FetchCommandTest.testFetch":368,"org.eclipse.jgit.util.ChangeIdUtilTest.testDirCacheAltersId":578,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":641,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":467,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":162,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":330,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":615,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":326,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":327,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":328,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":329,"org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits":621,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":532,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":464,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":46,"org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName":99,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":506,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugLineWithASpaceAndSob":561,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":530,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithBug_SubButNoBody":577,"org.eclipse.jgit.internal.storage.file.ReflogWriterTest.shouldFilterLineFeedFromMessage":596,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":403,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":582,"org.eclipse.jgit.api.BranchCommandTest.testCreateAndList":221,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToNullCommit":61,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":396,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":476,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":435,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":409,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":410,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly":638,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":646,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":633,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":386,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations":623,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":207,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":347,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":477,"org.eclipse.jgit.api.PushCommandTest.testPush":511,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":505,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":351,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":52,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":598,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":16,"org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint":229,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":334,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":73,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":335,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":451,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":353,"org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir":625,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":331,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":244,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":332,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":102,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":243,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":333,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":186,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithoutFooter":573,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":205,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":487,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":371,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":359,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":388,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":407,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":432,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":148,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":462,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":204,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":513,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":111,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":445,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":408,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":524,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":230,"org.eclipse.jgit.api.GitConstructionTest.testOpen":213,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":450,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":504,"org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit":622,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":497,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":348,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":166,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":171,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":21,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":112,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":346,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii":592,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":415,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":341,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":357,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":394,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":395,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":2,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":369,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":391,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":392,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":629,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":179,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":393,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":366,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":80,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":176,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":427,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":134,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":526,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithSpacesBeforeId":564,"org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName":115,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":454,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":352,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":626,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":579,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":377,"org.eclipse.jgit.lib.RefTest.testReadSymRefToPacked":608,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":345,"org.eclipse.jgit.lib.T0001_PersonIdentTest.test002_NewIdent":584,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":65,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":456,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":586,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":157,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":489,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":236,"org.eclipse.jgit.util.ChangeIdUtilTest.testNoteInMiddle":571,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":509,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":101,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":25,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":152,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":512,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":531,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":151,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":154,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":465,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":190,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":378,"org.eclipse.jgit.util.ChangeIdUtilTest.testOnelinerFollowedByBlank":553,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":142,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":0,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":231,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":356,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit":215,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":233,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":234,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":515,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":520,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":373,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":385,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":10,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":420,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":616,"org.eclipse.jgit.api.TagCommandTest.testDelete":144,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":220,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":376,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":78,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":183,"org.eclipse.jgit.api.RevertCommandTest.testRevert":446,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":232},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,212,213,213,214,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547],"tindex":"3828ead6-4c6d-11e5-b499-8502921b8ca6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectInserter:265","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.io.EOFException(\"Unexpected end of input\");\n"},"variableMap":{"n":"done"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:445","type":"CtIfImpl","sourcecode":"if ((int + 1) < (char[].int)) {\n    switch (char[][(int + 1)]) {\n        case '0' :\n        case '1' :\n        case '2' :\n        case '3' :\n        case '4' :\n        case '5' :\n        case '6' :\n        case '7' :\n        case '8' :\n        case '9' :\n            int int;\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevObject);\n            for (int = int + 1 ; int < (char[].int) ; ++int) {\n                if (!(java.lang.Character.isDigit(char[][int])))\n                    break;\n                \n            }\n            java.lang.String java.lang.String = new java.lang.String(char[] , (int + 1) , ((int - int) - 1));\n            int int;\n            try {\n                int = java.lang.Integer.parseInt(java.lang.String);\n            } catch (java.lang.NumberFormatException e) {\n                throw new org.eclipse.jgit.errors.RevisionSyntaxException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.lang.String);\n            }\n            if (int != 0) {\n                org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n                if (int > (org.eclipse.jgit.revwalk.RevCommit.getParentCount()))\n                    org.eclipse.jgit.revwalk.RevObject = null;\n                else\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent((int - 1));\n                \n            } \n            int = int - 1;\n            int = int;\n            break;\n        case '{' :\n            int int;\n            java.lang.String java.lang.String = null;\n            for (int = int + 2 ; int < (char[].int) ; ++int) {\n                if ((char[][int]) == '}') {\n                    java.lang.String = new java.lang.String(char[] , (int + 2) , ((int - int) - 2));\n                    break;\n                } \n            }\n            int = int;\n            if (java.lang.String != null)\n                if (java.lang.String.equals(\"tree\")) {\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.revwalk.RevObject);\n                } else if (java.lang.String.equals(\"commit\")) {\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevObject);\n                } else if (java.lang.String.equals(\"blob\")) {\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n                    if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevBlob))\n                        throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n                    \n                } else if (java.lang.String.equals(\"\")) {\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n                } else\n                    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                \n            else\n                throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n            \n            int = int;\n            break;\n        default :\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n            if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) {\n                org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n                if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0)\n                    org.eclipse.jgit.revwalk.RevObject = null;\n                else\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n                \n            } else\n                throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n            \n    }\n} else {\n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n    if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) {\n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n        if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0)\n            org.eclipse.jgit.revwalk.RevObject = null;\n        else\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n        \n    } else\n        throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n    \n}"},"status":-1},{"failures":[],"tindex":"38298717-4c6d-11e5-b499-39b807808d70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectId:245","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.InvalidObjectIdException(byte[] , int , org.eclipse.jgit.lib.Constants.int)"},"status":-2},{"failures":[],"tindex":"38298718-4c6d-11e5-b499-274e90be70b5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:263","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.ObjectDirectory.insertPack(org.eclipse.jgit.internal.storage.file.PackFile)"},"status":-2},{"failures":[396,397,548,399,401,402,404,408],"tindex":"38298719-4c6d-11e5-b499-fdf5fae5a174","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Tree:115","type":"CtIfImpl","sourcecode":"if (int < int)\n    return -1;\nelse if (int > int)\n    return 1;\nelse if (int == (int - 1))\n    return 0;\nelse\n    return 1;\n"},"variableMap":{"nameEnd":"idx","lasta":"idx","bk":"idx","k":"idx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameResult:224","type":"CtReturnImpl","sourcecode":"return (int[][int]) - 1"},"status":-1},{"failures":[],"tindex":"3829ae2a-4c6d-11e5-b499-07dc4ebdbb65","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GitDateParser:282","type":"CtIfImpl","sourcecode":"if (((int < 3) || ((int & 1) == 0)) || (!(\"ago\".equals(java.lang.String[][((java.lang.String[].int) - 1)]))))\n    return null;\n"},"variableMap":{"partsLength":"java.util.Calendar.SECOND","parts":"parts","length":"number"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.GitDateParser:308","type":"CtIfImpl","sourcecode":"if ((\"second\".equals(java.lang.String[][(int + 1)])) || (\"seconds\".equals(java.lang.String[][(int + 1)])))\n    java.util.Calendar.add(java.util.Calendar.int, -int);\nelse\n    return null;\n"},"status":-2},{"failures":[0,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,135,136,150,170,173,176,181,189,245,246,247,248,249,410,433,434,438,440,447,459,461,466,468,469,484,485,588,491,492,496,498,506,508,589,590,591,592,593,594,595,596,597],"tindex":"3829ae2b-4c6d-11e5-b499-e550150c412e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:309","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" | \")"},"variableMap":{"sb":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.PersonIdent:262","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(' ')"},"status":-1},{"failures":[],"tindex":"3829ae2c-4c6d-11e5-b499-c38e044a1d6a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:548","type":"CtInvocationImpl","sourcecode":"java.lang.System.exit(1)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedFileHeader:155","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.patch.FileHeader.parseOldName(int, int)"},"status":-1},{"failures":[],"tindex":"3829d53d-4c6d-11e5-b499-c99e322d437d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:333","type":"CtIfImpl","sourcecode":"if ((int[][1]) == (-1))\n    throw new java.lang.ArrayIndexOutOfBoundsException(int);\n"},"variableMap":{"trace":"next","delta":"ae"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:294","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int = int[][(int - (int))];\n    if (int == 0)\n        break TRY_LOCATIONS;\n    \n}"},"status":0},{"failures":[],"tindex":"3829d53e-4c6d-11e5-b499-27235f1b26a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RewriteGenerator:173","type":"CtOperatorAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.int &= ~(org.eclipse.jgit.revwalk.RewriteGenerator.int)"},"status":0},{"failures":[],"tindex":"3829d53f-4c6d-11e5-b499-17d24ccf65cc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.NoteMapMerger:175","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.notes.InMemoryNoteBucket == null)\n    return org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.FanoutBucket;\n"},"variableMap":{"bucket":"bucket","org.eclipse.jgit.notes.NoteMapMerger.EMPTY_FANOUT":"bucket"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMapMerger:177","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.notes.InMemoryNoteBucket instanceof org.eclipse.jgit.notes.FanoutBucket)\n    return ((org.eclipse.jgit.notes.FanoutBucket)(org.eclipse.jgit.notes.InMemoryNoteBucket));\n"},"status":-2},{"failures":[],"tindex":"3829d540-4c6d-11e5-b499-c78aff1a3eff","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.RawText:295","type":"CtReturnImpl","sourcecode":"return \"\\n\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:909","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decodeNoFallback(java.nio.charset.Charset, byte[], int, int)"},"status":-2},{"failures":[],"tindex":"3829fc51-4c6d-11e5-b499-df057cb6b159","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:468","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"variableMap":{"p":"r","l":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:522","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.util.QuotedString.org.eclipse.jgit.util.QuotedString.GitPathStyle.dequote(byte[], int, (int - 1))"},"status":-2},{"failures":[0,598,599,600,601,602,603,604,605,606,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,25,26,27,28,29,607,22,608,31,32,33,34,35,36,38,42,609,43,610,53,54,55,56,611,57,58,612,613,614,615,75,616,617,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,134,135,136,137,138,130,131,132,133,76,77,78,79,80,81,82,83,84,85,86,87,88,618,89,90,116,117,118,119,120,121,122,123,124,125,126,127,128,129,139,140,141,142,143,144,145,146,147,619,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,620,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,195,196,197,198,199,200,187,188,189,190,191,192,193,194,212,212,213,213,214,214,201,202,203,204,205,206,207,208,209,210,211,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,245,246,247,248,249,365,366,367,342,343,344,345,346,347,621,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,622,364,374,375,376,377,378,379,380,381,382,383,384,385,386,368,369,370,371,372,373,387,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,388,389,390,623,407,409,410,411,412,413,414,415,416,417,391,392,393,394,395,396,397,398,548,399,400,401,402,403,404,405,406,408,424,425,426,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,624,502,503,504,505,506,507,508,625,418,419,420,421,422,423,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,427,428,429,430,431,432,433,434,435,436,437,438,449,450,451,452,439,440,441,442,443,444,445,446,447,448,509,510,511,626,627,512,628,629,630,631,632,597,633,634,635,636,637,638,639,640,641,642,520,643,644,513,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,645,646,647],"tindex":"382a2362-4c6d-11e5-b499-79f0d5641a09","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:515","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.internal.storage.file.RefDirectory.resolve(org.eclipse.jgit.lib.Ref, 0, null, null, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>)"},"variableMap":{"ref":"dst","this":"this","packed":"packed"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:726","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.internal.storage.file.RefDirectory.readRef(org.eclipse.jgit.lib.Ref.getName(), org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>)"},"status":-1},{"failures":[],"tindex":"382a4a73-4c6d-11e5-b499-e585e7dae483","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:417","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.cleanUpConflicts()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:667","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser)"},"status":0},{"failures":[],"tindex":"382a4a74-4c6d-11e5-b499-ed7d5fe7da48","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions:85","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(0, int)"},"variableMap":{"deltaBaseCacheLimit":"flags","maxBytes":"flags"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:263","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.eclipse.jgit.internal.storage.pack.ObjectToPack.int"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}