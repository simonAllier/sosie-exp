{"failureDictionary":{"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode":128,"org.eclipse.jgit.nls.NLSTest.testNLSLocale":3,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents":48,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateDisabled":26,"org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartEnd_EmptyLine":72,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile":133,"org.eclipse.jgit.nls.TranslationBundleTest.testGermanTranslation":0,"org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive":124,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_UniqueCommonLargerThanMatchPoint":91,"org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline":123,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":34,"org.eclipse.jgit.patch.EditListTest.testTypes":61,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":14,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":58,"org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartEnd":73,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_Insert2":79,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_InvertBlocks":111,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_ReplaceMiddle":97,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardUnknownObject":21,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile":131,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod":46,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_InsertMiddle":115,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":121,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemoteVsForce":15,"org.eclipse.jgit.transport.PushProcessTest.testUpdateDeleteNonExisting":23,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode":129,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_DeleteMiddle":88,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle":125,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_UniqueCommonLargerThanMatchPoint":110,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_FlipAndExpand":78,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardForced":18,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_InvertBlocks":92,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":27,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_InsertNearCommonTail":89,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":53,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_LinuxBug":101,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":29,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":55,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle":127,"org.eclipse.jgit.diff.EditTest.testExtendB":66,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":44,"org.eclipse.jgit.patch.EditListTest.testFileHeader":63,"org.eclipse.jgit.api.PushCommandTest.testPush":6,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":59,"org.eclipse.jgit.transport.PushProcessTest.testUpdateMixedCases":10,"org.eclipse.jgit.diff.EditTest.testExtendA":65,"org.eclipse.jgit.diff.HistogramDiffTest.testDeleteFile":94,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_DeleteMiddle":107,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":54,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_InsertStart":95,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_ReplaceCommonDelete":81,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":5,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode":132,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":37,"org.eclipse.jgit.diff.MyersDiffTest.testCreateFile":112,"org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartButLastLineNoEol_2":74,"org.eclipse.jgit.diff.EditListTest.testRemove":70,"org.eclipse.jgit.diff.HistogramDiffTest.testExceedsChainLength_DuringScanOfB":76,"org.eclipse.jgit.diff.HistogramDiffTest.testExceedsChainLength_DuringScanOfA":75,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":41,"org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartButLastLineNoEol":71,"org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline":122,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":19,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_InsertMiddle":96,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_incompleteAuthorAndCommitter":47,"org.eclipse.jgit.diff.HistogramDiffTest.testCreateFile":93,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_DeleteEnd":84,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LcsContainsUnique":80,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":40,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_InsertsIntoMidPosition":85,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_CommonReplaceCommonDeleteCommon":99,"org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100":130,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":45,"org.eclipse.jgit.diff.EditTest.testBeforeAfterCuts":67,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_InsertsIntoMidPosition":104,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":43,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_DuplicateAButCommonUniqueInB":87,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_MoveBlock":86,"org.eclipse.jgit.transport.PushProcessTest.testUpdateDelete":13,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_ReplaceCommonDelete":100,"org.eclipse.jgit.diff.EditListTest.testAddOne":68,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_DeleteStart":109,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode":126,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":31,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_FlipBlocks":77,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":52,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUpToDate":17,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_InsertNearCommonTail":108,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":120,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_MoveBlock":105,"org.eclipse.jgit.diff.MyersDiffTest.testDeleteFile":113,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":35,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_CommonGrowsPrefixAndSuffix":98,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":39,"org.eclipse.jgit.nls.TranslationBundleTest.testNonTranslatedBundle":1,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":38,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_CommonReplaceCommonDeleteCommon":118,"org.eclipse.jgit.diff.EditListTest.testAddTwo":69,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":119,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":32,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":30,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_DeleteStart":90,"org.eclipse.jgit.diff.EditTest.testEquals1":64,"org.eclipse.jgit.api.GitConstructionTest.testClose":50,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":7,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_InsertEnd":102,"org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk":134,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_InsertStart":114,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":42,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":36,"org.eclipse.jgit.transport.PushProcessTest.testPushResult":20,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemote":11,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":4,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":9,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":24,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_InsertEnd":83,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":16,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForward":22,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LinuxBug":82,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_DeleteEnd":103,"org.eclipse.jgit.nls.NLSTest.testParallelThreadsWithDifferentLocales":2,"org.eclipse.jgit.patch.EditListTest.testHunkHeader":62,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":51,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":57,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":8,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_DuplicateAButCommonUniqueInB":106,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_ReplaceMiddle":116,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked":56,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_CommonGrowsPrefixAndSuffix":117,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateOnReject":12,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":60,"org.eclipse.jgit.transport.PushProcessTest.testUpdateCreateRef":25,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat":49,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":33,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":28},"transformations":[{"failures":[0,1,2,3],"tindex":"c05a18b1-4c51-11e5-9720-5fa6197ecbf3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.SystemReader:247","type":"CtReturnImpl","sourcecode":"return java.util.Locale.getDefault()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.nls.TranslationBundle:132","type":"CtReturnImpl","sourcecode":"return java.util.Locale"},"status":-1},{"failures":[],"tindex":"c05a18b2-4c51-11e5-9720-8b77b899740d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:240","type":"CtIfImpl","sourcecode":"if (boolean)\n    java.lang.StringBuilder.append(char);\nelse\n    java.lang.StringBuilder.append('\\\\').append('.');\n"},"status":-2},{"failures":[],"tindex":"c05a3fc3-4c51-11e5-9720-81c66bc6a6b0","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:221","type":"CtTryImpl","sourcecode":"try {\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n    for (org.eclipse.jgit.lib.RebaseTodoLine org.eclipse.jgit.lib.RebaseTodoLine : java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>) {\n        java.lang.StringBuilder.setLength(0);\n        if (org.eclipse.jgit.lib.RebaseTodoLine.Action.org.eclipse.jgit.lib.RebaseTodoLine.Action.equals(org.eclipse.jgit.lib.RebaseTodoLine.org.eclipse.jgit.lib.RebaseTodoLine.Action))\n            java.lang.StringBuilder.append(org.eclipse.jgit.lib.RebaseTodoLine.getComment());\n        else {\n            java.lang.StringBuilder.append(org.eclipse.jgit.lib.RebaseTodoLine.getAction().toToken());\n            java.lang.StringBuilder.append(\" \");\n            java.lang.StringBuilder.append(org.eclipse.jgit.lib.RebaseTodoLine.getCommit().name());\n            java.lang.StringBuilder.append(\" \");\n            java.lang.StringBuilder.append(org.eclipse.jgit.lib.RebaseTodoLine.getShortMessage().trim());\n        }\n        java.lang.StringBuilder.append('\\n');\n        java.io.OutputStream.write(org.eclipse.jgit.lib.Constants.encode(java.lang.StringBuilder.toString()));\n    }\n} finally {\n    java.io.OutputStream.close();\n}"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"c05a3fc4-4c51-11e5-9720-ddc7b4272649","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.Transport:1200","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.transport.PushProcess.execute(org.eclipse.jgit.lib.ProgressMonitor)"},"variableMap":{"pushProcess":"this","monitor":"monitor"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushProcess:149","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.lib.ProgressMonitor.beginTask(org.eclipse.jgit.transport.PushProcess.java.lang.String, org.eclipse.jgit.lib.ProgressMonitor.int);\n    final org.eclipse.jgit.transport.PushResult org.eclipse.jgit.transport.PushResult = new org.eclipse.jgit.transport.PushResult();\n    org.eclipse.jgit.transport.PushConnection = org.eclipse.jgit.transport.Transport.openPush();\n    try {\n        org.eclipse.jgit.transport.PushResult.setAdvertisedRefs(org.eclipse.jgit.transport.Transport.getURI(), org.eclipse.jgit.transport.PushConnection.getRefsMap());\n        org.eclipse.jgit.transport.PushResult.setRemoteUpdates(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>);\n        org.eclipse.jgit.lib.ProgressMonitor.endTask();\n        final java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate> java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate> = org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates();\n        if (org.eclipse.jgit.transport.Transport.isDryRun())\n            org.eclipse.jgit.transport.PushProcess.modifyUpdatesForDryRun();\n        else if (!(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.isEmpty()))\n            org.eclipse.jgit.transport.PushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream);\n        \n    } finally {\n        org.eclipse.jgit.transport.PushConnection.close();\n        org.eclipse.jgit.transport.PushResult.addMessages(org.eclipse.jgit.transport.PushConnection.getMessages());\n    }\n    if (!(org.eclipse.jgit.transport.Transport.isDryRun()))\n        org.eclipse.jgit.transport.PushProcess.updateTrackingRefs();\n    \n    for (final org.eclipse.jgit.transport.RemoteRefUpdate org.eclipse.jgit.transport.RemoteRefUpdate : java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.values()) {\n        final org.eclipse.jgit.transport.TrackingRefUpdate org.eclipse.jgit.transport.TrackingRefUpdate = org.eclipse.jgit.transport.RemoteRefUpdate.getTrackingRefUpdate();\n        if (org.eclipse.jgit.transport.TrackingRefUpdate != null)\n            org.eclipse.jgit.transport.PushResult.add(org.eclipse.jgit.transport.TrackingRefUpdate);\n        \n    }\n    return org.eclipse.jgit.transport.PushResult;\n} finally {\n    org.eclipse.jgit.revwalk.RevWalk.release();\n}"},"status":-1},{"failures":[],"tindex":"c05a3fc5-4c51-11e5-9720-3d03b2c683d3","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.FileMode:135","type":"CtReturnImpl","sourcecode":"return int == 0"},"variableMap":{"modeBits":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:374","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, byte[])) >= 0)\n    return true;\n"},"status":0},{"failures":[28],"tindex":"c05a3fc6-4c51-11e5-9720-3db85a79b38c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:225","type":"CtAssignmentImpl","sourcecode":"this.int = int + (this.int)"},"variableMap":{"beginA":"treeStart","beginB":"ptr","k":"treeStart"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:185","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"c05a66d7-4c51-11e5-9720-b533298637fe","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate:83","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Ref.getLeaf()"},"variableMap":{"dstRef":"newRef"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:289","type":"CtInvocationImpl","sourcecode":"java.util.HashMap<org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.Ref>.put(org.eclipse.jgit.lib.Ref.getObjectId(), org.eclipse.jgit.lib.Ref)"},"status":-2},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"c05a66d8-4c51-11e5-9720-ef2d63aab6ee","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:159","type":"CtAssignmentImpl","sourcecode":"int = ((int << 5) + int) + int"},"variableMap":{"c":"ptr","hash":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:591","type":"CtOperatorAssignmentImpl","sourcecode":"int += 46"},"status":-1},{"failures":[50,4,51,52,53,54,55,56,57,58,59,60],"tindex":"c05a66d9-4c51-11e5-9720-7f6af5316cba","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.RefWriter:171","type":"CtInvocationImpl","sourcecode":"java.io.StringWriter.write(' ')"},"variableMap":{"w":"w"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefWriter:172","type":"CtInvocationImpl","sourcecode":"java.io.StringWriter.write(org.eclipse.jgit.lib.Ref.getName())"},"status":-1},{"failures":[],"tindex":"c05a66da-4c51-11e5-9720-35f08698beb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.GarbageCollectCommand:171","type":"CtIfImpl","sourcecode":"if ((this.java.util.Date) != null)\n    org.eclipse.jgit.internal.storage.file.GC.setExpire(java.util.Date);\n"},"status":0},{"failures":[],"tindex":"c05a66db-4c51-11e5-9720-15339ba30930","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:207","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.LockFile.requireLock()"},"variableMap":{"this":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:608","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCache.requireLocked(org.eclipse.jgit.internal.storage.file.LockFile)"},"status":-2},{"failures":[],"tindex":"c05a66dc-4c51-11e5-9720-c1a7893d77bf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.internal.Strings:226","type":"CtLocalVariableImpl","sourcecode":"char[] char[] = new char[6]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleWriter:216","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[org.eclipse.jgit.lib.Constants.int]"},"status":-2},{"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"c05a8ded-4c51-11e5-9720-db2c4b656e78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.Edit:227","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.eclipse.jgit.diff.Edit) {\n    final org.eclipse.jgit.diff.Edit org.eclipse.jgit.diff.Edit = ((org.eclipse.jgit.diff.Edit)(java.lang.Object));\n    return ((((this.int) == (org.eclipse.jgit.diff.Edit.int)) && ((this.int) == (org.eclipse.jgit.diff.Edit.int))) && ((this.int) == (org.eclipse.jgit.diff.Edit.int))) && ((this.int) == (org.eclipse.jgit.diff.Edit.int));\n} "},"status":-1},{"failures":[],"tindex":"c05a8dee-4c51-11e5-9720-4941a090f736","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.TemporaryBuffer:120","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.util.TemporaryBuffer.Block org.eclipse.jgit.util.TemporaryBuffer.Block = org.eclipse.jgit.util.TemporaryBuffer.last()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:199","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.util.TemporaryBuffer.Block org.eclipse.jgit.util.TemporaryBuffer.Block = org.eclipse.jgit.util.TemporaryBuffer.last()"},"status":0},{"failures":[119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134],"tindex":"c05a8def-4c51-11e5-9720-b35c60c5a5f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:427","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}