{"failureDictionary":{"org.eclipse.jgit.transport.RefSpecTest.testExpandFromDestination_Wildcard":4,"org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart":2,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":10,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation":0,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":9,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":6,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource":1,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":11,"org.eclipse.jgit.api.GitConstructionTest.testClose":5,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":13,"org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror":3,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":12,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":7,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":8},"transformations":[{"failures":[],"tindex":"2eb43ce0-4c40-11e5-97be-c3fd59526627","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:543","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit == null)\n    break SEND_HAVES;\n"},"variableMap":{"c":"target"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:540","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.RefDirectory.putLooseRef(new org.eclipse.jgit.internal.storage.file.RefDirectory.LooseUnpeeled(org.eclipse.jgit.internal.storage.file.FileSnapshot , org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.ObjectId))"},"status":-2},{"failures":[],"tindex":"2eb463f1-4c40-11e5-97be-a7f34ae79b77","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:589","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"2eb463f2-4c40-11e5-97be-ad7ebaebbaf8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:348","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = (java.lang.String + \":\") + java.lang.String"},"variableMap":{"method":"srcName","uri":"srcName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:399","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"2eb463f3-4c40-11e5-97be-b14574c53a3e","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:1188","type":"CtReturnImpl","sourcecode":"return int - 1"},"variableMap":{"end":"idx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:310","type":"CtReturnImpl","sourcecode":"return ((org.eclipse.jgit.diff.HashedSequenceComparator<S>.hash(org.eclipse.jgit.diff.HashedSequence<S>, int)) * -1640562687) >>> (int)"},"status":-2},{"failures":[],"tindex":"2eb463f4-4c40-11e5-97be-eb7e6f732f60","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.TimeoutOutputStream:123","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.util.io.TimeoutOutputStream.beginWrite();\n    java.io.OutputStream.flush();\n} catch (java.io.InterruptedIOException e) {\n    throw org.eclipse.jgit.util.io.TimeoutOutputStream.writeTimedOut();\n} finally {\n    org.eclipse.jgit.util.io.TimeoutOutputStream.endWrite();\n}"},"variableMap":{"dst":"w","this":"w"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:344","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.AnyObjectId.org.eclipse.jgit.lib.AnyObjectId.writeRawInt(java.io.OutputStream, int)"},"status":-2},{"failures":[],"tindex":"2eb463f5-4c40-11e5-97be-f94965c912bf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1061","type":"CtUnaryOperatorImpl","sourcecode":"~int"},"variableMap":{"m":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.IntSet:68","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[5,6,7,8,9,10,11,12],"tindex":"2eb463f6-4c40-11e5-97be-d978985ab04f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker:106","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.eclipse.jgit.revwalk.ObjectWalk.setRevFilter(org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker.org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker.newRevFilter(org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder));\n    while ((org.eclipse.jgit.revwalk.ObjectWalk.next()) != null) {\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n    }\n    org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject;\n    while ((org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.ObjectWalk.nextObject()) != null) {\n        org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.add(org.eclipse.jgit.revwalk.RevObject, org.eclipse.jgit.revwalk.RevObject.getType());\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n    }\n} "},"status":-1},{"failures":[13],"tindex":"2eb463f7-4c40-11e5-97be-b5b79dee6b9d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:405","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<java.lang.String>.clear()"},"variableMap":{"toBeDeleted":"vlst"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteConfig:234","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec : org.eclipse.jgit.transport.RemoteConfig.getPushRefSpecs())\n    java.util.List<java.lang.String>.add(org.eclipse.jgit.transport.RefSpec.toString());"},"status":-1},{"failures":[],"tindex":"2eb48b08-4c40-11e5-97be-1d7273d1a27e","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CherryPickResult:73","type":"CtReturnImpl","sourcecode":"return \"Failed\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:399","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.ignore.internal.Strings.java.util.List<java.lang.String>.get(int)"},"status":-2},{"failures":[],"tindex":"2eb48b09-4c40-11e5-97be-77c5959d4fad","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:104","type":"CtReturnImpl","sourcecode":"return !(org.eclipse.jgit.util.SystemReader.getInstance().isMacOS())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:959","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"2eb48b0a-4c40-11e5-97be-87de6dd3e0da","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:424","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"variableMap":{"dst":"org.eclipse.jgit.patch.CombinedFileHeader.DELETED_FILE_MODE","src":"org.eclipse.jgit.patch.FileHeader.NEW_FILE_MODE","cnt":"ptr","ptr":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedFileHeader:148","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final int int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int);\n    if (org.eclipse.jgit.patch.FileHeader.(org.eclipse.jgit.patch.FileHeader.isHunkHdr(byte[], int, int)) >= 1) {\n        break;\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.FileHeader.parseOldName(int, int);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.FileHeader.parseNewName(int, int);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.CombinedFileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.CombinedFileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.CombinedFileHeader.parseModeLine((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.CombinedFileHeader.parseNewFileMode(int, int);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.CombinedFileHeader.parseDeletedFileMode((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int);\n    } else {\n        break;\n    }\n    int = int;\n}"},"status":-2},{"failures":[],"tindex":"2eb48b0b-4c40-11e5-97be-c58233eee21a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectDatabase:177","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectReader.open(org.eclipse.jgit.lib.AnyObjectId, int)"},"variableMap":{"or":"or","typeHint":"typeHint","objectId":"objectId"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectDatabase:176","type":"CtTryImpl","sourcecode":"try {\n    return org.eclipse.jgit.lib.ObjectReader.open(org.eclipse.jgit.lib.AnyObjectId, int);\n} finally {\n    org.eclipse.jgit.lib.ObjectReader.release();\n}"},"status":0},{"failures":[],"tindex":"2eb48b0c-4c40-11e5-97be-a7f141583017","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:399","type":"CtForImpl","sourcecode":"for (int int = 0 ; (int < int) && (int < int) ; int++ , int++)\n    if ((byte[][int]) != (byte[][int]))\n        return false;\n    "},"variableMap":{"a":"path","aOff":"pathOffset","e":"path","aLen":"pathLen","eLen":"pathLen"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteParser:209","type":"CtTryImpl","sourcecode":"try {\n    for (int int = int ; int < (int) ; int++)\n        org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseHexInt4(byte[][int]);\n    return true;\n} catch (java.lang.ArrayIndexOutOfBoundsException fail) {\n    return false;\n}"},"status":-2},{"failures":[],"tindex":"2eb48b0d-4c40-11e5-97be-df45f5d21f05","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:498","type":"CtIfImpl","sourcecode":"if ((int) == (byte[].int))\n    throw new java.io.IOException();\n"},"variableMap":{"buf":"b","cnt":"o","length":"w3"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:379","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.AnyObjectId.org.eclipse.jgit.lib.AnyObjectId.formatHexByte(byte[], (int + 16), int)"},"status":-2},{"failures":[],"tindex":"2eb4b21e-4c40-11e5-97be-f90177e05bd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.UnionInputStream:171","type":"CtIfImpl","sourcecode":"if (java.io.InputStream == (org.eclipse.jgit.util.io.UnionInputStream.java.io.InputStream)) {\n    return long;\n} else {\n    final int int = java.io.InputStream.read();\n    if (int < 0) {\n        org.eclipse.jgit.util.io.UnionInputStream.pop();\n        if (0 < long)\n            break;\n        \n    } else {\n        long += 1;\n        long -= 1;\n    }\n}"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}