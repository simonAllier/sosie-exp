{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":3,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_18":9,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":32,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_19":10,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule":28,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithMissingSubmodule":20,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":8,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":38,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_12":7,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":50,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":17,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":6,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":25,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":36,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":2,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":47,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":23,"org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules":26,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":45,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":27,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":40,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":34,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":42,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":12,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":35,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule":22,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":51,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":52,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":13,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":44,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":0,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":21,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":43,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":31,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":16,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":24,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":39,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":49,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":11,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":53,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":46,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":18,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":29,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":30,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":33,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":14,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":41,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":48,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":54,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":37,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":15,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":19},"transformations":[{"failures":[],"tindex":"5b16fc78-4c6c-11e5-b044-fba08d36739e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:564","type":"CtLocalVariableImpl","sourcecode":"long long = 12"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:217","type":"CtLocalVariableImpl","sourcecode":"final long long = org.eclipse.jgit.lib.Config.getLong(java.lang.String, java.lang.String, java.lang.String, int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"5b174a99-4c6c-11e5-b044-e909e027a027","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:680","type":"CtIfImpl","sourcecode":"if (((int == 15) && (org.eclipse.jgit.treewalk.WorkingTreeIterator != null)) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode()))) {\n    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, null, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    return ;\n} "},"variableMap":{"f":"f","org.eclipse.jgit.lib.FileMode.TREE":"hMode","name":"name","h":"h","this":"this","ffMask":"ffMask","m":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:596","type":"CtIfImpl","sourcecode":"if (((int & 546) != 0) && ((((int & 15) == 13) || ((int & 240) == 208)) || ((int & 3840) == 3328))) {\n    switch (int) {\n        case 3551 :\n            if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModifiedSubtree_IndexWorkingtree(java.lang.String))) {\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            } else {\n                org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n            }\n            break;\n        case 3581 :\n            org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n            break;\n        case 3853 :\n            org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n            break;\n        case 3583 :\n            if (org.eclipse.jgit.dircache.DirCacheCheckout.equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode))\n                org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n            else\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            \n            break;\n        case 4061 :\n            break;\n        case 3343 :\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n            break;\n        case 3568 :\n        case 253 :\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            break;\n        case 4063 :\n            if (org.eclipse.jgit.dircache.DirCacheCheckout.equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode)) {\n                if (org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexWorkingtree(java.lang.String))\n                    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                else\n                    org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n                \n            } else\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            \n            break;\n        case 4048 :\n            org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n            break;\n        case 4093 :\n            if (org.eclipse.jgit.dircache.DirCacheCheckout.equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode))\n                if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader())))\n                    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                else\n                    org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n                \n            else\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            \n            break;\n        case 223 :\n            if (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModifiedSubtree_IndexWorkingtree(java.lang.String)))\n                org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n            else\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            \n            break;\n        default :\n            org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    }\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"5b1771aa-4c6c-11e5-b044-2b80bc45e753","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:251","type":"CtContinueImpl","sourcecode":"continue"},"status":0},{"failures":[],"tindex":"5b1771ab-4c6c-11e5-b044-451e22bd34ed","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.Transport:930","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && ((java.lang.String.length()) > 0))\n    this.java.lang.String = java.lang.String;\nelse\n    this.java.lang.String = org.eclipse.jgit.transport.RemoteConfig.java.lang.String;\n"},"variableMap":{"org.eclipse.jgit.transport.RemoteConfig.DEFAULT_RECEIVE_PACK":"org.eclipse.jgit.lib.Constants.R_HEADS","optionReceivePack":"org.eclipse.jgit.lib.Constants.R_TAGS"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeMessageFormatter:78","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.List<org.eclipse.jgit.lib.Ref>) {\n    if (org.eclipse.jgit.lib.Ref.getName().startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n        java.util.List<java.lang.String>.add(((\"\\'\" + (org.eclipse.jgit.lib.Repository.shortenRefName(org.eclipse.jgit.lib.Ref.getName()))) + \"\\'\"));\n    else if (org.eclipse.jgit.lib.Ref.getName().startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n        java.util.List<java.lang.String>.add(((\"\\'\" + (org.eclipse.jgit.lib.Repository.shortenRefName(org.eclipse.jgit.lib.Ref.getName()))) + \"\\'\"));\n    else if (org.eclipse.jgit.lib.Ref.getName().startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n        java.util.List<java.lang.String>.add(((\"\\'\" + (org.eclipse.jgit.lib.Repository.shortenRefName(org.eclipse.jgit.lib.Ref.getName()))) + \"\\'\"));\n    else if (org.eclipse.jgit.lib.Ref.getName().equals(org.eclipse.jgit.lib.Ref.getObjectId().getName()))\n        java.util.List<java.lang.String>.add(((\"\\'\" + (org.eclipse.jgit.lib.Ref.getName())) + \"\\'\"));\n    else\n        java.util.List<java.lang.String>.add(org.eclipse.jgit.lib.Ref.getName());\n    \n}"},"status":-2},{"failures":[15],"tindex":"5b185c0c-4c6c-11e5-b044-89136b15643c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommit:208","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revplot.PlotLane[] = org.eclipse.jgit.revplot.PlotCommit.org.eclipse.jgit.revplot.PlotLane[]"},"variableMap":{"org.eclipse.jgit.revplot.PlotCommit.NO_LANES":"forkingOffLanes","forkingOffLanes":"forkingOffLanes"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommit:92","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revplot.PlotLane[] = org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotCommit.addLane(org.eclipse.jgit.revplot.PlotLane, org.eclipse.jgit.revplot.PlotLane[])"},"status":-1},{"failures":[],"tindex":"5b185c0d-4c6c-11e5-b044-67315ce031fe","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.URIish:352","type":"CtIfImpl","sourcecode":"if (((((java.lang.String.length()) >= 3) && ((java.lang.String.charAt(0)) == '/')) && ((java.lang.String.charAt(2)) == ':')) && ((((java.lang.String.charAt(1)) >= 'A') && ((java.lang.String.charAt(1)) <= 'Z')) || (((java.lang.String.charAt(1)) >= 'a') && ((java.lang.String.charAt(1)) <= 'z'))))\n    return java.lang.String.substring(1);\nelse if ((((java.lang.String != null) && ((java.lang.String.length()) >= 2)) && ((java.lang.String.charAt(0)) == '/')) && ((java.lang.String.charAt(1)) == '~'))\n    return java.lang.String.substring(1);\nelse\n    return java.lang.String;\n"},"variableMap":{"p":"org.eclipse.jgit.lib.Constants.TYPE_TREE","s":"org.eclipse.jgit.lib.Constants.TYPE_TREE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Constants:418","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Constants.java.lang.String"},"status":-2},{"failures":[],"tindex":"5b18831e-4c6c-11e5-b044-252f1c938398","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:160","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.eclipse.jgit.revwalk.MergeBaseGenerator.int"},"variableMap":{"org.eclipse.jgit.revwalk.MergeBaseGenerator.MERGE_BASE":"beginB","carry":"beginB"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SequenceComparator:119","type":"CtUnaryOperatorImpl","sourcecode":"(org.eclipse.jgit.diff.Edit.int)++"},"status":-2},{"failures":[],"tindex":"5b18831f-4c6c-11e5-b044-0b1c5443cde1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:379","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.revwalk.RevTag org.eclipse.jgit.revwalk.RevTag = ((org.eclipse.jgit.revwalk.RevTag)(org.eclipse.jgit.revwalk.RevObject))"},"variableMap":{"obj":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:336","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevTag org.eclipse.jgit.revwalk.RevTag = ((org.eclipse.jgit.revwalk.RevTag)(org.eclipse.jgit.revwalk.RevObject))"},"status":0},{"failures":[],"tindex":"5b18aa30-4c6c-11e5-b044-47c2adc15db6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:1006","type":"CtAssignmentImpl","sourcecode":"int = (byte[][int++]) & 255"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"5b18d141-4c6c-11e5-b044-c95f6da81333","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:782","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String.length())"},"variableMap":{"p":"path","org.eclipse.jgit.internal.storage.file.RefDirectory.PACKED_REFS_HEADER":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:556","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.treewalk.TreeWalk.getPathString()"},"status":-1},{"failures":[50,51,52,53,54],"tindex":"5b18d142-4c6c-11e5-b044-3982181aa33f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.Status:134","type":"CtReturnImpl","sourcecode":"return java.util.Collections.unmodifiableSet(org.eclipse.jgit.lib.IndexDiff.getMissing())"},"variableMap":{"diff":"diff"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.Status:118","type":"CtReturnImpl","sourcecode":"return java.util.Collections.unmodifiableSet(org.eclipse.jgit.lib.IndexDiff.getChanged())"},"status":-1},{"failures":[],"tindex":"5b18d143-4c6c-11e5-b044-2739fd8a9559","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.AnyObjectId:409","type":"CtWhileImpl","sourcecode":"while ((int >= int) && (int != 0)) {\n    byte[][int--] = org.eclipse.jgit.lib.AnyObjectId.byte[][(int & 15)];\n    int >>>= 4;\n}"},"variableMap":{"p":"length","dst":"org.eclipse.jgit.patch.CombinedFileHeader.INDEX","w":"eol","org.eclipse.jgit.lib.AnyObjectId.hexbyte":"org.eclipse.jgit.patch.CombinedFileHeader.INDEX","o":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedFileHeader:161","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.patch.CombinedFileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int)"},"status":-2},{"failures":[],"tindex":"5b18f854-4c6c-11e5-b044-e3c0fdf26fbe","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:381","type":"CtIfImpl","sourcecode":"if ((int == int) || ((byte[][int]) != 0))\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"truncated in name\");\n"},"variableMap":{"sz":"end","raw":"buf","ptr":"endOffset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:286","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.patch.FileHeader.(org.eclipse.jgit.patch.FileHeader.isHunkHdr(byte[], int, int)) == (org.eclipse.jgit.patch.FileHeader.getParentCount())) {\n    final org.eclipse.jgit.patch.HunkHeader org.eclipse.jgit.patch.HunkHeader = org.eclipse.jgit.patch.FileHeader.newHunkHeader(int);\n    org.eclipse.jgit.patch.HunkHeader.parseHeader();\n    int = org.eclipse.jgit.patch.HunkHeader.parseBody(this, int);\n    org.eclipse.jgit.patch.HunkHeader.int = int;\n    org.eclipse.jgit.patch.FileHeader.addHunk(org.eclipse.jgit.patch.HunkHeader);\n    if (int < int) {\n        switch (byte[][int]) {\n            case '@' :\n            case 'd' :\n            case '\\n' :\n                break;\n            default :\n                if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.Patch.byte[])) < 0)\n                    org.eclipse.jgit.patch.Patch.warn(byte[], int, org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n                \n        }\n    } \n    continue;\n} "},"status":-2},{"failures":[],"tindex":"5b196d85-4c6c-11e5-b044-2d1e2a0c9c43","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.StashDropCommand:210","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.zeroId()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:800","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String.substring(0, int))"},"status":-2},{"failures":[],"tindex":"5b196d86-4c6c-11e5-b044-b10fb5620018","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.StartGenerator:115","type":"CtIfImpl","sourcecode":"if (boolean && (!boolean)) {\n    boolean = false;\n} "},"variableMap":{"boundary":"use","uninteresting":"use"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:477","type":"CtIfImpl","sourcecode":"if (boolean)\n    java.util.EnumSet<org.eclipse.jgit.revwalk.RevSort>.add(org.eclipse.jgit.revwalk.RevSort);\nelse\n    java.util.EnumSet<org.eclipse.jgit.revwalk.RevSort>.remove(org.eclipse.jgit.revwalk.RevSort);\n"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}