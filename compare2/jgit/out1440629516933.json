{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":61,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidCommitter":9,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":51,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":81,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":74,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":132,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":1,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit2Parent":4,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":134,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":109,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1":20,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":195,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":129,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":52,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":13,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":77,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":177,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":198,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":188,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":82,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk":27,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":116,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":46,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":38,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":83,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":143,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":190,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":172,"org.eclipse.jgit.merge.CherryPickTest.testRevert":200,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":179,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":41,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":0,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":62,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot":18,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":142,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":171,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":47,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":170,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":127,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":50,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix":21,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad":25,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":110,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":49,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":36,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":168,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2":29,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":150,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":196,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk":19,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":128,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":104,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":184,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":157,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":17,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":16,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":42,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":186,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitBlankAuthor":6,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":151,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows":30,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":78,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":66,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":121,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":92,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":155,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":197,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":93,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":94,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":69,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":117,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":160,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":40,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":131,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":149,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit1Parent":2,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":154,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":122,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":65,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":48,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":86,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":162,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":37,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter2":8,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter1":7,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":70,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":185,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":158,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot":24,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":80,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":45,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":67,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":166,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":53,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":146,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":174,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":91,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":90,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":99,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":72,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":33,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":180,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":56,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows":28,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case":23,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":125,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNormalTime":5,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":182,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":194,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":57,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTag":3,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":75,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":102,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":140,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":39,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":35,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":111,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":105,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":193,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":15,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":175,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":44,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":76,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNoParent":10,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":114,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":173,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":145,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":176,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":136,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":71,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":118,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":60,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":191,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":147,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":169,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":120,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":108,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":107,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":159,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":14,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":126,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":165,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":130,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":54,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":73,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":189,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":164,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":85,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":133,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":167,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":79,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":64,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad":26,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":88,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":192,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":187,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":139,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":115,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":144,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":148,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":113,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":138,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":63,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":124,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit128Parent":11,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case":22,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":84,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":59,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":152,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":141,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":68,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":43,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":161,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":119,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":12,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":112,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":34,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":163,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":32,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":101,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":137,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":181,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":100,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":103,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":31,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":135,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":178,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":58,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":153,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":95,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":123,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":97,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":98,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":87,"org.eclipse.jgit.merge.CherryPickTest.testPick":199,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":55,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":106,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":183,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":156,"org.eclipse.jgit.api.RevertCommandTest.testRevert":89,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":96},"transformations":[{"failures":[],"tindex":"0d9b8b05-4c45-11e5-a568-9f6066174d70","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1167","type":"CtUnaryOperatorImpl","sourcecode":"~(int)"},"variableMap":{"delayFreeFlags":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Candidate:276","type":"CtOperatorAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Region.int += org.eclipse.jgit.blame.Region.int"},"status":-2},{"failures":[],"tindex":"0d9bb216-4c45-11e5-a568-915e50691c97","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:603","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackFile.onOpenPack()"},"variableMap":{"this":"deadPack"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:684","type":"CtDoImpl","sourcecode":"do {\n    org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList>.get();\n    final org.eclipse.jgit.internal.storage.file.PackFile[] org.eclipse.jgit.internal.storage.file.PackFile[] = org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.PackFile[];\n    final int int = org.eclipse.jgit.internal.storage.file.ObjectDirectory.org.eclipse.jgit.internal.storage.file.ObjectDirectory.indexOf(org.eclipse.jgit.internal.storage.file.PackFile[], org.eclipse.jgit.internal.storage.file.PackFile);\n    if (int < 0)\n        break;\n    \n    final org.eclipse.jgit.internal.storage.file.PackFile[] org.eclipse.jgit.internal.storage.file.PackFile[] = new org.eclipse.jgit.internal.storage.file.PackFile[(org.eclipse.jgit.internal.storage.file.PackFile[].int) - 1];\n    java.lang.System.arraycopy(org.eclipse.jgit.internal.storage.file.PackFile[], 0, org.eclipse.jgit.internal.storage.file.PackFile[], 0, int);\n    java.lang.System.arraycopy(org.eclipse.jgit.internal.storage.file.PackFile[], (int + 1), org.eclipse.jgit.internal.storage.file.PackFile[], int, ((org.eclipse.jgit.internal.storage.file.PackFile[].int) - int));\n    org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList = new org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.FileSnapshot , org.eclipse.jgit.internal.storage.file.PackFile[]);\n} while (!(java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList>.compareAndSet(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList, org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)) )"},"status":-2},{"failures":[0,1],"tindex":"0d9bd927-4c45-11e5-a568-5162ff0f6404","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ConfigLine:118","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    return \"<empty>\";\n"},"variableMap":{"section":"ourCommitName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:274","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null)\n    return java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"0d9bd928-4c45-11e5-a568-f9a84c2e5641","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:631","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheEntry != null)\n    java.util.Map<java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), org.eclipse.jgit.dircache.DirCacheEntry);\n"},"status":-2},{"failures":[],"tindex":"0d9bd929-4c45-11e5-a568-efcf3e776572","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:364","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long long = long[][int];\n    if (long != 0) {\n        int int = org.eclipse.jgit.diff.SimilarityIndex.slot(org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.keyOf(long));\n        while ((long[][int]) != 0)\n            if ((++int) >= (long[].int))\n                int = 0;\n            \n        long[][int] = long;\n    } \n}"},"variableMap":{"oldHash":"srcSizes","length":"renameScore","this":"s","idHash":"dstSizes","oldSize":"renameScore"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:236","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<org.eclipse.jgit.diff.DiffEntry>.size()) ; int++) {\n    org.eclipse.jgit.diff.DiffEntry org.eclipse.jgit.diff.DiffEntry = java.util.List<org.eclipse.jgit.diff.DiffEntry>.get(int);\n    if (!org.eclipse.jgit.diff.SimilarityRenameDetector.(org.eclipse.jgit.diff.SimilarityRenameDetector.isFile(org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.lib.FileMode))) {\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        continue;\n    } \n    if (!(org.eclipse.jgit.diff.RenameDetector.sameType(org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.lib.FileMode))) {\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        continue;\n    } \n    if ((java.util.BitSet != null) && (java.util.BitSet.get(int))) {\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        continue;\n    } \n    long long = long[][int];\n    if (long == 0) {\n        long = org.eclipse.jgit.diff.SimilarityRenameDetector.(size(org.eclipse.jgit.diff.DiffEntry.Side.org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry)) + 1;\n        long[][int] = long;\n    } \n    long long = long[][int];\n    if (long == 0) {\n        long = org.eclipse.jgit.diff.SimilarityRenameDetector.(size(org.eclipse.jgit.diff.DiffEntry.Side.org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry)) + 1;\n        long[][int] = long;\n    } \n    long long = java.lang.Math.max(long, long);\n    long long = java.lang.Math.min(long, long);\n    if (((long * 100) / long) < (int)) {\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        continue;\n    } \n    if (org.eclipse.jgit.diff.SimilarityIndex == null) {\n        try {\n            org.eclipse.jgit.diff.SimilarityIndex = org.eclipse.jgit.diff.SimilarityRenameDetector.hash(org.eclipse.jgit.diff.DiffEntry.Side.org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry);\n        } catch (org.eclipse.jgit.diff.SimilarityIndex.TableFullException tableFull) {\n            boolean = true;\n            continue SRC;\n        }\n    } \n    org.eclipse.jgit.diff.SimilarityIndex org.eclipse.jgit.diff.SimilarityIndex;\n    try {\n        org.eclipse.jgit.diff.SimilarityIndex = org.eclipse.jgit.diff.SimilarityRenameDetector.hash(org.eclipse.jgit.diff.DiffEntry.Side.org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry);\n    } catch (org.eclipse.jgit.diff.SimilarityIndex.TableFullException tableFull) {\n        if (java.util.BitSet == null)\n            java.util.BitSet = new java.util.BitSet(java.util.List<org.eclipse.jgit.diff.DiffEntry>.size());\n        \n        java.util.BitSet.set(int);\n        boolean = true;\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        continue;\n    }\n    int int = org.eclipse.jgit.diff.SimilarityIndex.score(org.eclipse.jgit.diff.SimilarityIndex, 10000);\n    int int = org.eclipse.jgit.diff.SimilarityRenameDetector.(org.eclipse.jgit.diff.SimilarityRenameDetector.nameScore(org.eclipse.jgit.diff.DiffEntry.java.lang.String, org.eclipse.jgit.diff.DiffEntry.java.lang.String)) * 100;\n    int int = ((int * 99) + (int * 1)) / 10000;\n    if (int < (int)) {\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        continue;\n    } \n    long[][int++] = org.eclipse.jgit.diff.SimilarityRenameDetector.org.eclipse.jgit.diff.SimilarityRenameDetector.encode(int, int, int);\n    org.eclipse.jgit.lib.ProgressMonitor.update(1);\n}"},"status":-2},{"failures":[],"tindex":"0d9c003a-4c45-11e5-a568-4da5abba9a3d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:289","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:284","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.get()"},"status":-2},{"failures":[],"tindex":"0d9c003b-4c45-11e5-a568-edb450921ec0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:64","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.isSupported()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:126","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block>.add(org.eclipse.jgit.util.TemporaryBuffer.Block)"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"0d9c003c-4c45-11e5-a568-2317ed346674","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:211","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + 1), org.eclipse.jgit.util.MutableInteger)"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"0d9c003d-4c45-11e5-a568-f588bd357110","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ResetCommand:360","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.AbstractTreeIterator == null) {\n    continue;\n} "},"variableMap":{"cIter":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:214","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) == org.eclipse.jgit.treewalk.AbstractTreeIterator) || (org.eclipse.jgit.treewalk.AbstractTreeIterator.first()))\n    continue;\n"},"status":-1},{"failures":[],"tindex":"0d9c274e-4c45-11e5-a568-e5f4b823cb67","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.BlockRevQueue:66","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit == null)\n    break;\n"},"variableMap":{"c":"id"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:197","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.internal.storage.pack.BaseSearch.TreeWithData>.add(new org.eclipse.jgit.internal.storage.pack.BaseSearch.TreeWithData(org.eclipse.jgit.lib.AnyObjectId , byte[]))"},"status":-2},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,31,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,0,85,86,1,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,34,129,130,131,132,133,134,135,35,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195],"tindex":"0d9c274f-4c45-11e5-a568-63a2605e2cc6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:1066","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.merge.ResolveMerger.(processEntry(org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.treewalk.CanonicalTreeParser.org.eclipse.jgit.treewalk.CanonicalTreeParser), org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.treewalk.CanonicalTreeParser.org.eclipse.jgit.treewalk.CanonicalTreeParser), org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.treewalk.CanonicalTreeParser.org.eclipse.jgit.treewalk.CanonicalTreeParser), org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.dircache.DirCacheBuildIterator.org.eclipse.jgit.dircache.DirCacheBuildIterator), (boolean ? org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator) : null), boolean))) {\n    org.eclipse.jgit.merge.ResolveMerger.cleanUp();\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"0d9c2750-4c45-11e5-a568-bdf6f246c50e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:2402","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = java.lang.Runtime.getRuntime().availableProcessors();\n"},"variableMap":{"threads":"matchShift"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:310","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator.back(org.eclipse.jgit.treewalk.AbstractTreeIterator.int)"},"status":-2},{"failures":[],"tindex":"0d9c4e61-4c45-11e5-a568-8dd826480257","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.UnionInputStream:135","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.io.UnionInputStream.pop()"},"variableMap":{"this":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackConnection:301","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":"0d9c4e62-4c45-11e5-a568-3d75588d74cb","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:124","type":"CtReturnImpl","sourcecode":"return \"Negotiate\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.Edit:239","type":"CtReturnImpl","sourcecode":"return ((((((((org.eclipse.jgit.diff.Edit.Type + \"(\") + (int)) + \"-\") + (int)) + \",\") + (int)) + \"-\") + (int)) + \")\""},"status":-2},{"failures":[196,197,198,199,200],"tindex":"0d9c4e63-4c45-11e5-a568-bd2c346f8c5f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.StrategyResolve:55","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.merge.ResolveMerger(org.eclipse.jgit.lib.Repository , false)"},"variableMap":{"db":"db"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.StrategySimpleTwoWayInCore:83","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger(org.eclipse.jgit.lib.Repository)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}