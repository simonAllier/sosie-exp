{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":3,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":84,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTags":41,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadNotExistingBranchConfig":98,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":33,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":57,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":34,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":39,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_EmptyDatabase":112,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":11,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":28,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":65,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":27,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose":97,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":21,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":54,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":71,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":5,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":61,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":78,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3":77,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2":76,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":62,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptSymbolicReference":69,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1":75,"org.eclipse.jgit.revwalk.FooterLineTest.testMatchesBugId":30,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":44,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":25,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting":122,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":63,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":56,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit":87,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":49,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testRefsChangedStackOverflow":104,"org.eclipse.jgit.revwalk.FooterLineTest.testFilterFootersIgnoreCase":31,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":66,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":91,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testCreate":105,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_InvalidName":108,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":127,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptObjectIdReference":103,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_AnyHeadWithGarbage":100,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose":72,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_EmptyDatabase":118,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":99,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":22,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":15,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":60,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptObjectIdReference":88,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":102,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834":90,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":123,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":14,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":51,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":24,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":7,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":46,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed":119,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":9,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":0,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":40,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":67,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":64,"org.eclipse.jgit.api.TagCommandTest.testTagging":35,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":26,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose":109,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":47,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":1,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":80,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":81,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":107,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose":82,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":125,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":16,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":106,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked":96,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":116,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":86,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":115,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":92,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":114,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":113,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose":73,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":6,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":43,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":29,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":42,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly":101,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":20,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1":94,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":124,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":8,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":32,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":126,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":23,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":50,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":70,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2":95,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch":74,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":45,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":18,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":38,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":53,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2":121,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn":111,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":13,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":36,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":52,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":117,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":10,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":120,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":55,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":89,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":58,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":85,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":17,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_FetchHead":83,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":2,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig":93,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch":110,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":68,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptSymbolicReference":79,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":59,"org.eclipse.jgit.api.TagCommandTest.testDelete":37,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":12,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":19,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":48},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"43237275-4c27-11e5-aae3-ef96e0912b33","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BatchRefUpdate:171","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.BatchRefUpdate.disableRefLog()"},"variableMap":{"this":"batch"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:209","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.BatchRefUpdate.addCommand(org.eclipse.jgit.transport.TrackingRefUpdate.asReceiveCommand())"},"status":-1},{"failures":[],"tindex":"43239986-4c27-11e5-aae3-372704c53333","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:696","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddCommand:136","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"43239987-4c27-11e5-aae3-e3a59e4699dd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:441","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.FileSnapshot = null"},"variableMap":{"snapshot":"snapshot"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:218","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.FileSnapshot = org.eclipse.jgit.internal.storage.file.FileSnapshot.save(org.eclipse.jgit.lib.Repository.getIndexFile())"},"status":0},{"failures":[],"tindex":"43239988-4c27-11e5-aae3-ad058b2c7114","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:289","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:392","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"status":-2},{"failures":[30,31],"tindex":"4323c099-4c27-11e5-aae3-ab6ebc61a12d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:104","type":"CtReturnImpl","sourcecode":"return !(org.eclipse.jgit.util.SystemReader.getInstance().isMacOS())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FooterLine:92","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"4323c09a-4c27-11e5-aae3-4db8d1ad32a2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.UnionInputStream:151","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.io.UnionInputStream.pop()"},"status":-2},{"failures":[],"tindex":"4323c09b-4c27-11e5-aae3-b93e6a1c5cac","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ConfigSnapshot:209","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:329","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevCommit[].int"},"status":-2},{"failures":[],"tindex":"4323c09c-4c27-11e5-aae3-4f652258e8f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:328","type":"CtAssignmentImpl","sourcecode":"java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block> = null"},"status":0},{"failures":[],"tindex":"4323c09d-4c27-11e5-aae3-0fe8ffd9a825","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.Base64:291","type":"CtIfImpl","sourcecode":"if ((byte[].int) == int)\n    return byte[];\n"},"status":0},{"failures":[32,33,34,35,36,37,38,39,40,41,2,3,42,4,43,44,45,5,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,27,28,64,65,29,66,67,68,14,15,16,17,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],"tindex":"4323c09e-4c27-11e5-aae3-51abfdaa285e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.TagBuilder:179","type":"CtInvocationImpl","sourcecode":"java.io.OutputStreamWriter.write(org.eclipse.jgit.lib.TagBuilder.getTagger().toExternalString())"},"variableMap":{"w":"w","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TagBuilder:166","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.TagBuilder.getObjectId().copyTo(java.io.OutputStreamWriter)"},"status":-1},{"failures":[],"tindex":"4323e7af-4c27-11e5-aae3-7fceb8c29090","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchHeadRecord:93","type":"CtInvocationImpl","sourcecode":"java.io.Writer.write(\"\\n\")"},"status":0},{"failures":[],"tindex":"4323e7b0-4c27-11e5-aae3-a7845a8fff49","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:909","type":"CtWhileImpl","sourcecode":"while ((int & 128) != 0)\n    int = (byte[][int++]) & 255;"},"variableMap":{"p":"ptr","c":"eol","ib":"org.eclipse.jgit.patch.FileHeader.INDEX"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:427","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"43240ec1-4c27-11e5-aae3-098a6de8ef44","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackOutputStream:115","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(int, org.eclipse.jgit.internal.storage.pack.PackOutputStream.int)"},"variableMap":{"len":"tzOffset","org.eclipse.jgit.internal.storage.pack.PackOutputStream.BYTES_TO_WRITE_BEFORE_CANCEL_CHECK":"tzOffset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.PersonIdent:268","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":13,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}