{"failureDictionary":{"org.eclipse.jgit.api.GitConstructionTest.testWrap":11,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback":1,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":74,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":75,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":12,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":30,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":60,"org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld":0,"org.eclipse.jgit.api.GitConstructionTest.testOpen":10,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":54,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":50,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":72,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":95,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":7,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":84,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":61,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":42,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":41,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":29,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":38,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":21,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":49,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":51,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":71,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":35,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":65,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":63,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":90,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":3,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":82,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":62,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":24,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":46,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":5,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":37,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":47,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":78,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":79,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":80,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":52,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":76,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":86,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":58,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":94,"org.eclipse.jgit.api.GitConstructionTest.testClose":9,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects":2,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":48,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":89,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":70,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":40,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":32,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":19,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":18,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":92,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":53,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":20,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":31,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":81,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":22,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":4,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":68,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":28,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":87,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":57,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":13,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":66,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":15,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":64,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":16,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":43,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":27,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":26,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":56,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":36,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":8,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":91,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":34,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":45,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":69,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":73,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":44,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":67,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":17,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":25,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":59,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":55,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":33,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":77,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":88,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":85,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":93,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":39,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":83,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":6,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":23,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":14},"transformations":[{"failures":[],"tindex":"7104faba-4c29-11e5-9aa8-5360dd9a8ec5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryRename:94","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result"},"variableMap":{"org.eclipse.jgit.lib.RefUpdate.Result.IO_FAILURE":"org.eclipse.jgit.lib.RefUpdate.Result.NO_CHANGE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefUpdate:578","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(org.eclipse.jgit.lib.Ref.getName()))\n    return org.eclipse.jgit.lib.RefUpdate.Result = org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result;\n"},"status":-2},{"failures":[],"tindex":"710521cb-4c29-11e5-9aa8-89815e16b4ef","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteParser:141","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.notes.NoteParser.parseObjectId(org.eclipse.jgit.lib.MutableObjectId))\n    org.eclipse.jgit.notes.LeafBucket.parseOneEntry(org.eclipse.jgit.lib.MutableObjectId, org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId());\nelse\n    org.eclipse.jgit.notes.NoteParser.storeNonNote();\n"},"status":-2},{"failures":[],"tindex":"710521cc-4c29-11e5-9aa8-bb84d90f664c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.PersonIdent:297","type":"CtLocalVariableImpl","sourcecode":"final java.text.SimpleDateFormat java.text.SimpleDateFormat"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.GitDateParser:244","type":"CtLocalVariableImpl","sourcecode":"java.text.SimpleDateFormat java.text.SimpleDateFormat = org.eclipse.jgit.util.GitDateParser.org.eclipse.jgit.util.GitDateParser.getDateFormat(org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.util.Locale)"},"status":-2},{"failures":[],"tindex":"710521cd-4c29-11e5-9aa8-434da3a53283","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRC:206","type":"CtLocalVariableImpl","sourcecode":"java.io.BufferedReader java.io.BufferedReader = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.attributes.AttributesNode:93","type":"CtLocalVariableImpl","sourcecode":"java.io.BufferedReader java.io.BufferedReader = org.eclipse.jgit.attributes.AttributesNode.org.eclipse.jgit.attributes.AttributesNode.asReader(java.io.InputStream)"},"status":-2},{"failures":[0],"tindex":"710521ce-4c29-11e5-9aa8-c5cc58386291","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.MutableObjectId:115","type":"CtOperatorAssignmentImpl","sourcecode":"int &= 255"},"variableMap":{"value":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:246","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.patch.CombinedFileHeader.int = int"},"status":-2},{"failures":[],"tindex":"710548df-4c29-11e5-9aa8-076080dfe6a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:793","type":"CtAssignmentImpl","sourcecode":"long = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseLongBase10(byte[], (int + 1), org.eclipse.jgit.util.MutableInteger)"},"status":-2},{"failures":[],"tindex":"7105e520-4c29-11e5-9aa8-2902371e30aa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:381","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    break;\n"},"variableMap":{"r":"refcnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:294","type":"CtDoImpl","sourcecode":"do {\n    org.eclipse.jgit.api.ArchiveCommand.FormatEntry = org.eclipse.jgit.api.ArchiveCommand.java.util.concurrent.ConcurrentMap<java.lang.String, org.eclipse.jgit.api.ArchiveCommand.FormatEntry>.get(java.lang.String);\n    if (org.eclipse.jgit.api.ArchiveCommand.FormatEntry == null)\n        throw new org.eclipse.jgit.api.errors.JGitInternalException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    \n    if ((org.eclipse.jgit.api.ArchiveCommand.FormatEntry.int) == 1) {\n        org.eclipse.jgit.api.ArchiveCommand.FormatEntry = null;\n        continue;\n    } \n    org.eclipse.jgit.api.ArchiveCommand.FormatEntry = new org.eclipse.jgit.api.ArchiveCommand.FormatEntry(org.eclipse.jgit.api.ArchiveCommand.FormatEntry.org.eclipse.jgit.api.ArchiveCommand.Format<?> , ((org.eclipse.jgit.api.ArchiveCommand.FormatEntry.int) - 1));\n} while (!org.eclipse.jgit.api.ArchiveCommand.(org.eclipse.jgit.api.ArchiveCommand.replace(org.eclipse.jgit.api.ArchiveCommand.java.util.concurrent.ConcurrentMap<java.lang.String, org.eclipse.jgit.api.ArchiveCommand.FormatEntry>, java.lang.String, org.eclipse.jgit.api.ArchiveCommand.FormatEntry, org.eclipse.jgit.api.ArchiveCommand.FormatEntry)) )"},"status":-2},{"failures":[],"tindex":"7105e521-4c29-11e5-9aa8-4d3ccbe7f850","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:170","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.disposeBody()"},"variableMap":{"c":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.add(org.eclipse.jgit.revwalk.RevFlag)"},"status":-2},{"failures":[],"tindex":"71060c32-4c29-11e5-9aa8-5b57e4b593f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DiffCommand:120","type":"CtTryImpl","sourcecode":"try {\n    if (boolean) {\n        if ((org.eclipse.jgit.treewalk.AbstractTreeIterator) == null) {\n            org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(((org.eclipse.jgit.lib.Constants.java.lang.String) + \"^{tree}\"));\n            if (org.eclipse.jgit.lib.ObjectId == null)\n                throw new org.eclipse.jgit.api.errors.NoHeadException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n            \n            org.eclipse.jgit.treewalk.CanonicalTreeParser org.eclipse.jgit.treewalk.CanonicalTreeParser = new org.eclipse.jgit.treewalk.CanonicalTreeParser();\n            org.eclipse.jgit.lib.ObjectReader org.eclipse.jgit.lib.ObjectReader = org.eclipse.jgit.lib.Repository.newObjectReader();\n            try {\n                org.eclipse.jgit.treewalk.CanonicalTreeParser.reset(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectId);\n            } finally {\n                org.eclipse.jgit.lib.ObjectReader.release();\n            }\n            org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.CanonicalTreeParser;\n        } \n        org.eclipse.jgit.treewalk.AbstractTreeIterator = new org.eclipse.jgit.dircache.DirCacheIterator(org.eclipse.jgit.lib.Repository.readDirCache());\n    } else {\n        if ((org.eclipse.jgit.treewalk.AbstractTreeIterator) == null)\n            org.eclipse.jgit.treewalk.AbstractTreeIterator = new org.eclipse.jgit.dircache.DirCacheIterator(org.eclipse.jgit.lib.Repository.readDirCache());\n        \n        if ((org.eclipse.jgit.treewalk.AbstractTreeIterator) == null)\n            org.eclipse.jgit.treewalk.AbstractTreeIterator = new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository);\n        \n    }\n    org.eclipse.jgit.diff.DiffFormatter.setPathFilter(org.eclipse.jgit.treewalk.filter.TreeFilter);\n    java.util.List<org.eclipse.jgit.diff.DiffEntry> java.util.List<org.eclipse.jgit.diff.DiffEntry> = org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator);\n    if (boolean)\n        return java.util.List<org.eclipse.jgit.diff.DiffEntry>;\n    else {\n        if ((int) >= 0)\n            org.eclipse.jgit.diff.DiffFormatter.setContext(int);\n        \n        if ((java.lang.String) != null)\n            org.eclipse.jgit.diff.DiffFormatter.setNewPrefix(java.lang.String);\n        \n        if ((java.lang.String) != null)\n            org.eclipse.jgit.diff.DiffFormatter.setOldPrefix(java.lang.String);\n        \n        org.eclipse.jgit.diff.DiffFormatter.format(java.util.List<org.eclipse.jgit.diff.DiffEntry>);\n        org.eclipse.jgit.diff.DiffFormatter.flush();\n        return java.util.List<org.eclipse.jgit.diff.DiffEntry>;\n    }\n} catch (java.io.IOException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException);\n} finally {\n    org.eclipse.jgit.diff.DiffFormatter.release();\n}"},"status":-2},{"failures":[1,2],"tindex":"71063343-4c29-11e5-9aa8-9db09bf30878","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:273","type":"CtIfImpl","sourcecode":"if (int < int)\n    int = int;\n"},"variableMap":{"be":"p","bNext":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlock:88","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], int, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"71063344-4c29-11e5-9aa8-355e1687c827","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.PullCommand:193","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))) {\n    throw new org.eclipse.jgit.api.errors.DetachedHeadException();\n} "},"variableMap":{"org.eclipse.jgit.lib.Constants.R_HEADS":"attribute","fullBranch":"attribute"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.attributes.AttributesRule:92","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    java.util.ArrayList<org.eclipse.jgit.attributes.Attribute>.add(new org.eclipse.jgit.attributes.Attribute(java.lang.String , java.lang.String));\n} "},"status":-2},{"failures":[3,4,5,6,7,8,9,9,10,10,11,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"71063345-4c29-11e5-9aa8-bd783a8f99a2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.FetchProcess:148","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.FetchProcess.expandSingle(org.eclipse.jgit.transport.RefSpec, java.util.Set<org.eclipse.jgit.lib.Ref>)"},"variableMap":{"this":"this","matched":"matched","spec":"spec"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:361","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : org.eclipse.jgit.transport.FetchConnection.getRefs()) {\n    if ((org.eclipse.jgit.transport.RefSpec.matchSource(org.eclipse.jgit.lib.Ref)) && (java.util.Set<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref)))\n        org.eclipse.jgit.transport.FetchProcess.want(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.transport.RefSpec.expandFromSource(org.eclipse.jgit.lib.Ref));\n    \n}"},"status":-1},{"failures":[],"tindex":"7106a876-4c29-11e5-9aa8-f91f1db0c07d","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.attributes.Attribute:97","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The key of an attribute should not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:273","type":"CtThrowImpl","sourcecode":"throw java.io.IOException"},"status":-2},{"failures":[],"tindex":"7106a877-4c29-11e5-9aa8-59eed8d8360d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:342","type":"CtReturnImpl","sourcecode":"return byte[]"},"variableMap":{"dstbuf":"org.eclipse.jgit.lib.Constants.ENCODED_TYPE_BLOB"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Constants:445","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Constants.byte[]"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}