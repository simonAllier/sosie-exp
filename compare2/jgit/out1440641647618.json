{"failureDictionary":{"org.eclipse.jgit.diff.HistogramDiffTest.testFallbackToMyersDiff":10,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":57,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsentGrowsWithObjects":61,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_ReplaceCommonDelete":1,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGit":39,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_InvertBlocks":7,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_InsertNearCommonTail":5,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsent":59,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_MoveBlock":3,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":12,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":55,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_CommonReplaceCommonDeleteCommon":9,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_UniqueCommonLargerThanMatchPoint":6,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidPosixTree":19,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testIterator":63,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomething":42,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix":64,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":14,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting1":31,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting2":32,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting3":33,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting4":34,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":52,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting5":35,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting6":36,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting7":37,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":11,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting8":38,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_LinuxBug":2,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":56,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":51,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGitOtherPlatform":15,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testClear":58,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeNameIsGitTilde11":41,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomethingSpaceSomething":18,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testTrailingSlash":50,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGit2":30,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":53,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeNameIsDotGitDotDot":17,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":54,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_LargeObject":48,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomethingDot":40,"org.eclipse.jgit.lib.ObjectCheckerTest.testAcceptTreeModeWithZero":29,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree6":25,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames5":43,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree4":23,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames6":44,"org.eclipse.jgit.util.IntListTest.testSet":0,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree5":24,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames7":45,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames8":46,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGetAndContains":62,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_DuplicateAButCommonUniqueInB":4,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_CommonGrowsPrefixAndSuffix":8,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":13,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomethingDotDot":16,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting1":26,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2":65,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGrowsWithObjects":60,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting2":27,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting3":28,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree2":21,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testParentDirectoryGitIgnores":49,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree3":22,"org.eclipse.jgit.dircache.DirCacheEntryTest.testCopyMetaDataWithoutStage":47,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree1":20},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"4c0f7c74-4c61-11e5-b317-db7808e16b0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IntList:115","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.IntList.add(int)"},"status":-1},{"failures":[],"tindex":"4c0fa385-4c61-11e5-b317-c76ab2d1e48b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:1164","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:220","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.min(((long[].int) << 1), (1 + (org.eclipse.jgit.diff.Edit.getLengthA())))"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"4c0fa386-4c61-11e5-b317-21edeb3f2b70","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:281","type":"CtIfImpl","sourcecode":"if ((int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.lib.ObjectChecker.byte[])) > 0) {\n    if (((int = org.eclipse.jgit.lib.ObjectChecker.personIdent(byte[], int)) < 0) || ((byte[][int++]) != '\\n'))\n        throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid tagger\");\n    \n} "},"variableMap":{"this":"this","raw":"raw","ptr":"ptr","org.eclipse.jgit.lib.ObjectChecker.tagger":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:390","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    final int int = org.eclipse.jgit.lib.ObjectChecker.org.eclipse.jgit.lib.ObjectChecker.pathCompare(byte[], int, int, int, int, int, int);\n    if (int > 0)\n        throw new org.eclipse.jgit.errors.CorruptObjectException(\"incorrectly sorted\");\n    \n} "},"status":-1},{"failures":[],"tindex":"4c0fca97-4c61-11e5-b317-9fc052d98170","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:181","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.setPathHash(int)"},"status":0},{"failures":[],"tindex":"4c0fca98-4c61-11e5-b317-b369f10cf1f3","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.attributes.AttributesRule:136","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(\"/\"))) {\n    java.lang.String = \"/\" + java.lang.String;\n} "},"variableMap":{"pattern":"strictHostKeyChecking"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:183","type":"CtWhileImpl","sourcecode":"while ((java.lang.String = java.io.BufferedReader.readLine()) != null) {\n    java.lang.String = java.lang.String.trim();\n    if (((java.lang.String.length()) == 0) || (java.lang.String.startsWith(\"#\")))\n        continue;\n    \n    final java.lang.String[] java.lang.String[] = java.lang.String.split(\"[ \\t]*[= \\t]\", 2);\n    final java.lang.String java.lang.String = java.lang.String[][0].trim();\n    final java.lang.String java.lang.String = java.lang.String[][1].trim();\n    if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"Host\", java.lang.String)) {\n        java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>.clear();\n        for (final java.lang.String java.lang.String : java.lang.String.split(\"[ \\t]\")) {\n            final java.lang.String java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String);\n            org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host = java.util.Map<java.lang.String, org.eclipse.jgit.transport.OpenSshConfig.Host>.get(java.lang.String);\n            if (org.eclipse.jgit.transport.OpenSshConfig.Host == null) {\n                org.eclipse.jgit.transport.OpenSshConfig.Host = new org.eclipse.jgit.transport.OpenSshConfig.Host();\n                java.util.Map<java.lang.String, org.eclipse.jgit.transport.OpenSshConfig.Host>.put(java.lang.String, org.eclipse.jgit.transport.OpenSshConfig.Host);\n            } \n            java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>.add(org.eclipse.jgit.transport.OpenSshConfig.Host);\n        }\n        continue;\n    } \n    if (java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>.isEmpty()) {\n        continue;\n    } \n    if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"HostName\", java.lang.String)) {\n        for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n            if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n                org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String);\n            \n    } else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"User\", java.lang.String)) {\n        for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n            if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n                org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String);\n            \n    } else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"Port\", java.lang.String)) {\n        try {\n            final int int = java.lang.Integer.parseInt(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n            for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n                if ((org.eclipse.jgit.transport.OpenSshConfig.Host.int) == 0)\n                    org.eclipse.jgit.transport.OpenSshConfig.Host.int = int;\n                \n        } catch (java.lang.NumberFormatException nfe) {\n        }\n    } else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"IdentityFile\", java.lang.String)) {\n        for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n            if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.io.File) == null)\n                org.eclipse.jgit.transport.OpenSshConfig.Host.java.io.File = org.eclipse.jgit.transport.OpenSshConfig.toFile(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n            \n    } else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"PreferredAuthentications\", java.lang.String)) {\n        for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n            if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n                org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.nows(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n            \n    } else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"BatchMode\", java.lang.String)) {\n        for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n            if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.Boolean) == null)\n                org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.Boolean = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.yesno(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n            \n    } else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"StrictHostKeyChecking\", java.lang.String)) {\n        java.lang.String java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String);\n        for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n            if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n                org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = java.lang.String;\n            \n    } else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"ConnectionAttempts\", java.lang.String)) {\n        try {\n            final int int = java.lang.Integer.parseInt(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n            if (int > 0) {\n                for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n                    if ((org.eclipse.jgit.transport.OpenSshConfig.Host.int) == 0)\n                        org.eclipse.jgit.transport.OpenSshConfig.Host.int = int;\n                    \n            } \n        } catch (java.lang.NumberFormatException nfe) {\n        }\n    } \n}"},"status":-2},{"failures":[47],"tindex":"4c1066d9-4c61-11e5-b317-0fc1b8fe2bb8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:134","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.min(((byte[].int) - (int)), int)"},"variableMap":{"len":"infoOffset","length":"infoOffset","binbuf":"info","binbufcnt":"infoOffset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:692","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.util.NB.decodeUInt16(byte[], ((int) + (org.eclipse.jgit.dircache.DirCacheEntry.int)))"},"status":-1},{"failures":[48],"tindex":"4c1066da-4c61-11e5-b317-53d3bc08429c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectStream:224","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.reset()"},"variableMap":{"in":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:108","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], 0, 2)"},"status":-1},{"failures":[49,50],"tindex":"4c1066db-4c61-11e5-b317-59cdac612159","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ApplyCommand:258","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:192","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"4c1066dc-4c61-11e5-b317-772b0da0c9b0","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:311","type":"CtLocalVariableImpl","sourcecode":"int int = 8192"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:111","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[51,52,53,54,55,56],"tindex":"4c108ded-4c61-11e5-b317-cbdcb0a5c1ff","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.NoteMapMerger:240","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.notes.InMemoryNoteBucket org.eclipse.jgit.notes.InMemoryNoteBucket = new org.eclipse.jgit.notes.LeafBucket((int * 2))"},"variableMap":{"treeDepth":"cell"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.FanoutBucket:314","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.notes.InMemoryNoteBucket org.eclipse.jgit.notes.InMemoryNoteBucket = ((org.eclipse.jgit.notes.InMemoryNoteBucket)(org.eclipse.jgit.notes.NoteBucket[][int]))"},"status":-1},{"failures":[11,12,13,14,57,58,59,60,61,62,63],"tindex":"4c108dee-4c61-11e5-b317-89fd4d0f1366","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:156","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int = 0;\n"},"variableMap":{"nextIn":"j","nextFlg":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectIdSubclassMap:220","type":"CtWhileImpl","sourcecode":"while ((V[][int]) != null)\n    int = (int + 1) & int;"},"status":-1},{"failures":[64,65],"tindex":"4c108def-4c61-11e5-b317-8357d4c4544a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:519","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.CanonicalTreeParser != null)\n    org.eclipse.jgit.dircache.DirCacheCheckout.org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPath(org.eclipse.jgit.treewalk.CanonicalTreeParser);\n"},"status":-1},{"failures":[],"tindex":"4c108df0-4c61-11e5-b317-4383b5884004","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.BaseDirCacheEditor:139","type":"CtLocalVariableImpl","sourcecode":"final int int = (int) + int"},"variableMap":{"entryCnt":"pLen","cnt":"pLen"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:776","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.dircache.DirCache.org.eclipse.jgit.dircache.DirCache.cmp(byte[], int, org.eclipse.jgit.dircache.DirCacheEntry[][int])"},"status":-2},{"failures":[],"tindex":"4c108df1-4c61-11e5-b317-c94cc300077d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:403","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.setIndexFile(new java.io.File(java.lang.String));\n"},"variableMap":{"val":"java.io.File.pathSeparator","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:387","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.(getAlternateObjectDirectories()) == null) {\n    java.lang.String java.lang.String = org.eclipse.jgit.util.SystemReader.getenv(org.eclipse.jgit.lib.Constants.java.lang.String);\n    if (java.lang.String != null) {\n        for (java.lang.String java.lang.String : java.lang.String.split(java.io.File.java.lang.String))\n            org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.addAlternateObjectDirectory(new java.io.File(java.lang.String));\n    } \n} "},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}