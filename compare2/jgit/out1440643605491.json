{"failureDictionary":{"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameContainsSlash":5,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGITTilde1":35,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit":42,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGit":39,"org.eclipse.jgit.lib.ObjectCheckerTest.testRejectDevicesOnWindows":46,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMixedCaseGit":38,"org.eclipse.jgit.lib.ObjectCheckerTest.testRejectInvalidWindowsCharacters":41,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSpaceDot":3,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotDot":36,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":61,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidPosixTree":11,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomething":48,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":63,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting1":24,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsEmpty":0,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting2":25,"org.eclipse.jgit.lib.ObjectCheckerTest.testRejectSpaceAtEndOnWindows":4,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting3":26,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting4":27,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting5":28,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting6":29,"org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testContainsMany":65,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting7":30,"org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testContainsOne":66,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting8":31,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":60,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeNotSupportedMode2":12,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeTruncatedInObjectId":1,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGitOtherPlatform":2,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGiTTilde1":34,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeNameIsGitTilde11":47,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomethingSpaceSomething":10,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGit2":23,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitDot":40,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitDotSpace":50,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeNameIsDotGitDotDot":9,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomethingDot":44,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeTruncatedInName":49,"org.eclipse.jgit.lib.ObjectCheckerTest.testAcceptTreeModeWithZero":22,"org.eclipse.jgit.lib.ObjectCheckerTest.testRejectDotAtEndOnWindows":43,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGitCorruptUTF8AtEnd":51,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree6":18,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames4":55,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames5":56,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree4":16,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGit":33,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames6":57,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree5":17,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames7":58,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames8":59,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDot":32,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":62,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames1":52,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames2":53,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames3":54,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomethingDotDot":8,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting1":19,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit2":6,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting2":20,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit3":7,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting3":21,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSpace":45,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGitCorruptUTF8AtEnd2":37,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":64,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree2":14,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree3":15,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree1":13},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"db0b8091-4c65-11e5-9c21-758013f2dfe3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:372","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 3"},"status":-1},{"failures":[],"tindex":"db0ba7a2-4c65-11e5-9c21-cdca7c3000d3","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryRename:94","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result"},"variableMap":{"org.eclipse.jgit.lib.RefUpdate.Result.IO_FAILURE":"org.eclipse.jgit.lib.RefUpdate.Result.NO_CHANGE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefUpdate:621","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.RefUpdate.Store.execute(org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result)"},"status":-2},{"failures":[],"tindex":"db0ba7a3-4c65-11e5-9c21-85fe9c1dd020","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.LeafBucket:229","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.notes.LeafBucket.split().append(org.eclipse.jgit.notes.Note)"},"variableMap":{"note":"note","this":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMapMerger:310","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.notes.InMemoryNoteBucket.append(org.eclipse.jgit.notes.Note)"},"status":-2},{"failures":[],"tindex":"db0ba7a4-4c65-11e5-9c21-2114f52ce0d4","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:273","type":"CtIfImpl","sourcecode":"if (int < int)\n    int = int;\n"},"variableMap":{"be":"sz","bNext":"sz"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.FanoutBucket:306","type":"CtForImpl","sourcecode":"for (org.eclipse.jgit.notes.NonNoteEntry org.eclipse.jgit.notes.NonNoteEntry = org.eclipse.jgit.notes.NonNoteEntry ; org.eclipse.jgit.notes.NonNoteEntry != null ; org.eclipse.jgit.notes.NonNoteEntry = org.eclipse.jgit.notes.NonNoteEntry.org.eclipse.jgit.notes.NonNoteEntry)\n    int += org.eclipse.jgit.notes.NonNoteEntry.treeEntrySize();"},"status":0},{"failures":[],"tindex":"db0bceb5-4c65-11e5-9c21-5bd65ed778c4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RevertCommand:139","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit"},"variableMap":{"newHead":"org.eclipse.jgit.revwalk.PendingGenerator.INIT_LAST","headCommit":"org.eclipse.jgit.revwalk.PendingGenerator.INIT_LAST"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:85","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.PendingGenerator.org.eclipse.jgit.revwalk.RevCommit = new org.eclipse.jgit.revwalk.RevCommit(org.eclipse.jgit.lib.ObjectId.zeroId())"},"status":-2},{"failures":[],"tindex":"db0bceb6-4c65-11e5-9c21-974e48548c8e","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:393","type":"CtIfImpl","sourcecode":"if (int > 0)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"incorrectly sorted\");\n"},"variableMap":{"cmp":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:288","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.MutableInteger != null)\n    org.eclipse.jgit.util.MutableInteger.int = int;\n"},"status":-2},{"failures":[],"tindex":"db0bceb7-4c65-11e5-9c21-af6e16ba8b47","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:136","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0)\n    break;\n"},"variableMap":{"line":"classStart"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:221","type":"CtIfImpl","sourcecode":"if (int == (-1))\n    throw new org.eclipse.jgit.errors.NoClosingBracketException(int , java.lang.String , java.lang.String , java.lang.String);\n"},"status":-2},{"failures":[],"tindex":"db0bceb8-4c65-11e5-9c21-eb0a9d618de6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:271","type":"CtAssignmentImpl","sourcecode":"this.byte[] = byte[]"},"variableMap":{"data":"log","d":"log"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ReflogReaderImpl:119","type":"CtAssignmentImpl","sourcecode":"byte[] = org.eclipse.jgit.util.IO.readFully(java.io.File)"},"status":-2},{"failures":[],"tindex":"db0bf5c9-4c65-11e5-9c21-37eaf14e5c0c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:110","type":"CtAssignmentImpl","sourcecode":"int = (int) | (org.eclipse.jgit.revwalk.MergeBaseGenerator.int)"},"variableMap":{"recarryTest":"ptr","org.eclipse.jgit.revwalk.MergeBaseGenerator.POPPED":"ptr","branchMask":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:241","type":"CtOperatorAssignmentImpl","sourcecode":"int += org.eclipse.jgit.lib.ObjectChecker.byte[].int"},"status":-2},{"failures":[],"tindex":"db0bf5ca-4c65-11e5-9c21-c9de4ec59711","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:548","type":"CtInvocationImpl","sourcecode":"java.lang.System.exit(1)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:465","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref.getStorage().isLoose()) {\n    org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.get();\n    int int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.find(org.eclipse.jgit.lib.Ref.getName());\n    if ((0 <= int) && ((org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.get(int)) == org.eclipse.jgit.lib.Ref)) {\n        org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef = ((org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef)(org.eclipse.jgit.lib.Ref)).peel(org.eclipse.jgit.lib.ObjectIdRef);\n        org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.set(int, org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef);\n        java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.compareAndSet(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>);\n    } \n} "},"status":-1},{"failures":[],"tindex":"db0bf5cb-4c65-11e5-9c21-4f05cc17bd66","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.WalkRemoteObjectDatabase:313","type":"CtLocalVariableImpl","sourcecode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.storage.file.FileBasedConfig:193","type":"CtLocalVariableImpl","sourcecode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()"},"status":-2},{"failures":[],"tindex":"db0c1cdc-4c65-11e5-9c21-078ed8131d25","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:466","type":"CtIfImpl","sourcecode":"if (int < 1)\n    break;\n"},"variableMap":{"l":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:406","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.patch.FileHeader.(org.eclipse.jgit.patch.FileHeader.isHunkHdr(byte[], int, int)) >= 1) {\n    break;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseOldName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":0},{"failures":[64,65,66],"tindex":"db0c43ed-4c65-11e5-9c21-0738e512f973","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV1:178","type":"CtReturnImpl","sourcecode":"return (((((long)(int)) << 24) | (int << 16)) | (int << 8)) | int"},"variableMap":{"b2":"position","b3":"position","b0":"position","b1":"position"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:136","type":"CtReturnImpl","sourcecode":"return 1L << int"},"status":-1},{"failures":[],"tindex":"db0c43ee-4c65-11e5-9c21-6b6a46bef5c1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:262","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PushCommand:133","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-2},{"failures":[],"tindex":"db0c6aff-4c65-11e5-9c21-ef9727a2d48a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:172","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.fnmatch.AbstractHead.setNewHeads(java.util.List<org.eclipse.jgit.fnmatch.Head>)"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}