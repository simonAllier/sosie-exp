{"failureDictionary":{"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":6,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":3,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":7,"org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsBare":1,"org.eclipse.jgit.api.PushCommandTest.testPush":5,"org.eclipse.jgit.api.InitCommandTest.testInitWithOnlyExplicitGitDir":2,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":4,"org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsNonBare":0,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":8},"transformations":[{"failures":[],"tindex":"ee6b3484-4c61-11e5-979e-2ff269fa2a3b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.SystemReader:84","type":"CtReturnImpl","sourcecode":"return java.lang.System.getenv(java.lang.String)"},"variableMap":{"variable":"daysAgo"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RelativeDateFormatter:102","type":"CtReturnImpl","sourcecode":"return java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.util.RelativeDateFormatter.org.eclipse.jgit.util.RelativeDateFormatter.round(long, org.eclipse.jgit.util.RelativeDateFormatter.long))"},"status":-2},{"failures":[],"tindex":"ee6b3485-4c61-11e5-979e-a10891aba55d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1240","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.reset()"},"variableMap":{"c":"id"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.FanoutBucket:296","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.TreeFormatter.append(byte[], 0, 2, org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)"},"status":-2},{"failures":[0,1,2],"tindex":"ee6b5b96-4c61-11e5-979e-bde153fbd87b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.InitCommand:94","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.RepositoryBuilder.getGitDir()) == null) {\n    java.lang.String java.lang.String = org.eclipse.jgit.util.SystemReader.getInstance().getProperty(\"user.dir\");\n    if (java.lang.String == null)\n        java.lang.String = \".\";\n    \n    java.io.File java.io.File = new java.io.File(java.lang.String);\n    if (!(boolean))\n        java.io.File = new java.io.File(java.io.File , org.eclipse.jgit.lib.Constants.java.lang.String);\n    \n    org.eclipse.jgit.lib.RepositoryBuilder.setGitDir(java.io.File);\n} else {\n    if (!(boolean)) {\n        java.lang.String java.lang.String = org.eclipse.jgit.util.SystemReader.getInstance().getProperty(\"user.dir\");\n        if (java.lang.String == null)\n            java.lang.String = \".\";\n        \n        org.eclipse.jgit.lib.RepositoryBuilder.setWorkTree(new java.io.File(java.lang.String));\n    } \n}"},"status":-1},{"failures":[],"tindex":"ee6b5b97-4c61-11e5-979e-e1463d708d89","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.DepthGenerator:173","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.DepthWalk.Commit"},"variableMap":{"c":"id"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1379","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.revwalk.RevCommit(org.eclipse.jgit.lib.AnyObjectId)"},"status":-2},{"failures":[],"tindex":"ee6b5b98-4c61-11e5-979e-7fbcf04c1134","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1601","type":"CtInvocationImpl","sourcecode":"java.io.BufferedOutputStream.write('\\n')"},"status":-2},{"failures":[],"tindex":"ee6b5b99-4c61-11e5-979e-29b5bcb3da5f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:332","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.diff.SimilarityIndex.TableFullException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:249","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid author\")"},"status":-2},{"failures":[],"tindex":"ee6b5b9a-4c61-11e5-979e-a7ee933060c9","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalkUtils:158","type":"CtLocalVariableImpl","sourcecode":"java.util.List<org.eclipse.jgit.lib.Ref> java.util.List<org.eclipse.jgit.lib.Ref> = new java.util.ArrayList<org.eclipse.jgit.lib.Ref>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefList:125","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.eclipse.jgit.lib.Ref> java.util.List<org.eclipse.jgit.lib.Ref> = java.util.Arrays.asList(org.eclipse.jgit.lib.Ref[]).subList(0, int)"},"status":-2},{"failures":[],"tindex":"ee6b82ab-4c61-11e5-979e-792abc04c156","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.internal.PathMatcher:200","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:294","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.eclipse.jgit.lib.Repository.getFS().canExecute(java.io.File)"},"status":-2},{"failures":[],"tindex":"ee6b82ac-4c61-11e5-979e-15daddb04f8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions:103","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(0, int)"},"status":0},{"failures":[],"tindex":"ee6b82ad-4c61-11e5-979e-9bf4309aaac8","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:800","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.Candidate"},"variableMap":{"r":"queue","resultTail":"queue","queueNext":"queue"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:943","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Candidate = null"},"status":0},{"failures":[],"tindex":"ee6b82ae-4c61-11e5-979e-ab68a1c42e4d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:639","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    java.io.File java.io.File = org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(java.lang.String);\n    if (!(org.eclipse.jgit.util.FS.exists(java.io.File)))\n        continue;\n    \n    org.eclipse.jgit.internal.storage.file.LockFile org.eclipse.jgit.internal.storage.file.LockFile = new org.eclipse.jgit.internal.storage.file.LockFile(java.io.File , org.eclipse.jgit.internal.storage.file.FileRepository.getFS());\n    if (!(org.eclipse.jgit.internal.storage.file.LockFile.lock()))\n        continue;\n    \n    try {\n        org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef = org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(null, java.lang.String);\n        if ((org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef == null) || (org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.isSymbolic()))\n            continue;\n        \n        org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(java.lang.String);\n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.getObjectId();\n        if ((org.eclipse.jgit.lib.ObjectId != null) && (org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.lib.Ref.getObjectId()))) {\n            org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>;\n            org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>;\n            do {\n                org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.get();\n                int int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.find(java.lang.String);\n                if (int < 0)\n                    break;\n                \n                org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.remove(int);\n            } while (!(java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.compareAndSet(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>)) );\n            int int = org.eclipse.jgit.internal.storage.file.RefDirectory.(org.eclipse.jgit.internal.storage.file.RefDirectory.levelsIn(java.lang.String)) - 2;\n            org.eclipse.jgit.internal.storage.file.RefDirectory.org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(java.lang.String), int);\n        } \n    } finally {\n        org.eclipse.jgit.internal.storage.file.LockFile.unlock();\n    }\n}"},"status":-2},{"failures":[3,4,5,6,7,8],"tindex":"ee6ba9bf-4c61-11e5-979e-a1d6434b9ad5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PushCommand:145","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.Transport org.eclipse.jgit.transport.Transport : java.util.List<org.eclipse.jgit.transport.Transport>) {\n    org.eclipse.jgit.transport.Transport.setPushThin(boolean);\n    if ((java.lang.String) != null)\n        org.eclipse.jgit.transport.Transport.setOptionReceivePack(java.lang.String);\n    \n    org.eclipse.jgit.transport.Transport.setDryRun(boolean);\n    org.eclipse.jgit.api.TransportCommand<org.eclipse.jgit.api.PushCommand, java.lang.Iterable<org.eclipse.jgit.transport.PushResult>>.configure(org.eclipse.jgit.transport.Transport);\n    final java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate> java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate> = org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(java.util.List<org.eclipse.jgit.transport.RefSpec>);\n    try {\n        org.eclipse.jgit.transport.PushResult org.eclipse.jgit.transport.PushResult = org.eclipse.jgit.transport.Transport.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream);\n        java.util.ArrayList<org.eclipse.jgit.transport.PushResult>.add(org.eclipse.jgit.transport.PushResult);\n    } catch (org.eclipse.jgit.errors.TransportException e) {\n        throw new org.eclipse.jgit.api.errors.TransportException(org.eclipse.jgit.errors.TransportException.getMessage() , org.eclipse.jgit.errors.TransportException);\n    } finally {\n        org.eclipse.jgit.transport.Transport.close();\n    }\n}"},"status":-1},{"failures":[],"tindex":"ee6ba9c0-4c61-11e5-979e-0f17ce16eb7c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.NB:101","type":"CtOperatorAssignmentImpl","sourcecode":"int |= (byte[][(int + 2)]) & 255"},"variableMap":{"r":"ptr","offset":"ptr","intbuf":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:1052","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int)"},"status":-2},{"failures":[],"tindex":"ee6ba9c1-4c61-11e5-979e-01199f24dbf1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceiveCommand:289","type":"CtIfImpl","sourcecode":"if (boolean)\n    return ;\n"},"variableMap":{"typeIsCorrect":"skipExisting"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FileUtils:268","type":"CtIfImpl","sourcecode":"if (boolean && (java.io.File.isDirectory()))\n    return ;\n"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}