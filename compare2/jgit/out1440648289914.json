{"failureDictionary":{"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugEmptyLineAndSob":54,"org.eclipse.jgit.api.TagCommandTest.testTagging":19,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLine":44,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_PreferredAuthentications":6,"org.eclipse.jgit.attributes.AttributesMatcherTest.testGetters":12,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":14,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementWithChangeIdInCommitMessage":29,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NoBodySobAndBug":53,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":26,"org.eclipse.jgit.util.ChangeIdUtilTest.testWithEndingURL":46,"org.eclipse.jgit.util.ChangeIdUtilTest.testFirstParentAltersId":37,"org.eclipse.jgit.util.ChangeIdUtilTest.testDirCacheAltersId":57,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritPreferredAuthentications":7,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBug_NonFooterLineAndSob":51,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":24,"org.eclipse.jgit.attributes.AttributesMatcherTest.testTrailingSlash":13,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_ConnectionAttempts":2,"org.eclipse.jgit.util.ChangeIdUtilTest.testKernelStyleFooter":36,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugLineWithASpaceAndSob":40,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAlreadySetWithReplacement":39,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithBug_SubButNoBody":56,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithSpacesBeforeId":43,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessages":47,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsKeywordCaseInsensitive":5,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":8,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":21,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit":27,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithSignedOffBy":42,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testNameOnlyMatches":61,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAfterBugOrIssue":38,"org.eclipse.jgit.util.ChangeIdUtilTest.testNoteInMiddle":50,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":15,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":9,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommit":48,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsInherit":3,"org.eclipse.jgit.util.ChangeIdUtilTest.testTimeAltersId":34,"org.eclipse.jgit.util.ChangeIdUtilTest.testId":35,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommitWithSob_ButNoBody":33,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testGetters":62,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":18,"org.eclipse.jgit.util.ChangeIdUtilTest.testOnelinerFollowedByBlank":32,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":17,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":20,"org.eclipse.jgit.util.ChangeIdUtilTest.testATwoLines":31,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NonFooterAndBugAndSob":49,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacement":55,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsSet":0,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testFileNameWildcards":59,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritBatchMode":1,"org.eclipse.jgit.attributes.AttributesMatcherTest.testParentDirectoryGitAttributes":10,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithoutFooter":52,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":25,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_BatchModeYes":4,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testTargetWithoutLeadingSlash":60,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":23,"org.eclipse.jgit.attributes.AttributesMatcherTest.testNameOnlyMatches":11,"org.eclipse.jgit.util.ChangeIdUtilTest.testOneliner":30,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessagesWithSignedOffBy":41,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugBrackersAndSob":28,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":16,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":22,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLineNoLineBreak":45,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testParentDirectoryGitIgnores":58},"transformations":[{"failures":[],"tindex":"c32d44db-4c70-11e5-ba21-1732ace0eacd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportAmazonS3:230","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\"/\"))\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n"},"variableMap":{"subpath":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.storage.file.FileBasedConfig:197","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(java.lang.String.getBytes(org.eclipse.jgit.util.RawParseUtils.java.nio.charset.Charset.name()))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"c32d6bec-4c70-11e5-ba21-23b2007f553a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:230","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"IdentityFile\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.io.File) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.io.File = org.eclipse.jgit.transport.OpenSshConfig.toFile(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"PreferredAuthentications\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.nows(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"BatchMode\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.Boolean) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.Boolean = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.yesno(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"StrictHostKeyChecking\", java.lang.String)) {\n    java.lang.String java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String);\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = java.lang.String;\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"ConnectionAttempts\", java.lang.String)) {\n    try {\n        final int int = java.lang.Integer.parseInt(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        if (int > 0) {\n            for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n                if ((org.eclipse.jgit.transport.OpenSshConfig.Host.int) == 0)\n                    org.eclipse.jgit.transport.OpenSshConfig.Host.int = int;\n                \n        } \n    } catch (java.lang.NumberFormatException nfe) {\n    }\n} "},"status":-1},{"failures":[],"tindex":"c32d6bed-4c70-11e5-ba21-93a2867e7036","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.IO:80","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.IO.readFully(java.io.File, java.lang.Integer.int)"},"variableMap":{"path":"file","java.lang.Integer.MAX_VALUE":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1574","type":"CtTryImpl","sourcecode":"try {\n    byte[] byte[] = org.eclipse.jgit.util.IO.readFully(java.io.File);\n    return (byte[].int) > 0 ? byte[] : null;\n} catch (java.io.FileNotFoundException notFound) {\n    return null;\n}"},"status":-2},{"failures":[],"tindex":"c32d92fe-4c70-11e5-ba21-8b15dd7798dc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:159","type":"CtIfImpl","sourcecode":"if (int == 0)\n    continue;\n"},"variableMap":{"h":"tableMask"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner:100","type":"CtDoImpl","sourcecode":"do {\n    final int int = org.eclipse.jgit.internal.storage.pack.DeltaIndex.hashBlock(byte[], int);\n    final int int = int & (int);\n    final int int = int[][int];\n    if ((int != 0) && (int == int)) {\n        long[][int] = (((long)(int)) << 32) | int;\n    } else {\n        final int int = ++(int);\n        long[][int] = (((long)(int)) << 32) | int;\n        int[][int] = int;\n        int[][int] = int;\n    }\n    int = int;\n    int -= org.eclipse.jgit.internal.storage.pack.DeltaIndex.int;\n} while (0 <= int )"},"status":-2},{"failures":[],"tindex":"c32d92ff-4c70-11e5-ba21-35b269f64410","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:734","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:128","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String.length())"},"status":-2},{"failures":[],"tindex":"c32d9300-4c70-11e5-ba21-639d9705771b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalkUtils:160","type":"CtLocalVariableImpl","sourcecode":"final int int = 24 * 3600"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackReverseIndex:159","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.internal.storage.file.PackReverseIndex.binarySearch(long)"},"status":-2},{"failures":[8,9],"tindex":"c32d9301-4c70-11e5-ba21-ed0fdda9d9e3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.RemoteConfig:408","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.transport.RefSpec>.addAll(java.util.List<org.eclipse.jgit.transport.RefSpec>)"},"variableMap":{"specs":"push","fetch":"push"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteConfig:191","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.transport.RefSpec>.add(new org.eclipse.jgit.transport.RefSpec(java.lang.String))"},"status":-1},{"failures":[],"tindex":"c32d9302-4c70-11e5-ba21-f1dcae3faa0e","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.MergeResult:86","type":"CtReturnImpl","sourcecode":"return \"Fast-forward-squashed\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:387","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length())"},"status":-2},{"failures":[],"tindex":"c32d9303-4c70-11e5-ba21-17d66ae77694","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:464","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n    return false;\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:212","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[10,11,12,13],"tindex":"c32dba14-4c70-11e5-ba21-afef011726e1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:509","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String + \"/\""},"variableMap":{"remoteUrl":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.attributes.AttributesRule:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1))"},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"c32dba15-4c70-11e5-ba21-8d7bcea4e4bf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RefDatabase:300","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref != null)\n    return org.eclipse.jgit.lib.Ref;\n"},"variableMap":{"ref":"old"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:496","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref.isSymbolic()) {\n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.internal.storage.file.RefDirectory.org.eclipse.jgit.internal.storage.file.RefDirectory.recreate(org.eclipse.jgit.lib.Ref.getTarget(), org.eclipse.jgit.lib.ObjectIdRef);\n    return new org.eclipse.jgit.lib.SymbolicRef(org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.Ref);\n} "},"status":-1},{"failures":[],"tindex":"c32dba16-4c70-11e5-ba21-5737e59c4fb0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.PacketLineIn:105","type":"CtIfImpl","sourcecode":"if (\"NAK\".equals(java.lang.String))\n    return org.eclipse.jgit.transport.PacketLineIn.AckNackResult.org.eclipse.jgit.transport.PacketLineIn.AckNackResult;\n"},"variableMap":{"org.eclipse.jgit.transport.PacketLineIn.AckNackResult.NAK":"org.eclipse.jgit.transport.PacketLineIn.AckNackResult.ACK","line":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PacketLineIn:109","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 44)\n    return org.eclipse.jgit.transport.PacketLineIn.AckNackResult.org.eclipse.jgit.transport.PacketLineIn.AckNackResult;\n"},"status":-2},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"c32dba17-4c70-11e5-ba21-b1f08317eec5","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.PathFilterGroup:272","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"FAST(\")"},"variableMap":{"r":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:114","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"committer \")"},"status":-1},{"failures":[58,59,60,61,62],"tindex":"c32dba18-4c70-11e5-ba21-7b94902d7840","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:104","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"c32dba19-4c70-11e5-ba21-8bd997b8d1c1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:840","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"This is a combination of (.*) commits\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:591","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}