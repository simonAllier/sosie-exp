{"failureDictionary":{"org.eclipse.jgit.api.GitConstructionTest.testOpen":21,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":1,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsentGrowsWithObjects":75,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":46,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":0,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":63,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutMergeBranch":30,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":17,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":7,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":26,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":4,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":35,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsent":74,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":68,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.invalidRepositoryFormatVersion":18,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":66,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":58,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":16,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff1":37,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":13,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2":38,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":60,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":65,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":5,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":11,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":28,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":3,"org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection":47,"org.eclipse.jgit.lib.ConfigTest.test009_readNamesInSection":45,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch":29,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":25,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":72,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":24,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags":61,"org.eclipse.jgit.lib.ConfigTest.testEmptyString":48,"org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive":42,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":62,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":33,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout":55,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":15,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":22,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":36,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":10,"org.eclipse.jgit.lib.ConfigTest.testNoFinalNewline":49,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":6,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":14,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":23,"org.eclipse.jgit.lib.ConfigTest.test_ReadNamesInSectionRecursive":41,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":71,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutFetchSpec":32,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnNullWithoutMergeBranchForLocalBranch":34,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":77,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":69,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":67,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGetAndContains":76,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":8,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":2,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":9,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":20,"org.eclipse.jgit.lib.ConfigTest.test010_readNamesInSubSection":50,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":51,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":27,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":70,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion":19,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":44,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse1":52,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":56,"org.eclipse.jgit.lib.ConfigTest.testGetEnum":43,"org.eclipse.jgit.lib.ObjectIdTest.testSetByte":73,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags":57,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2":53,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":54,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":12,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo1":39,"org.eclipse.jgit.lib.BranchConfigTest.isRebase":31,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2":40,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":59,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":64},"transformations":[{"failures":[],"tindex":"a8c241d4-4c3c-11e5-b022-31dff63e8a76","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.StashDropCommand:210","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.zeroId()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:586","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ReflogEntry.getNewId()"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"a8c241d5-4c3c-11e5-b022-1746d099f1a5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:258","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.trim()"},"variableMap":{"str":"remoteName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.lib.Repository.getConfig().getString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String)"},"status":-1},{"failures":[],"tindex":"a8c241d6-4c3c-11e5-b022-7b3ae96a35ca","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalkUtils:121","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit != null)\n    org.eclipse.jgit.revwalk.RevWalk.markUninteresting(org.eclipse.jgit.revwalk.RevCommit);\n"},"status":-2},{"failures":[6,7,8,9,10,1,2,11,3,4,12,0,13,14,5,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"a8c268e7-4c3c-11e5-b022-c3171f65be1d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:1118","type":"CtIfImpl","sourcecode":"if (']' == int) {\n    org.eclipse.jgit.lib.Config.StringReader.reset();\n    break;\n} "},"variableMap":{"c":"c","in":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1208","type":"CtIfImpl","sourcecode":"if ('\\n' == int) {\n    if (boolean)\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    org.eclipse.jgit.lib.Config.StringReader.reset();\n    break;\n} "},"status":-1},{"failures":[],"tindex":"a8c268e8-4c3c-11e5-b022-4bb3383b8cc9","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:479","type":"CtLocalVariableImpl","sourcecode":"long long = org.eclipse.jgit.internal.storage.file.PackIndex.findOffset(org.eclipse.jgit.internal.storage.pack.ObjectToPack)"},"variableMap":{"otp":"objectId","idx":"packIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1:181","type":"CtLocalVariableImpl","sourcecode":"long long = org.eclipse.jgit.internal.storage.file.PackIndex.findOffset(org.eclipse.jgit.lib.AnyObjectId)"},"status":-2},{"failures":[],"tindex":"a8c268e9-4c3c-11e5-b022-41f5106be20a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackLock:91","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.LockFile.commit()"},"status":-2},{"failures":[],"tindex":"a8c268ea-4c3c-11e5-b022-adc8c5a7cbb6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddCommand:108","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.dircache.DirCache>.checkCallable()"},"status":0},{"failures":[],"tindex":"a8c268eb-4c3c-11e5-b022-73833a7508ff","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:464","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n    return false;\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FS_POSIX_Java6:110","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"a8c268ec-4c3c-11e5-b022-2d89b36a338f","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.MergeCommand:261","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RefUpdate.setExpectedOldObjectId(null)"},"variableMap":{"refUpdate":"localUpdate"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteRefUpdate:308","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RefUpdate.setRefLogMessage(\"push\", true)"},"status":0},{"failures":[],"tindex":"a8c28ffd-4c3c-11e5-b022-8f9c272d919a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ConfigSnapshot:137","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = new java.lang.String[int - int]"},"variableMap":{"end":"length","idx":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RenameBranchCommand:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = new java.lang.String[(java.lang.String[].int) + (java.lang.String[].int)]"},"status":-2},{"failures":[],"tindex":"a8c28ffe-4c3c-11e5-b022-658fd06c2036","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:653","type":"CtReturnImpl","sourcecode":"return byte[].clone()"},"variableMap":{"path":"res"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:114","type":"CtReturnImpl","sourcecode":"return byte[]"},"status":0},{"failures":[],"tindex":"a8c28fff-4c3c-11e5-b022-e51882a4772a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.SubmoduleUpdateCommand:153","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.submodule.SubmoduleWalk.getModulesPath()) == null)\n    continue;\n"},"variableMap":{"generator":"smw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:535","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Repository != null) {\n    try {\n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(\"HEAD\");\n        if ((org.eclipse.jgit.lib.ObjectId != null) && (!(org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId()))))\n            java.util.Set<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n        else if ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) {\n            org.eclipse.jgit.lib.IndexDiff org.eclipse.jgit.lib.IndexDiff = java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff>.get(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n            if (org.eclipse.jgit.lib.IndexDiff == null) {\n                org.eclipse.jgit.lib.IndexDiff = new org.eclipse.jgit.lib.IndexDiff(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId() , org.eclipse.jgit.lib.IndexDiff.WorkingTreeIteratorFactory.getWorkingTreeIterator(org.eclipse.jgit.lib.Repository));\n                java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff>.put(org.eclipse.jgit.submodule.SubmoduleWalk.getPath(), org.eclipse.jgit.lib.IndexDiff);\n            } \n            if (org.eclipse.jgit.lib.IndexDiff.diff()) {\n                if ((((((((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) == (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) && (org.eclipse.jgit.lib.IndexDiff.getAdded().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getChanged().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getConflicting().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getMissing().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getModified().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getRemoved().isEmpty())) {\n                    continue;\n                } \n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n            } \n        } \n    } finally {\n        org.eclipse.jgit.lib.Repository.close();\n    }\n} "},"status":-2},{"failures":[72,73,74,75,76],"tindex":"a8c29000-4c3c-11e5-b022-017edd43ccf1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.DateRevQueue:191","type":"CtReturnImpl","sourcecode":"return (int) | (org.eclipse.jgit.revwalk.Generator.int)"},"variableMap":{"outputType":"w","org.eclipse.jgit.revwalk.Generator.SORT_COMMIT_TIME_DESC":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.MutableObjectId:123","type":"CtReturnImpl","sourcecode":"return (int & -65281) | (int << 8)"},"status":-1},{"failures":[77],"tindex":"a8c29001-4c3c-11e5-b022-01da7e995f51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:219","type":"CtForImpl","sourcecode":"SCAN : for (int = int ; int < (int) ; int = int) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int);\n    if ((int - int) < ((org.eclipse.jgit.patch.CombinedHunkHeader.CombinedOldImage[].int) + 1)) {\n        break SCAN;\n    } \n    switch (byte[][int]) {\n        case ' ' :\n        case '-' :\n        case '+' :\n            break;\n        default :\n            break SCAN;\n    }\n    int int = 0;\n    for (int int = 0 ; int < (org.eclipse.jgit.patch.CombinedHunkHeader.CombinedOldImage[].int) ; int++) {\n        switch (byte[][(int + int)]) {\n            case '-' :\n                int++;\n                java.io.OutputStream[][int].write(byte[], int, (int - int));\n                continue;\n            case ' ' :\n                java.io.OutputStream[][int].write(byte[], int, (int - int));\n                continue;\n            case '+' :\n                continue;\n            default :\n                break SCAN;\n        }\n    }\n    if (int < (org.eclipse.jgit.patch.CombinedHunkHeader.CombinedOldImage[].int)) {\n        java.io.OutputStream[][org.eclipse.jgit.patch.CombinedHunkHeader.CombinedOldImage[].int].write(byte[], int, (int - int));\n    } \n}"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}