{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":138,"org.eclipse.jgit.transport.RemoteConfigTest.singlePushInsteadOf":2,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUnsupportedGroupCase1":38,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":135,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUnsupportedGroupCase0":37,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":99,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase3":59,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":90,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":106,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":73,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase0":56,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":131,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase2":58,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":61,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase1":57,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":63,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2":20,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":124,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":145,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":128,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test008_FailOnWrongVersion":12,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":93,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":103,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPunctGroupCase1":40,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPunctGroupCase0":39,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":104,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":143,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase3":48,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":67,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":120,"org.eclipse.jgit.util.StringUtilsTest.testToLowerCaseChar":16,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase2":47,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase4":49,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase3":53,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":105,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase4":54,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase1":51,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase2":52,"org.eclipse.jgit.transport.RemoteConfigTest.multiplePushInsteadOf":0,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":72,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine":11,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase5":55,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":80,"org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive":23,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase3":36,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":89,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase2":35,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":79,"org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput":17,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegateAllExceptJavaInSrc":32,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":125,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":30,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":134,"org.eclipse.jgit.transport.RemoteConfigTest.singleInsteadOf":3,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":132,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":130,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":96,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":95,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile":10,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":64,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":114,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":102,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase2":43,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase1":42,"org.eclipse.jgit.transport.RemoteConfigTest.multipleInsteadOf":1,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase0":41,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":113,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":140,"org.eclipse.jgit.lib.ConfigTest.testGetEnum":24,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase5":46,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":66,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase4":45,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":76,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase3":44,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2":28,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":146,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":92,"org.eclipse.jgit.util.RawSubStringPatternTest.testCaseInsensitive":13,"org.eclipse.jgit.api.GitConstructionTest.testWrap":112,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":137,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":81,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":97,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":109,"org.eclipse.jgit.api.GitConstructionTest.testOpen":111,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":107,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":68,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":26,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":123,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":147,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":98,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":78,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":75,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":7,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegationAllExceptJavaInSrcAndExceptChildDirInSrc":31,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":8,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":5,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":115,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":6,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":129,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":126,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":74,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":141,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":142,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":108,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":139,"org.eclipse.jgit.api.GitConstructionTest.testClose":110,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsKeywordCaseInsensitive":4,"org.eclipse.jgit.util.StringUtilsTest.testEqualsIgnoreCase4":15,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase1":34,"org.eclipse.jgit.lib.ConfigTest.test009_readNamesInSection":25,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase0":33,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":62,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":77,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":88,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":87,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":65,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase0":50,"org.eclipse.jgit.lib.ConfigTest.test008_readSectionNames":27,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":144,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":91,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine":9,"org.eclipse.jgit.lib.ConfigTest.test_ReadNamesInSectionRecursive":22,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":29,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":69,"org.eclipse.jgit.util.StringUtilsTest.testToLowerCaseString":14,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":119,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":60,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":82,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":84,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":85,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":100,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":118,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":116,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":127,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":71,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":136,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":101,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":133,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":86,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":94,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":121,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":117,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":70,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":148,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge":19,"org.eclipse.jgit.lib.ConfigTest.test006_readCaseInsensitive":18,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":122,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2":21,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":83},"transformations":[{"failures":[],"tindex":"c7ec0d6d-4c3d-11e5-a4c9-9d5fc065f1c4","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:209","type":"CtIfImpl","sourcecode":"if (int < 2)\n    int = 2;\n"},"variableMap":{"sz":"org.eclipse.jgit.lib.Constants.OBJ_BAD"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:376","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.FileMode.fromBits(int).getObjectType()) == (org.eclipse.jgit.lib.Constants.int))\n    throw new org.eclipse.jgit.errors.CorruptObjectException((\"invalid mode \" + int));\n"},"status":-2},{"failures":[],"tindex":"c7ec347e-4c3d-11e5-a4c9-d124ac9c8d49","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:205","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:599","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.blame.Candidate.getParent(0)"},"status":-2},{"failures":[],"tindex":"c7ec5b8f-4c3d-11e5-a4c9-1bf763b57b3c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:1093","type":"CtTryImpl","sourcecode":"try {\n    if (!(org.eclipse.jgit.lib.Repository.readDirCache().hasUnmergedPaths())) {\n        return org.eclipse.jgit.lib.RepositoryState.org.eclipse.jgit.lib.RepositoryState;\n    } \n} catch (java.io.IOException e) {\n}"},"variableMap":{"org.eclipse.jgit.lib.RepositoryState.MERGING_RESOLVED":"org.eclipse.jgit.lib.RepositoryState.REBASING_INTERACTIVE","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1085","type":"CtIfImpl","sourcecode":"if (new java.io.File(org.eclipse.jgit.lib.Repository.getDirectory() , \"rebase-merge/interactive\").exists())\n    return org.eclipse.jgit.lib.RepositoryState.org.eclipse.jgit.lib.RepositoryState;\n"},"status":-2},{"failures":[],"tindex":"c7ec5b90-4c3d-11e5-a4c9-b3cc03e69782","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:219","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(((java.lang.Integer.intValue()) - 1))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"c7ec5b91-4c3d-11e5-a4c9-a1d4887a4301","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.StringUtils:59","type":"CtForImpl","sourcecode":"for (char char = 'A' ; char <= 'Z' ; char++)\n    org.eclipse.jgit.util.StringUtils.char[][char] = ((char)('a' + (char - 'A')));"},"status":-1},{"failures":[31,32],"tindex":"c7ec5b92-4c3d-11e5-a4c9-4f47858c1953","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.IgnoreRule:108","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"/\" + (java.lang.String)"},"variableMap":{"pattern":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.FastIgnoreRule:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"status":-1},{"failures":[],"tindex":"c7ec5b93-4c3d-11e5-a4c9-b581bcffbab0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:346","type":"CtIfImpl","sourcecode":"if (' ' == byte)\n    break;\n"},"status":-2},{"failures":[],"tindex":"c7ec5b94-4c3d-11e5-a4c9-6bd91a22d117","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:222","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.FileUtils.delete(java.io.File, int)"},"status":0},{"failures":[],"tindex":"c7ec5b95-4c3d-11e5-a4c9-91ffec2cc5f6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:696","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.transport.PacketLineOut.writeString(((\"ERR \" + (org.eclipse.jgit.transport.ServiceMayNotContinueException.getMessage())) + \"\\n\"));\n    org.eclipse.jgit.transport.ServiceMayNotContinueException.setOutput();\n} catch (java.lang.Throwable err2) {\n}"},"variableMap":{"err":"readLock","pckOut":"readLock"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:625","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if ((java.io.RandomAccessFile) != null) {\n        try {\n            java.io.RandomAccessFile.close();\n        } catch (java.io.IOException err) {\n        }\n        java.io.RandomAccessFile = null;\n    } \n}"},"status":-2},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"c7ec82a6-4c3d-11e5-a4c9-95e9db4a9a06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:98","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"[:print:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange(' ' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:punct:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.PunctPattern.org.eclipse.jgit.fnmatch.GroupHead.PunctPattern);\n} else if (java.lang.String.equals(\"[:space:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern.org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern);\n} else if (java.lang.String.equals(\"[:upper:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.UpperPattern.org.eclipse.jgit.fnmatch.GroupHead.UpperPattern);\n} else if (java.lang.String.equals(\"[:xdigit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('0' , '9'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('a' , 'f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('A' , 'F'));\n} else if (java.lang.String.equals(\"[:word:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('_'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else {\n    final java.lang.String java.lang.String = java.lang.String.format(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    throw new org.eclipse.jgit.errors.InvalidPatternException(java.lang.String , java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"c7ec82a7-4c3d-11e5-a4c9-a589cb22ec73","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:285","type":"CtInvocationImpl","sourcecode":"java.util.HashMap<org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.Ref>.clear()"},"status":0},{"failures":[],"tindex":"c7ec82a8-4c3d-11e5-a4c9-5fa216214344","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportBundleFile:134","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.UnionInputStream:144","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.eclipse.jgit.util.io.UnionInputStream.head()"},"status":-2},{"failures":[60,61],"tindex":"c7ec82a9-4c3d-11e5-a4c9-b1d2d448e002","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:396","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String, int, int)"},"status":-1},{"failures":[],"tindex":"c7eca9ba-4c3d-11e5-a4c9-913ab40da6e6","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1087","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,110,111,111,112,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"c7eca9bb-4c3d-11e5-a4c9-97e4b8c6b8cc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:361","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : org.eclipse.jgit.transport.FetchConnection.getRefs()) {\n    if ((org.eclipse.jgit.transport.RefSpec.matchSource(org.eclipse.jgit.lib.Ref)) && (java.util.Set<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref)))\n        org.eclipse.jgit.transport.FetchProcess.want(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.transport.RefSpec.expandFromSource(org.eclipse.jgit.lib.Ref));\n    \n}"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}