{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":710,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":735,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":734,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":748,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":665,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchNone":632,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":659,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":528,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":386,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":220,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":279,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":357,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":531,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":680,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":51,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":230,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":32,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":366,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob":598,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_Negate_ALL":636,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":251,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":441,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":257,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":399,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors2":525,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors1":524,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit":34,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":181,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":317,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles":421,"org.eclipse.jgit.revwalk.LIFORevQueueTest.testClear":654,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":700,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":340,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":740,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":50,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":361,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":682,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit":33,"org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsNonBare":6,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpr":96,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":311,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk":121,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":26,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":692,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":694,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":136,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":273,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":310,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_And_NONE":646,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":419,"org.eclipse.jgit.merge.CherryPickTest.testRevert":726,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":38,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":739,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":217,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testClear":657,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":761,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot":100,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":349,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge":620,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":308,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":307,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":409,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":196,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":707,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit":39,"org.eclipse.jgit.api.BranchCommandTest.testDelete":201,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":248,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":698,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":347,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":500,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent":392,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":501,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":747,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad":113,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":666,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":497,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":498,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":499,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":37,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":423,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":89,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1":125,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2":126,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":427,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":27,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":683,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":554,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":733,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePath":130,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindowsOnUnix":110,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":380,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":369,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":565,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":738,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":334,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":404,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathSecondCheckout":112,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":556,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches":622,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows":134,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":182,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch":418,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":242,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":206,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":447,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":606,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":736,"org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits":445,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":605,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting":627,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":504,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":505,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":284,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":506,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":260,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":283,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":173,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":411,"org.eclipse.jgit.revwalk.DateRevQueueTest.testClear":603,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":502,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":28,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":238,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":503,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":291,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":477,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":388,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":479,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":478,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":585,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":719,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":43,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":481,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":367,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":480,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":586,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":88,"org.eclipse.jgit.api.GitConstructionTest.testClose":354,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":553,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1":596,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_MY_ALL":644,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":597,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_REVERSE":581,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testNone":651,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":287,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":281,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":559,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":146,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":70,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":219,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly":536,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":293,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":401,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test3":615,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test4":616,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1":613,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test2":614,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":619,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":48,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test5":617,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6":618,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":197,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":333,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":583,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":566,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":140,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":199,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches":156,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot":111,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":262,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgLpt1":131,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":263,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":507,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":508,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":509,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":724,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":299,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":750,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow":571,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagInvalidTaggerHeader3":14,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkTwoLevels":118,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":5,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_MY_ALL":642,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagInvalidTaggerHeader1":13,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":475,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":474,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":476,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testHasFlags":658,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag":190,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":375,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":176,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":202,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":90,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":323,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":62,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":686,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":754,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":85,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case":109,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":309,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":64,"org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter":449,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":59,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":345,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":521,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":520,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":522,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2":115,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1":114,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitsEmptyTree":599,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":271,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":688,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":378,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADSOnUnix":119,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter":569,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":718,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":534,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":348,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":210,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":142,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":232,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":360,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":381,"org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart":192,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":471,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":193,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardForced":433,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":473,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":472,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO":580,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":200,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":730,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":685,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":389,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":259,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":31,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":362,"org.eclipse.jgit.revwalk.RevWalkMergedIntoTest.testOldCommitWalk":623,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":723,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":261,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":353,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":326,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":312,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":424,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":549,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":704,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":541,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":537,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter":611,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":731,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":175,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":253,"org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter0":448,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":339,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":160,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":678,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":745,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTagHasNoTaggerHeader":21,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":463,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":679,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":168,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":677,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":341,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2":628,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":228,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":306,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":551,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":282,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":676,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":137,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":582,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":667,"org.eclipse.jgit.diff.HistogramDiffTest.testExceedsChainLength_DuringScanOfB":10,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_Default":575,"org.eclipse.jgit.diff.HistogramDiffTest.testExceedsChainLength_DuringScanOfA":9,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":163,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":400,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":469,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":468,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":298,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":359,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":252,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":470,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":337,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":751,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":297,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":157,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":218,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":54,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":183,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":701,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":139,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1OnUnix":135,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":527,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC":576,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkForNormalCase":589,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":145,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad":120,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":41,"org.eclipse.jgit.api.GitConstructionTest.testWrap":356,"org.eclipse.jgit.diff.HistogramDiffTest.testFallbackToMyersDiff":11,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":288,"org.eclipse.jgit.api.TagCommandTest.testTagging":166,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":540,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":84,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":587,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":86,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":712,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":539,"org.eclipse.jgit.revwalk.DateRevQueueTest.testHasFlags":604,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":144,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2":610,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":669,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":46,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":170,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case":108,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":151,"org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging":167,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":737,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":216,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":697,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase2":650,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase1":649,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":717,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":758,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":316,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":465,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":155,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":464,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":544,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter0":568,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":660,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":467,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":44,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":466,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":752,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":722,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":320,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":57,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":406,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":482,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":484,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":483,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":486,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":405,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":485,"org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneFIFO":601,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":250,"org.eclipse.jgit.transport.PushProcessTest.testPushResult":435,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":272,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":377,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":442,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":208,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":63,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":379,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":0,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":87,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":321,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":440,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":437,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":455,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":757,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":296,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":457,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":456,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":558,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":319,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForward":436,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":387,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":450,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchAll":633,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":358,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":451,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":61,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":452,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":681,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":453,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":295,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":454,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":198,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":221,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":461,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":460,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":462,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":73,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case":107,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":709,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateOnReject":430,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":191,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":530,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":382,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":330,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":439,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":301,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL":647,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":760,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross":653,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":91,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_NONE":634,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":264,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":542,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":178,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":397,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":171,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":65,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1":102,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2":103,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows3":104,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":346,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":30,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":364,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":363,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":749,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":47,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned":684,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":459,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":458,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":336,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":270,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible":561,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroOnSameCommit":594,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":55,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":744,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":237,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":66,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkSecondCheckout":129,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":40,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":45,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon":95,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":29,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":338,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":546,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":322,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":729,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":289,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":720,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":368,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":410,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":728,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":545,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3":609,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":69,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithZeroAsEnd":593,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject3":20,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1":607,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2":608,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject1":18,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject2":19,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":164,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":35,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":328,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":169,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":671,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows":133,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":67,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":351,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":703,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOk":94,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting":631,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix":106,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":408,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":231,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_And_NONE":645,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":269,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":286,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":68,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":71,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":434,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":226,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":304,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath":396,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":161,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2":128,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1":127,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":555,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":285,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":77,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":149,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":407,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk":101,"org.eclipse.jgit.api.NotesCommandTest.testListNotes":184,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":205,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":83,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":249,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":209,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":332,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":331,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":290,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE":635,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":188,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":420,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":365,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter":648,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":721,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":42,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":595,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":548,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgDotCon":97,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":187,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":147,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":159,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":562,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":444,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":213,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":214,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent":395,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":390,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":417,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":254,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":428,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":492,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":277,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":496,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":495,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":494,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":493,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":691,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":78,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":79,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":318,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":526,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder2":578,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":3,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder1":577,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":324,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":563,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":385,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":243,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":138,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithoutCommonAncestor":592,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":185,"org.eclipse.jgit.patch.GetTextTest.testGetText_NoBinary":8,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":174,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE":579,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":165,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":414,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":690,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":141,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":662,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":693,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":276,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange":695,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth2":573,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":550,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth3":574,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":313,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":268,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":656,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":225,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":224,"org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertOutOfOrder":600,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":92,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":207,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":702,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":755,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":708,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix":99,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":668,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead":696,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":255,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows":122,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":352,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":246,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":75,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":329,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":72,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":412,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateDisabled":438,"org.eclipse.jgit.api.BlameCommandTest.testRename":212,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoType2":23,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoType3":24,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":422,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits":446,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoType1":22,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":756,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":431,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTag":12,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":179,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":487,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":488,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":489,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":490,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":56,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":491,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":705,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":305,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":543,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":52,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":514,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":510,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":511,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":512,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1":117,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":513,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":82,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":302,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":53,"org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName":413,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":344,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":80,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix":105,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":211,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":403,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoType4":25,"org.eclipse.jgit.api.BranchCommandTest.testCreateAndList":195,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow":570,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToNullCommit":584,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":204,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":314,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":180,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_Or_NONE":640,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":153,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":154,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":663,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":689,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":275,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":258,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":235,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":315,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":343,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":716,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoTagHeader3":17,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoTagHeader2":16,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoTagHeader1":15,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":239,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":58,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_ALL":637,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":759,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testObjectDirectorySnapshot":572,"org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint":203,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":518,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":93,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":519,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_ALL":639,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":241,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix":132,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":515,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":670,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":384,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":516,"org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertTie":602,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":383,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":416,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":517,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":567,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":661,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":256,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":325,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":150,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":247,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":186,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":152,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":177,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":300,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":529,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS":123,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testSimple":652,"org.eclipse.jgit.revwalk.RevWalkResetTest.testRevFilterReceivesParsedCommits":612,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":664,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":402,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":425,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":222,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1OnUnix":98,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":215,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":74,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":370,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":741,"org.eclipse.jgit.api.GitConstructionTest.testOpen":355,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":1,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":342,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":335,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":236,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":547,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":552,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":60,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":234,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":426,"org.eclipse.jgit.revwalk.LIFORevQueueTest.testHasFlags":655,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":158,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":245,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":746,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":148,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":732,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithMerges":591,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":560,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":280,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting":630,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgCon":124,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":714,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":7,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":557,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":172,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_Or_NONE":638,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":143,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":76,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":292,"org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName":429,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":240,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting":629,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":398,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":49,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":266,"org.eclipse.jgit.api.NameRevCommandTest.onePathMerge":394,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":233,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":588,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":294,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":327,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":538,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":376,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":711,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":227,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":415,"org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor":393,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":443,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":81,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":229,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":533,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon1":116,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":532,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroWhenMergedInto":590,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":303,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":535,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":350,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":267,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":432,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":675,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":674,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":727,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":244,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":371,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":673,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit":189,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory":523,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":672,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":373,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":715,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":374,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":687,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":706,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":713,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":742,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NO_MERGES":641,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":274,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":743,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_ALL":643,"org.eclipse.jgit.merge.CherryPickTest.testPick":725,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":753,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":162,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":699,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsNoMerge":391,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":194,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":265,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1":624,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":278,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3":626,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2":625,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":564,"org.eclipse.jgit.api.RevertCommandTest.testRevert":223,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits":621,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":372},"transformations":[{"failures":[],"tindex":"432bdae1-4c6a-11e5-a49f-f147dfe03cb4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:399","type":"CtForImpl","sourcecode":"for (int int = 0 ; (int < int) && (int < int) ; int++ , int++)\n    if ((byte[][int]) != (byte[][int]))\n        return false;\n    "},"variableMap":{"a":"git","aOff":"ptr","e":"git","aLen":"g","eLen":"g"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:584","type":"CtIfImpl","sourcecode":"if ((byte[][int++]) != (byte[][int++]))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"432c01f2-4c6a-11e5-a49f-35a7c3f4affa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:244","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.clearReuseAsIs()"},"status":0},{"failures":[0,0,1,1,2,2,3,3],"tindex":"432c01f3-4c6a-11e5-a49f-a7c7b3a7e43e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.PathFilter:79","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0)\n    throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"variableMap":{"path":"name","emptyPathNotPermitted":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:266","type":"CtDoImpl","sourcecode":"do {\n    org.eclipse.jgit.api.ArchiveCommand.FormatEntry = org.eclipse.jgit.api.ArchiveCommand.java.util.concurrent.ConcurrentMap<java.lang.String, org.eclipse.jgit.api.ArchiveCommand.FormatEntry>.get(java.lang.String);\n    if (org.eclipse.jgit.api.ArchiveCommand.FormatEntry == null) {\n        org.eclipse.jgit.api.ArchiveCommand.FormatEntry = new org.eclipse.jgit.api.ArchiveCommand.FormatEntry(org.eclipse.jgit.api.ArchiveCommand.Format<?> , 1);\n        continue;\n    } \n    if (!(org.eclipse.jgit.api.ArchiveCommand.FormatEntry.org.eclipse.jgit.api.ArchiveCommand.Format<?>.equals(org.eclipse.jgit.api.ArchiveCommand.Format<?>)))\n        throw new org.eclipse.jgit.api.errors.JGitInternalException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    \n    org.eclipse.jgit.api.ArchiveCommand.FormatEntry = new org.eclipse.jgit.api.ArchiveCommand.FormatEntry(org.eclipse.jgit.api.ArchiveCommand.FormatEntry.org.eclipse.jgit.api.ArchiveCommand.Format<?> , ((org.eclipse.jgit.api.ArchiveCommand.FormatEntry.int) + 1));\n} while (!org.eclipse.jgit.api.ArchiveCommand.(org.eclipse.jgit.api.ArchiveCommand.replace(org.eclipse.jgit.api.ArchiveCommand.java.util.concurrent.ConcurrentMap<java.lang.String, org.eclipse.jgit.api.ArchiveCommand.FormatEntry>, java.lang.String, org.eclipse.jgit.api.ArchiveCommand.FormatEntry, org.eclipse.jgit.api.ArchiveCommand.FormatEntry)) )"},"status":-1},{"failures":[4,5],"tindex":"432c2904-4c6a-11e5-a49f-453583eefa96","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:299","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<java.lang.String>.removeAll(java.util.ArrayList<java.lang.String>)"},"variableMap":{"removed":"updated","conflicts":"updated"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleUpdateCommand:206","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath())"},"status":-1},{"failures":[],"tindex":"432c2905-4c6a-11e5-a49f-0734da3723f6","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.NB:62","type":"CtLocalVariableImpl","sourcecode":"final int int = (int >>> 1) - (int >>> 1)"},"variableMap":{"a":"org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH","b":"org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:626","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.lib.Constants.int"},"status":-2},{"failures":[6],"tindex":"432c2906-4c6a-11e5-a49f-dd608c0aaec2","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.InitCommand:80","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RepositoryBuilder.setBare()"},"variableMap":{"builder":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.InitCommand:102","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RepositoryBuilder.setGitDir(java.io.File)"},"status":-1},{"failures":[],"tindex":"432c2907-4c6a-11e5-a49f-fddb29c9e0a3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:233","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"PUBLIC_READ\", java.lang.String))\n    java.lang.String = \"public-read\";\nelse\n    throw new java.lang.IllegalArgumentException((\"Invalid acl: \" + java.lang.String));\n"},"variableMap":{"acl":"badGroupHeader","pacl":"badGroupHeader"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1048","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String += char;\n} else if ((';' == char) || ('#' == char)) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = java.lang.String.valueOf(char);\n} else if (((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null) && (java.lang.Character.isWhitespace(char))) {\n    if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null)\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n    \n    org.eclipse.jgit.lib.ConfigLine.java.lang.String += char;\n} else if ('[' == char) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readSectionName(org.eclipse.jgit.lib.Config.StringReader);\n    int = org.eclipse.jgit.lib.Config.StringReader.read();\n    if ('\\\"' == int) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, true, '\\\"');\n        int = org.eclipse.jgit.lib.Config.StringReader.read();\n    } \n    if (']' != int)\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n} else if (org.eclipse.jgit.lib.ConfigLine != null) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n    org.eclipse.jgit.lib.Config.StringReader.reset();\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readKeyName(org.eclipse.jgit.lib.Config.StringReader);\n    if (org.eclipse.jgit.lib.ConfigLine.java.lang.String.endsWith(\"\\n\")) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String.substring(0, ((org.eclipse.jgit.lib.ConfigLine.java.lang.String.length()) - 1));\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.java.lang.String;\n    } else\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, false, -1);\n    \n} else\n    throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-2},{"failures":[],"tindex":"432c5018-4c6a-11e5-a49f-5934a00de64d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:852","type":"CtTryImpl","sourcecode":"try {\n    java.util.zip.GZIPOutputStream java.util.zip.GZIPOutputStream = new java.util.zip.GZIPOutputStream(org.eclipse.jgit.util.TemporaryBuffer);\n    org.eclipse.jgit.transport.TransportHttp.Service.HttpOutputStream.writeTo(java.util.zip.GZIPOutputStream, null);\n    java.util.zip.GZIPOutputStream.close();\n    if ((org.eclipse.jgit.transport.TransportHttp.Service.HttpOutputStream.length()) < (org.eclipse.jgit.util.TemporaryBuffer.length()))\n        org.eclipse.jgit.util.TemporaryBuffer = org.eclipse.jgit.transport.TransportHttp.Service.HttpOutputStream;\n    \n} catch (java.io.IOException err) {\n    org.eclipse.jgit.util.TemporaryBuffer = org.eclipse.jgit.transport.TransportHttp.Service.HttpOutputStream;\n}"},"variableMap":{"buf":"overflow","out":"overflow"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:332","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.close()"},"status":-2},{"failures":[7,8],"tindex":"432c5019-4c6a-11e5-a49f-23a23bba2c10","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:229","type":"CtReturnImpl","sourcecode":"return 12 + (int * int)"},"variableMap":{"len":"eol","entSize":"eol"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:318","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"432c501a-4c6a-11e5-a49f-47844b263dcb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner:76","type":"CtAssignmentImpl","sourcecode":"int[] = new int[]{  }"},"status":-2},{"failures":[],"tindex":"432c501b-4c6a-11e5-a49f-c19f730bab01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:299","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackWriter.setUseCachedPacks(true)"},"status":0},{"failures":[9,10,11],"tindex":"432c501c-4c6a-11e5-a49f-5fa7a9be8be1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:193","type":"CtForImpl","sourcecode":"for (int int = int[][int] ; int != 0 ; ) {\n    final long long = long[][int];\n    if (org.eclipse.jgit.diff.HashedSequenceComparator<S>.equals(org.eclipse.jgit.diff.HashedSequence<S>, org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recPtr(long), org.eclipse.jgit.diff.HashedSequence<S>, int)) {\n        int int = org.eclipse.jgit.diff.HistogramDiffIndex<S>.(org.eclipse.jgit.diff.HistogramDiffIndex.recCnt(long)) + 1;\n        if ((org.eclipse.jgit.diff.HistogramDiffIndex.int) < int)\n            int = org.eclipse.jgit.diff.HistogramDiffIndex.int;\n        \n        long[][int] = org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recCreate(org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recNext(long), int, int);\n        int[][(int - (int))] = org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recPtr(long);\n        int[][(int - (int))] = int;\n        continue SCAN;\n    } \n    int = org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recNext(long);\n    int++;\n}"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"432c772d-4c6a-11e5-a49f-fd4b765a0f49","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:268","type":"CtIfImpl","sourcecode":"if ((int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.lib.ObjectChecker.byte[])) < 0)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"no object header\");\n"},"status":-1},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,0,1,2,3,354,354,355,355,356,356,357,358,4,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761],"tindex":"432c772e-4c6a-11e5-a49f-716a5b3e8954","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:174","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.MutableObjectId.fromString(byte[], (int + 7))"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}