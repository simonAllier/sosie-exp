{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.absoluteGitDirRef":44,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":72,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":63,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":131,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTags":90,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":120,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":115,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":140,"org.eclipse.jgit.transport.URIishTest.testScpStyleNoURIDecoding":23,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtStart":98,"org.eclipse.jgit.lib.IndexDiffTest.testModified":52,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":64,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":141,"org.eclipse.jgit.transport.URIishTest.testGitSshProto":24,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":116,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":139,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":152,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":142,"org.eclipse.jgit.transport.URIishTest.testURIEncode_unicode":4,"org.eclipse.jgit.dircache.DirCacheFindTest.testEntriesWithin":82,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":113,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":69,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":84,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree":88,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":104,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":66,"org.eclipse.jgit.transport.RemoteConfigTest.testRemoveLastURI":36,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":37,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.relativeGitDirRef":43,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":53,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":86,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":39,"org.eclipse.jgit.transport.RemoteConfigTest.testAddURI":41,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort":10,"org.eclipse.jgit.transport.URIishTest.testRelativePath":21,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":46,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":135,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":138,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtEnd":97,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":121,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":54,"org.eclipse.jgit.transport.URIishTest.testGitProtoUnixPort":16,"org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection":2,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":67,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":94,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":117,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":150,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":122,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":129,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":68,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":128,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":106,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":107,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":144,"org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify":101,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":55,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":114,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":143,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":127,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":92,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127":78,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":99,"org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode":14,"org.eclipse.jgit.transport.RemoteConfigTest.testRemoveOnlyURI":42,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":91,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":136,"org.eclipse.jgit.transport.URIishTest.testURIEncode_0a":9,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":126,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":145,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":51,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":87,"org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde":19,"org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree":77,"org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserAbsolutePath":27,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion":81,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":96,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":71,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":149,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset":79,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":125,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":105,"org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree":76,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":123,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":108,"org.eclipse.jgit.transport.URIishTest.testGitProtoWindows":31,"org.eclipse.jgit.transport.RemoteConfigTest.testRemoveMiddleURI":35,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":118,"org.eclipse.jgit.lib.ConfigTest.test001_ReadBareKey":1,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":74,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":112,"org.eclipse.jgit.transport.URIishTest.testPathSeparator":22,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":132,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":58,"org.eclipse.jgit.transport.URIishTest.testFileProtoWindows":34,"org.eclipse.jgit.transport.URIishTest.testWindowsFile":25,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":137,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":56,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":134,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":133,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort":12,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":146,"org.eclipse.jgit.transport.URIishTest.testUnixFile":13,"org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications":100,"org.eclipse.jgit.transport.URIishTest.testURIEncode_00":8,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":111,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":147,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":62,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":47,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":65,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":48,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort":29,"org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserRelativePath":5,"org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications":103,"org.eclipse.jgit.transport.URIishTest.testUNC":6,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":75,"org.eclipse.jgit.transport.URIishTest.testSshGitProto":11,"org.eclipse.jgit.treewalk.ForPathTest.testFindObjects":89,"org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue":3,"org.eclipse.jgit.transport.URIishTest.testGitProtoWindowsPort":20,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":59,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath":80,"org.eclipse.jgit.transport.URIishTest.testScpStyleWithUser":18,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":95,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort":7,"org.eclipse.jgit.transport.URIishTest.testGetSet":28,"org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeleteTrickyNames":83,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications":102,"org.eclipse.jgit.transport.RemoteConfigTest.testRemoveFirstURI":40,"org.eclipse.jgit.transport.URIishTest.testSshProto":26,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":57,"org.eclipse.jgit.transport.URIishTest.testGitProtoUnix":33,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":85,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":61,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":70,"org.eclipse.jgit.transport.URIishTest.testFileProtoUnix":15,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":73,"org.eclipse.jgit.internal.storage.pack.IntSetTest.testAdd":93,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":50,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":119,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":148,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":124,"org.eclipse.jgit.transport.URIishTest.testUserPasswordAndPort":30,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":49,"org.eclipse.jgit.transport.URIishTest.testGitWithUserHome":32,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":110,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":109,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":45,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":151,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":130,"org.eclipse.jgit.transport.URIishTest.testWindowsFile2":17,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":60,"org.eclipse.jgit.lib.ConfigTest.test006_readCaseInsensitive":0,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":38},"transformations":[{"failures":[0,1,2,3],"tindex":"ec3abab9-4c4e-11e5-b7ad-8b29b9cee260","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:464","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n    return false;\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:324","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"ec3b08da-4c4e-11e5-b7ad-493fb8fe4963","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:1158","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.util.SystemReader.getInstance().checkPath(java.lang.String);\n} catch (org.eclipse.jgit.errors.CorruptObjectException e) {\n    return false;\n}"},"variableMap":{"refName":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:593","type":"CtIfImpl","sourcecode":"if (java.lang.String == java.lang.String)\n    return true;\n"},"status":-1},{"failures":[],"tindex":"ec3b08db-4c4e-11e5-b7ad-a1f5efd2f144","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:417","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.cleanUpConflicts()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:740","type":"CtIfImpl","sourcecode":"if (boolean)\n    org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\nelse\n    org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n"},"status":0},{"failures":[43,44,45,46,47,48,49],"tindex":"ec3b08dc-4c4e-11e5-b7ad-9d87cc3236ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:604","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.setGitDir(org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.org.eclipse.jgit.lib.BaseRepositoryBuilder.getSymRef(org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.getWorkTree(), java.io.File, org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.safeFS()))"},"status":-1},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"ec3b2fed-4c4e-11e5-b7ad-db179ecf44a7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:104","type":"CtReturnImpl","sourcecode":"return !(org.eclipse.jgit.util.SystemReader.getInstance().isMacOS())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:527","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"ec3b2fee-4c4e-11e5-b7ad-c54cf1f47ae3","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.AnyObjectId:524","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.lib.AbbreviatedObjectId.mask(int, 5, int)"},"variableMap":{"len":"modeO","w5":"modeO"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:492","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.merge.ResolveMerger.mergeFileModes(int, int, int)"},"status":-2},{"failures":[],"tindex":"ec3b2fef-4c4e-11e5-b7ad-255e091a74a8","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:175","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return 0;\n} "},"variableMap":{"nibbles":"nextIdx","b":"nextIdx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:810","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"ec3b2ff0-4c4e-11e5-b7ad-b51323c2886c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:616","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid name \\'AUX\\'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.FastIgnoreRule:82","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Pattern must not be null!\")"},"status":-2},{"failures":[90],"tindex":"ec3b5701-4c4e-11e5-b7ad-d9a419e770f7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.MergeCommand:418","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevWalk != null)\n    org.eclipse.jgit.revwalk.RevWalk.release();\n"},"variableMap":{"revWalk":"walk"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:282","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.ObjectId != null) && ((org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.ObjectId)) instanceof org.eclipse.jgit.revwalk.RevTag))\n    org.eclipse.jgit.api.NameRevCommand.addRef(org.eclipse.jgit.lib.Ref);\n"},"status":-1},{"failures":[],"tindex":"ec3b5702-4c4e-11e5-b7ad-9b187e8736d8","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1347","type":"CtWhileImpl","sourcecode":"while ((org.eclipse.jgit.internal.storage.pack.DeltaTask.long) <= (long / long))\n    long <<= 10;"},"variableMap":{"bytesPerUnit":"position","totalWeight":"position","org.eclipse.jgit.internal.storage.pack.DeltaTask.MAX_METER":"position"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:316","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCursor.pin(org.eclipse.jgit.internal.storage.file.PackFile, long)"},"status":0},{"failures":[91,92,93],"tindex":"ec3b5703-4c4e-11e5-b7ad-1b337ee89032","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:958","type":"CtIfImpl","sourcecode":"if (int < 6)\n    return false;\n"},"variableMap":{"n":"low"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.IntSet:67","type":"CtIfImpl","sourcecode":"if (int < (int[][int]))\n    int = int;\nelse if (int == (int[][int]))\n    return false;\nelse\n    int = int + 1;\n"},"status":-1},{"failures":[],"tindex":"ec3b7e14-4c4e-11e5-b7ad-b9de68a3f387","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1145","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:599","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.blame.Candidate.getParent(0)"},"status":-2},{"failures":[94,95,96,57,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"ec3b7e15-4c4e-11e5-b7ad-f3b71425c25f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:236","type":"CtOperatorAssignmentImpl","sourcecode":"int -= org.eclipse.jgit.internal.storage.pack.DeltaEncoder.int"},"variableMap":{"org.eclipse.jgit.internal.storage.pack.DeltaEncoder.MAX_V2_COPY":"minBSize","cnt":"minBSize"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:272","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1},{"failures":[],"tindex":"ec3b7e16-4c4e-11e5-b7ad-4fcf882a71d6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectInserter:194","type":"CtIfImpl","sourcecode":"if (byte[] == null)\n    byte[] = byte[] = new byte[8192];\n"},"variableMap":{"b":"org.eclipse.jgit.patch.FileHeader.INDEX","tempBuffer":"org.eclipse.jgit.patch.FileHeader.RENAME_TO"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:450","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}