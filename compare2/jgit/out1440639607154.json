{"failureDictionary":{"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":153,"org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive":16,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":101,"org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline":15,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":49,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":133,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":79,"org.eclipse.jgit.transport.RefSpecTest.invalidWhenOnlyDestinationWildcard":107,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":152,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":31,"org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1":17,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile":7,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":201,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":140,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":142,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":191,"org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin":109,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":88,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode":5,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle":0,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":83,"org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange":4,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource":104,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":138,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":199,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":37,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle":2,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameModeChange":26,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":198,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":144,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":172,"org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatYearsMonths":196,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":180,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":195,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":188,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":69,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":46,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack1":65,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":32,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack2":66,"org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline":14,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":54,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":53,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":116,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":155,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":47,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":122,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":175,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":102,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":131,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":154,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":145,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":141,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation":103,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":93,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":150,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjects":77,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":52,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":95,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":51,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":38,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":62,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":85,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":117,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":118,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":143,"org.eclipse.jgit.api.GitConstructionTest.testClose":128,"org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk":10,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertWholeObject_Length12":59,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":55,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":50,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":41,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":149,"org.eclipse.jgit.transport.RefSpecTest.testExpandFromDestination_Wildcard":110,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":90,"org.eclipse.jgit.api.ApplyCommandTest.testModifyX":22,"org.eclipse.jgit.api.ApplyCommandTest.testModifyY":23,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":100,"org.eclipse.jgit.api.ApplyCommandTest.testModifyZ":24,"org.eclipse.jgit.api.ApplyCommandTest.testModifyE":21,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":151,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":161,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":197,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":86,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":189,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":135,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":169,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":163,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":99,"org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror":106,"org.eclipse.jgit.transport.RefSpecTest.invalidWhenOnlySourceWildcard":108,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":124,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":67,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":81,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":44,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":114,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode":3,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":111,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile":9,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1Sub":20,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":173,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":13,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":185,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree":61,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":33,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":121,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":182,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":137,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":176,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":119,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":92,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":162,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":139,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":190,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary":28,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":181,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":35,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":29,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":193,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":39,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":76,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":84,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":204,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":78,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":75,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":200,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode":8,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":126,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":74,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":40,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":186,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":184,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":68,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":179,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":64,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":178,"org.eclipse.jgit.api.ApplyCommandTest.testDeleteD":25,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":89,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":156,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":45,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":136,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":30,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":202,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":91,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":148,"org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100":6,"org.eclipse.jgit.api.GitConstructionTest.testWrap":130,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":113,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":56,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":58,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":164,"org.eclipse.jgit.api.GitConstructionTest.testOpen":129,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":36,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":82,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":123,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":34,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":132,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode":1,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":147,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":94,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":43,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":12,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":192,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":194,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":157,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":183,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":11,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":146,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase":63,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":96,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":115,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1":18,"org.eclipse.jgit.api.ApplyCommandTest.testAddA2":19,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":87,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne":60,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":171,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":170,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":57,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":125,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":120,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":127,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":174,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":203,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameWithoutContentChange":27,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":97,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":73,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":72,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":42,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":71,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":165,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":70,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":167,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":134,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":168,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":80,"org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart":105,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":160,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":158,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":112,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":187,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":177,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":159,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":98,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":48,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":166},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"8bda74e5-4c5c-11e5-a685-bbca49f023cd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.DaemonClient:104","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    java.lang.String = java.lang.String.substring(0, int);\n} "},"variableMap":{"nul":"score","cmd":"oldPath"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:410","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseOldName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-1},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"8bdac306-4c5c-11e5-a685-b7b31312feaa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:745","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.Git.wrap(org.eclipse.jgit.lib.Repository).reset()"},"variableMap":{"repo":"repo"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashCreateCommand:389","type":"CtInvocationImpl","sourcecode":"new org.eclipse.jgit.api.ResetCommand(org.eclipse.jgit.lib.Repository).setMode(org.eclipse.jgit.api.ResetCommand.ResetType.org.eclipse.jgit.api.ResetCommand.ResetType)"},"status":-1},{"failures":[],"tindex":"8bdac307-4c5c-11e5-a685-75edfdce8ab9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:444","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheTree = null"},"variableMap":{"tree":"currentSubtree"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:242","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheTree = org.eclipse.jgit.dircache.DirCacheTree"},"status":0},{"failures":[57,58,59],"tindex":"8bdaea18-4c5c-11e5-a685-2531f577e1c2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:695","type":"CtWhileImpl","sourcecode":"while ((byte[][++int]) != 0) {\n}"},"variableMap":{"raw":"delta","ptr":"deltaPtr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:290","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    java.lang.StringBuilder.append(\"  INSERT(\");\n    java.lang.StringBuilder.append(org.eclipse.jgit.util.QuotedString.org.eclipse.jgit.util.QuotedString.GitPathStyle.quote(org.eclipse.jgit.util.RawParseUtils.decode(byte[], int, (int + int))));\n    java.lang.StringBuilder.append(\")\\n\");\n    int += int;\n} else {\n    throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n}"},"status":-1},{"failures":[60,61],"tindex":"8bdaea19-4c5c-11e5-a685-8fac0baac9fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:127","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"8bdaea1a-4c5c-11e5-a685-7972342b2d8b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:113","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.MergeResult<S>.add(1, 0, 0, org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState)"},"variableMap":{"result":"result","org.eclipse.jgit.merge.MergeChunk.ConflictState.FIRST_CONFLICTING_RANGE":"org.eclipse.jgit.merge.MergeChunk.ConflictState.NO_CONFLICT"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:108","type":"CtIfImpl","sourcecode":"if ((S.size()) != 0) {\n    org.eclipse.jgit.diff.EditList org.eclipse.jgit.diff.EditList = org.eclipse.jgit.diff.DiffAlgorithm.diff(org.eclipse.jgit.diff.SequenceComparator<S>, S, S);\n    if (!(org.eclipse.jgit.diff.EditList.isEmpty())) {\n        org.eclipse.jgit.merge.MergeResult<S>.add(1, 0, 0, org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        org.eclipse.jgit.merge.MergeResult<S>.add(2, 0, S.size(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    } else\n        org.eclipse.jgit.merge.MergeResult<S>.add(1, 0, 0, org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    \n} else\n    org.eclipse.jgit.merge.MergeResult<S>.add(1, 0, 0, org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n"},"status":-2},{"failures":[],"tindex":"8bdaea1b-4c5c-11e5-a685-73cf83b613d8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:339","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.parseHeaders(org.eclipse.jgit.revwalk.RevObject)"},"status":0},{"failures":[62,63],"tindex":"8bdaea1c-4c5c-11e5-a685-b51928ebfa09","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1240","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.reset()"},"variableMap":{"c":"trackingCommit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BranchTrackingStatus:97","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevCommit)"},"status":-1},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"8bdaea1d-4c5c-11e5-a685-bf662335a758","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:142","type":"CtIfImpl","sourcecode":"if (boolean)\n    return null;\n"},"variableMap":{"isEmptyPack":"keepEmpty"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:429","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (org.eclipse.jgit.transport.PackParser.(getObjectCount()) == 0)) {\n    org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.cleanupTemporaryFiles();\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"8bdb112e-4c5c-11e5-a685-b5d8e5908100","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.NB:189","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= 8"},"variableMap":{"v":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:154","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":0},{"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,128,129,129,130,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,62,63,192,193,194,195],"tindex":"8bdb112f-4c5c-11e5-a685-91111352ec36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:140","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.RefSpec.(org.eclipse.jgit.transport.RefSpec.isWildcard(java.lang.String)) && org.eclipse.jgit.transport.RefSpec.(org.eclipse.jgit.transport.RefSpec.isWildcard(java.lang.String))) {\n    boolean = true;\n} else if (org.eclipse.jgit.transport.RefSpec.(org.eclipse.jgit.transport.RefSpec.isWildcard(java.lang.String)) || org.eclipse.jgit.transport.RefSpec.(org.eclipse.jgit.transport.RefSpec.isWildcard(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n} "},"status":-1},{"failures":[196],"tindex":"8bdb1130-4c5c-11e5-a685-e19334333a1c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:102","type":"CtReturnImpl","sourcecode":"return \"Basic\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RelativeDateFormatter:123","type":"CtReturnImpl","sourcecode":"return java.text.MessageFormat.format((long == 0 ? org.eclipse.jgit.internal.JGitText.get().java.lang.String : org.eclipse.jgit.internal.JGitText.get().java.lang.String), new java.lang.Object[]{ long , java.lang.String , long , java.lang.String })"},"status":-1},{"failures":[197,198,199,200,201,39,40,41,42,47,135,202,51,52,53,54,203],"tindex":"8bdb1131-4c5c-11e5-a685-0bfa3d23c07f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:329","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.update(org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryPathString(), org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryObjectId(), org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryFileMode())"},"status":-1},{"failures":[204],"tindex":"8bdb1132-4c5c-11e5-a685-9f6003d73bc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:147","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.submodule.SubmoduleWalk.setTree(org.eclipse.jgit.lib.AnyObjectId)"},"status":-1},{"failures":[],"tindex":"8bdb3843-4c5c-11e5-a685-9dd5a6989a27","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:123","type":"CtLocalVariableImpl","sourcecode":"java.util.List<org.eclipse.jgit.lib.Ref> java.util.List<org.eclipse.jgit.lib.Ref> = new java.util.LinkedList<org.eclipse.jgit.lib.Ref>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalkUtils:158","type":"CtLocalVariableImpl","sourcecode":"java.util.List<org.eclipse.jgit.lib.Ref> java.util.List<org.eclipse.jgit.lib.Ref> = new java.util.ArrayList<org.eclipse.jgit.lib.Ref>()"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}