{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.absoluteGitDirRef":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":39,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":36,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":21,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":87,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":111,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":85,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":77,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":93,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":95,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":101,"org.eclipse.jgit.lib.ValidRefNameTest.testValidTag":114,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":53,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":92,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":25,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.relativeGitDirRef":3,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":33,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":46,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":50,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":80,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":90,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":6,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":44,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":29,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":91,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":12,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":100,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":58,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":97,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":76,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":57,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":34,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":110,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":56,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":109,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":54,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":52,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":108,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":83,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":82,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":107,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":9,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":26,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":89,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":41,"org.eclipse.jgit.util.Base64Test.testEncode":102,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":28,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":61,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":47,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":79,"org.eclipse.jgit.api.GitConstructionTest.testWrap":65,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":38,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":68,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":15,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":66,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":86,"org.eclipse.jgit.api.GitConstructionTest.testOpen":64,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":98,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":7,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":20,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":94,"org.eclipse.jgit.lib.ValidRefNameTest.testRefLogQueryIsValidRef":113,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":30,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":32,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":48,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":67,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":63,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":60,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":13,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":1,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":51,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":2,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":8,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":35,"org.eclipse.jgit.util.Base64Test.testEncodeMatchesDecode":103,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":59,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":42,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":43,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":40,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":96,"org.eclipse.jgit.transport.PackParserTest.test1":105,"org.eclipse.jgit.api.GitConstructionTest.testClose":23,"org.eclipse.jgit.transport.PackParserTest.test2":106,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":24,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":116,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":10,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":62,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":75,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":74,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":27,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":22,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":45,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":78,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":84,"org.eclipse.jgit.lib.ValidRefNameTest.testContainsDot":115,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":11,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":69,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":71,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":72,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":88,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":112,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":17,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":0,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":18,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":99,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":14,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":37,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":5,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":55,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":73,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":81,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":104,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":49,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":19,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":16,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":31,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":70},"transformations":[{"failures":[],"tindex":"3865bb65-4c6f-11e5-8a6f-7bfdebcef49c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameResult:317","type":"CtIfImpl","sourcecode":"if ((int <= int) && (int < int))\n    int = int;\n"},"variableMap":{"resEnd":"connectionAttempts","start":"connectionAttempts","resLine":"connectionAttempts"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.int) == 0)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.int = int;\n        \n} "},"status":-2},{"failures":[],"tindex":"3865bb66-4c6f-11e5-8a6f-ad4aec3e644d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackReverseIndex:138","type":"CtLocalVariableImpl","sourcecode":"int int = int++"},"variableMap":{"nthByOffset":"groupStart"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:253","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.fnmatch.FileNameMatcher.org.eclipse.jgit.fnmatch.FileNameMatcher.findGroupEnd(int, java.lang.String)"},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"3865bb67-4c6f-11e5-8a6f-87ff494cfa65","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:577","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.setup()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:604","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.setGitDir(org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.org.eclipse.jgit.lib.BaseRepositoryBuilder.getSymRef(org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.getWorkTree(), java.io.File, org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.safeFS()))"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"3865e278-4c6f-11e5-8a6f-a56158f50c37","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:79","type":"CtReturnImpl","sourcecode":"return java.io.File.getParentFile()"},"variableMap":{"parentFile":"packdir"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:825","type":"CtReturnImpl","sourcecode":"return new java.io.File(java.io.File , ((\"pack-\" + java.lang.String) + java.lang.String))"},"status":-1},{"failures":[],"tindex":"3865e279-4c6f-11e5-8a6f-21845d50c0a6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:139","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(1000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:356","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk.setFilter(org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(java.util.List<java.lang.String>))"},"status":-2},{"failures":[24,25,26,27,28,29,30,0,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,23,23,64,64,65,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,5,89,90,6,91,92,93,94,95,96,97,98,99,100,101],"tindex":"3865e27a-4c6f-11e5-8a6f-3b6babaaaed9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:476","type":"CtIfImpl","sourcecode":"if (0 <= long)\n    return long;\n"},"status":-1},{"failures":[102,103],"tindex":"3865e27b-4c6f-11e5-8a6f-0bfc6bb9cb65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.Base64:128","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = org.eclipse.jgit.util.Base64.byte[][((int >>> 12) & 63)]"},"status":-1},{"failures":[],"tindex":"3865e27c-4c6f-11e5-8a6f-d71f9bf5e54c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:288","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)))\n    continue;\n"},"variableMap":{"org.eclipse.jgit.lib.Constants.R_HEADS":"org.eclipse.jgit.internal.storage.file.RefDirectory.PACKED_REFS_HEADER","n":"org.eclipse.jgit.internal.storage.file.RefDirectory.PACKED_REFS_PEELED"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:779","type":"CtWhileImpl","sourcecode":"while ((java.lang.String = java.io.BufferedReader.readLine()) != null) {\n    if ((java.lang.String.charAt(0)) == '#') {\n        if (java.lang.String.startsWith(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String)) {\n            java.lang.String = java.lang.String.substring(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String.length());\n            boolean = java.lang.String.contains(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String);\n        } \n        continue;\n    } \n    if ((java.lang.String.charAt(0)) == '^') {\n        if (org.eclipse.jgit.lib.Ref == null)\n            throw new java.io.IOException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String.substring(1));\n        org.eclipse.jgit.lib.Ref = new org.eclipse.jgit.lib.ObjectIdRef.PeeledTag(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.Ref.getObjectId() , org.eclipse.jgit.lib.ObjectId);\n        org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>.set(((org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>.size()) - 1), org.eclipse.jgit.lib.Ref);\n        continue;\n    } \n    int int = java.lang.String.indexOf(' ');\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String.substring(0, int));\n    java.lang.String java.lang.String = org.eclipse.jgit.internal.storage.file.RefDirectory.org.eclipse.jgit.internal.storage.file.RefDirectory.copy(java.lang.String, (int + 1), java.lang.String.length());\n    org.eclipse.jgit.lib.ObjectIdRef org.eclipse.jgit.lib.ObjectIdRef;\n    if (boolean)\n        org.eclipse.jgit.lib.ObjectIdRef = new org.eclipse.jgit.lib.ObjectIdRef.PeeledNonTag(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , java.lang.String , org.eclipse.jgit.lib.ObjectId);\n    else\n        org.eclipse.jgit.lib.ObjectIdRef = new org.eclipse.jgit.lib.ObjectIdRef.Unpeeled(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , java.lang.String , org.eclipse.jgit.lib.ObjectId);\n    \n    if ((org.eclipse.jgit.lib.Ref != null) && ((org.eclipse.jgit.lib.RefComparator.compareTo(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.ObjectIdRef)) > 0))\n        boolean = true;\n    \n    org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.ObjectIdRef);\n    org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.ObjectIdRef;\n}"},"status":-2},{"failures":[104,105,106,107,108,109,110,111,112,5,6],"tindex":"3866098d-4c6f-11e5-8a6f-d9885cac3f15","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:228","type":"CtInvocationImpl","sourcecode":"java.util.zip.CRC32.reset()"},"status":-1},{"failures":[],"tindex":"3866098e-4c6f-11e5-8a6f-8d89dbe1b5cb","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:729","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.internal.storage.file.FileSnapshot org.eclipse.jgit.internal.storage.file.FileSnapshot = org.eclipse.jgit.internal.storage.file.FileSnapshot.save(java.io.File)"},"variableMap":{"packDirectory":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:901","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.FileSnapshot org.eclipse.jgit.internal.storage.file.FileSnapshot = org.eclipse.jgit.internal.storage.file.FileSnapshot.save(java.io.File)"},"status":-2},{"failures":[],"tindex":"3866098f-4c6f-11e5-8a6f-8764f1305421","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:664","type":"CtInvocationImpl","sourcecode":"java.lang.System.runFinalization()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:806","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry)"},"status":0},{"failures":[],"tindex":"38660990-4c6f-11e5-8a6f-4dad730db188","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.PackParser:474","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ProgressMonitor.start(2)"},"variableMap":{"receiving":"pm"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:166","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ProgressMonitor.start(6)"},"status":0},{"failures":[],"tindex":"38660991-4c6f-11e5-8a6f-1fee320cdb71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:234","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.transport.FetchProcess.updateFETCH_HEAD(org.eclipse.jgit.transport.FetchResult);\n} catch (java.io.IOException err) {\n    throw new org.eclipse.jgit.errors.TransportException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.IOException.getMessage()) , java.io.IOException);\n}"},"status":0},{"failures":[113,114,115,116],"tindex":"386630a2-4c6f-11e5-8a6f-3bcfc8352097","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1196","type":"CtAssignmentImpl","sourcecode":"char = char"},"status":-1},{"failures":[],"tindex":"386630a3-4c6f-11e5-8a6f-9de9cac6d351","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:1020","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.dircache.DirCache.read(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:270","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.dircache.DirCache"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}