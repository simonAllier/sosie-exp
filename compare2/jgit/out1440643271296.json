{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":68,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":98,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":216,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":174,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":138,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":202,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":218,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":302,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":116,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":197,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":250,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":310,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob":149,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":266,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":44,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":168,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":188,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":58,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":158,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":340,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":284,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":115,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":306,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpr":421,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":334,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk":445,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":417,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":54,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":6,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":248,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":333,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":276,"org.eclipse.jgit.merge.CherryPickTest.testRevert":286,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":36,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":135,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":378,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":212,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot":425,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":192,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":331,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":330,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":270,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":65,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":56,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":264,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":368,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad":437,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":469,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1":449,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":281,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2":450,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":393,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":418,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":233,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":283,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePath":454,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindowsOnUnix":435,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":19,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":471,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":85,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":313,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":241,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":399,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":35,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":354,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":234,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows":458,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":189,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":292,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":157,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":205,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":171,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":204,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":180,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":272,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":314,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":176,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":2,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":296,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":108,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":3,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":311,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":465,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1":147,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":232,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":148,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":208,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":237,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":86,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":214,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":137,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":316,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile":379,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":91,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":388,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":113,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":353,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":1,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":242,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":472,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":172,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot":436,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":244,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgLpt1":455,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":301,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject":90,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":322,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":369,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkTwoLevels":442,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":154,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":380,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":14,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":183,"org.eclipse.jgit.notes.NoteMapTest.testEditFlat":367,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":470,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":344,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":47,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":415,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":413,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":155,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case":434,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":332,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents":151,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":94,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":101,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":364,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2":439,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitsEmptyTree":150,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1":438,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":49,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":392,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":17,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADSOnUnix":443,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":295,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":219,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":191,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":87,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":252,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":127,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":20,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":31,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":46,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":177,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":170,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":307,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":300,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":195,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":346,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":335,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":279,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":62,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":224,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":32,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":221,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":166,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":182,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":359,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":80,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":81,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":79,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":360,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":28,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":230,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":329,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":78,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":131,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":129,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes":389,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":0,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":70,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":119,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":152,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":396,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testIndexSize":477,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":305,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":321,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":357,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":370,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":320,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":136,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":120,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":190,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":59,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1OnUnix":459,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":25,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad":444,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":106,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":209,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":387,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":88,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":156,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":412,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":4,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":223,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":24,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs":385,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":111,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case":433,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":34,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":128,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":134,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":55,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":375,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":339,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":99,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":226,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":109,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":371,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":475,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":299,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":341,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":123,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":268,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":267,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout":468,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":391,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":16,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":466,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":416,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":18,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":464,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":342,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":40,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":319,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":42,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat":153,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":236,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":175,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":303,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":82,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":126,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":318,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":139,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":401,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":67,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case":432,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":21,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":350,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":43,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":324,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testFindSingleFile":163,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":103,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":377,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":245,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":185,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1":427,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2":428,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":365,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows3":429,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":309,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":383,"org.eclipse.jgit.dircache.DirCacheFindTest.testEntriesWithin":159,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":308,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":462,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":112,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned":394,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":356,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":467,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":247,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":121,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":397,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkSecondCheckout":453,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":110,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon":420,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":358,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":343,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":297,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":312,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":271,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":227,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":461,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":348,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":133,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":73,"org.eclipse.jgit.revwalk.ObjectWalkTest.testMarkUninterestingPropagation":146,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows":457,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":61,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":193,"org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged":210,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOk":419,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix":431,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":251,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":207,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":39,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":463,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId":381,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":327,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2":452,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1":451,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":206,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":9,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":405,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":269,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk":426,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":265,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":411,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":352,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique":89,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":351,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":198,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":277,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":298,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":107,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":145,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":228,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgDotCon":422,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":26,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":93,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":239,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":414,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":293,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":294,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":178,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":282,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":200,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":8,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":460,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":52,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":406,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":215,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":407,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":345,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":92,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":173,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":259,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":476,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":181,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":274,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":97,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":51,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":196,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":83,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":53,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":199,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":229,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":336,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":69,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":143,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":142,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":304,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":60,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":373,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":66,"org.eclipse.jgit.notes.NoteMapMergerTest.testDeleteDifferentNotes":386,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix":424,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":71,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":167,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":194,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows":446,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":262,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":403,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":349,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":400,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":273,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":278,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":374,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":37,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":186,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":122,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":63,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":328,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_ReverseGitSortOrder":164,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":225,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":117,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":130,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1":441,"org.eclipse.jgit.notes.NoteMapTest.testReadFlatTwoNotes":366,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":410,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":325,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":118,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":363,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":408,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix":430,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":45,"org.eclipse.jgit.dircache.DirCachePathEditTest.testPathEditShouldBeCalledForEachStage":161,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":337,"org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeletePathAndTreeNormalNames":162,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":187,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":84,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":382,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":50,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":249,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":169,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":255,"org.eclipse.jgit.api.PushCommandTest.testPush":29,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":338,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":362,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":257,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":124,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":7,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":376,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":474,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":258,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix":456,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":72,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":23,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":22,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":243,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":100,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":263,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":184,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree2":96,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":217,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":323,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS":447,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":398,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":140,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1OnUnix":423,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged":384,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":402,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":211,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":102,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":361,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":355,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":256,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":231,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":125,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":254,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":280,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":473,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":95,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":261,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":290,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":291,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":33,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":287,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":288,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":238,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":289,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":203,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgCon":448,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":235,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":179,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":213,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":41,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":404,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":315,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":395,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":114,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":246,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":253,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":5,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":317,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":222,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":347,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":15,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_InGitSortOrder":165,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":27,"org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeleteTrickyNames":160,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":275,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":409,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon1":440,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":220,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":326,"org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob":144,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":38,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":77,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":30,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":76,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":10,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":75,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":260,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":74,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":12,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":13,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":48,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":64,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":104,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":105,"org.eclipse.jgit.merge.CherryPickTest.testPick":285,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":372,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":390,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":132,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":57,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":201,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":240,"org.eclipse.jgit.api.RevertCommandTest.testRevert":141,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":11},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"13d9647e-4c65-11e5-bd80-2548a5b83b70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:268","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk = org.eclipse.jgit.revwalk.RevWalk"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"13db122f-4c65-11e5-bd80-e72688d9cdbb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:820","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"pack-\"))\n    java.util.Set<java.lang.String>.add(java.lang.String);\n"},"status":-1},{"failures":[134,135,136,137,138,139,140,141,142,143],"tindex":"13db3940-4c65-11e5-bd80-2bf3d5b9bd56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:146","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ObjectId == null)\n    org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId();\n"},"status":-1},{"failures":[],"tindex":"13db3941-4c65-11e5-bd80-833cf734ce54","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:529","type":"CtInvocationImpl","sourcecode":"java.io.FileOutputStream.close()"},"status":-2},{"failures":[],"tindex":"13dc71c2-4c65-11e5-bd80-25e6c1094a5f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:191","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.FileUtils.mkdir(java.io.File)"},"status":-2},{"failures":[],"tindex":"13dc71c3-4c65-11e5-bd80-d1664fc04fe7","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:813","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    byte[] = null;\n    throw new org.eclipse.jgit.errors.LargeObjectException.OutOfMemory(new java.lang.OutOfMemoryError());\n} "},"variableMap":{"data":"headerBuffer","cmds":"headerBuffer"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackOutputStream:192","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.getDeltaBaseId().copyRawTo(byte[], int)"},"status":-2},{"failures":[144,145,146,147,148,149,150,151,152,153],"tindex":"13dc71c4-4c65-11e5-bd80-d70585fc07a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:638","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.revwalk.RevObject>.add(org.eclipse.jgit.revwalk.RevTree)"},"status":-2},{"failures":[],"tindex":"13dc71c5-4c65-11e5-bd80-e5231436d506","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.FetchHeadRecord:72","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"tag\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"remote branch\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else {\n    java.lang.String = \"\";\n    java.lang.String = java.lang.String;\n}"},"variableMap":{"org.eclipse.jgit.lib.Constants.R_REMOTES":"user","name":"preferredAuthentications","sourceName":"keyword","org.eclipse.jgit.lib.Constants.R_TAGS":"strictHostKeyChecking","type":"keyword"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:217","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"User\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String);\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"Port\", java.lang.String)) {\n    try {\n        final int int = java.lang.Integer.parseInt(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n            if ((org.eclipse.jgit.transport.OpenSshConfig.Host.int) == 0)\n                org.eclipse.jgit.transport.OpenSshConfig.Host.int = int;\n            \n    } catch (java.lang.NumberFormatException nfe) {\n    }\n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"IdentityFile\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.io.File) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.io.File = org.eclipse.jgit.transport.OpenSshConfig.toFile(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"PreferredAuthentications\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.nows(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"BatchMode\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.Boolean) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.Boolean = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.yesno(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"StrictHostKeyChecking\", java.lang.String)) {\n    java.lang.String java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String);\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = java.lang.String;\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"ConnectionAttempts\", java.lang.String)) {\n    try {\n        final int int = java.lang.Integer.parseInt(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        if (int > 0) {\n            for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n                if ((org.eclipse.jgit.transport.OpenSshConfig.Host.int) == 0)\n                    org.eclipse.jgit.transport.OpenSshConfig.Host.int = int;\n                \n        } \n    } catch (java.lang.NumberFormatException nfe) {\n    }\n} "},"status":-2},{"failures":[],"tindex":"13dc98d6-4c65-11e5-bd80-51ae4705114b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.NoteMapMerger:297","type":"CtReturnImpl","sourcecode":"return ((org.eclipse.jgit.notes.Note != null) && (org.eclipse.jgit.notes.Note != null)) && (org.eclipse.jgit.lib.AnyObjectId.equals(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note))"},"variableMap":{"a":"expectedOldObjectId","b":"expectedOldObjectId"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteRefUpdate:361","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.lib.ObjectId) != null"},"status":0},{"failures":[154,155,156,157,158,7,8,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,137,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,10,11,12,13,14,15,16,212,17,18,19,20,21,22,23,213,24,25,214,26,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,152,153,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,44,396,45,83,84,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,127,128,129,130,131,132,133,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"tindex":"13dc98d7-4c65-11e5-bd80-9fe4df172ac1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.BlockList:174","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.min(int, ((org.eclipse.jgit.util.BlockList.int) - int))"},"variableMap":{"srcCnt":"entryCnt","org.eclipse.jgit.util.BlockList.BLOCK_SIZE":"entryCnt","i":"entryCnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:773","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[269],"tindex":"13dcbfe8-4c65-11e5-bd80-f98ab6d67879","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.BaseDirCacheEditor:111","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry[] = org.eclipse.jgit.dircache.DirCacheEntry[]"},"status":-1},{"failures":[],"tindex":"13dcbfe9-4c65-11e5-bd80-eb4662473fed","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:689","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"j":"matchShift"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:253","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    final int int = org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.NameConflictTreeWalk.int);\n    if (int < 0) {\n        (org.eclipse.jgit.treewalk.AbstractTreeIterator.int)++;\n        org.eclipse.jgit.treewalk.AbstractTreeIterator.next(1);\n        if (org.eclipse.jgit.treewalk.AbstractTreeIterator.eof()) {\n            org.eclipse.jgit.treewalk.AbstractTreeIterator.back(org.eclipse.jgit.treewalk.AbstractTreeIterator.int);\n            org.eclipse.jgit.treewalk.AbstractTreeIterator.int = 0;\n            break;\n        } \n    } else if (int == 0) {\n        org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n        org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n        break;\n    } else {\n        if ((org.eclipse.jgit.treewalk.AbstractTreeIterator.int) != 0) {\n            org.eclipse.jgit.treewalk.AbstractTreeIterator.back(org.eclipse.jgit.treewalk.AbstractTreeIterator.int);\n            org.eclipse.jgit.treewalk.AbstractTreeIterator.int = 0;\n        } \n        break;\n    }\n}"},"status":-2},{"failures":[477],"tindex":"13dcbfea-4c65-11e5-bd80-3b8ae51f6adf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:271","type":"CtReturnImpl","sourcecode":"return \"INDEX_DIFF_FILTER\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:436","type":"CtReturnImpl","sourcecode":"return (((\"DeltaIndex[\" + long) + \" \") + (java.lang.String[][int])) + \"]\""},"status":-1},{"failures":[416],"tindex":"13dcbfeb-4c65-11e5-bd80-6fa2905b69db","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.OpenSshConfig:315","type":"CtReturnImpl","sourcecode":"return java.lang.System.getProperty(\"user.name\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:765","type":"CtIfImpl","sourcecode":"if ((int--) == 1)\n    return org.eclipse.jgit.lib.CheckoutEntry.getFromBranch();\n"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}