{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":78,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":2,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":104,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":84,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":96,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":28,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":81,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":67,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":14,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":86,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":111,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":70,"org.eclipse.jgit.events.ConfigChangeEventTest.testFileRepository_ChangeEventsOnlyOnSave":116,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":38,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":21,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":23,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":60,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":72,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":8,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":18,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":41,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":19,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":6,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":110,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":0,"org.eclipse.jgit.dircache.DirCachePathEditTest.testPathEditShouldBeCalledForEachStage":57,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":20,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":65,"org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeletePathAndTreeNormalNames":58,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":112,"org.eclipse.jgit.util.ChangeIdUtilTest.testEmptyMessages":117,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":51,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":114,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":62,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":73,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":25,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":94,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":27,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":83,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":74,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":80,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":48,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":75,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":44,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":43,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":71,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":98,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":91,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":109,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":17,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":79,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":95,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":90,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":30,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":9,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":40,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":32,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":92,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":12,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":52,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":26,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":22,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":63,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":10,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":13,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":31,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":115,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":55,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":59,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":101,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":100,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":54,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":85,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":87,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":89,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":88,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":56,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":97,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":29,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":69,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":4,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":61,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":5,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":64,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":3,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":24,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":82,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":106,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":76,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":37,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":36,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":93,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":7,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":39,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":107,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":47,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":50,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":46,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":77,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":45,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":68,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":34,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":15,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":35,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":103,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":49,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":66,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":102,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":53,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":108,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":113,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":1,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":99,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":16,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":42,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":105,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":33},"transformations":[{"failures":[],"tindex":"49b7414f-4c71-11e5-a6f5-af38ae09fc63","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:664","type":"CtInvocationImpl","sourcecode":"java.lang.System.runFinalization()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleAddCommand:184","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.storage.file.FileBasedConfig.load()"},"status":-2},{"failures":[],"tindex":"49b76860-4c71-11e5-a6f5-a95c2e014209","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:432","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.treewalk.TreeWalk.next()) {\n    org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator);\n    org.eclipse.jgit.dircache.DirCacheIterator org.eclipse.jgit.dircache.DirCacheIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator);\n    org.eclipse.jgit.treewalk.WorkingTreeIterator org.eclipse.jgit.treewalk.WorkingTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator);\n    if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n        final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry();\n        if (org.eclipse.jgit.dircache.DirCacheEntry != null) {\n            int int = org.eclipse.jgit.dircache.DirCacheEntry.getStage();\n            if (int > 0) {\n                java.lang.String java.lang.String = org.eclipse.jgit.treewalk.TreeWalk.getPathString();\n                org.eclipse.jgit.lib.IndexDiff.addConflict(java.lang.String, int);\n                continue;\n            } \n        } \n    } \n    if (org.eclipse.jgit.treewalk.AbstractTreeIterator != null) {\n        if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n            if ((!(org.eclipse.jgit.treewalk.AbstractTreeIterator.idEqual(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryRawMode()) != (org.eclipse.jgit.dircache.DirCacheIterator.getEntryRawMode()))) {\n                if (((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.AbstractTreeIterator))) || (!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator)))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                    java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n                \n            } \n        } else {\n            if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.AbstractTreeIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n            if (org.eclipse.jgit.treewalk.WorkingTreeIterator != null)\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n        }\n    } else {\n        if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n            if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n        } else {\n            if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (!(org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored()))) {\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            } \n        }\n    }\n    if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n        if (org.eclipse.jgit.treewalk.WorkingTreeIterator == null) {\n            if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n        } else {\n            if (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry(), true, org.eclipse.jgit.treewalk.TreeWalk.getObjectReader())) {\n                if (((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || (!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.WorkingTreeIterator)))) || (((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) && ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode))))\n                    java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n                \n            } \n        }\n    } \n    for (int int = 0 ; int < (org.eclipse.jgit.treewalk.TreeWalk.getTreeCount()) ; int++) {\n        java.util.Set<java.lang.String> java.util.Set<java.lang.String> = java.util.Map<org.eclipse.jgit.lib.FileMode, java.util.Set<java.lang.String>>.get(org.eclipse.jgit.treewalk.TreeWalk.getFileMode(int));\n        java.lang.String java.lang.String = org.eclipse.jgit.treewalk.TreeWalk.getPathString();\n        if (java.lang.String != null) {\n            if (java.util.Set<java.lang.String> == null)\n                java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>();\n            \n            java.util.Set<java.lang.String>.add(java.lang.String);\n            java.util.Map<org.eclipse.jgit.lib.FileMode, java.util.Set<java.lang.String>>.put(org.eclipse.jgit.treewalk.TreeWalk.getFileMode(int), java.util.Set<java.lang.String>);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"49b78f71-4c71-11e5-a6f5-61c67edad234","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.RawTextComparator:79","type":"CtLocalVariableImpl","sourcecode":"int int = 5381"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:246","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recPtr(long)"},"status":-2},{"failures":[],"tindex":"49b78f72-4c71-11e5-a6f5-89aec8c587c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:158","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int + 1;\nelse if (int == 0)\n    return int;\nelse\n    int = int;\n"},"status":-2},{"failures":[],"tindex":"49b78f73-4c71-11e5-a6f5-e394c7ec81fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.PersonIdent:142","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.PersonIdent.this(java.lang.String, java.lang.String, java.util.Date.getTime(), ((java.util.TimeZone.getOffset(java.util.Date.getTime())) / (60 * 1000)))"},"status":-2},{"failures":[],"tindex":"49b78f74-4c71-11e5-a6f5-b1ab2c8f4ee0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:320","type":"CtIfImpl","sourcecode":"if ((long) != (-1))\n    long = (java.lang.System.currentTimeMillis()) - (long);\n"},"variableMap":{"expireAgeMillis":"key","expireDate":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.LongMap:85","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.LongMap.Node<V> == null)\n    org.eclipse.jgit.transport.LongMap.Node<V>[][org.eclipse.jgit.transport.LongMap<V>.index(long)] = org.eclipse.jgit.transport.LongMap.Node<V>.org.eclipse.jgit.transport.LongMap.Node<V>;\nelse\n    org.eclipse.jgit.transport.LongMap.Node<V>.org.eclipse.jgit.transport.LongMap.Node<V> = org.eclipse.jgit.transport.LongMap.Node<V>.org.eclipse.jgit.transport.LongMap.Node<V>;\n"},"status":-2},{"failures":[],"tindex":"49b78f75-4c71-11e5-a6f5-13c8619e0519","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.LeafBucket:100","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"low":"i","mid":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:959","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"49b78f76-4c71-11e5-a6f5-3f1976b1c270","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:81","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String.length()) ; int++)\n    org.eclipse.jgit.util.RawParseUtils.parseHexInt4(((byte)(java.lang.String.charAt(int))));"},"variableMap":{"id":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:772","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) && (org.eclipse.jgit.treewalk.NameConflictTreeWalk.isDirectoryFileConflict())) {\n    if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator == null) || (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))))\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    else\n        org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n    \n} else\n    org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"49b7b687-4c71-11e5-a6f5-d19688f18922","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:281","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaIndex = org.eclipse.jgit.internal.storage.pack.DeltaWindow.index(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)"},"variableMap":{"src":"ent","this":"this","srcIndex":"idx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:388","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaIndex = new org.eclipse.jgit.internal.storage.pack.DeltaIndex(org.eclipse.jgit.internal.storage.pack.DeltaWindow.buffer(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry))"},"status":-1},{"failures":[],"tindex":"49b7b688-4c71-11e5-a6f5-7b16d6071391","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.AutoCRLFInputStream:145","type":"CtIfImpl","sourcecode":"if ((int) < 1)\n    return false;\n"},"variableMap":{"cnt":"msz"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:272","type":"CtIfImpl","sourcecode":"if (int <= 8)\n    return org.eclipse.jgit.internal.storage.pack.DeltaWindow.boolean;\n"},"status":0},{"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,50,51,100,101,102,53,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"49b7b689-4c71-11e5-a6f5-0509d0c2dd79","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:159","type":"CtAssignmentImpl","sourcecode":"int = ((int << 5) + int) + int"},"variableMap":{"c":"eIdx","hash":"lastIdx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEditor:140","type":"CtAssignmentImpl","sourcecode":"int = boolean ? int : org.eclipse.jgit.dircache.DirCache.nextEntry(int)"},"status":-1},{"failures":[115],"tindex":"49b7b68a-4c71-11e5-a6f5-f9a3af7ec955","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_Win32:147","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    return new java.io.File(java.lang.String);\n"},"variableMap":{"homeShare":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:701","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    return org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.safeFS().resolve(org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.getGitDir(), java.lang.String).getCanonicalFile();\n"},"status":-1},{"failures":[116],"tindex":"49b7dd9b-4c71-11e5-a6f5-f98ab94daf81","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.events.ConfigChangedEvent:55","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.events.ConfigChangedListener.onConfigChanged(this)"},"status":-1},{"failures":[],"tindex":"49b7dd9c-4c71-11e5-a6f5-3f271054dfbc","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:247","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.storage.file.FileBasedConfig.load()"},"variableMap":{"repoConfig":"rc"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.storage.pack.PackConfig:708","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.storage.pack.PackConfig.setBigFileThreshold(org.eclipse.jgit.lib.Config.getInt(\"core\", \"bigfilethreshold\", org.eclipse.jgit.storage.pack.PackConfig.getBigFileThreshold()))"},"status":-2},{"failures":[117],"tindex":"49b7dd9d-4c71-11e5-a6f5-77894dfc48fc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:732","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ObjectId.isId(java.lang.String))\n    return org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String);\n"},"variableMap":{"revstr":"cleanMessage"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0)\n    return null;\n"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}