{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":10,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":35,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":3,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":42,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":19,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGit":49,"org.eclipse.jgit.lib.IndexDiffTest.testModified":13,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":4,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":24,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree":23,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":57,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":16,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy":9,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":44,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree":25,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":1,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":5,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":14,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":45,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree":22,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":0,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":18,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":38,"org.eclipse.jgit.treewalk.ForPathTest.testFindObjects":15,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":39,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath":29,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":33,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":8,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":6,"org.eclipse.jgit.lib.T0002_TreeTest.test006_addDeepTree":56,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree":28,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":40,"org.eclipse.jgit.lib.T0002_TreeTest.test002_addFile":55,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":7,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127":26,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":43,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":17,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":48,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":20,"org.eclipse.jgit.lib.T0002_TreeTest.test001_createEmpty":54,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":12,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":46,"org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree":32,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":36,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":11,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames5":50,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames6":51,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames7":52,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion":30,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":34,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset":27,"org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree":31,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":21,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":41,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":47,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":37,"org.eclipse.jgit.lib.T0002_TreeTest.test004_addTree":53},"transformations":[{"failures":[],"tindex":"4d3b5a25-4c83-11e5-ad19-bf13fed6ced0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:256","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RawText:151","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.util.IntList.get(((org.eclipse.jgit.util.IntList.size()) - 1))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"4d3b8136-4c83-11e5-ad19-419aebedb4fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:446","type":"CtIfImpl","sourcecode":"if ((int > 0) && (!org.eclipse.jgit.dircache.DirCacheTree.(org.eclipse.jgit.dircache.DirCacheTree.peq(byte[], byte[], int)))) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"4d3b8137-4c83-11e5-ad19-615db29a39ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:280","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.pack.DeltaIndex = org.eclipse.jgit.internal.storage.pack.DeltaWindow.index(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry);\n} catch (org.eclipse.jgit.errors.LargeObjectException tooBig) {\n    return org.eclipse.jgit.internal.storage.pack.DeltaWindow.boolean;\n} catch (java.io.IOException notAvailable) {\n    if (org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.org.eclipse.jgit.internal.storage.pack.ObjectToPack.isEdge())\n        return org.eclipse.jgit.internal.storage.pack.DeltaWindow.boolean;\n    \n    throw java.io.IOException;\n}"},"status":-2},{"failures":[],"tindex":"4d3b8138-4c83-11e5-ad19-491cb09f616a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryRename:94","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result"},"variableMap":{"org.eclipse.jgit.lib.RefUpdate.Result.IO_FAILURE":"org.eclipse.jgit.lib.RefUpdate.Result.NEW"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefUpdate:616","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.RefUpdate.Store.execute(org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result)"},"status":-2},{"failures":[49,50,51,52],"tindex":"4d3b8139-4c83-11e5-ad19-cb42e32646a7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:177","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0)\n    int = (byte[][int++]) & 255;\n"},"variableMap":{"deltaPtr":"ptr","delta":"raw","cmd":"ptr","copyOffset":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:385","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.add(org.eclipse.jgit.lib.ObjectChecker.normalize(byte[], int, int))))\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"duplicate entry names\");\n"},"status":-1},{"failures":[53,54,55,56],"tindex":"4d3ba84a-4c83-11e5-ad19-e9ac46266f23","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TreeEntry:162","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.TreeEntry.(getId()) == null"},"status":-1},{"failures":[],"tindex":"4d3ba84b-4c83-11e5-ad19-b9d6bade68ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ListBranchCommand:123","type":"CtAssignmentImpl","sourcecode":"java.util.List<org.eclipse.jgit.lib.Ref> = new java.util.ArrayList<org.eclipse.jgit.lib.Ref>(org.eclipse.jgit.api.ListBranchCommand.filterRefs(java.util.Collection<org.eclipse.jgit.lib.Ref>))"},"status":-2},{"failures":[],"tindex":"4d3ba84c-4c83-11e5-ad19-1776c0726f15","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getGlobalListenerList().dispatch(new org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashCreateCommand:357","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEditor.finish()"},"status":-2},{"failures":[],"tindex":"4d3ba84d-4c83-11e5-ad19-13c2353b8339","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportLocal:104","type":"CtReturnImpl","sourcecode":"return java.util.Collections.singleton(\"file\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:629","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.treewalk.TreeWalk.addTree(new org.eclipse.jgit.dircache.DirCacheIterator(org.eclipse.jgit.internal.storage.file.FileRepository.readDirCache()));\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.internal.storage.file.FileRepository.resolve(org.eclipse.jgit.lib.Constants.java.lang.String);\n    if (org.eclipse.jgit.lib.ObjectId != null) {\n        org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.internal.storage.file.FileRepository);\n        org.eclipse.jgit.treewalk.TreeWalk.addTree(org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.lib.ObjectId));\n        org.eclipse.jgit.revwalk.RevWalk.dispose();\n        org.eclipse.jgit.revwalk.RevWalk = null;\n    } \n    org.eclipse.jgit.treewalk.TreeWalk.setFilter(org.eclipse.jgit.treewalk.filter.TreeFilter.org.eclipse.jgit.treewalk.filter.TreeFilter);\n    org.eclipse.jgit.treewalk.TreeWalk.setRecursive(true);\n    java.util.Set<org.eclipse.jgit.lib.ObjectId> java.util.Set<org.eclipse.jgit.lib.ObjectId> = new java.util.HashSet<org.eclipse.jgit.lib.ObjectId>();\n    while (org.eclipse.jgit.treewalk.TreeWalk.next()) {\n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.treewalk.TreeWalk.getObjectId(0);\n        switch ((org.eclipse.jgit.treewalk.TreeWalk.getRawMode(0)) & (org.eclipse.jgit.lib.FileMode.int)) {\n            case org.eclipse.jgit.lib.FileMode.int :\n            case org.eclipse.jgit.lib.FileMode.int :\n                continue;\n            case org.eclipse.jgit.lib.FileMode.int :\n            case org.eclipse.jgit.lib.FileMode.int :\n            case org.eclipse.jgit.lib.FileMode.int :\n                java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.ObjectId);\n                continue;\n            default :\n                throw new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String.format(\"%o\", java.lang.Integer.valueOf(org.eclipse.jgit.treewalk.TreeWalk.getRawMode(0))), (org.eclipse.jgit.lib.ObjectId == null ? \"null\" : org.eclipse.jgit.lib.ObjectId.name()), org.eclipse.jgit.treewalk.TreeWalk.getPathString(), org.eclipse.jgit.internal.storage.file.FileRepository.getIndexFile()));\n        }\n    }\n    return java.util.Set<org.eclipse.jgit.lib.ObjectId>;\n} finally {\n    if (org.eclipse.jgit.revwalk.RevWalk != null)\n        org.eclipse.jgit.revwalk.RevWalk.dispose();\n    \n    org.eclipse.jgit.treewalk.TreeWalk.release();\n}"},"status":-2},{"failures":[],"tindex":"4d3bcf5e-4c83-11e5-ad19-6dd7c4d77e76","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:206","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\".pack\"))\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - (\".pack\".length())));\n"},"variableMap":{"name":"characterClass"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:82","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"[:alpha:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n} else if (java.lang.String.equals(\"[:blank:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern(' '));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('\\t'));\n} else if (java.lang.String.equals(\"[:cntrl:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('\u0000' , '\u001f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern(''));\n} else if (java.lang.String.equals(\"[:digit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:graph:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('!' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:lower:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LowerPattern.org.eclipse.jgit.fnmatch.GroupHead.LowerPattern);\n} else if (java.lang.String.equals(\"[:print:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange(' ' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:punct:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.PunctPattern.org.eclipse.jgit.fnmatch.GroupHead.PunctPattern);\n} else if (java.lang.String.equals(\"[:space:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern.org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern);\n} else if (java.lang.String.equals(\"[:upper:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.UpperPattern.org.eclipse.jgit.fnmatch.GroupHead.UpperPattern);\n} else if (java.lang.String.equals(\"[:xdigit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('0' , '9'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('a' , 'f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('A' , 'F'));\n} else if (java.lang.String.equals(\"[:word:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('_'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else {\n    final java.lang.String java.lang.String = java.lang.String.format(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    throw new org.eclipse.jgit.errors.InvalidPatternException(java.lang.String , java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"4d3bf66f-4c83-11e5-ad19-bf238ff130aa","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEditor:151","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEditor.PathEdit.apply(org.eclipse.jgit.dircache.DirCacheEntry)"},"status":0},{"failures":[],"tindex":"4d3bf670-4c83-11e5-ad19-b326490f8f73","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.Status:192","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:506","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<java.lang.String> java.util.Set<java.lang.String> = java.util.Map<org.eclipse.jgit.lib.FileMode, java.util.Set<java.lang.String>>.get(org.eclipse.jgit.treewalk.TreeWalk.getFileMode(int))"},"status":-2},{"failures":[],"tindex":"4d3bf671-4c83-11e5-ad19-2790d502760f","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:157","type":"CtIfImpl","sourcecode":"if (int == '\\n')\n    break;\n"},"variableMap":{"c":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:180","type":"CtIfImpl","sourcecode":"if (boolean)\n    byte[][--int] = '-';\n"},"status":-2},{"failures":[],"tindex":"4d3bf672-4c83-11e5-ad19-773aa0566288","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:183","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit[] org.eclipse.jgit.revwalk.RevCommit[] = org.eclipse.jgit.revwalk.RevCommit[]"},"variableMap":{"pList":"parents"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:185","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.revwalk.RevCommit[] org.eclipse.jgit.revwalk.RevCommit[] = org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit[]"},"status":-2},{"failures":[57],"tindex":"4d3bf673-4c83-11e5-ad19-ffd68e55af78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:682","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, null, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}