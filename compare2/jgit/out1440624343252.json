{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":103,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":172,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":100,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":80,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementWithChangeIdInCommitMessage":1,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NoBodySobAndBug":27,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":143,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":171,"org.eclipse.jgit.util.ChangeIdUtilTest.testDirCacheAltersId":31,"org.eclipse.jgit.api.FetchCommandTest.testFetch":120,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":163,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":150,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":179,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":91,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBug_NonFooterLineAndSob":25,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":96,"org.eclipse.jgit.transport.RefSpecTest.invalidWhenWildcardBeforeText":63,"org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin":66,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":38,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":75,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":78,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":174,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":110,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":93,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":147,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":166,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking":34,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource":51,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":148,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugLineWithASpaceAndSob":14,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithBug_SubButNoBody":30,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":108,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":42,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":136,"org.eclipse.jgit.transport.RefSpecTest.testMaster":65,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":149,"org.eclipse.jgit.transport.RefSpecTest.invalidWhenWildcardBeforeTextAtEnd":44,"org.eclipse.jgit.util.ChangeIdUtilTest.testEmptyMessages":3,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":90,"org.eclipse.jgit.transport.RefSpecTest.invalidSlashAtStart":60,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":132,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAfterBugOrIssue":12,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":86,"org.eclipse.jgit.api.PushCommandTest.testPush":116,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":162,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommit":22,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":88,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":131,"org.eclipse.jgit.util.ChangeIdUtilTest.testTimeAltersId":8,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveTimeout":72,"org.eclipse.jgit.transport.RefSpecTest.testForceMasterMaster":45,"org.eclipse.jgit.util.ChangeIdUtilTest.testId":9,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":175,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAllTags":74,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":99,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":115,"org.eclipse.jgit.transport.RefSpecTest.invalidWhenMoreThanOneWildcardInSource":58,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NonFooterAndBugAndSob":23,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacement":29,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":97,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":95,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":169,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":168,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithoutFooter":26,"org.eclipse.jgit.transport.RefSpecTest.invalidSetDestination":70,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":39,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":123,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":146,"org.eclipse.jgit.transport.RefSpecTest.invalidDestinationDoubleSlashes":49,"org.eclipse.jgit.transport.RefSpecTest.testMasterMaster":52,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugBrackersAndSob":0,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":105,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":122,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":41,"org.eclipse.jgit.transport.RefSpecTest.testSetForceUpdate":59,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":140,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLineNoLineBreak":19,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":111,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":165,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":81,"org.eclipse.jgit.api.GitConstructionTest.testWrap":128,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":102,"org.eclipse.jgit.util.ChangeIdUtilTest.testClean":4,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":154,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":129,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugEmptyLineAndSob":28,"org.eclipse.jgit.api.GitConstructionTest.testOpen":127,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":153,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":151,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation":46,"org.eclipse.jgit.transport.RefSpecTest.testForceMaster":48,"org.eclipse.jgit.transport.RefSpecTest.invalidSourceDoubleSlashes":55,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":43,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLine":18,"org.eclipse.jgit.transport.RefSpecTest.invalidWhenMoreThanOneWildcardInDestination":61,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":178,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":112,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":130,"org.eclipse.jgit.transport.RefSpecTest.testSetDestination_SourceNull":68,"org.eclipse.jgit.util.ChangeIdUtilTest.testWithEndingURL":20,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":142,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs":32,"org.eclipse.jgit.util.ChangeIdUtilTest.testFirstParentAltersId":11,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":139,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":33,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":92,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":121,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":87,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":124,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":94,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":36,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":84,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":176,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":138,"org.eclipse.jgit.util.ChangeIdUtilTest.testKernelStyleFooter":10,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAlreadySetWithReplacement":13,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":106,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":107,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase":85,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":104,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":152,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithSpacesBeforeId":17,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessages":21,"org.eclipse.jgit.api.GitConstructionTest.testClose":126,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":117,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":37,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithSignedOffBy":16,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":141,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination":35,"org.eclipse.jgit.transport.RefSpecTest.testExpandFromDestination_Wildcard":67,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":161,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":160,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":40,"org.eclipse.jgit.util.ChangeIdUtilTest.testNoteInMiddle":24,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":79,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":114,"org.eclipse.jgit.transport.RefSpecTest.testSetSource":64,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":109,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":119,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":164,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommitWithSob_ButNoBody":7,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":82,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":170,"org.eclipse.jgit.transport.RefSpecTest.testDeleteMaster":56,"org.eclipse.jgit.util.ChangeIdUtilTest.testOnelinerFollowedByBlank":6,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":135,"org.eclipse.jgit.util.ChangeIdUtilTest.testATwoLines":5,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":155,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":157,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":144,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":158,"org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart":54,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":134,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":118,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":125,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":173,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":89,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":101,"org.eclipse.jgit.util.ChangeIdUtilTest.testOneliner":2,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":98,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":145,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessagesWithSignedOffBy":15,"org.eclipse.jgit.transport.RefSpecTest.testSplitLastColon":69,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":159,"org.eclipse.jgit.transport.RefSpecTest.testExpandFromDestination_NonWildcard":47,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":137,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":167,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":133,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":73,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":83,"org.eclipse.jgit.transport.RefSpecTest.invalidSetSource":53,"org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror":57,"org.eclipse.jgit.transport.RefSpecTest.invalidWhenWildcardAfterText":62,"org.eclipse.jgit.transport.RemoteConfigTest.testCreateOrigin":71,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":113,"org.eclipse.jgit.transport.RefSpecTest.testSetDestination":50,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveNoTags":76,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":177,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":77,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":156},"transformations":[{"failures":[],"tindex":"01da51c0-4c39-11e5-af9b-ef28dda8b994","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndex:131","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:271","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.eclipse.jgit.patch.FileHeader.byte[]"},"status":-2},{"failures":[],"tindex":"01da78d1-4c39-11e5-af9b-fb5a0d9c7b70","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.LsRemoteCommand:192","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.Transport.setOptionUploadPack(java.lang.String)"},"variableMap":{"uploadPack":"readingObjectsFromLocalRepositoryFailed","transport":"transport"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushProcess:186","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.RemoteRefUpdate org.eclipse.jgit.transport.RemoteRefUpdate : java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.values()) {\n    final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.transport.PushConnection.getRef(org.eclipse.jgit.transport.RemoteRefUpdate.getRemoteName());\n    final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref == null ? org.eclipse.jgit.lib.ObjectId.zeroId() : org.eclipse.jgit.lib.Ref.getObjectId();\n    if (org.eclipse.jgit.transport.RemoteRefUpdate.getNewObjectId().equals(org.eclipse.jgit.lib.ObjectId)) {\n        if (org.eclipse.jgit.transport.RemoteRefUpdate.isDelete()) {\n            org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n        } else {\n            org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n        }\n        continue;\n    } \n    if ((org.eclipse.jgit.transport.RemoteRefUpdate.isExpectingOldObjectId()) && (!(org.eclipse.jgit.transport.RemoteRefUpdate.getExpectedOldObjectId().equals(org.eclipse.jgit.lib.ObjectId)))) {\n        org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n        continue;\n    } \n    if ((org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.lib.ObjectId.zeroId())) || (org.eclipse.jgit.transport.RemoteRefUpdate.isDelete())) {\n        org.eclipse.jgit.transport.RemoteRefUpdate.setFastForward(true);\n        java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.put(org.eclipse.jgit.transport.RemoteRefUpdate.getRemoteName(), org.eclipse.jgit.transport.RemoteRefUpdate);\n        continue;\n    } \n    boolean boolean = true;\n    try {\n        org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.ObjectId);\n        final org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.transport.RemoteRefUpdate.getNewObjectId());\n        if (((!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit)) || (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit))) || (!(org.eclipse.jgit.revwalk.RevWalk.isMergedInto(((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject)), ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject))))))\n            boolean = false;\n        \n    } catch (org.eclipse.jgit.errors.MissingObjectException x) {\n        boolean = false;\n    } catch (java.lang.Exception x) {\n        throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.Transport.getURI() , java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Exception.getMessage()) , java.lang.Exception);\n    }\n    org.eclipse.jgit.transport.RemoteRefUpdate.setFastForward(boolean);\n    if ((!boolean) && (!(org.eclipse.jgit.transport.RemoteRefUpdate.isForceUpdate())))\n        org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n    else\n        java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.put(org.eclipse.jgit.transport.RemoteRefUpdate.getRemoteName(), org.eclipse.jgit.transport.RemoteRefUpdate);\n    \n}"},"status":-2},{"failures":[],"tindex":"01da78d2-4c39-11e5-af9b-1f6fb053152e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:312","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = org.eclipse.jgit.internal.storage.file.GC.java.lang.String;\n"},"variableMap":{"org.eclipse.jgit.internal.storage.file.GC.PRUNE_EXPIRE_DEFAULT":"path","pruneExpireStr":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1064","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.NameConflictTreeWalk.setFilter(org.eclipse.jgit.treewalk.filter.PathFilter.create(java.lang.String))"},"status":0},{"failures":[],"tindex":"01da78d3-4c39-11e5-af9b-35b9479f59fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackConnection:201","type":"CtIfImpl","sourcecode":"if (java.lang.String == (org.eclipse.jgit.transport.PacketLineIn.java.lang.String))\n    break;\n"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"01da78d4-4c39-11e5-af9b-9d3bab36fb8e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.StrategyRecursive:67","type":"CtReturnImpl","sourcecode":"return \"recursive\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:69","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\"(?i)(?m)^Signed-off-by:.*$\\n?\", \"\").replaceAll(\"(?m)^#.*$\\n?\", \"\").replaceAll(\"(?m)\\n\\n\\n+\", \"\\\\\\n\").replaceAll(\"\\\\n*$\", \"\").replaceAll(\"(?s)\\ndiff --git.*\", \"\").trim()"},"status":-1},{"failures":[],"tindex":"01da9fe5-4c39-11e5-af9b-51d7da6ef661","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackLock:85","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.endsWith(\"\\n\")))\n    java.lang.String += \"\\n\";\n"},"variableMap":{"msg":"receivePack"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PushCommand:147","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null)\n    org.eclipse.jgit.transport.Transport.setOptionReceivePack(java.lang.String);\n"},"status":0},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,126,127,127,128,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"tindex":"01da9fe6-4c39-11e5-af9b-2b4dfbbeeb75","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RenameBranchCommand:128","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n    java.lang.String = (org.eclipse.jgit.lib.Constants.java.lang.String) + (java.lang.String);\nelse {\n    java.lang.String = (org.eclipse.jgit.lib.Constants.java.lang.String) + (java.lang.String);\n}"},"variableMap":{"fullNewName":"spec","newName":"spec","org.eclipse.jgit.lib.Constants.R_HEADS":"spec","org.eclipse.jgit.lib.Constants.R_REMOTES":"spec","fullOldName":"spec"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:445","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!org.eclipse.jgit.transport.RefSpec.(org.eclipse.jgit.transport.RefSpec.isValid(java.lang.String))))\n    throw new java.lang.IllegalArgumentException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n"},"status":-1},{"failures":[179],"tindex":"01da9fe7-4c39-11e5-af9b-03faa1a55b3b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackLock:85","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.endsWith(\"\\n\")))\n    java.lang.String += \"\\n\";\n"},"variableMap":{"msg":"branch"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:218","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref == null)\n    org.eclipse.jgit.lib.Ref = org.eclipse.jgit.transport.FetchResult.getAdvertisedRef(((org.eclipse.jgit.lib.Constants.java.lang.String) + (java.lang.String)));\n"},"status":-1},{"failures":[],"tindex":"01da9fe8-4c39-11e5-af9b-29a55fd0370d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:484","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"zero length name\");\n"},"variableMap":{"end":"matchShift","ptr":"matchShift"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:261","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator.back(org.eclipse.jgit.treewalk.AbstractTreeIterator.int)"},"status":-2},{"failures":[],"tindex":"01dac6f9-4c39-11e5-af9b-efa69c04a4be","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:382","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" \")"},"variableMap":{"buf":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FormatError:109","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.patch.FormatError.getMessage())"},"status":0},{"failures":[],"tindex":"01dac6fa-4c39-11e5-af9b-2f823a2de901","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:258","type":"CtLocalVariableImpl","sourcecode":"byte byte"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:280","type":"CtLocalVariableImpl","sourcecode":"byte byte = byte[][(int + 1)]"},"status":-2},{"failures":[],"tindex":"01dac6fb-4c39-11e5-af9b-3b1bbc05c7cc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:328","type":"CtReturnImpl","sourcecode":"return ((org.eclipse.jgit.internal.storage.file.ByteArrayWindow)(org.eclipse.jgit.internal.storage.file.ByteWindow))"},"variableMap":{"window":"readLock"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:640","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if ((long) < (long + int))\n        int = ((int)((long) - long));\n    \n    final byte[] byte[] = new byte[int];\n    java.io.RandomAccessFile.seek(long);\n    java.io.RandomAccessFile.readFully(byte[], 0, int);\n    return new org.eclipse.jgit.internal.storage.file.ByteArrayWindow(this , long , byte[]);\n}"},"status":-2},{"failures":[],"tindex":"01dac6fc-4c39-11e5-af9b-f3c19cb9179d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:456","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"service=\")"},"variableMap":{"b":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:321","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String)"},"status":0},{"failures":[],"tindex":"01dac6fd-4c39-11e5-af9b-fb99b5173565","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:333","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(byte[][1])"},"status":-2},{"failures":[],"tindex":"01dac6fe-4c39-11e5-af9b-2b48577b61ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:278","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.fnmatch.FileNameMatcher.append(java.lang.String)"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}