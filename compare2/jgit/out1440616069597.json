{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":168,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross":127,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":146,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":145,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":156,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":129,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":90,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":92,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase3":181,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":85,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":157,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":60,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":79,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":150,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":76,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":132,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":130,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":54,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible":116,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":185,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":2,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":1,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":7,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":78,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":103,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":131,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":53,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testNameOnlyMatches":178,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":64,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":141,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":135,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":169,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":140,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":51,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":102,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":3,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":68,"org.eclipse.jgit.api.BranchCommandTest.testDelete":20,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testFileNameWildcards":176,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":155,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":5,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":48,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":110,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":144,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":31,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":72,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":71,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":119,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":149,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":74,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":136,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":182,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":111,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":15,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":183,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":117,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":147,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":17,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":18,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":0,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":186,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":36,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":189,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":134,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":61,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":89,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":66,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":109,"org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk":171,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testNone":125,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":114,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":14,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":4,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":38,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":8,"org.eclipse.jgit.patch.GetTextTest.testGetText_NoBinary":175,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":19,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":73,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":190,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":120,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":11,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":10,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":128,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":21,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":139,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":43,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":106,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":158,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":56,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":26,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":163,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":65,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":162,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":52,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":69,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":84,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":164,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":153,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":29,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":100,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":133,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":94,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":174,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":46,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":32,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":83,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardForced":87,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":142,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":151,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":57,"org.eclipse.jgit.revwalk.RevWalkMergedIntoTest.testOldCommitWalk":122,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":138,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":180,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":55,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":105,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":191,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":58,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":82,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":99,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":95,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":143,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":188,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":167,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":80,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":49,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":107,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":35,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":34,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":121,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":42,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":16,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":77,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":159,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":41,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":44,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":91,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testSimple":126,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":9,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":13,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":192,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":81,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":75,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":98,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":104,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":108,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":184,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":97,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":12,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":173,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":115,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":148,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase2":124,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase1":123,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":166,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":59,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":112,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":172,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":101,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":160,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":137,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":62,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":37,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":187,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":39,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":28,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":67,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":96,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":27,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":30,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":6,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":93,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":63,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":47,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":165,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":40,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":113,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":22,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForward":88,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":24,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":25,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":152,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":179,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testTargetWithoutLeadingSlash":177,"org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles":170,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":154,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateOnReject":86,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":161,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":33,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":70,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":45,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":118,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":23},"transformations":[{"failures":[],"tindex":"be5f8517-4c25-11e5-b66a-77155e938d65","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.FastIgnoreRule:117","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.ignore.internal.IMatcher = org.eclipse.jgit.ignore.internal.IMatcher"},"variableMap":{"matcher":"matcher","m":"matcher"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.attributes.AttributesRule:143","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.ignore.internal.IMatcher = org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(java.lang.String, java.lang.Character.valueOf(org.eclipse.jgit.ignore.FastIgnoreRule.char), boolean)"},"status":0},{"failures":[],"tindex":"be5fac28-4c25-11e5-b66a-43c2aa17a92d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:249","type":"CtAssignmentImpl","sourcecode":"java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.transport.Transport.org.eclipse.jgit.lib.Repository.getRefDatabase().getRefs(org.eclipse.jgit.lib.RefDatabase.java.lang.String)"},"status":-2},{"failures":[],"tindex":"be5fac29-4c25-11e5-b66a-abbf160e9715","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS:134","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class.forName(\"org.eclipse.jgit.util.Java7FSFactory\");\n    org.eclipse.jgit.util.FS.org.eclipse.jgit.util.FS.FSFactory = ((org.eclipse.jgit.util.FS.FSFactory)(java.lang.Class<?>.newInstance()));\n} catch (java.lang.ClassNotFoundException e) {\n    org.eclipse.jgit.util.FS.org.eclipse.jgit.util.FS.FSFactory = new org.eclipse.jgit.util.FS.FSFactory();\n} catch (java.lang.UnsupportedClassVersionError e) {\n    org.eclipse.jgit.util.FS.org.eclipse.jgit.util.FS.FSFactory = new org.eclipse.jgit.util.FS.FSFactory();\n} catch (java.lang.InstantiationException e) {\n    org.eclipse.jgit.util.FS.org.eclipse.jgit.util.FS.FSFactory = new org.eclipse.jgit.util.FS.FSFactory();\n} catch (java.lang.IllegalAccessException e) {\n    org.eclipse.jgit.util.FS.org.eclipse.jgit.util.FS.FSFactory = new org.eclipse.jgit.util.FS.FSFactory();\n}"},"variableMap":{"org.eclipse.jgit.util.FS.factory":"org.eclipse.jgit.util.FS.factory"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FS:133","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.util.FS.org.eclipse.jgit.util.FS.FSFactory) == null) {\n    try {\n        java.lang.Class<?> java.lang.Class<?> = java.lang.Class.forName(\"org.eclipse.jgit.util.Java7FSFactory\");\n        org.eclipse.jgit.util.FS.org.eclipse.jgit.util.FS.FSFactory = ((org.eclipse.jgit.util.FS.FSFactory)(java.lang.Class<?>.newInstance()));\n    } catch (java.lang.ClassNotFoundException e) {\n        org.eclipse.jgit.util.FS.org.eclipse.jgit.util.FS.FSFactory = new org.eclipse.jgit.util.FS.FSFactory();\n    } catch (java.lang.UnsupportedClassVersionError e) {\n        org.eclipse.jgit.util.FS.org.eclipse.jgit.util.FS.FSFactory = new org.eclipse.jgit.util.FS.FSFactory();\n    } catch (java.lang.InstantiationException e) {\n        org.eclipse.jgit.util.FS.org.eclipse.jgit.util.FS.FSFactory = new org.eclipse.jgit.util.FS.FSFactory();\n    } catch (java.lang.IllegalAccessException e) {\n        org.eclipse.jgit.util.FS.org.eclipse.jgit.util.FS.FSFactory = new org.eclipse.jgit.util.FS.FSFactory();\n    }\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169],"tindex":"be5fd33a-4c25-11e5-b66a-6506002e6bee","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:182","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.setRetainBody(true)"},"variableMap":{"revPool":"walker"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:147","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.revwalk.RevCommit.int) & (org.eclipse.jgit.revwalk.MergeBaseGenerator.int)) == 0)\n    org.eclipse.jgit.revwalk.RevCommit.parseHeaders(org.eclipse.jgit.revwalk.RevWalk);\n"},"status":-1},{"failures":[],"tindex":"be5ffa4b-4c25-11e5-b66a-fda7015d8449","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeMessageFormatter:102","type":"CtIfImpl","sourcecode":"if (!(java.util.List<java.lang.String>.isEmpty()))\n    java.util.List<java.lang.String>.add(org.eclipse.jgit.merge.MergeMessageFormatter.org.eclipse.jgit.merge.MergeMessageFormatter.joinNames(java.util.List<java.lang.String>, \"remote-tracking branch\", \"remote-tracking branches\"));\n"},"status":-2},{"failures":[170,171,172,173,174,175],"tindex":"be5ffa4c-4c25-11e5-b66a-db5feffb61de","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder:272","type":"CtLocalVariableImpl","sourcecode":"int int = int + (int)"},"variableMap":{"i":"c","index":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:306","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int)"},"status":-1},{"failures":[176,177,178],"tindex":"be5ffa4d-4c25-11e5-b66a-6317c9a9675b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.String java.lang.String = java.lang.String[][int];\n    if ((java.lang.String.length()) == 0)\n        continue;\n    \n    org.eclipse.jgit.fnmatch.FileNameMatcher.reset();\n    org.eclipse.jgit.fnmatch.FileNameMatcher.append(java.lang.String);\n    if ((org.eclipse.jgit.fnmatch.FileNameMatcher.isMatch()) && org.eclipse.jgit.ignore.IgnoreRule.(doesMatchDirectoryExpectations(boolean, int, java.lang.String[].int)))\n        return true;\n    \n}"},"status":-1},{"failures":[],"tindex":"be5ffa4e-4c25-11e5-b66a-939bc76151c4","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:446","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"variableMap":{"suffix":"pkt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:204","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":0},{"failures":[179,180],"tindex":"be5ffa4f-4c25-11e5-b66a-554ce625a452","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:382","type":"CtIfImpl","sourcecode":"if (!(java.io.File.delete()))\n    continue;\n"},"variableMap":{"tmp":"refFile"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:642","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.util.FS.exists(java.io.File)))\n    continue;\n"},"status":-1},{"failures":[181],"tindex":"be602160-4c25-11e5-b66a-0d70655be78a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:113","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('_'))"},"status":-1},{"failures":[],"tindex":"be602161-4c25-11e5-b66a-db63d7fb957f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:64","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.isSupported()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:251","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(java.io.OutputStream, byte[], 0)"},"status":-2},{"failures":[],"tindex":"be602162-4c25-11e5-b66a-5b9ce805f6cc","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackConnection:201","type":"CtIfImpl","sourcecode":"if (java.lang.String == (org.eclipse.jgit.transport.PacketLineIn.java.lang.String))\n    break;\n"},"variableMap":{"line":"org.eclipse.jgit.api.PullCommand.DOT","org.eclipse.jgit.transport.PacketLineIn.END":"missingConfigurationForKey"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PullCommand:240","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.String = org.eclipse.jgit.lib.Config.getString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String);\n    if (java.lang.String == null) {\n        java.lang.String java.lang.String = ((((org.eclipse.jgit.lib.ConfigConstants.java.lang.String) + (org.eclipse.jgit.api.PullCommand.java.lang.String)) + (java.lang.String)) + (org.eclipse.jgit.api.PullCommand.java.lang.String)) + (org.eclipse.jgit.lib.ConfigConstants.java.lang.String);\n        throw new org.eclipse.jgit.api.errors.InvalidConfigurationException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    } \n    if (org.eclipse.jgit.lib.ProgressMonitor.isCancelled())\n        throw new org.eclipse.jgit.api.errors.CanceledException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.internal.JGitText.get().java.lang.String));\n    \n    org.eclipse.jgit.api.FetchCommand org.eclipse.jgit.api.FetchCommand = new org.eclipse.jgit.api.FetchCommand(org.eclipse.jgit.lib.Repository);\n    org.eclipse.jgit.api.FetchCommand.setRemote(java.lang.String);\n    org.eclipse.jgit.api.FetchCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor);\n    org.eclipse.jgit.api.TransportCommand<org.eclipse.jgit.api.PullCommand, org.eclipse.jgit.api.PullResult>.configure(org.eclipse.jgit.api.FetchCommand);\n    org.eclipse.jgit.transport.FetchResult = org.eclipse.jgit.api.FetchCommand.call();\n} else {\n    java.lang.String = \"local repository\";\n    org.eclipse.jgit.transport.FetchResult = null;\n}"},"status":-2},{"failures":[],"tindex":"be604873-4c25-11e5-b66a-65e20fbdb90d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevBlob:76","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.eclipse.jgit.revwalk.RevObject.int"},"variableMap":{"flags":"r","org.eclipse.jgit.revwalk.RevObject.PARSED":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:250","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[182,183,184,185,186,187,106,115,188,189,190,191,192],"tindex":"be604874-4c25-11e5-b66a-a179ca2d6fcd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:475","type":"CtIfImpl","sourcecode":"if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n    java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n"},"status":-1},{"failures":[],"tindex":"be604875-4c25-11e5-b66a-29cca23be559","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportAmazonS3:272","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.startsWith(\"pack-\"))) || (!(java.lang.String.endsWith(\".pack\"))))\n    continue;\n"},"variableMap":{"n":"translatedText"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.nls.TranslationBundle:176","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Field.set(this, java.lang.String)"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}