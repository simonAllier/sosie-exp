{"failureDictionary":{"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testBinaryDetect":78,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":61,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":33,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":43,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation":80,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":38,"org.eclipse.jgit.util.io.AutoCRLFInputStreamTest.test":55,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":37,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":45,"org.eclipse.jgit.patch.GetTextTest.testGetText_BothISO88591":48,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":2,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":0,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":46,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":57,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":20,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":72,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testCRLF":74,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":70,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":49,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":71,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123":58,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":29,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":59,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":18,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":4,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":11,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":39,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":44,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource":81,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":65,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyOk":56,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":12,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testCR":76,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":27,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertWholeObject_Length12":63,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testLF":77,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":41,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine":69,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":13,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":24,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":66,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameModeChange":50,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":32,"org.eclipse.jgit.transport.RefSpecTest.testExpandFromDestination_Wildcard":84,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateLooseBlob":3,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":30,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":60,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":25,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":28,"org.eclipse.jgit.patch.GetTextTest.testGetText_NoBinary":47,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":23,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":22,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":62,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":36,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine":67,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameWithoutContentChange":52,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":64,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":42,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":21,"org.eclipse.jgit.lib.ObjectLoaderTest.testLargeObjectLoader":53,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testLFCR":75,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":6,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":7,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":10,"org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart":82,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":9,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testBinaryDontDetect":79,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":16,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile":68,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":26,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":54,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":15,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":19,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":40,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":14,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":17,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":8,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":34,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":31,"org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror":83,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":73,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":1,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderWithoutIndexLine":51,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":35,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":5},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"b6958f12-4c69-11e5-90c1-89df7486071d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:342","type":"CtIfImpl","sourcecode":"if (java.lang.String[] != null) {\n    for (java.lang.String java.lang.String : java.lang.String[]) {\n        if ((java.lang.String.length()) != ((org.eclipse.jgit.lib.Constants.int) - 2))\n            continue;\n        \n        try {\n            org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.fromString((java.lang.String + java.lang.String));\n            if ((org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(org.eclipse.jgit.lib.ObjectId)) == 0)\n                java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.ObjectId);\n            \n        } catch (java.lang.IllegalArgumentException notId) {\n            continue;\n        }\n        if ((java.util.Set<org.eclipse.jgit.lib.ObjectId>.size()) > (org.eclipse.jgit.internal.storage.file.ObjectDirectory.int))\n            return ;\n        \n    }\n} "},"status":-1},{"failures":[47,48,49,50,51,52],"tindex":"b6958f13-4c69-11e5-90c1-3f4c9ebe372d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate:133","type":"CtReturnImpl","sourcecode":"return \"fast forward\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:204","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.patch.FileHeader.getScriptText(new java.nio.charset.Charset[]{ java.nio.charset.Charset , java.nio.charset.Charset })"},"status":-1},{"failures":[53,54],"tindex":"b6958f14-4c69-11e5-90c1-5d4a456699cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectLoader:257","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write(byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"b6958f15-4c69-11e5-90c1-fb44f06e47e7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:280","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.parseHeaders(this)"},"variableMap":{"c":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1011","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObject.parseBody(this)"},"status":0},{"failures":[],"tindex":"b695b626-4c69-11e5-90c1-c7014680ecf7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.FileMode:195","type":"CtAssignmentImpl","sourcecode":"byte[] = new byte[]{ '0' }"},"variableMap":{"octalBytes":"treeData"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:127","type":"CtAssignmentImpl","sourcecode":"byte[] = byte[]"},"status":-2},{"failures":[55],"tindex":"b695b627-4c69-11e5-90c1-c513bcd3fbf8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.attributes.AttributesNode:108","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.min(int, int)"},"variableMap":{"patternEndTab":"i","patternEnd":"i","patternEndSpace":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.AutoCRLFInputStream:124","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[56,57,58,59,60,61,62,63],"tindex":"b695b628-4c69-11e5-90c1-311799210868","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:679","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.NB.encodeInt32(byte[], 0, org.eclipse.jgit.dircache.DirCache.int)"},"variableMap":{"tmp":"delta","org.eclipse.jgit.dircache.DirCache.EXT_TREE":"deltaPtr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:244","type":"CtDoImpl","sourcecode":"do {\n    int = (byte[][int++]) & 255;\n    long |= ((long)((int & 127))) << int;\n    int += 7;\n} while ((int & 128) != 0 )"},"status":-1},{"failures":[],"tindex":"b695b629-4c69-11e5-90c1-93c76538b7ac","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:379","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.file.FileRepository.loadSystemConfig();\n} catch (java.io.IOException e) {\n    throw new java.lang.RuntimeException(java.io.IOException);\n}"},"variableMap":{"e":"e","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:386","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.file.FileRepository.loadUserConfig();\n} catch (java.io.IOException e) {\n    throw new java.lang.RuntimeException(java.io.IOException);\n}"},"status":0},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"b695b62a-4c69-11e5-90c1-23fbeb05ca34","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.QuotedString:249","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.QuotedString.GitPathStyle.byte[]['\\t'] = 't'"},"variableMap":{"org.eclipse.jgit.util.QuotedString.GitPathStyle.quote":"bs"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.EolCanonicalizingInputStream:146","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = byte"},"status":-1},{"failures":[],"tindex":"b695b62b-4c69-11e5-90c1-570b2ae5cdb7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ConfigLine:102","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String == null))\n    return false;\n"},"variableMap":{"a":"path","b":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1088","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode)) && ((org.eclipse.jgit.lib.ObjectId == null) || (org.eclipse.jgit.lib.ObjectId.zeroId().equals(org.eclipse.jgit.lib.ObjectId))))\n    return org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId);\nelse\n    return !org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode));\n"},"status":-2},{"failures":[],"tindex":"b695b62c-4c69-11e5-90c1-af55df7057ea","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:532","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.NoMessageException(org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"variableMap":{"commitMessageNotSpecified":"invalidStageForPath"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, int, org.eclipse.jgit.dircache.DirCacheEntry.org.eclipse.jgit.dircache.DirCacheEntry.toString(byte[])))"},"status":-2},{"failures":[80,81,82,83,84],"tindex":"b695dd3d-4c69-11e5-90c1-7bc91f0510ff","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:298","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = ((java.lang.String) + \":\") + (java.lang.String)"},"variableMap":{"pass":"srcName","user":"srcName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:399","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"b695dd3e-4c69-11e5-90c1-73e641fbe77a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:197","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:707","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException()"},"status":-2},{"failures":[],"tindex":"b695dd3f-4c69-11e5-90c1-3f7ecdb4d7c6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:516","type":"CtLocalVariableImpl","sourcecode":"final int int = --(int)"},"variableMap":{"childCnt":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:144","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.lib.AbbreviatedObjectId.org.eclipse.jgit.lib.AbbreviatedObjectId.hexUInt32(byte[], (int + 8), int)"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}