{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.absoluteGitDirRef":6,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":82,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":181,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutMergeBranch":166,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":106,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":64,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsDotGit_CreateRepositoryFromWorkDirOnly":9,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":104,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":194,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":112,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":114,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":4,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":192,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":111,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":74,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.relativeGitDirRef":5,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":176,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":153,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":16,"org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection":161,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":116,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":145,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout":173,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":17,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":172,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":14,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":54,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack1":49,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack2":50,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":186,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":189,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":196,"org.eclipse.jgit.lib.ConfigTest.test010_readNamesInSubSection":162,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":88,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":99,"org.eclipse.jgit.lib.ConfigTest.testGetEnum":158,"org.eclipse.jgit.attributes.AttributesMatcherTest.testTargetWithoutLeadingSlash":29,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":94,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":148,"org.eclipse.jgit.lib.BranchConfigTest.isRebase":167,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":182,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":35,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":105,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":154,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":117,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":40,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":113,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":79,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":160,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":0,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":122,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjects":62,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":21,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":67,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":27,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":89,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":90,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":115,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions":156,"org.eclipse.jgit.api.GitConstructionTest.testClose":123,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":191,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":36,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":39,"org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest.test":199,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":121,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":76,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":197,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":180,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule":183,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":25,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":193,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":103,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutFetchSpec":168,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":134,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":71,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":130,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":23,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":66,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":31,"org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest.testBoundary":198,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":47,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":15,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":142,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":136,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":174,"org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum":163,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":96,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":51,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags":175,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":19,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":86,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":188,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":83,"org.eclipse.jgit.api.FetchCommandTest.testFetch":97,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":146,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":185,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_workDirSet":7,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":11,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":37,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":178,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":93,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":32,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":109,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":149,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":190,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":91,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":78,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":135,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":110,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":3,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":72,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":18,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags":179,"org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive":157,"org.eclipse.jgit.api.PushCommandTest.testPush":128,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":169,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":187,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":61,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":26,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":184,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":63,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":60,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":127,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnNullWithoutMergeBranchForLocalBranch":170,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":59,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":12,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":33,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":53,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":152,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":48,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":151,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":42,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":75,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":100,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":108,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":2,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":159,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":77,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":120,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":24,"org.eclipse.jgit.api.GitConstructionTest.testWrap":125,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":85,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":137,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromWorkDirOnly":8,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":43,"org.eclipse.jgit.api.GitConstructionTest.testOpen":124,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":81,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":38,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":20,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":95,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":155,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":119,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":80,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":52,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":201,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":98,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":171,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":101,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":10,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":22,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":41,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":118,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":200,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":68,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":87,"org.eclipse.jgit.attributes.AttributesMatcherTest.testFileNameWildcards":28,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":34,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":129,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":73,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch":165,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":1,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":144,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":143,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":126,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":92,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":131,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":147,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":69,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":58,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":57,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":56,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":138,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":55,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":140,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":107,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":141,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":65,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":195,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":133,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":45,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":102,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":46,"org.eclipse.jgit.attributes.AttributesMatcherTest.testNameOnlyMatches":30,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":84,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":164,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":13,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":150,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":132,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":70,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":44,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":139,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":177},"transformations":[{"failures":[],"tindex":"19ffcc63-4c5a-11e5-8352-8da8d23aa820","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.AddNoteCommand:100","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.notes.NoteMap.getNote(org.eclipse.jgit.revwalk.RevObject)"},"variableMap":{"id":"id","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RemoveNoteCommand:88","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(java.lang.String);\n    if (org.eclipse.jgit.lib.Ref != null) {\n        org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Ref.getObjectId());\n        org.eclipse.jgit.notes.NoteMap = org.eclipse.jgit.notes.NoteMap.read(org.eclipse.jgit.revwalk.RevWalk.getObjectReader(), org.eclipse.jgit.revwalk.RevCommit);\n    } \n    org.eclipse.jgit.notes.NoteMap.set(org.eclipse.jgit.revwalk.RevObject, null, org.eclipse.jgit.lib.ObjectInserter);\n    org.eclipse.jgit.api.RemoveNoteCommand.commitNoteMap(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.ObjectInserter, \"Notes removed by \\'git notes remove\\'\");\n    return org.eclipse.jgit.notes.NoteMap.getNote(org.eclipse.jgit.revwalk.RevObject);\n} catch (java.io.IOException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException);\n} finally {\n    org.eclipse.jgit.lib.ObjectInserter.release();\n    org.eclipse.jgit.revwalk.RevWalk.release();\n}"},"status":-2},{"failures":[0,1,2],"tindex":"19fff374-4c5a-11e5-8352-15db19b3ff91","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:962","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.revwalk.RevObject"},"variableMap":{"last":"untrackedCommit","obj":"untrackedCommit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:192","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevCommit.getParent(2))"},"status":-1},{"failures":[],"tindex":"19fff375-4c5a-11e5-8352-e7530040db50","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalkUtils:160","type":"CtLocalVariableImpl","sourcecode":"final int int = 24 * 3600"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.StartGenerator:124","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"19fff376-4c5a-11e5-8352-79fb10bd764c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:664","type":"CtInvocationImpl","sourcecode":"java.lang.System.runFinalization()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BatchingProgressMonitor:133","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.BatchingProgressMonitor.Task.end(this)"},"status":0},{"failures":[],"tindex":"19fff377-4c5a-11e5-8352-2f9a373da0fb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:293","type":"CtLocalVariableImpl","sourcecode":"final int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:260","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.revwalk.RevCommit[].int"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"19fff378-4c5a-11e5-8352-59039ff1a63c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:599","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.(getGitDir()) == null) && (org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.(getWorkTree()) != null)) {\n    java.io.File java.io.File = new java.io.File(org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.getWorkTree() , org.eclipse.jgit.lib.Constants.java.lang.String);\n    if (!(java.io.File.isFile()))\n        org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.setGitDir(java.io.File);\n    else\n        org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.setGitDir(org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.org.eclipse.jgit.lib.BaseRepositoryBuilder.getSymRef(org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.getWorkTree(), java.io.File, org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.safeFS()));\n    \n} "},"status":-1},{"failures":[28,29,30],"tindex":"19fff379-4c5a-11e5-8352-8387bab895ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:313","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[31,3,4,32,10,33,11,12,13,14,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,15,108,109,16,110,111,112,113,114,115,116,117,118,119,120,121,122,123,123,124,124,125,125,17,18,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,19,20,23,153,26,27,154,155],"tindex":"1a001a8a-4c5a-11e5-8352-cfaf71d35bba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackOutputStream:130","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1},{"failures":[156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,3,4,32,10,33,11,12,13,14,173,174,175,176,177,178,179,180,181,182,91,94,124,15,16,17,18,19,20,23,183,184,185,186,187,188,189,190,191,192,193,194,195,24,25,153,26,27],"tindex":"1a001a8b-4c5a-11e5-8352-3d13e51e3361","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:182","type":"CtIfImpl","sourcecode":"if (int == 0)\n    break;\n"},"variableMap":{"c":"eol"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1215","type":"CtIfImpl","sourcecode":"if (int == int)\n    break;\n"},"status":-1},{"failures":[],"tindex":"1a001a8c-4c5a-11e5-8352-1d155a94a520","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:464","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n    return false;\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:280","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.pack.DeltaIndex = org.eclipse.jgit.internal.storage.pack.DeltaWindow.index(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry);\n} catch (org.eclipse.jgit.errors.LargeObjectException tooBig) {\n    return org.eclipse.jgit.internal.storage.pack.DeltaWindow.boolean;\n} catch (java.io.IOException notAvailable) {\n    if (org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.org.eclipse.jgit.internal.storage.pack.ObjectToPack.isEdge())\n        return org.eclipse.jgit.internal.storage.pack.DeltaWindow.boolean;\n    \n    throw java.io.IOException;\n}"},"status":-2},{"failures":[],"tindex":"1a001a8d-4c5a-11e5-8352-35e4115edfa4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:234","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.revwalk.RevCommit.int) & int) == int)\n    continue;\n"},"variableMap":{"p":"next","flags":"length","carry":"oldDirLen"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:295","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final V[] V[] = V[][][int];\n    final V[] V[] = org.eclipse.jgit.lib.ObjectIdOwnerMap<V>.newSegment();\n    for (int int = 0 ; int < (V[].int) ; int++) {\n        V V = null;\n        V V = null;\n        V V;\n        for (V V = V[][int] ; V != null ; V = V) {\n            V = ((V)(V.org.eclipse.jgit.lib.ObjectIdOwnerMap.Entry));\n            if (((V.int) & int) == 0) {\n                V.org.eclipse.jgit.lib.ObjectIdOwnerMap.Entry = V;\n                V = V;\n            } else {\n                V.org.eclipse.jgit.lib.ObjectIdOwnerMap.Entry = V;\n                V = V;\n            }\n        }\n        V[][int] = V;\n        V[][int] = V;\n    }\n    V[][][(int + int)] = V[];\n}"},"status":-2},{"failures":[],"tindex":"1a00419e-4c5a-11e5-8352-5bbbd93bf955","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommitList:318","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObjectList.Block = new org.eclipse.jgit.revwalk.RevObjectList.Block(((org.eclipse.jgit.revwalk.RevObjectList.Block.int) + (org.eclipse.jgit.revwalk.RevObjectList.int)))"},"variableMap":{"s":"s","shift":"i","org.eclipse.jgit.revwalk.RevObjectList.BLOCK_SHIFT":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:394","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObjectList.Block = ((org.eclipse.jgit.revwalk.RevObjectList.Block)(org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][int]))"},"status":0},{"failures":[196,197],"tindex":"1a00419f-4c5a-11e5-8352-45e85c76e565","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMapMerger:169","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.notes.InMemoryNoteBucket.org.eclipse.jgit.notes.NonNoteEntry = org.eclipse.jgit.notes.NoteMapMerger.mergeNonNotes(org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.nonNotes(org.eclipse.jgit.notes.InMemoryNoteBucket), org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.nonNotes(org.eclipse.jgit.notes.InMemoryNoteBucket), org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.nonNotes(org.eclipse.jgit.notes.InMemoryNoteBucket))"},"status":-1},{"failures":[198,199,200,201],"tindex":"1a028b90-4c5a-11e5-8352-b11c1a75f78c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:170","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.java.util.zip.DeflaterOutputStream.write(byte[], 0, int)"},"variableMap":{"packOut":"out","buf":"b","compress":"out","n":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:107","type":"CtForImpl","sourcecode":"for (int int = int ; int < (int + int) ; ++int) {\n    final byte byte = byte[][int];\n    if (byte == '\\r') {\n        int = '\\r';\n    } else if (byte == '\\n') {\n        if ((int) != '\\r') {\n            if (int < int) {\n                java.io.OutputStream.write(byte[], int, (int - int));\n            } \n            java.io.OutputStream.write('\\r');\n            int = int;\n        } \n        int = -1;\n    } else {\n        int = -1;\n    }\n}"},"status":-1},{"failures":[],"tindex":"1a02d9b1-4c5a-11e5-8352-8d7f55a83919","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:247","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status)"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}