{"failureDictionary":{"org.eclipse.jgit.util.RefMapTest.testMerge_WithPrefix":136,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":155,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":173,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":36,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":152,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":17,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":31,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testUnpopAtFront":166,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":11,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":111,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":99,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":67,"org.eclipse.jgit.api.FetchCommandTest.testFetch":92,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":82,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":119,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":121,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":91,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":54,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":21,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":118,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":144,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":33,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":125,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":162,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":51,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":34,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":85,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":115,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":30,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort":176,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":116,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":160,"org.eclipse.jgit.lib.IndexDiffTest.testStageState":171,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":107,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":148,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":64,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":66,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":117,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":168,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":90,"org.eclipse.jgit.util.RefMapTest.testMerge_PackedLooseLoose":132,"org.eclipse.jgit.util.RefMapTest.testPut_CollapseResolved":137,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":110,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":18,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":123,"org.eclipse.jgit.api.PushCommandTest.testPush":60,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":81,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":109,"org.eclipse.jgit.util.RefMapTest.testRemove":140,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":22,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":28,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":170,"org.eclipse.jgit.transport.URIishTest.testFileProtocol":174,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":126,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":57,"org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode":178,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":59,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":55,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":53,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":88,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":87,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testEmpty":0,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":20,"org.eclipse.jgit.util.RefMapTest.testEntryTypeSet":139,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":24,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":38,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":169,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":172,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":145,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":95,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":114,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":7,"org.eclipse.jgit.util.RefMapTest.testPut_WithPrefix":138,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":39,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":49,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":94,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":157,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":147,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":70,"org.eclipse.jgit.util.RefMapTest.testEmpty_NoPrefix2":135,"org.eclipse.jgit.util.RefMapTest.testEmpty_NoPrefix1":134,"org.eclipse.jgit.transport.URIishTest.testPathSeparator":179,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":163,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":84,"org.eclipse.jgit.lib.ReflogConfigTest.testlogAllRefUpdates":2,"org.eclipse.jgit.api.GitConstructionTest.testWrap":103,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":154,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":8,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":73,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteNotFound":65,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":100,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":141,"org.eclipse.jgit.api.GitConstructionTest.testOpen":102,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":124,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":120,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":149,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":130,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":164,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort":177,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":19,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":142,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":72,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":35,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":10,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":69,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":40,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":93,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":96,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":52,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":23,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":45,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":44,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort":181,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":43,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":42,"org.eclipse.jgit.util.RefMapTest.testClear":133,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":50,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":127,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":68,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":5,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":158,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":159,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":122,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":156,"org.eclipse.jgit.api.GitConstructionTest.testClose":101,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":25,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":61,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":29,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":143,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":71,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":27,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":80,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":79,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort":175,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":146,"org.eclipse.jgit.util.Base64Test.testDecode":167,"org.eclipse.jgit.transport.URIishTest.testGetSet":180,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":58,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":4,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":16,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":63,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":161,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":83,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":15,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":98,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":150,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2":48,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn":41,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":46,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":106,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":9,"org.eclipse.jgit.util.RefMapTest.testPut_NoPrefix":131,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":32,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":184,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":47,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":74,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":76,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":77,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":112,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":12,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":105,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":37,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":62,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":97,"org.eclipse.jgit.transport.URIishTest.testUserPasswordAndPort":182,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":128,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":89,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":153,"org.eclipse.jgit.transport.URIishTest.testGitWithUserHome":183,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":6,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testHasFlags":1,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":56,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":113,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":78,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":14,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":86,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":108,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":104,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":151,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":3,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":26,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":165,"org.eclipse.jgit.api.RevertCommandTest.testRevert":13,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":129,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":75},"transformations":[{"failures":[0,1],"tindex":"2ceeef89-4c4c-11e5-b378-75b61cf3a329","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:137","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"2cef169a-4c4c-11e5-b378-212b49f588de","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:1074","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"2cef169b-4c4c-11e5-b378-11b3bc59bbdd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:799","type":"CtIfImpl","sourcecode":"if (byte[] == null)\n    throw new java.io.IOException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"variableMap":{"data":"hdr","inMemoryBufferLimitExceeded":"corruptObjectGarbageAfterSize"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:125","type":"CtIfImpl","sourcecode":"if ((byte[][(org.eclipse.jgit.util.MutableInteger.int)++]) != 0)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"2cef169c-4c4c-11e5-b378-ad555b029ae1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:554","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.getRef().getLeaf()"},"variableMap":{"update":"update"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ReflogWriter:213","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.RefUpdate.getRef()"},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,101,102,102,103,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"2cef169d-4c4c-11e5-b378-2722537c42e9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:613","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Ref.getLeaf()"},"variableMap":{"ref":"ref"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:160","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(java.lang.String)"},"status":-1},{"failures":[],"tindex":"2cef3dae-4c4c-11e5-b378-3d4e49e19beb","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:165","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder:235","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.BasePackBitmapIndex.getBitmaps().size()"},"status":-2},{"failures":[166],"tindex":"2cef3daf-4c4c-11e5-b378-9939f8ead777","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommit:127","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revplot.PlotCommit.getId().equals(org.eclipse.jgit.revplot.PlotCommit.getId()))\n    return ;\n"},"variableMap":{"c":"c","pc":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:98","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.BlockRevQueue.Block.canUnpop()) {\n    org.eclipse.jgit.revwalk.BlockRevQueue.Block.unpop(org.eclipse.jgit.revwalk.RevCommit);\n    return ;\n} "},"status":-1},{"failures":[167],"tindex":"2cef3db0-4c4c-11e5-b378-093ace5dadab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.Base64:76","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.Base64.byte[][' '] = org.eclipse.jgit.util.Base64.byte"},"status":-1},{"failures":[],"tindex":"2cef3db1-4c4c-11e5-b378-a3585e447c8d","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.RefSpec:473","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.RefSpec.getDestination()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:471","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.RefSpec.getSource()"},"status":0},{"failures":[],"tindex":"2cef3db2-4c4c-11e5-b378-0dca75ecf2a0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.IO:104","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    int int = java.io.FileInputStream.read(byte[], int, ((byte[].int) - int));\n    if (int <= 0)\n        break;\n    \n    int += int;\n}"},"variableMap":{"buf":"deltaBuf","in":"deltaBuf","cnt":"deltaLen","length":"deltaLen"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:352","type":"CtTryImpl","sourcecode":"try {\n    byte[] byte[] = new byte[org.eclipse.jgit.internal.storage.pack.DeltaWindow.org.eclipse.jgit.internal.storage.pack.DeltaWindow.deflateBound(int)];\n    org.eclipse.jgit.internal.storage.pack.DeltaWindow.ZipStream org.eclipse.jgit.internal.storage.pack.DeltaWindow.ZipStream = new org.eclipse.jgit.internal.storage.pack.DeltaWindow.ZipStream(org.eclipse.jgit.internal.storage.pack.DeltaWindow.deflater() , byte[]);\n    if ((java.lang.Object) instanceof byte[])\n        org.eclipse.jgit.internal.storage.pack.DeltaWindow.ZipStream.write(((byte[])(java.lang.Object)), 0, int);\n    else\n        ((org.eclipse.jgit.util.TemporaryBuffer.Heap)(java.lang.Object)).writeTo(org.eclipse.jgit.internal.storage.pack.DeltaWindow.ZipStream, null);\n    \n    java.lang.Object = null;\n    int int = org.eclipse.jgit.internal.storage.pack.DeltaWindow.ZipStream.finish();\n    org.eclipse.jgit.internal.storage.pack.ObjectToPack.setCachedDelta(org.eclipse.jgit.internal.storage.pack.DeltaCache.cache(byte[], int, int));\n    org.eclipse.jgit.internal.storage.pack.ObjectToPack.setCachedSize(int);\n} catch (java.io.IOException err) {\n    org.eclipse.jgit.internal.storage.pack.DeltaCache.credit(int);\n} catch (java.lang.OutOfMemoryError err) {\n    org.eclipse.jgit.internal.storage.pack.DeltaCache.credit(int);\n}"},"status":-2},{"failures":[168,169,170,171,172],"tindex":"2cef64c3-4c4c-11e5-b378-8dc6504a23c2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:470","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyMap()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:657","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff.StageState>"},"status":-1},{"failures":[],"tindex":"2cef64c4-4c4c-11e5-b378-ef4e1e130b20","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:784","type":"CtIfImpl","sourcecode":"if (java.io.File == null)\n    throw new java.lang.UnsupportedOperationException();\n"},"variableMap":{"workTree":"identityFile"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:230","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"IdentityFile\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.io.File) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.io.File = org.eclipse.jgit.transport.OpenSshConfig.toFile(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"PreferredAuthentications\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.nows(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"BatchMode\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.Boolean) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.Boolean = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.yesno(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"StrictHostKeyChecking\", java.lang.String)) {\n    java.lang.String java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String);\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = java.lang.String;\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"ConnectionAttempts\", java.lang.String)) {\n    try {\n        final int int = java.lang.Integer.parseInt(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        if (int > 0) {\n            for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n                if ((org.eclipse.jgit.transport.OpenSshConfig.Host.int) == 0)\n                    org.eclipse.jgit.transport.OpenSshConfig.Host.int = int;\n                \n        } \n    } catch (java.lang.NumberFormatException nfe) {\n    }\n} "},"status":-2},{"failures":[],"tindex":"2cf0eb65-4c4c-11e5-b378-95e77eff384f","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RefMap:278","type":"CtIfImpl","sourcecode":"if (0 < (java.lang.String.length()))\n    java.lang.String = (java.lang.String) + java.lang.String;\n"},"variableMap":{"prefix":"keyword","name":"preferredAuthentications"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:213","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"HostName\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String);\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"User\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String);\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"Port\", java.lang.String)) {\n    try {\n        final int int = java.lang.Integer.parseInt(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n            if ((org.eclipse.jgit.transport.OpenSshConfig.Host.int) == 0)\n                org.eclipse.jgit.transport.OpenSshConfig.Host.int = int;\n            \n    } catch (java.lang.NumberFormatException nfe) {\n    }\n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"IdentityFile\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.io.File) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.io.File = org.eclipse.jgit.transport.OpenSshConfig.toFile(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"PreferredAuthentications\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.nows(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"BatchMode\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.Boolean) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.Boolean = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.yesno(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"StrictHostKeyChecking\", java.lang.String)) {\n    java.lang.String java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String);\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = java.lang.String;\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"ConnectionAttempts\", java.lang.String)) {\n    try {\n        final int int = java.lang.Integer.parseInt(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        if (int > 0) {\n            for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n                if ((org.eclipse.jgit.transport.OpenSshConfig.Host.int) == 0)\n                    org.eclipse.jgit.transport.OpenSshConfig.Host.int = int;\n                \n        } \n    } catch (java.lang.NumberFormatException nfe) {\n    }\n} "},"status":-2},{"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,89,90,91,92,93,94,95,96,97,98,99,173,100,101,101,102,102,103,103,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,141,142,174,175,176,177,178,179,180,181,182,183,152,153,154,155,156,157,158,159,160,161,162,163,164,165,184],"tindex":"2cf0eb66-4c4c-11e5-b378-711c622969a0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRC:227","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String + \"\\n\""},"variableMap":{"line":"pass","macbody":"pass"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:219","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.transport.URIish.org.eclipse.jgit.transport.URIish.unescape(java.util.regex.Matcher.group(3))"},"status":-1},{"failures":[],"tindex":"2cf11277-4c4c-11e5-b378-5d5099227124","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:182","type":"CtIfImpl","sourcecode":"if (int == 0)\n    break;\n"},"variableMap":{"c":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:98","type":"CtIfImpl","sourcecode":"if (int >= (long[].int)) {\n    long[] long[] = new long[org.eclipse.jgit.internal.storage.file.InflatingBitSet.(org.eclipse.jgit.internal.storage.file.InflatingBitSet.block(int)) + 1];\n    java.lang.System.arraycopy(long[], 0, long[], 0, long[].int);\n    long[] = long[];\n} "},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}