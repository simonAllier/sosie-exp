{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":519,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":412,"org.eclipse.jgit.api.RmCommandTest.testRemove":40,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":240,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":117,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":94,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":247,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":298,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":17,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":318,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":325,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":223,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":84,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":360,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwice":57,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":501,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":485,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked":33,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":90,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit":18,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":355,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":11,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":460,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":432,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":354,"org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet":277,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":114,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":422,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":49,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":34,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":352,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":351,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":401,"org.eclipse.jgit.api.AddCommandTest.testAddRemovedFile":59,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":315,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":321,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":468,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":190,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":65,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":191,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":15,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":411,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":187,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":188,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":189,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":22,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":455,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted":24,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":461,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":262,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":52,"org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit":469,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":271,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":495,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":374,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":264,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":85,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":482,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":285,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":333,"org.eclipse.jgit.api.RmCommandTest.testRemoveCached":39,"org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits":330,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":194,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":195,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":99,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":196,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":98,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":225,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":76,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":403,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":192,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":193,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":306,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeleted":20,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":336,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":167,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":242,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":169,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":168,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":171,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":170,"org.eclipse.jgit.api.GitConstructionTest.testClose":481,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":261,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":102,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":96,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":273,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":267,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":237,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting":513,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":116,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":444,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":338,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile":322,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":373,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine":61,"org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo":66,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":198,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":227,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":199,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":423,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":200,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":201,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":344,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":197,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":414,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":163,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":162,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":165,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":164,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":166,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":46,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":79,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":456,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":364,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":417,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":497,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":396,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":353,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":272,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":499,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":215,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":384,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockFrom":504,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":214,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":216,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":213,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":212,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":431,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":502,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":50,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":25,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":463,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":290,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":300,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":53,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":157,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":159,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":158,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":161,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":160,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":1,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":243,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":224,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":14,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":226,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":38,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":366,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":356,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":257,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":409,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":515,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":251,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":248,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":78,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":219,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":379,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":31,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":147,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":10,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":106,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":380,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":259,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":350,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":97,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":450,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":448,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":232,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":153,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":152,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":155,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":154,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":343,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":156,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":483,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":6,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":377,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":415,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":342,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":115,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":86,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":509,"org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree":331,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":236,"org.eclipse.jgit.lib.ReflogConfigTest.testlogAllRefUpdates":496,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockHEAD":511,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":103,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit":70,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":395,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":453,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":250,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":235,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":143,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":142,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":286,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":108,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":320,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFile":73,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":447,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":113,"org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile":64,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":420,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":359,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":149,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":148,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":253,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":151,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":150,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":21,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":362,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":172,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":398,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":174,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":173,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":176,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":175,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":397,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":317,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":48,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":327,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":288,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":498,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockFrom":507,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":297,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":51,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":109,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":454,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":296,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":137,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":419,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":139,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":341,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":138,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":266,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":241,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":123,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":124,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":125,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":126,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":127,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":340,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":118,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":145,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":144,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":146,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":386,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":518,"org.eclipse.jgit.api.AddCommandTest.testAddFolder":69,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":473,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":54,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":370,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":346,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":489,"org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles":68,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified":32,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":421,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":457,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":424,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":476,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":81,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":480,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":274,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":500,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":133,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_a":132,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d":135,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":134,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":385,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":12,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":437,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":442,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":413,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase5":462,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":141,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":140,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":376,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":8,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":430,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":305,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":438,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":378,"org.eclipse.jgit.api.CleanCommandTest.testClean":0,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":363,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":104,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":477,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":402,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":254,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":441,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":2,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c":129,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":19,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_b":128,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":368,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e":131,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d":130,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":452,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":107,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":276,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":13,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":27,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":36,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":439,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":514,"org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged":63,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":400,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile":72,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":299,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":101,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":429,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":136,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":440,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":446,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":67,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId":323,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":349,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":5,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":231,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":29,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":30,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":263,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":100,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":399,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":284,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":316,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":394,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":289,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":372,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":371,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":105,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":467,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":407,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch":218,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":256,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists":517,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":466,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":87,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":238,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":269,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":329,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":293,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":294,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":244,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":406,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":472,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":182,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":92,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":186,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":185,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":335,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":436,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":184,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":183,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":506,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":389,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":245,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":361,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":390,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":112,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":365,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored":7,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":484,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":239,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":9,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":310,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":522,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":77,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":233,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":405,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":505,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":470,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":486,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":435,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":91,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":258,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":357,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":428,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":493,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":122,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":121,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":89,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":458,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":287,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":512,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":516,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":521,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":220,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":37,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":16,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":313,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":387,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":369,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":404,"org.eclipse.jgit.api.BlameCommandTest.testRename":292,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":408,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits":332,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":418,"org.eclipse.jgit.lib.IndexDiffTest.testModified":443,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":82,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":177,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":178,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":179,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":180,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":181,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":252,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":206,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":449,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":202,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":203,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":204,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":319,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":445,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":205,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":393,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":347,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":88,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":383,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":391,"org.eclipse.jgit.internal.storage.file.ReflogWriterTest.shouldFilterLineFeedFromMessage":492,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":291,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":283,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":83,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":229,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":230,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":487,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine":74,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":503,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":434,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":303,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":358,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":382,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":58,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":307,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":334,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":210,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":111,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":211,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":459,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":309,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":207,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":56,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":208,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":55,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":209,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":478,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":222,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":314,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":465,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":80,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":228,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":246,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":345,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":221,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":410,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":119,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileInSubDir":62,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":295,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged":324,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":41,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":488,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":110,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":479,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":381,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":375,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":304,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":255,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":260,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":302,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii":520,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":471,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":217,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":312,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":494,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":281,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":282,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockFrom":510,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":278,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":279,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":268,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":280,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":275,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":3,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":95,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":265,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":75,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":234,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":388,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":337,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":308,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":426,"org.eclipse.jgit.api.AddCommandTest.testAddIgnoredFile":71,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":301,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":339,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":249,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":367,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":47,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":23,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":464,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":328,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":392,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":475,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":474,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":348,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":35,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":427,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":42,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":311,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":44,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":45,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":490,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":433,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":491,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit":326,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":416,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":451,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":508,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":4,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":28,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":425,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":60,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":93,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":270,"org.eclipse.jgit.api.RevertCommandTest.testRevert":120,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":43},"transformations":[{"failures":[],"tindex":"da90a8c5-4c7b-11e5-ba1e-79f3c7cd0c59","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RefRename:142","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.RefUpdate.Result"},"variableMap":{"result":"org.eclipse.jgit.lib.RefUpdate.Result.LOCK_FAILURE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefUpdate:605","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461],"tindex":"da90cfd6-4c7b-11e5-ba1e-513faea3fb96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddCommand:172","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.WorkingTreeIterator != null) {\n    long long = org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLength();\n    org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(java.lang.String);\n    if (((org.eclipse.jgit.dircache.DirCacheIterator == null) || ((org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry()) == null)) || (!(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry().isAssumeValid()))) {\n        org.eclipse.jgit.lib.FileMode org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.treewalk.WorkingTreeIterator.getIndexFileMode(org.eclipse.jgit.dircache.DirCacheIterator);\n        org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.lib.FileMode);\n        if ((org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode) != org.eclipse.jgit.lib.FileMode) {\n            org.eclipse.jgit.dircache.DirCacheEntry.setLength(long);\n            org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLastModified());\n            long long = org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryContentLength();\n            java.io.InputStream java.io.InputStream = org.eclipse.jgit.treewalk.WorkingTreeIterator.openEntryStream();\n            try {\n                org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.Constants.int, long, java.io.InputStream));\n            } finally {\n                java.io.InputStream.close();\n            }\n        } else\n            org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryObjectId());\n        \n        org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry);\n        java.lang.String = java.lang.String;\n    } else {\n        org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry());\n    }\n} else if ((org.eclipse.jgit.dircache.DirCacheIterator != null) && ((!(boolean)) || ((org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode) == (org.eclipse.jgit.dircache.DirCacheIterator.getEntryFileMode()))))\n    org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry());\n"},"status":-1},{"failures":[],"tindex":"da90f6e7-4c7b-11e5-ba1e-1f144cf55015","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:380","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.FileRepository.loadSystemConfig()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:968","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>.values()) {\n    org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.peel(org.eclipse.jgit.lib.Ref);\n    org.eclipse.jgit.lib.AnyObjectId org.eclipse.jgit.lib.AnyObjectId = org.eclipse.jgit.lib.Ref.getPeeledObjectId();\n    if (org.eclipse.jgit.lib.AnyObjectId == null)\n        org.eclipse.jgit.lib.AnyObjectId = org.eclipse.jgit.lib.Ref.getObjectId();\n    \n    java.util.Set<org.eclipse.jgit.lib.Ref> java.util.Set<org.eclipse.jgit.lib.Ref> = java.util.Map<org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.lib.Ref>>.put(org.eclipse.jgit.lib.AnyObjectId, java.util.Collections.singleton(org.eclipse.jgit.lib.Ref));\n    if (java.util.Set<org.eclipse.jgit.lib.Ref> != null) {\n        if ((java.util.Set<org.eclipse.jgit.lib.Ref>.size()) == 1) {\n            java.util.Set<org.eclipse.jgit.lib.Ref> = new java.util.HashSet<org.eclipse.jgit.lib.Ref>(java.util.Set<org.eclipse.jgit.lib.Ref>);\n        } \n        java.util.Map<org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.lib.Ref>>.put(org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.lib.Ref>);\n        java.util.Set<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref);\n    } \n}"},"status":-2},{"failures":[462],"tindex":"da911df8-4c7b-11e5-ba1e-0526111e3252","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:94","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern)"},"status":-1},{"failures":[],"tindex":"da911df9-4c7b-11e5-ba1e-213f8bc6770e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:953","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:297","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.internal.storage.pack.DeltaIndex.int"},"status":-2},{"failures":[113,114,115,117,118,119,120,121,122],"tindex":"da911dfa-4c7b-11e5-ba1e-f1b8c2f297c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:176","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)) {\n    if (org.eclipse.jgit.lib.AnyObjectId.equals(org.eclipse.jgit.revwalk.RevCommit.getTree().getId(), org.eclipse.jgit.merge.ResolveMerger.getResultTreeId()))\n        continue;\n    \n    org.eclipse.jgit.dircache.DirCacheCheckout org.eclipse.jgit.dircache.DirCacheCheckout = new org.eclipse.jgit.dircache.DirCacheCheckout(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.revwalk.RevCommit.getTree() , org.eclipse.jgit.lib.Repository.lockDirCache() , org.eclipse.jgit.merge.ResolveMerger.getResultTreeId());\n    org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true);\n    org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n    org.eclipse.jgit.revwalk.RevCommit = new org.eclipse.jgit.api.Git(org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.revwalk.RevCommit>.getRepository()).commit().setMessage(java.lang.String).setReflogComment((\"revert: \" + java.lang.String)).call();\n    java.util.List<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref);\n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit;\n} else {\n    java.util.List<java.lang.String> = org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths();\n    java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> = org.eclipse.jgit.merge.ResolveMerger.getFailingPaths();\n    if (java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> != null)\n        org.eclipse.jgit.api.MergeResult = new org.eclipse.jgit.api.MergeResult(null , org.eclipse.jgit.merge.ResolveMerger.getBaseCommitId() , new org.eclipse.jgit.lib.ObjectId[]{ org.eclipse.jgit.revwalk.RevCommit.getId() , org.eclipse.jgit.revwalk.RevCommit.getId() } , org.eclipse.jgit.api.MergeResult.MergeStatus.org.eclipse.jgit.api.MergeResult.MergeStatus , org.eclipse.jgit.merge.MergeStrategy , org.eclipse.jgit.merge.ResolveMerger.getMergeResults() , java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> , null);\n    else\n        org.eclipse.jgit.api.MergeResult = new org.eclipse.jgit.api.MergeResult(null , org.eclipse.jgit.merge.ResolveMerger.getBaseCommitId() , new org.eclipse.jgit.lib.ObjectId[]{ org.eclipse.jgit.revwalk.RevCommit.getId() , org.eclipse.jgit.revwalk.RevCommit.getId() } , org.eclipse.jgit.api.MergeResult.MergeStatus.org.eclipse.jgit.api.MergeResult.MergeStatus , org.eclipse.jgit.merge.MergeStrategy , org.eclipse.jgit.merge.ResolveMerger.getMergeResults() , java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> , null);\n    \n    if ((!(org.eclipse.jgit.merge.ResolveMerger.failed())) && (!(java.util.List<java.lang.String>.isEmpty()))) {\n        java.lang.String java.lang.String = new org.eclipse.jgit.merge.MergeMessageFormatter().formatWithConflicts(java.lang.String, org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths());\n        org.eclipse.jgit.lib.Repository.writeRevertHead(org.eclipse.jgit.revwalk.RevCommit.getId());\n        org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(java.lang.String);\n    } \n    return null;\n}"},"status":-1},{"failures":[293,294],"tindex":"da91450b-4c7b-11e5-ba1e-dd64e41460bb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:313","type":"CtIfImpl","sourcecode":"if ((0 < int) && (int < int))\n    int = (int / int) * int;\nelse if (int <= 0)\n    int = int;\n"},"variableMap":{"bs":"eIdx","wantSize":"rEnd"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Candidate:224","type":"CtIfImpl","sourcecode":"if (int <= (org.eclipse.jgit.diff.Edit.getEndB())) {\n    org.eclipse.jgit.blame.Region org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Region.org.eclipse.jgit.blame.Region;\n    org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Candidate.add(org.eclipse.jgit.blame.Region, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Region);\n    org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Region;\n    if (int == (org.eclipse.jgit.diff.Edit.getEndB()))\n        int++;\n    \n    continue;\n} "},"status":-1},{"failures":[],"tindex":"da91450c-4c7b-11e5-ba1e-4fdd24864080","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:519","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.currentTimeMillis()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.UnionInputStream:166","type":"CtLocalVariableImpl","sourcecode":"final long long = java.io.InputStream.skip(long)"},"status":-2},{"failures":[463,464,465,466,467,468,469,100,117,118,120,470,471,219,472,222,473,474,475,476,477,256,478,239,240,241,242,243,479,480,481,298,299,300,301,302,303,304,305,306,307,308,309,482,310,311,312,313,314,315,316,317,318,483,337,346,356,367,379,484,485,384,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519],"tindex":"da91450d-4c7b-11e5-ba1e-79874bb09281","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:134","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('\\\"')"},"variableMap":{"r":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ReflogWriter:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(' ')"},"status":-1},{"failures":[],"tindex":"da91450e-4c7b-11e5-ba1e-71e7cd5da0db","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:163","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.revwalk.PendingGenerator.int"},"variableMap":{"org.eclipse.jgit.revwalk.PendingGenerator.OVER_SCAN":"eIdx","overScan":"tIdx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner:115","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"da91450f-4c7b-11e5-ba1e-89e6b16117cf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.Base64:128","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = org.eclipse.jgit.util.Base64.byte[][((int >>> 12) & 63)]"},"variableMap":{"org.eclipse.jgit.util.Base64.ENC":"org.eclipse.jgit.lib.AnyObjectId.hexbyte","inBuff":"w","destOffset":"w","destination":"dst"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:410","type":"CtAssignmentImpl","sourcecode":"byte[][int--] = org.eclipse.jgit.lib.AnyObjectId.byte[][(int & 15)]"},"status":-2},{"failures":[],"tindex":"da916c20-4c7b-11e5-ba1e-c1dfb1e16f04","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:369","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid mode character\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleAddCommand:144","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"status":-2},{"failures":[],"tindex":"da916c21-4c7b-11e5-ba1e-8f48d4041bc0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"PATH\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:470","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.util.RawParseUtils.decode(java.nio.charset.Charset, byte[], int, int)"},"status":-2},{"failures":[520],"tindex":"da916c22-4c7b-11e5-ba1e-8372a8a283be","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.URIish:329","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write('%')"},"variableMap":{"os":"os"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.CommitBuilder:293","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(org.eclipse.jgit.lib.Constants.encodeASCII(org.eclipse.jgit.lib.CommitBuilder.getEncoding().name()))"},"status":-1},{"failures":[464,521,522,489],"tindex":"da916c23-4c7b-11e5-ba1e-2be568e5c876","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:1148","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write(' ')"},"variableMap":{"o":"idxStream"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:755","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.pack.PackWriter.writeBitmapIndex(java.io.OutputStream);\n} finally {\n    java.nio.channels.FileChannel.force(true);\n    java.io.OutputStream.close();\n    java.io.FileOutputStream.close();\n}"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}