{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":179,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":259,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":145,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":44,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":34,"org.eclipse.jgit.patch.EditListTest.testTypes":28,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":130,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":124,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":91,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":225,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":86,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":138,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":140,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":196,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":137,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":211,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":221,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":81,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":169,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":201,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":258,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":84,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":135,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":224,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":230,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":161,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":163,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":219,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":209,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":49,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":142,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":33,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":13,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":88,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":176,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":42,"org.eclipse.jgit.revwalk.RevTagParseTest.testParseOldStyleNoTagger":65,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":243,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext0":22,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":115,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext1":23,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":167,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":172,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":186,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEmbeddedAndEndingLF":74,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":260,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyNoLF":68,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":107,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":249,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":255,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":16,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":126,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":32,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":92,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":104,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":143,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":139,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":208,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":214,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":216,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":31,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":4,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":147,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":150,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded":70,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":152,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":203,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":160,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":250,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":217,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":251,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":141,"org.eclipse.jgit.api.GitConstructionTest.testClose":96,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_encoded":63,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":146,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":127,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":3,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":111,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":222,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":43,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":144,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":159,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":90,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":101,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":153,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":162,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_UTF8_encoded":53,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext10":26,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject":110,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":78,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange":164,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":50,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead":262,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_UTF8_encoded":66,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":80,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":151,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":198,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":194,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":180,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":37,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":132,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":10,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_GitStyleMessage":67,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEmbeddedLF":71,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEndLF":72,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":171,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyEndLF":60,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":103,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":177,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":82,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":155,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":257,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_GitStyleMessageWithCRLF":58,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":113,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead":165,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":199,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":247,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":244,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":148,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":234,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateDisabled":190,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":183,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":45,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":157,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":231,"org.eclipse.jgit.api.FetchCommandTest.testFetch":106,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":174,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":14,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":48,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":226,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_mixed_encoded":52,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod":61,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":240,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":38,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":128,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":254,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":237,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":17,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":134,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":227,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":85,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardForced":185,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":252,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":102,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":204,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":213,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":154,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":136,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_GitStyleMessage":54,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":195,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":158,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":89,"org.eclipse.jgit.api.PushCommandTest.testPush":95,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":173,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":87,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":205,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":39,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":233,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":122,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":202,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":123,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":121,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":79,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":94,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":120,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":241,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":239,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyEmbeddedAndEndingLF":62,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":114,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":20,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":19,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":112,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":41,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":212,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":228,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":108,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":133,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testEmpty1":27,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":30,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":229,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":46,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":170,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":2,"org.eclipse.jgit.api.GitConstructionTest.testWrap":98,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":215,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":246,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":5,"org.eclipse.jgit.api.GitConstructionTest.testOpen":97,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyNoLF":55,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":129,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":200,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded":57,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":256,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":105,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":235,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":1,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":206,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":220,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":109,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyEmbeddedLF":59,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":51,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":207,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":238,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":166,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext3":24,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext5":25,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":181,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":0,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":218,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":191,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":248,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":232,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":77,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":210,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":223,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext100":21,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":73,"org.eclipse.jgit.transport.PushProcessTest.testPushResult":187,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":12,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":83,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":11,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_mixed_encoded":64,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":93,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":47,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":253,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":15,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":189,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":192,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":119,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":184,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":76,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":118,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":261,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":6,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":117,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForward":188,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":116,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":8,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":9,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_encoded":75,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":131,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":125,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":236,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":35,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":100,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":29,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":156,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":175,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":149,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":245,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":178,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateOnReject":182,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":40,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":242,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded2":69,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":168,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded2":56,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":18,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":99,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":193,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":197,"org.eclipse.jgit.api.RevertCommandTest.testRevert":36,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":7},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"7750d6ec-4c4c-11e5-bb5e-abada1a4b494","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:142","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 42)\n    java.lang.String = java.lang.String.substring(42);\n"},"variableMap":{"line":"branchName","shortDesc":"branchName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PullCommand:230","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.api.PullCommand.PullRebaseMode) == null) {\n    org.eclipse.jgit.api.PullCommand.PullRebaseMode = org.eclipse.jgit.api.PullCommand.org.eclipse.jgit.api.PullCommand.getRebaseMode(java.lang.String, org.eclipse.jgit.lib.Config);\n} "},"status":-1},{"failures":[],"tindex":"7750fdfd-4c4c-11e5-bb5e-4badc266e230","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.RawTextComparator:292","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && ((byte[][int]) == (byte[][int]))) {\n    int++;\n    int++;\n}"},"variableMap":{"aPtr":"headerCnt","bPtr":"headerCnt","bEnd":"headerCnt","aEnd":"headerCnt","aRaw":"buf","bRaw":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:390","type":"CtInvocationImpl","sourcecode":"java.util.zip.CRC32.update(byte[], 0, int)"},"status":0},{"failures":[],"tindex":"7750fdfe-4c4c-11e5-bb5e-5bb6aa4067f7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:289","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:661","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = (org.eclipse.jgit.dircache.DirCacheTree) != null"},"status":-2},{"failures":[],"tindex":"7750fdff-4c4c-11e5-bb5e-f10a39165064","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.Status:196","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.String>.addAll(org.eclipse.jgit.lib.IndexDiff.getMissing())"},"variableMap":{"diff":"diff","uncommittedChanges":"uncommittedChanges"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.Status:193","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.String>.addAll(org.eclipse.jgit.lib.IndexDiff.getAdded())"},"status":0},{"failures":[21,22,23,24,25,26,27,28],"tindex":"7750fe00-4c4c-11e5-bb5e-cdc3ac393615","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:222","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.diff.EditList.add(org.eclipse.jgit.diff.Edit)"},"status":-1},{"failures":[],"tindex":"77517331-4c4c-11e5-bb5e-2f0abdb1a41d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:1215","type":"CtIfImpl","sourcecode":"if (int == int)\n    break;\n"},"variableMap":{"eol":"i","c":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:281","type":"CtIfImpl","sourcecode":"if ((int != (java.lang.String[].int)) && (org.eclipse.jgit.util.ChangeIdUtil.java.util.regex.Pattern.matcher(java.lang.String[][int]).matches())) {\n    int = int + 1;\n    continue;\n} "},"status":-2},{"failures":[29],"tindex":"77517332-4c4c-11e5-bb5e-cf62eb7c5544","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackConnection:201","type":"CtIfImpl","sourcecode":"if (java.lang.String == (org.eclipse.jgit.transport.PacketLineIn.java.lang.String))\n    break;\n"},"variableMap":{"line":"refName","org.eclipse.jgit.transport.PacketLineIn.END":"refName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:648","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef = org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(null, java.lang.String);\n    if ((org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef == null) || (org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.isSymbolic()))\n        continue;\n    \n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(java.lang.String);\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.getObjectId();\n    if ((org.eclipse.jgit.lib.ObjectId != null) && (org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.lib.Ref.getObjectId()))) {\n        org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>;\n        org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>;\n        do {\n            org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.get();\n            int int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.find(java.lang.String);\n            if (int < 0)\n                break;\n            \n            org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.remove(int);\n        } while (!(java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.compareAndSet(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>)) );\n        int int = org.eclipse.jgit.internal.storage.file.RefDirectory.(org.eclipse.jgit.internal.storage.file.RefDirectory.levelsIn(java.lang.String)) - 2;\n        org.eclipse.jgit.internal.storage.file.RefDirectory.org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(java.lang.String), int);\n    } \n} finally {\n    org.eclipse.jgit.internal.storage.file.LockFile.unlock();\n}"},"status":-1},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,1,2,44,45,46,47,48,49,50,51,6,7,8,9,12,16,18,19,20,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"77519a43-4c4c-11e5-bb5e-ad5f09893258","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:1075","type":"CtWhileImpl","sourcecode":"while ((int < int) && (((byte[][int]) != '\\n') && ((byte[][int]) != '\\r')))\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int);"},"status":-1},{"failures":[],"tindex":"77519a44-4c4c-11e5-bb5e-6d999dca9421","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RenameBranchCommand:128","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n    java.lang.String = (org.eclipse.jgit.lib.Constants.java.lang.String) + (java.lang.String);\nelse {\n    java.lang.String = (org.eclipse.jgit.lib.Constants.java.lang.String) + (java.lang.String);\n}"},"variableMap":{"fullNewName":"line","newName":"line","org.eclipse.jgit.lib.Constants.R_HEADS":"line","org.eclipse.jgit.lib.Constants.R_REMOTES":"line","fullOldName":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:849","type":"CtWhileImpl","sourcecode":"while ((java.lang.String = java.io.BufferedReader.readLine()) != null) {\n    java.util.List<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle>.add(org.eclipse.jgit.internal.storage.file.ObjectDirectory.openAlternate(java.lang.String));\n}"},"status":-2},{"failures":[],"tindex":"77519a45-4c4c-11e5-bb5e-21cc78b56e6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.LongMap:124","type":"CtAssignmentImpl","sourcecode":"int = ((int)((org.eclipse.jgit.transport.LongMap.Node<V>[].int) * (org.eclipse.jgit.transport.LongMap.float)))"},"status":0},{"failures":[],"tindex":"77519a46-4c4c-11e5-bb5e-f95978aff161","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:315","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = int;\n"},"variableMap":{"bs":"smudge_s","wantSize":"smudge_s"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:668","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheEntry.mightBeRacilyClean(int, int))\n    org.eclipse.jgit.dircache.DirCacheEntry.smudgeRacilyClean();\n"},"status":-2},{"failures":[87],"tindex":"7751c157-4c4c-11e5-bb5e-df2b11eab1bf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.CommitBuilder:330","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"={\\n\")"},"variableMap":{"r":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1255","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('\\\"')"},"status":-1},{"failures":[88,89,90,91,92,0,1,2,3,4,93,94,95,96,96,97,97,98,98,99,100,101,102,103,104,105,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,76,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257],"tindex":"7751c158-4c4c-11e5-bb5e-9b8ab1881fef","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.QuotedString:222","type":"CtForImpl","sourcecode":"for (int int = 'A' ; int <= 'Z' ; int++)\n    org.eclipse.jgit.util.QuotedString.GitPathStyle.byte[][int] = 0;"},"variableMap":{"org.eclipse.jgit.util.QuotedString.GitPathStyle.quote":"ib"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:720","type":"CtWhileImpl","sourcecode":"while ((int & 128) != 0) {\n    int = (byte[][int++]) & 255;\n    long += ((long)((int & 127))) << int;\n    int += 7;\n}"},"status":-1},{"failures":[258,259,29,260,261,262],"tindex":"7751c159-4c4c-11e5-bb5e-c7c1edb47151","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:721","type":"CtIfImpl","sourcecode":"if (0 <= (int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.find(org.eclipse.jgit.lib.Ref.getName())))\n    org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(int);\nelse\n    return org.eclipse.jgit.lib.Ref;\n"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}