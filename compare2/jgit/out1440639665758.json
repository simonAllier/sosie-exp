{"failureDictionary":{"org.eclipse.jgit.attributes.AttributeNodeTest.testTabSeparator":12,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":34,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree":0,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":24,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule":7,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":21,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":25,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":27,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":22,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":4,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":18,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":29,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":36,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":31,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":5,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":28,"org.eclipse.jgit.attributes.AttributeNodeTest.testEmptyNegativeAttributeKey":15,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":20,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":3,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":17,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":6,"org.eclipse.jgit.attributes.AttributeNodeTest.testEmptyValueKey":16,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":33,"org.eclipse.jgit.attributes.AttributeNodeTest.testEmptyLine":14,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":8,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":9,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":11,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":35,"org.eclipse.jgit.attributes.AttributeNodeTest.testBasic":13,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":1,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":26,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":10,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":23,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":30,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule":2,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":19,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":32},"transformations":[{"failures":[0],"tindex":"aec905e7-4c5c-11e5-a92f-15c921b1f5fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:176","type":"CtIfImpl","sourcecode":"if (!boolean)\n    java.util.Arrays.sort(org.eclipse.jgit.dircache.DirCacheTree[], 0, int, org.eclipse.jgit.dircache.DirCacheTree.java.util.Comparator<org.eclipse.jgit.dircache.DirCacheTree>);\n"},"status":-1},{"failures":[1],"tindex":"aec92cf8-4c5c-11e5-a92f-b94708ebf38a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:409","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= 4"},"variableMap":{"sz":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IntList:88","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"aec92cf9-4c5c-11e5-a92f-07f736427f05","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:181","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheTree[] = org.eclipse.jgit.dircache.DirCacheTree.org.eclipse.jgit.dircache.DirCacheTree[]"},"variableMap":{"children":"children","org.eclipse.jgit.dircache.DirCacheTree.NO_CHILDREN":"children"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:163","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheTree[] = new org.eclipse.jgit.dircache.DirCacheTree[int]"},"status":0},{"failures":[],"tindex":"aec92cfa-4c5c-11e5-a92f-9d32c5b75a62","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.SubmoduleSyncCommand:146","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n"},"variableMap":{"org.eclipse.jgit.lib.Constants.DEFAULT_REMOTE_NAME":"readingObjectsFromLocalRepositoryFailed","remote":"readingObjectsFromLocalRepositoryFailed"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushProcess:186","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.RemoteRefUpdate org.eclipse.jgit.transport.RemoteRefUpdate : java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.values()) {\n    final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.transport.PushConnection.getRef(org.eclipse.jgit.transport.RemoteRefUpdate.getRemoteName());\n    final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref == null ? org.eclipse.jgit.lib.ObjectId.zeroId() : org.eclipse.jgit.lib.Ref.getObjectId();\n    if (org.eclipse.jgit.transport.RemoteRefUpdate.getNewObjectId().equals(org.eclipse.jgit.lib.ObjectId)) {\n        if (org.eclipse.jgit.transport.RemoteRefUpdate.isDelete()) {\n            org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n        } else {\n            org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n        }\n        continue;\n    } \n    if ((org.eclipse.jgit.transport.RemoteRefUpdate.isExpectingOldObjectId()) && (!(org.eclipse.jgit.transport.RemoteRefUpdate.getExpectedOldObjectId().equals(org.eclipse.jgit.lib.ObjectId)))) {\n        org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n        continue;\n    } \n    if ((org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.lib.ObjectId.zeroId())) || (org.eclipse.jgit.transport.RemoteRefUpdate.isDelete())) {\n        org.eclipse.jgit.transport.RemoteRefUpdate.setFastForward(true);\n        java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.put(org.eclipse.jgit.transport.RemoteRefUpdate.getRemoteName(), org.eclipse.jgit.transport.RemoteRefUpdate);\n        continue;\n    } \n    boolean boolean = true;\n    try {\n        org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.ObjectId);\n        final org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.transport.RemoteRefUpdate.getNewObjectId());\n        if (((!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit)) || (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit))) || (!(org.eclipse.jgit.revwalk.RevWalk.isMergedInto(((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject)), ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject))))))\n            boolean = false;\n        \n    } catch (org.eclipse.jgit.errors.MissingObjectException x) {\n        boolean = false;\n    } catch (java.lang.Exception x) {\n        throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.Transport.getURI() , java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Exception.getMessage()) , java.lang.Exception);\n    }\n    org.eclipse.jgit.transport.RemoteRefUpdate.setFastForward(boolean);\n    if ((!boolean) && (!(org.eclipse.jgit.transport.RemoteRefUpdate.isForceUpdate())))\n        org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n    else\n        java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.put(org.eclipse.jgit.transport.RemoteRefUpdate.getRemoteName(), org.eclipse.jgit.transport.RemoteRefUpdate);\n    \n}"},"status":-2},{"failures":[],"tindex":"aec9540b-4c5c-11e5-a92f-df15e54dc257","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:228","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"private\""},"variableMap":{"acl":"prefix"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:286","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(java.lang.String.length())"},"status":-2},{"failures":[],"tindex":"aec9540c-4c5c-11e5-a92f-2bad14bda5df","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:770","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    int = int;\n"},"variableMap":{"pathLen":"extensions","pathOffset":"extensions"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:742","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains((java.lang.String + (org.eclipse.jgit.internal.storage.pack.PackExt.getExtension()))))\n    int |= org.eclipse.jgit.internal.storage.pack.PackExt.getBit();\n"},"status":0},{"failures":[],"tindex":"aec9540d-4c5c-11e5-a92f-ad69570d7a85","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:352","type":"CtLocalVariableImpl","sourcecode":"long[] long[] = long[]"},"variableMap":{"idHash":"idHash"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:230","type":"CtLocalVariableImpl","sourcecode":"long[] long[] = org.eclipse.jgit.diff.SimilarityIndex.long[]"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11],"tindex":"aec9540e-4c5c-11e5-a92f-db66135b0893","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_Win32:148","type":"CtReturnImpl","sourcecode":"return new java.io.File(java.lang.String)"},"variableMap":{"homeShare":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:540","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.submodule.SubmoduleWalk.org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleDirectory(org.eclipse.jgit.lib.Repository, java.lang.String)"},"status":-1},{"failures":[],"tindex":"aec97b1f-4c5c-11e5-a92f-cf1c3a24214f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:378","type":"CtTryImpl","sourcecode":"try {\n    long long = (long) + int;\n    if ((long) < long) {\n        org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref;\n        org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref;\n        do {\n            if (org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.boolean) {\n                org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.boolean = false;\n                org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref;\n                org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref;\n                continue;\n            } else if (org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref == org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref)\n                break;\n            \n            org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref;\n            org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref;\n            org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref;\n            org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = null;\n            org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.java.lang.Object = null;\n            long -= org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.int;\n            org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.org.eclipse.jgit.internal.storage.dfs.DfsPackKey.java.util.concurrent.atomic.AtomicLong.addAndGet(-(org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.int));\n            (long)++;\n        } while ((long) < long );\n        org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref;\n    } \n    long = long;\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}"},"status":0},{"failures":[],"tindex":"aecadab0-4c5c-11e5-a92f-8d8a84f424f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:684","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevTree = org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.revwalk.RevObject)"},"status":-2},{"failures":[],"tindex":"aecadab1-4c5c-11e5-a92f-4d28c11055a5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:1073","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger.cleanUp()"},"status":0},{"failures":[],"tindex":"aecb01c2-4c5c-11e5-a92f-4139a14a3e8a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner:79","type":"CtAssignmentImpl","sourcecode":"int[] = new int[org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner.org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner.tableSize(int)]"},"status":-2},{"failures":[12,13,14,15,16],"tindex":"aecb01c3-4c5c-11e5-a92f-e72ec43ea97d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.attributes.AttributesNode:155","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, org.eclipse.jgit.attributes.Attribute>.containsKey(org.eclipse.jgit.attributes.Attribute.getKey())))\n    java.util.Map<java.lang.String, org.eclipse.jgit.attributes.Attribute>.put(org.eclipse.jgit.attributes.Attribute.getKey(), org.eclipse.jgit.attributes.Attribute);\n"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"aecb01c4-4c5c-11e5-a92f-6fac25e3c42c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:473","type":"CtAssignmentImpl","sourcecode":"java.lang.String[] = org.eclipse.jgit.lib.Config.java.lang.String[]"},"variableMap":{"org.eclipse.jgit.lib.Config.EMPTY_STRING_ARRAY":"commitNames","base":"commitNames"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:872","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String[] = java.lang.String[]"},"status":-1},{"failures":[],"tindex":"aecb01c5-4c5c-11e5-a92f-5f8dc0a4e857","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:237","type":"CtIfImpl","sourcecode":"if ((java.io.File) == null)\n    java.io.File = new java.io.File(((java.io.File.getPath()) + \".keep\"));\n"},"variableMap":{"packFile":"realExt","keepFile":"realExt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:789","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.FileUtils.rename(java.io.File, java.io.File)"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}