{"failureDictionary":{"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":375,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":374,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":395,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":202,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":195,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":204,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":323,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase6":12,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSimpleStarCase3":56,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase3":96,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":438,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase3":10,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSimpleStarCase2":55,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase4":11,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSimpleStarCase1":54,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase1":8,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSimpleStarCase0":53,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":243,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase2":9,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase0":7,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":333,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase0":93,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":142,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":264,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase7":13,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase2":95,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase8":14,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase1":94,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":185,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCntrlGroupCase1":38,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":292,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":378,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":328,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict":110,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase3":81,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":286,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase2":80,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase4":82,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoGroupsCase1":52,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoGroupsCase0":51,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleWirdcardCase0":17,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":391,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":285,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":363,"org.eclipse.jgit.merge.CherryPickTest.testRevert":380,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":192,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":407,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase3":49,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase2":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":283,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":282,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":358,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":450,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":261,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":447,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":394,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":365,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":131,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":367,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":116,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase2":71,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase1":70,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase0":69,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":223,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":373,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase5":74,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase4":73,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase3":72,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testParentDirectoryGitIgnores":0,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":348,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMultipleEscapedCharacters1":50,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":132,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":336,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":232,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":308,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":225,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":186,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":255,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testLowerGroupCase4":37,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testLowerGroupCase1":36,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":240,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testLowerGroupCase0":35,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":376,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testIncompleteRangesInOneGroupCase2":68,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testIncompleteRangesInOneGroupCase0":67,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCopyConstructor":26,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":177,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":359,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":251,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":266,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":382,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":334,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":126,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":222,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase1":47,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase0":46,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertWholeObject_Length12":425,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":175,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":228,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":238,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":120,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":194,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":268,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":393,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":444,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":307,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":233,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":143,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":388,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":387,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":274,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":354,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":397,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testBlankGroupCase0":83,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":343,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testBlankGroupCase1":84,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":180,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":297,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase1":99,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":114,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":400,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase2":100,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":171,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase4":101,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":284,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":318,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":418,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":443,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.test2AlphaGroupsCase0":41,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":419,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":346,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":381,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":206,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":337,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree":112,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":245,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":327,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":349,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":371,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":329,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":386,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":300,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":287,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":218,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":366,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":211,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":207,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":372,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":179,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":313,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":436,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBracket6":108,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":437,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":435,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBracket2":105,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":314,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBracket5":107,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":220,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":281,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":353,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBracket4":106,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":434,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBracket1":104,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":426,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":273,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":326,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":265,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":311,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":398,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":272,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":193,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":187,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":237,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":210,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":170,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":122,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":209,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testReset":34,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":236,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleStarCase1":85,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":129,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleStarCase2":86,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy":130,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":377,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":191,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":446,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":404,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":291,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":408,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":213,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":154,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":385,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":294,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":355,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap":109,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":263,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":127,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":345,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":422,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase0":87,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":115,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testInversedGroupCase3":45,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":347,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":123,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":295,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":414,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":403,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":271,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":227,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":293,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":324,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":439,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":270,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":196,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase1":76,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase0":75,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":159,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testInversedGroupCase0":44,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase3":78,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":350,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase2":77,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":304,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":415,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase4":79,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":276,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":139,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBackslash":64,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6":138,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":141,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":406,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":140,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":133,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2":135,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5":137,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4":136,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":389,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":182,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":413,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":319,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":331,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritPreferredAuthentications":6,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":330,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":396,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b":150,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase5":31,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules1thru3_NoIndexEntry":124,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase3":30,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase2":29,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase1":28,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase0":27,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":310,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":128,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":390,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":156,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase3":90,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase4":91,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":250,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase1":88,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":117,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase2":89,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":113,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":215,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":312,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase5":92,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testNameOnlyMatches":3,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":296,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":370,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":383,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":335,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":369,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":214,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":119,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":302,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":429,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testFileNameWildcards":1,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":357,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritBatchMode":4,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":244,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":118,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":121,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":392,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":279,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":172,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":224,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":163,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":356,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":169,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":262,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":306,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":305,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":322,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":332,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":384,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch":188,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":217,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":321,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":239,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":442,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":230,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testAlnumGroupCase1":98,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":241,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":242,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testAlnumGroupCase0":97,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testAlphaGroupCase0":42,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":368,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":440,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":445,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":164,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":165,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":201,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testAlphaGroupCase2":43,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":298,"org.eclipse.jgit.transport.PackParserTest.test1":409,"org.eclipse.jgit.transport.PackParserTest.test2":410,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":441,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":256,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":155,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b":151,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsInherit":5,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":178,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":360,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":173,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":219,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":288,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":200,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":199,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupRangeCase3":63,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":152,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":325,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":401,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":411,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupRangeCase2":62,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupRangeCase1":61,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":427,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":259,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":161,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":303,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":158,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":364,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":402,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile":134,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":183,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":448,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":280,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":212,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123":420,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":168,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":421,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":277,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPunctGroupCase1":66,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPunctGroupCase0":65,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":317,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":166,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":417,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":289,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":184,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":190,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":248,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":290,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":316,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":252,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":424,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":405,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutUncachedChanges":125,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":153,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":254,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":428,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":352,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":351,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":362,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":234,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":189,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":299,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":260,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":320,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":181,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":203,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":275,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":157,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCreateMatcherForSuffix":33,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":197,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleWildCardCase2":16,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleWildCardCase1":15,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":160,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimplePatternCase1":39,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":338,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":423,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimplePatternCase2":40,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":149,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":315,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":309,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_13":146,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_14":147,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":148,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":249,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":216,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":221,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":145,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":247,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":144,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase3":60,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":258,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase2":59,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase1":58,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase0":57,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":229,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":412,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":226,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":176,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":235,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":162,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":267,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":253,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCombinedRangesInOneGroupCase0":18,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":416,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne":111,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":246,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":269,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":208,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":301,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":344,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCombinedRangesInOneGroupCase2":19,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":361,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":167,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":205,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":278,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":433,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":432,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":257,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":339,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":431,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":430,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase5":25,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":341,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testFilePathSimpleCase":32,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":342,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":449,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testTargetWithoutLeadingSlash":2,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupCase0":102,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase0":20,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupCase1":103,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase1":21,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase2":22,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase3":23,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase4":24,"org.eclipse.jgit.merge.CherryPickTest.testPick":379,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":399,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":174,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":231,"org.eclipse.jgit.api.RevertCommandTest.testRevert":198,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":340},"transformations":[{"failures":[],"tindex":"c8a6e96d-4c73-11e5-8b02-992a44393428","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.AddCommand:160","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.treewalk.WorkingTreeIterator org.eclipse.jgit.treewalk.WorkingTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(1, org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator)"},"variableMap":{"tw":"treeWalk","org.eclipse.jgit.treewalk.WorkingTreeIterator.class":"org.eclipse.jgit.treewalk.WorkingTreeIterator.class"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:437","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.treewalk.WorkingTreeIterator org.eclipse.jgit.treewalk.WorkingTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator)"},"status":-2},{"failures":[],"tindex":"c8a7378e-4c73-11e5-8b02-539eb3b1e6f8","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:653","type":"CtReturnImpl","sourcecode":"return byte[].clone()"},"variableMap":{"path":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaCache:119","type":"CtReturnImpl","sourcecode":"return byte[]"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"c8a7378f-4c73-11e5-8b02-37d1af4310eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:327","type":"CtIfImpl","sourcecode":"if (!(java.util.List<org.eclipse.jgit.fnmatch.Head>.isEmpty()))\n    java.util.List<org.eclipse.jgit.fnmatch.Head>.addAll(java.util.List<org.eclipse.jgit.fnmatch.Head>);\n"},"status":-1},{"failures":[],"tindex":"c8a75ea0-4c73-11e5-8b02-d5a609da0952","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.FileMode:182","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[10]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:259","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.eclipse.jgit.patch.FileHeader.byte[]"},"status":-2},{"failures":[],"tindex":"c8a75ea1-4c73-11e5-8b02-596ca1fb8a3b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.StrategyResolve:65","type":"CtReturnImpl","sourcecode":"return \"resolve\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BranchConfig:179","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Constants.java.lang.String"},"status":0},{"failures":[],"tindex":"c8a75ea2-4c73-11e5-8b02-8fcb20e28d07","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:1046","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"c8a785b3-4c73-11e5-8b02-8139d79d8fce","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:436","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"cCnt":"highMark"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:369","type":"CtIfImpl","sourcecode":"if ((((org.eclipse.jgit.revwalk.RevWalk) == null) || (org.eclipse.jgit.revwalk.RevCommit == null)) || ((int > 0) && ((int) > int)))\n    return ;\n"},"status":0},{"failures":[],"tindex":"c8a785b4-4c73-11e5-8b02-5fb4cc1b5028","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:292","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.eclipse.jgit.dircache.DirCacheEntry.int"},"variableMap":{"flags":"dirSim","org.eclipse.jgit.dircache.DirCacheEntry.NAME_MASK":"dirMax"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:341","type":"CtAssignmentImpl","sourcecode":"int = (int * 100) / int"},"status":-2},{"failures":[],"tindex":"c8a785b5-4c73-11e5-8b02-43d7cb33970d","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:285","type":"CtAssignmentImpl","sourcecode":"int = ((int) * 31) + (byte[][int])"},"variableMap":{"data":"buf","pos":"n","hash":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:109","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.patch.CombinedHunkHeader.CombinedOldImage[][int].int = -org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], org.eclipse.jgit.util.MutableInteger.int, org.eclipse.jgit.util.MutableInteger))"},"status":-2},{"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407],"tindex":"c8a7acc6-4c73-11e5-8b02-db2c6718b015","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:214","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) == org.eclipse.jgit.treewalk.AbstractTreeIterator) || (org.eclipse.jgit.treewalk.AbstractTreeIterator.first()))\n    continue;\n"},"variableMap":{"t":"t","minRef":"t","matches":"minRef"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((((boolean) && org.eclipse.jgit.treewalk.NameConflictTreeWalk.(org.eclipse.jgit.treewalk.NameConflictTreeWalk.isTree(org.eclipse.jgit.treewalk.AbstractTreeIterator))) && (!org.eclipse.jgit.treewalk.NameConflictTreeWalk.(org.eclipse.jgit.treewalk.NameConflictTreeWalk.isTree(org.eclipse.jgit.treewalk.AbstractTreeIterator)))) && org.eclipse.jgit.treewalk.NameConflictTreeWalk.(org.eclipse.jgit.treewalk.NameConflictTreeWalk.nameEqual(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator))) {\n        org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n        boolean = true;\n    } else {\n        boolean = false;\n        org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n        org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    }\n} else if (int == 0) {\n    org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n} else if ((((boolean) && org.eclipse.jgit.treewalk.NameConflictTreeWalk.(org.eclipse.jgit.treewalk.NameConflictTreeWalk.isTree(org.eclipse.jgit.treewalk.AbstractTreeIterator))) && (!org.eclipse.jgit.treewalk.NameConflictTreeWalk.(org.eclipse.jgit.treewalk.NameConflictTreeWalk.isTree(org.eclipse.jgit.treewalk.AbstractTreeIterator)))) && org.eclipse.jgit.treewalk.NameConflictTreeWalk.(org.eclipse.jgit.treewalk.NameConflictTreeWalk.nameEqual(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator))) {\n    for (int int = 0 ; int < int ; int++) {\n        final org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator[][int];\n        if ((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) == org.eclipse.jgit.treewalk.AbstractTreeIterator)\n            org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n        \n    }\n    org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    boolean = true;\n} else\n    boolean = false;\n"},"status":-1},{"failures":[],"tindex":"c8a7d3d7-4c73-11e5-8b02-4788eca27813","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:81","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String.length()) ; int++)\n    org.eclipse.jgit.util.RawParseUtils.parseHexInt4(((byte)(java.lang.String.charAt(int))));"},"variableMap":{"id":"suffix"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:399","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    org.eclipse.jgit.api.ArchiveCommand.Format<?> = org.eclipse.jgit.api.ArchiveCommand.org.eclipse.jgit.api.ArchiveCommand.formatBySuffix(java.lang.String);\nelse\n    org.eclipse.jgit.api.ArchiveCommand.Format<?> = org.eclipse.jgit.api.ArchiveCommand.org.eclipse.jgit.api.ArchiveCommand.lookupFormat(java.lang.String);\n"},"status":-2},{"failures":[],"tindex":"c8a7d3d8-4c73-11e5-8b02-ff0349665b2f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:424","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.ByteArrayWindow != null) {\n    org.eclipse.jgit.internal.storage.file.ByteArrayWindow.crc32(java.util.zip.CRC32, long, ((int)(long)));\n} else {\n    long long = long;\n    long long = long;\n    while (long > 0) {\n        final int int = ((int)(java.lang.Math.min(long, byte[].int)));\n        org.eclipse.jgit.internal.storage.file.PackFile.readFully(long, byte[], 0, int, org.eclipse.jgit.internal.storage.file.WindowCursor);\n        java.util.zip.CRC32.update(byte[], 0, int);\n        long += int;\n        long -= int;\n    }\n}"},"variableMap":{"quickCopy":"quickCopy","dataOffset":"dataOffset","buf":"tmp","crc1":"crc1","dataLength":"dataLength","length":"length","this":"this","curs":"curs"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:450","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.ByteArrayWindow != null) {\n    org.eclipse.jgit.internal.storage.file.ByteArrayWindow.check(java.util.zip.Inflater, byte[], long, ((int)(long)));\n} else {\n    long long = long;\n    long long = long;\n    while (long > 0) {\n        final int int = ((int)(java.lang.Math.min(long, byte[].int)));\n        org.eclipse.jgit.internal.storage.file.PackFile.readFully(long, byte[], 0, int, org.eclipse.jgit.internal.storage.file.WindowCursor);\n        java.util.zip.CRC32.update(byte[], 0, int);\n        java.util.zip.Inflater.setInput(byte[], 0, int);\n        while ((java.util.zip.Inflater.inflate(byte[], 0, byte[].int)) > 0)\n            continue;\n        long += int;\n        long -= int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"c8a7fae9-4c73-11e5-8b02-fba46636d687","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.IO:210","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return java.nio.ByteBuffer.wrap(byte[], 0, int);\n"},"variableMap":{"read":"pos","pos":"length","out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:208","type":"CtWhileImpl","sourcecode":"while (int < (byte[].int)) {\n    int int = java.io.InputStream.read(byte[], int, ((byte[].int) - int));\n    if (int < 0)\n        return java.nio.ByteBuffer.wrap(byte[], 0, int);\n    \n    int += int;\n}"},"status":-2},{"failures":[408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,325,328,377],"tindex":"c8a7faea-4c73-11e5-8b02-73d97161a325","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.QuotedString:220","type":"CtForImpl","sourcecode":"for (int int = 'a' ; int <= 'z' ; int++)\n    org.eclipse.jgit.util.QuotedString.GitPathStyle.byte[][int] = 0;"},"variableMap":{"org.eclipse.jgit.util.QuotedString.GitPathStyle.quote":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:156","type":"CtDoImpl","sourcecode":"do {\n    int = (byte[][int++]) & 255;\n    int |= ((long)((int & 127))) << int;\n    int += 7;\n} while ((int & 128) != 0 )"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}