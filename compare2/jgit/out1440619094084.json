{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":142,"org.eclipse.jgit.api.RmCommandTest.testRemove":217,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":406,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":222,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":88,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":277,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":444,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":72,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":482,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":163,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":98,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":501,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":192,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":51,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":437,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":269,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":136,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":526,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwice":242,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":93,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked":179,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit":164,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":521,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":157,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk":27,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":1,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":139,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":399,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":520,"org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet":389,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":152,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":219,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot":18,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":123,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":3,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":102,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":518,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":517,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":473,"org.eclipse.jgit.api.AddCommandTest.testAddRemovedFile":244,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":499,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":208,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":356,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":250,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":357,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":161,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":141,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad":25,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":353,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":354,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":355,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":168,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":210,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2":29,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":140,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted":170,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":459,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":126,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":101,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":468,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":17,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":56,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":540,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":461,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows":30,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":270,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":418,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":200,"org.eclipse.jgit.api.RmCommandTest.testRemoveCached":216,"org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits":197,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":360,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":361,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":282,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":362,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":281,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":439,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":261,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":475,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":358,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":359,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":490,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeleted":166,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":502,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":333,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":408,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":335,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":334,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":337,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":99,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":336,"org.eclipse.jgit.api.GitConstructionTest.testClose":85,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":458,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":285,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":279,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":385,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":464,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":83,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":189,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":221,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":504,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":53,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile":203,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":7,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":539,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine":246,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":112,"org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo":251,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot":24,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":364,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":441,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":365,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":390,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":366,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":367,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":510,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":108,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":144,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":363,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":131,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":329,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":328,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":38,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":331,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":330,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":332,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":120,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":114,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":264,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":33,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":530,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":147,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":70,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":134,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case":23,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":519,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":384,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":381,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":550,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":380,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":382,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":379,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":378,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":398,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":16,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":124,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":171,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":34,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":423,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":484,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":41,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":92,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":127,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":323,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":325,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":324,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":327,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":326,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":236,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":113,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":409,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":438,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":160,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":94,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":13,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":440,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":103,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":532,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":522,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":454,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":480,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":448,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":445,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":263,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":433,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":545,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":177,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":313,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":156,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":429,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":546,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":105,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":456,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":516,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":280,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":45,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes":8,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":43,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":403,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":319,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":318,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":52,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":321,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":320,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":91,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":509,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":322,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":145,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":241,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":543,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":508,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":220,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":271,"org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree":198,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":82,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad":26,"org.eclipse.jgit.api.GitConstructionTest.testWrap":87,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":286,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit":255,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":6,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":135,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":69,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":209,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":447,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":81,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":309,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs":0,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":308,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":419,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":207,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":431,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case":22,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":78,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFile":258,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":42,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":218,"org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile":249,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":150,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":525,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":315,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":314,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":450,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":317,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":316,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict":9,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":167,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":528,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":338,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":470,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":340,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":339,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":342,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":341,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":469,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":15,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":35,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":32,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":122,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":194,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":421,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":10,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":202,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":125,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":31,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":228,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":201,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":149,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":303,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":305,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":507,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":304,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":48,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":463,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":407,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":289,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":89,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":290,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":291,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":292,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":293,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":506,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":111,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":223,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":311,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":310,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":312,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":58,"org.eclipse.jgit.api.AddCommandTest.testAddFolder":254,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":128,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":536,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":49,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":512,"org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles":253,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified":178,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":151,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":211,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":391,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":266,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":386,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":299,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1":20,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_a":298,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d":301,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":300,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":551,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":158,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":182,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent":2,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":96,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":40,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":95,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":187,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":143,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":307,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":306,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":542,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":154,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":397,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":489,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":183,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":172,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":544,"org.eclipse.jgit.api.CleanCommandTest.testClean":235,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":529,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":287,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":100,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":474,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":451,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":186,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":237,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c":295,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":165,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_b":294,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":534,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e":297,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":47,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d":296,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":388,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":430,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":159,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":173,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":184,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":273,"org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged":248,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix":21,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":472,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile":257,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":483,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":284,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":396,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":185,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":191,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":302,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":252,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":5,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId":204,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":515,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":240,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":402,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":175,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":176,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":460,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":283,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":62,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":76,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":471,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk":19,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":417,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":68,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":500,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":422,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":538,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":537,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":288,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":73,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":132,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":97,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch":432,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":453,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":84,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":214,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":466,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":196,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":426,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":427,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":410,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":478,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":348,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":275,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":352,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":138,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":181,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":351,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":350,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":349,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":63,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":64,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":442,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":527,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":231,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":531,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored":153,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":405,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":155,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":494,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":262,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":404,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":477,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":71,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":180,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":274,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":455,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":523,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":395,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":227,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":226,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":90,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":212,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":420,"org.eclipse.jgit.notes.NoteMapMergerTest.testDeleteDifferentNotes":4,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":434,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows":28,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":36,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":162,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":497,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":60,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":535,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":57,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":476,"org.eclipse.jgit.api.BlameCommandTest.testRename":425,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":479,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits":199,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":148,"org.eclipse.jgit.lib.IndexDiffTest.testModified":188,"org.eclipse.jgit.notes.NoteMapMergerTest.testNoChange":14,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":267,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":343,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":344,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":345,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":346,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":347,"org.eclipse.jgit.api.FetchCommandTest.testFetch":74,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":449,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":372,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":44,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":368,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":11,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":369,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":190,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":206,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":370,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":371,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":67,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":513,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":215,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":549,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":65,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":55,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":424,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":416,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":268,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":39,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":233,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":234,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine":259,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":401,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":487,"org.eclipse.jgit.api.PushCommandTest.testPush":106,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":524,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":548,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":243,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":491,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":137,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":376,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":213,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":230,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":377,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":493,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":373,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":130,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":374,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":129,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":375,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":436,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":77,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":498,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":232,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":265,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":443,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":511,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":435,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":54,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":481,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":224,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileInSubDir":247,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":428,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":59,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged":205,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":115,"org.eclipse.jgit.api.GitConstructionTest.testOpen":86,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":229,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":547,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":541,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":488,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":452,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":457,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":133,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":486,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":383,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":496,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":414,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":415,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":75,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":411,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":412,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":413,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":465,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":387,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":238,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":278,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":462,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":260,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":80,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":61,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":503,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":492,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":107,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":50,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":393,"org.eclipse.jgit.api.AddCommandTest.testAddIgnoredFile":256,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":485,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":505,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":446,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":533,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":121,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":169,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":104,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":195,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":66,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":109,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":514,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":272,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":394,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":116,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":495,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":118,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":119,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":79,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":400,"org.eclipse.jgit.transport.URIishTest.testGitWithUserHome":37,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit":193,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":12,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":146,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":46,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":110,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":239,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":174,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":392,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":245,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":276,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":467,"org.eclipse.jgit.api.RevertCommandTest.testRevert":225,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":117},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"c91c6058-4c2c-11e5-abb8-377aefd8e5c1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:363","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"truncated in mode\");\n"},"variableMap":{"sz":"ti","ptr":"oi"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMapMerger:242","type":"CtWhileImpl","sourcecode":"while (((int < (org.eclipse.jgit.notes.LeafBucket.size())) || (int < (org.eclipse.jgit.notes.LeafBucket.size()))) || (int < (org.eclipse.jgit.notes.LeafBucket.size()))) {\n    org.eclipse.jgit.notes.Note org.eclipse.jgit.notes.Note = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.get(org.eclipse.jgit.notes.LeafBucket, int);\n    org.eclipse.jgit.notes.Note org.eclipse.jgit.notes.Note = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.get(org.eclipse.jgit.notes.LeafBucket, int);\n    org.eclipse.jgit.notes.Note org.eclipse.jgit.notes.Note = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.get(org.eclipse.jgit.notes.LeafBucket, int);\n    org.eclipse.jgit.notes.Note org.eclipse.jgit.notes.Note = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.min(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note);\n    org.eclipse.jgit.notes.Note = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.sameNoteOrNull(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note);\n    org.eclipse.jgit.notes.Note = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.sameNoteOrNull(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note);\n    org.eclipse.jgit.notes.Note = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.sameNoteOrNull(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note);\n    if (org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.sameContent(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note))\n        org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.Note);\n    else if (org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.sameContent(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note))\n        org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.Note);\n    else if (org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.sameContent(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note))\n        org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.Note);\n    else\n        org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.NoteMerger.merge(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectInserter));\n    \n    if (org.eclipse.jgit.notes.Note != null)\n        int++;\n    \n    if (org.eclipse.jgit.notes.Note != null)\n        int++;\n    \n    if (org.eclipse.jgit.notes.Note != null)\n        int++;\n    \n}"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"c91c8769-4c2c-11e5-abb8-6b5b1749d58a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:215","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[36],"tindex":"c91c876a-4c2c-11e5-abb8-3b142267bf00","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:313","type":"CtIfImpl","sourcecode":"if ((0 < int) && (int < int))\n    int = (int / int) * int;\nelse if (int <= 0)\n    int = int;\n"},"variableMap":{"bs":"ptr","wantSize":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:293","type":"CtWhileImpl","sourcecode":"while ((byte[][int]) != 0)\n    int++;"},"status":-1},{"failures":[37],"tindex":"c91c876b-4c2c-11e5-abb8-c51bf1ce292d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.MergeResult:150","type":"CtReturnImpl","sourcecode":"return \"Merged-squashed-not-committed\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:360","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(1)"},"status":-1},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,85,86,86,87,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"tindex":"c91c876c-4c2c-11e5-abb8-9910434dab8b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.SubmoduleSyncCommand:146","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n"},"variableMap":{"org.eclipse.jgit.lib.Constants.DEFAULT_REMOTE_NAME":"msg","remote":"msg"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackLock:90","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.LockFile.write(org.eclipse.jgit.lib.Constants.encode(java.lang.String))"},"status":-1},{"failures":[],"tindex":"c91cae7d-4c2c-11e5-abb8-a5ca9d50b9af","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:736","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) != 49) || (!(java.lang.String.endsWith(\".idx\"))))\n    continue;\n"},"variableMap":{"indexName":"packChecksumMismatch"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:165","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.internal.storage.file.PackIndex) == null) {\n    if (boolean)\n        throw new org.eclipse.jgit.errors.PackInvalidException(java.io.File);\n    \n    try {\n        final org.eclipse.jgit.internal.storage.file.PackIndex org.eclipse.jgit.internal.storage.file.PackIndex = org.eclipse.jgit.internal.storage.file.PackIndex.open(org.eclipse.jgit.internal.storage.file.PackFile.extFile(org.eclipse.jgit.internal.storage.pack.PackExt.org.eclipse.jgit.internal.storage.pack.PackExt));\n        if ((byte[]) == null)\n            byte[] = org.eclipse.jgit.internal.storage.file.PackIndex.byte[];\n        else if (!(java.util.Arrays.equals(byte[], org.eclipse.jgit.internal.storage.file.PackIndex.byte[])))\n            throw new org.eclipse.jgit.errors.PackMismatchException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        org.eclipse.jgit.internal.storage.file.PackIndex = org.eclipse.jgit.internal.storage.file.PackIndex;\n    } catch (java.io.IOException e) {\n        boolean = true;\n        throw java.io.IOException;\n    }\n} "},"status":-2},{"failures":[],"tindex":"c91cae7e-4c2c-11e5-abb8-f97647c281f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:206","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackFile.close()"},"status":0},{"failures":[],"tindex":"c91cae7f-4c2c-11e5-abb8-f76a5b16d70b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:239","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return 0;\n"},"variableMap":{"total":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LargePackedWholeObject:87","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[104],"tindex":"c91cae80-4c2c-11e5-abb8-c3936847bc0b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.NameRevCommand:382","type":"CtReturnImpl","sourcecode":"return int - int"},"variableMap":{"ri":"position","li":"position"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.BitSet:119","type":"CtReturnImpl","sourcecode":"return 1L << int"},"status":-1},{"failures":[],"tindex":"c91cae81-4c2c-11e5-abb8-dbe27ee26de1","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexWriter:271","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[256]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:195","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[int]"},"status":-2},{"failures":[],"tindex":"c91cd492-4c2c-11e5-abb8-d7a9832da934","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.NameRevCommand:375","type":"CtIfImpl","sourcecode":"if ((int < 0) && (java.lang.String.startsWith(java.lang.String)))\n    int = int;\n"},"variableMap":{"prefix":"org.eclipse.jgit.transport.TransportBundle.V2_BUNDLE_SIGNATURE","leftTip":"org.eclipse.jgit.transport.TransportBundle.V2_BUNDLE_SIGNATURE","i":"org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH","li":"org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleWriter:198","type":"CtTryImpl","sourcecode":"try {\n    final java.util.HashSet<org.eclipse.jgit.lib.ObjectId> java.util.HashSet<org.eclipse.jgit.lib.ObjectId> = new java.util.HashSet<org.eclipse.jgit.lib.ObjectId>();\n    final java.util.HashSet<org.eclipse.jgit.lib.ObjectId> java.util.HashSet<org.eclipse.jgit.lib.ObjectId> = new java.util.HashSet<org.eclipse.jgit.lib.ObjectId>();\n    java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.addAll(java.util.Map<java.lang.String, org.eclipse.jgit.lib.ObjectId>.values());\n    for (final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : java.util.Set<org.eclipse.jgit.revwalk.RevCommit>)\n        java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.revwalk.RevCommit.getId());\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setIndexDisabled(true);\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setDeltaBaseAsOffset(true);\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setThin(((java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.size()) > 0));\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setReuseValidatingObjects(false);\n    if ((java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.size()) == 0)\n        org.eclipse.jgit.internal.storage.pack.PackWriter.setTagTargets(java.util.Set<org.eclipse.jgit.lib.ObjectId>);\n    \n    org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, java.util.HashSet<org.eclipse.jgit.lib.ObjectId>, java.util.HashSet<org.eclipse.jgit.lib.ObjectId>);\n    final java.io.Writer java.io.Writer = new java.io.OutputStreamWriter(java.io.OutputStream , org.eclipse.jgit.lib.Constants.java.nio.charset.Charset);\n    java.io.Writer.write(org.eclipse.jgit.transport.TransportBundle.java.lang.String);\n    java.io.Writer.write('\\n');\n    final char[] char[] = new char[org.eclipse.jgit.lib.Constants.int];\n    for (final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : java.util.Set<org.eclipse.jgit.revwalk.RevCommit>) {\n        java.io.Writer.write('-');\n        org.eclipse.jgit.revwalk.RevCommit.copyTo(char[], java.io.Writer);\n        if ((org.eclipse.jgit.revwalk.RevCommit.getRawBuffer()) != null) {\n            java.io.Writer.write(' ');\n            java.io.Writer.write(org.eclipse.jgit.revwalk.RevCommit.getShortMessage());\n        } \n        java.io.Writer.write('\\n');\n    }\n    for (final java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId> java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId> : java.util.Map<java.lang.String, org.eclipse.jgit.lib.ObjectId>.entrySet()) {\n        java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId>.getValue().copyTo(char[], java.io.Writer);\n        java.io.Writer.write(' ');\n        java.io.Writer.write(java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId>.getKey());\n        java.io.Writer.write('\\n');\n    }\n    java.io.Writer.write('\\n');\n    java.io.Writer.flush();\n    org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream);\n} finally {\n    org.eclipse.jgit.internal.storage.pack.PackWriter.release();\n}"},"status":-2},{"failures":[],"tindex":"c91cd493-4c2c-11e5-abb8-c70dbee16b87","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:417","type":"CtInvocationImpl","sourcecode":"java.io.File.setLastModified(java.lang.System.currentTimeMillis())"},"status":-2},{"failures":[139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,31,210,33,211,212,213,42,43,44,45,46,47,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,58,60,61,63,64,65,66,67,68,69,70,80,81,82,83,84,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,102,272,273,36,103,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,90,93,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,132,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,35,501,137,138,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551],"tindex":"c91cfba4-4c2c-11e5-abb8-577350564d8a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:362","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(org.eclipse.jgit.treewalk.FileTreeIterator.getEntryLastModified())"},"variableMap":{"fTree":"f","dcEntry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddCommand:175","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.dircache.DirCacheIterator == null) || ((org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry()) == null)) || (!(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry().isAssumeValid()))) {\n    org.eclipse.jgit.lib.FileMode org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.treewalk.WorkingTreeIterator.getIndexFileMode(org.eclipse.jgit.dircache.DirCacheIterator);\n    org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.lib.FileMode);\n    if ((org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode) != org.eclipse.jgit.lib.FileMode) {\n        org.eclipse.jgit.dircache.DirCacheEntry.setLength(long);\n        org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLastModified());\n        long long = org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryContentLength();\n        java.io.InputStream java.io.InputStream = org.eclipse.jgit.treewalk.WorkingTreeIterator.openEntryStream();\n        try {\n            org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.Constants.int, long, java.io.InputStream));\n        } finally {\n            java.io.InputStream.close();\n        }\n    } else\n        org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryObjectId());\n    \n    org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry);\n    java.lang.String = java.lang.String;\n} else {\n    org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry());\n}"},"status":-1},{"failures":[],"tindex":"c91cfba5-4c2c-11e5-abb8-fb275e63add2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.SquashMessageFormatter:100","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Date:   \")"},"variableMap":{"a":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TagBuilder:226","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"tagger \")"},"status":0},{"failures":[],"tindex":"c91d22b6-4c2c-11e5-abb8-8d3dfe62a4ac","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:795","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackFile.close()"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}