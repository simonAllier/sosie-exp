{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":178,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":160,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":181,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":1,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":157,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":40,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":34,"org.eclipse.jgit.lib.IndexDiffTest.testModified":186,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":138,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":7,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":89,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":37,"org.eclipse.jgit.api.FetchCommandTest.testFetch":82,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":38,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":131,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":144,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":146,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":12,"org.eclipse.jgit.transport.PacketLineOutTest.testFlush":99,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":114,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":5,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":153,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":143,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":185,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":116,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":29,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff1":51,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":17,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":31,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2":52,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":167,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":150,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test008_FailOnWrongVersion":47,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":134,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":141,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":172,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":3,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":25,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":165,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":110,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":120,"org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection":64,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":142,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":36,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":113,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":22,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags":32,"org.eclipse.jgit.lib.ConfigTest.testEmptyString":65,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":174,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":148,"org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive":57,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout":26,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":76,"org.eclipse.jgit.api.PushCommandTest.testPush":103,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":130,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":20,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":45,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":78,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":0,"org.eclipse.jgit.lib.ConfigTest.testNoFinalNewline":66,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":11,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":18,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":156,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":102,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":175,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":154,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":152,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":137,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":136,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":39,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":173,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":13,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":2,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":117,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":23,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":85,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":42,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":140,"org.eclipse.jgit.lib.ConfigTest.test010_readNamesInSubSection":67,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion":44,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":59,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse1":72,"org.eclipse.jgit.lib.ConfigTest.test001_ReadBareKey":63,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":84,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":162,"org.eclipse.jgit.lib.ConfigTest.testGetEnum":58,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":119,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":95,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2":73,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":168,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":133,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":184,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":9,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":35,"org.eclipse.jgit.lib.BranchConfigTest.isRebase":75,"org.eclipse.jgit.api.GitConstructionTest.testWrap":81,"org.eclipse.jgit.transport.PacketLineOutTest.testWriteEnd":100,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":159,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":122,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":90,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":91,"org.eclipse.jgit.api.GitConstructionTest.testOpen":80,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":149,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":145,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":121,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":61,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":16,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":169,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":188,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":41,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":92,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":97,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":171,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":94,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":48,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":83,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":77,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":86,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.invalidRepositoryFormatVersion":43,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":151,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":46,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":19,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":93,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":163,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":164,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":147,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":161,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions":53,"org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue":71,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":183,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":182,"org.eclipse.jgit.api.GitConstructionTest.testClose":79,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":4,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":104,"org.eclipse.jgit.lib.ConfigTest.test009_readNamesInSection":60,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":115,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch":74,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":176,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":96,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":129,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":128,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":118,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":33,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":101,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":10,"org.eclipse.jgit.lib.ConfigTest.testReadLong":62,"org.eclipse.jgit.transport.PacketLineOutTest.testWritePacket3":98,"org.eclipse.jgit.lib.ConfigTest.test008_readSectionNames":70,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":106,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":166,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":132,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":6,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":180,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":187,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":21,"org.eclipse.jgit.lib.ConfigTest.test_ReadNamesInSectionRecursive":56,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":179,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":88,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":109,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":123,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":177,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":125,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":126,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":139,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":8,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":108,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":87,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":105,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":14,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":112,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":69,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":158,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":24,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":155,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":127,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":111,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":135,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":107,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":27,"org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum":68,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":170,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags":28,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge":50,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":15,"org.eclipse.jgit.lib.ConfigTest.test006_readCaseInsensitive":49,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo1":54,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":30,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2":55,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":124},"transformations":[{"failures":[],"tindex":"1b5b7c73-4c3b-11e5-9cd6-d7ae678f4bef","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:128","type":"CtIfImpl","sourcecode":"if ((java.lang.Integer.bitCount(int)) != 1)\n    throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"variableMap":{"newSize":"options","windowSizeMustBePowerOf2":"deleteFileFailed"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FileUtils:158","type":"CtIfImpl","sourcecode":"if ((int & (org.eclipse.jgit.util.FileUtils.int)) == 0)\n    throw new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File.getAbsolutePath()));\n"},"status":-2},{"failures":[],"tindex":"1b5ba384-4c3b-11e5-9cd6-5572e786ba90","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectReader:138","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<org.eclipse.jgit.lib.ObjectId> = java.util.List<org.eclipse.jgit.lib.ObjectId>"},"variableMap":{"matches":"matches","n":"matches"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectReader:140","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<org.eclipse.jgit.lib.ObjectId> = org.eclipse.jgit.lib.ObjectReader.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"1b5ba385-4c3b-11e5-9cd6-3987b0dab2d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1032","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    int int = org.eclipse.jgit.lib.Config.StringReader.read();\n    if ((-1) == int) {\n        if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null)\n            java.util.List<org.eclipse.jgit.lib.ConfigLine>.add(org.eclipse.jgit.lib.ConfigLine);\n        \n        break;\n    } \n    final char char = ((char)(int));\n    if ('\\n' == char) {\n        java.util.List<org.eclipse.jgit.lib.ConfigLine>.add(org.eclipse.jgit.lib.ConfigLine);\n        if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null)\n            org.eclipse.jgit.lib.ConfigLine = org.eclipse.jgit.lib.ConfigLine;\n        \n        org.eclipse.jgit.lib.ConfigLine = new org.eclipse.jgit.lib.ConfigLine();\n    } else if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String += char;\n    } else if ((';' == char) || ('#' == char)) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = java.lang.String.valueOf(char);\n    } else if (((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null) && (java.lang.Character.isWhitespace(char))) {\n        if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null)\n            org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n        \n        org.eclipse.jgit.lib.ConfigLine.java.lang.String += char;\n    } else if ('[' == char) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readSectionName(org.eclipse.jgit.lib.Config.StringReader);\n        int = org.eclipse.jgit.lib.Config.StringReader.read();\n        if ('\\\"' == int) {\n            org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, true, '\\\"');\n            int = org.eclipse.jgit.lib.Config.StringReader.read();\n        } \n        if (']' != int)\n            throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n    } else if (org.eclipse.jgit.lib.ConfigLine != null) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n        org.eclipse.jgit.lib.Config.StringReader.reset();\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readKeyName(org.eclipse.jgit.lib.Config.StringReader);\n        if (org.eclipse.jgit.lib.ConfigLine.java.lang.String.endsWith(\"\\n\")) {\n            org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String.substring(0, ((org.eclipse.jgit.lib.ConfigLine.java.lang.String.length()) - 1));\n            org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.java.lang.String;\n        } else\n            org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, false, -1);\n        \n    } else\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n}"},"status":-1},{"failures":[],"tindex":"1b5bca96-4c3b-11e5-9cd6-b163ed63d115","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:380","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.FileRepository.loadSystemConfig()"},"variableMap":{"this":"repo"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:154","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger.setWorkingTreeIterator(new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository))"},"status":-2},{"failures":[14,17,18,19,15,16,20,22,79,79,80,80,81,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,24,140,141,25,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"tindex":"1b5bca97-4c3b-11e5-9cd6-43f3c15d0a11","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:1151","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write('\\n')"},"variableMap":{"o":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PacketLineOut:152","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.flush()"},"status":-1},{"failures":[],"tindex":"1b5bf1a8-4c3b-11e5-9cd6-1bcd6151282b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.TreeWalk:548","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = true;\n    boolean = true;\n    return true;\n} "},"variableMap":{"postOrderTraversal":"org.eclipse.jgit.internal.storage.pack.DeltaWindow.NEXT_SRC","postChildren":"org.eclipse.jgit.internal.storage.pack.DeltaWindow.NEXT_SRC","advance":"org.eclipse.jgit.internal.storage.pack.DeltaWindow.NEXT_SRC"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:280","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.pack.DeltaIndex = org.eclipse.jgit.internal.storage.pack.DeltaWindow.index(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry);\n} catch (org.eclipse.jgit.errors.LargeObjectException tooBig) {\n    return org.eclipse.jgit.internal.storage.pack.DeltaWindow.boolean;\n} catch (java.io.IOException notAvailable) {\n    if (org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.org.eclipse.jgit.internal.storage.pack.ObjectToPack.isEdge())\n        return org.eclipse.jgit.internal.storage.pack.DeltaWindow.boolean;\n    \n    throw java.io.IOException;\n}"},"status":-2},{"failures":[],"tindex":"1b5bf1a9-4c3b-11e5-9cd6-5f0d26d89b79","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.NoteMapMerger:317","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.notes.NonNoteEntry == null) && (org.eclipse.jgit.notes.NonNoteEntry == null)) && (org.eclipse.jgit.notes.NonNoteEntry == null))\n    return null;\n"},"variableMap":{"oursList":"resultTreeId","theirsList":"nonNotes","baseList":"resultTreeId"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMapMerger:333","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.notes.NoteParser.parse(org.eclipse.jgit.lib.AbbreviatedObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectReader).org.eclipse.jgit.notes.NonNoteEntry"},"status":-2},{"failures":[],"tindex":"1b5bf1aa-4c3b-11e5-9cd6-770f5f3693b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.TimeoutOutputStream:137","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.close()"},"status":-2},{"failures":[171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,150,153],"tindex":"1b5bf1ab-4c3b-11e5-9cd6-b18a804f52c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:487","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n    if (org.eclipse.jgit.treewalk.WorkingTreeIterator == null) {\n        if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n            java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n        \n    } else {\n        if (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry(), true, org.eclipse.jgit.treewalk.TreeWalk.getObjectReader())) {\n            if (((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || (!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.WorkingTreeIterator)))) || (((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) && ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode))))\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"1b5bf1ac-4c3b-11e5-9cd6-55aee92e95b4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.QuotedString:323","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = '\\f'"},"variableMap":{"r":"path","rPtr":"pathOffset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:225","type":"CtAssignmentImpl","sourcecode":"byte[][((int) - 1)] = '/'"},"status":-2},{"failures":[],"tindex":"1b5c18bd-4c3b-11e5-9cd6-ad7f2f3f75ef","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:545","type":"CtDoImpl","sourcecode":"do {\n    org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.get();\n    org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.put(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef);\n} while (!(java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.compareAndSet(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>)) )"},"status":-2},{"failures":[80,81,24,25,142,147,148],"tindex":"1b5c18be-4c3b-11e5-9cd6-013c26a7f1b0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase:147","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.lib.Ref.isSymbolic()))\n    return org.eclipse.jgit.lib.Ref;\n"},"variableMap":{"ref":"idHEAD"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:282","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref != null) && (org.eclipse.jgit.lib.Ref.getObjectId().equals(org.eclipse.jgit.lib.Ref.getObjectId())))\n    return org.eclipse.jgit.lib.Ref;\n"},"status":-1},{"failures":[],"tindex":"1b5c18bf-4c3b-11e5-9cd6-07358559e1d4","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:325","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revplot.PlotCommit != null)\n    org.eclipse.jgit.revplot.PlotCommit.addPassingLane(org.eclipse.jgit.revplot.PlotLane);\n"},"status":-2},{"failures":[187,188],"tindex":"1b5c18c0-4c3b-11e5-9cd6-4931e6ef814f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:445","type":"CtIfImpl","sourcecode":"if (java.io.File != null)\n    org.eclipse.jgit.dircache.DirCacheCheckout.removeEmptyParents(java.io.File);\n"},"status":-1},{"failures":[],"tindex":"1b5c18c1-4c3b-11e5-9cd6-31f299ecf6b4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.PacketLineOut:163","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:579","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.find(java.lang.String)"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}