{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":41,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":136,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":143,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":38,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":28,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_UniqueCommonLargerThanMatchPoint":155,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":88,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":30,"org.eclipse.jgit.api.FetchCommandTest.testFetch":8,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":123,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":111,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":96,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":98,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":2,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":129,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":14,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":95,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":74,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":80,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":57,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":121,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":48,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":11,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":92,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":114,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_FlipAndExpand":148,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":93,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":46,"org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsNonBare":138,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_InvertBlocks":156,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":23,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":76,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_InsertNearCommonTail":154,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":94,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":133,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":1,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":71,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":26,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":100,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":137,"org.eclipse.jgit.api.PushCommandTest.testPush":20,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":110,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":25,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":124,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":66,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":58,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":17,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":64,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_ReplaceCommonDelete":150,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":19,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":122,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":15,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":13,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":117,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":116,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":69,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":75,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":140,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":91,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":120,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LcsContainsUnique":149,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":9,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":43,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":125,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":145,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_CommonReplaceCommonDeleteCommon":158,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":5,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":49,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":113,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique":72,"org.eclipse.jgit.api.GitConstructionTest.testWrap":37,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":40,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback":60,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":78,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":102,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":31,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":52,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":83,"org.eclipse.jgit.api.GitConstructionTest.testOpen":36,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":101,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":27,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":67,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":97,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_DuplicateAButCommonUniqueInB":153,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":77,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":131,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_MoveBlock":152,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":81,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":56,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":50,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":53,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":7,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":4,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_FlipBlocks":147,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":87,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":63,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":139,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":10,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":12,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_CommonGrowsPrefixAndSuffix":157,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":82,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":126,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":59,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":68,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":3,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":44,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":130,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":45,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":132,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":42,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":99,"org.eclipse.jgit.transport.PackParserTest.test1":32,"org.eclipse.jgit.api.GitConstructionTest.testClose":35,"org.eclipse.jgit.transport.PackParserTest.test2":33,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":73,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":79,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":159,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":6,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":109,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":108,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":144,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":18,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":47,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":112,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":118,"org.eclipse.jgit.util.RefMapTest.testToString_NoPrefix":161,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":29,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":22,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":65,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":70,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoNonConflictingModifications":127,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":146,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":103,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LinuxBug":151,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":105,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":89,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":106,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":134,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":142,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":85,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":135,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":141,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":54,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":86,"org.eclipse.jgit.util.RefMapTest.testToString_WithPrefix":160,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":0,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":39,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":61,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSeperateModifications":128,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":16,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":90,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":107,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":24,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":115,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":119,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":21,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":34,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":51,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":62,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":84,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":55,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":104},"transformations":[{"failures":[],"tindex":"1b6ae6ae-4c30-11e5-a173-e5e2ac89b7e5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:297","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:273","type":"CtLocalVariableImpl","sourcecode":"char char = org.eclipse.jgit.ignore.internal.Strings.org.eclipse.jgit.ignore.internal.Strings.lookAhead(java.lang.String, int)"},"status":-2},{"failures":[],"tindex":"1b6b0dbf-4c30-11e5-a173-a1976021d071","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner:126","type":"CtIfImpl","sourcecode":"if (int < int)\n    int <<= 1;\n"},"variableMap":{"sz":"oldSize","worstCaseBlockCnt":"oldSize"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectIdSubclassMap:229","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectIdSubclassMap<V>.initTable((int << 1))"},"status":-2},{"failures":[],"tindex":"1b6b0dc0-4c30-11e5-a173-fb996d8765d1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:363","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"truncated in mode\");\n"},"variableMap":{"sz":"resPtr","ptr":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:400","type":"CtForImpl","sourcecode":"for ( ; (int < (byte[].int)) && (int < (byte[].int)) ; int++ , int++) {\n    if ((byte[][int]) != (byte[][int]))\n        break;\n    \n}"},"status":-2},{"failures":[],"tindex":"1b6b0dc1-4c30-11e5-a173-3f7b50f18efa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.MergeCommand:286","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.getTree()"},"variableMap":{"srcCommit":"objectId"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:312","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevTree = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.lib.Repository).parseTree(org.eclipse.jgit.lib.ObjectId)"},"status":-2},{"failures":[],"tindex":"1b6b0dc2-4c30-11e5-a173-5963fbfe79f4","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:840","type":"CtIfImpl","sourcecode":"if (byte[] == null)\n    throw new org.eclipse.jgit.errors.LargeObjectException();\n"},"variableMap":{"data":"rec"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ReflogWriter:267","type":"CtTryImpl","sourcecode":"try {\n    if (org.eclipse.jgit.internal.storage.file.WriteConfig.getFSyncRefFiles()) {\n        java.nio.channels.FileChannel java.nio.channels.FileChannel = java.io.FileOutputStream.getChannel();\n        java.nio.ByteBuffer java.nio.ByteBuffer = java.nio.ByteBuffer.wrap(byte[]);\n        while (0 < (java.nio.ByteBuffer.remaining()))\n            java.nio.channels.FileChannel.write(java.nio.ByteBuffer);\n        java.nio.channels.FileChannel.force(true);\n    } else\n        java.io.FileOutputStream.write(byte[]);\n    \n} finally {\n    java.io.FileOutputStream.close();\n}"},"status":0},{"failures":[],"tindex":"1b6b0dc3-4c30-11e5-a173-b5d7712c47b0","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.WalkEncryption:95","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String)))\n    throw new java.io.IOException(((org.eclipse.jgit.internal.JGitText.get().java.lang.String) + java.lang.String));\n"},"variableMap":{"v":"b","name":"a","unsupportedEncryptionAlgorithm":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:332","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int = 100;\n    int = 100;\n} else {\n    int int = 0;\n    for ( ; int < int ; int++) {\n        if ((java.lang.String.charAt(int)) != (java.lang.String.charAt(int)))\n            break;\n        \n    }\n    int = (int * 100) / int;\n    if (int == 100) {\n        int = 100;\n    } else {\n        for (int = 0 ; int < int ; int++) {\n            if ((java.lang.String.charAt(((int - 1) - int))) != (java.lang.String.charAt(((int - 1) - int))))\n                break;\n            \n        }\n        int = (int * 100) / int;\n    }\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,35,36,36,37,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"tindex":"1b6b34d4-4c30-11e5-a173-d1cf04927a29","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1:157","type":"CtInvocationImpl","sourcecode":"java.security.DigestOutputStream.on(false)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexWriterV2:97","type":"CtInvocationImpl","sourcecode":"java.security.DigestOutputStream.write(byte[], 0, 4)"},"status":-1},{"failures":[],"tindex":"1b6b34d5-4c30-11e5-a173-053695f825d8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.Note:72","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId"},"variableMap":{"data":"deltaBase","newData":"deltaBase"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:157","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.lib.ObjectId = null"},"status":0},{"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"tindex":"1b6b34d6-4c30-11e5-a173-a5e26e8c46f7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.Candidate:228","type":"CtIfImpl","sourcecode":"if (int == (org.eclipse.jgit.diff.Edit.getEndB()))\n    int++;\n"},"variableMap":{"e":"oursEdit","eIdx":"current","rEnd":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:155","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.MergeResult<S>.add(0, int, org.eclipse.jgit.diff.Edit.getBeginA(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState)"},"status":-1},{"failures":[],"tindex":"1b6b34d7-4c30-11e5-a173-7b1898162227","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:124","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.api.CherryPickResult>.checkCallable()"},"status":-2},{"failures":[],"tindex":"1b6b34d8-4c30-11e5-a173-b9c0c898e8b0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.IntSet:69","type":"CtIfImpl","sourcecode":"if (int == (int[][int]))\n    return false;\nelse\n    int = int + 1;\n"},"variableMap":{"p":"length","set":"recIdx","low":"recCnt","key":"ptrShift"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:189","type":"CtForImpl","sourcecode":"SCAN : for (int int = (org.eclipse.jgit.diff.Edit.int) - 1 ; (org.eclipse.jgit.diff.Edit.int) <= int ; int--) {\n    final int int = org.eclipse.jgit.diff.HistogramDiffIndex<S>.hash(org.eclipse.jgit.diff.HashedSequence<S>, int);\n    int int = 0;\n    for (int int = int[][int] ; int != 0 ; ) {\n        final long long = long[][int];\n        if (org.eclipse.jgit.diff.HashedSequenceComparator<S>.equals(org.eclipse.jgit.diff.HashedSequence<S>, org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recPtr(long), org.eclipse.jgit.diff.HashedSequence<S>, int)) {\n            int int = org.eclipse.jgit.diff.HistogramDiffIndex<S>.(org.eclipse.jgit.diff.HistogramDiffIndex.recCnt(long)) + 1;\n            if ((org.eclipse.jgit.diff.HistogramDiffIndex.int) < int)\n                int = org.eclipse.jgit.diff.HistogramDiffIndex.int;\n            \n            long[][int] = org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recCreate(org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recNext(long), int, int);\n            int[][(int - (int))] = org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recPtr(long);\n            int[][(int - (int))] = int;\n            continue SCAN;\n        } \n        int = org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recNext(long);\n        int++;\n    }\n    if (int == (int))\n        return false;\n    \n    final int int = ++(int);\n    if (int == (long[].int)) {\n        int int = java.lang.Math.min(((long[].int) << 1), (1 + (org.eclipse.jgit.diff.Edit.getLengthA())));\n        long[] long[] = new long[int];\n        java.lang.System.arraycopy(long[], 0, long[], 0, long[].int);\n        long[] = long[];\n    } \n    long[][int] = org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recCreate(int[][int], int, 1);\n    int[][(int - (int))] = int;\n    int[][int] = int;\n}"},"status":-2},{"failures":[138],"tindex":"1b6b5be9-4c30-11e5-a173-e36c55fe9459","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:356","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File"},"variableMap":{"directory":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.InitCommand:101","type":"CtAssignmentImpl","sourcecode":"java.io.File = new java.io.File(java.io.File , org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-1},{"failures":[1,2,11,12,13,14,16,17,38,39,40,41,42,43,44,45,46,47,48,49,50,51,3,4,5,6,7,8,139,9,140,10,141,21,142,22,23,24,19,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,25,26,29,30,143,31,36,37,90,91,93,94,95,96,98,99,73,74,75,144,145,76,77,146,58,59,54,52,53],"tindex":"1b6b5bea-4c30-11e5-a173-2d59b825f1b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefAdvertiser:244","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.RefAdvertiser.advertiseId(org.eclipse.jgit.lib.AnyObjectId, java.lang.String)"},"status":-1},{"failures":[147,148,149,150,151,152,153,154,155,156,157,158,159],"tindex":"1b6b5beb-4c30-11e5-a173-ef4041192114","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:275","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.diff.Edit.getLengthA()) < (int - int)) || (int < (int))) {\n    org.eclipse.jgit.diff.Edit.int = int;\n    org.eclipse.jgit.diff.Edit.int = int;\n    org.eclipse.jgit.diff.Edit.int = int;\n    org.eclipse.jgit.diff.Edit.int = int;\n    int = int;\n} "},"status":-1},{"failures":[160,161],"tindex":"1b6b82fc-4c30-11e5-a173-b72c5781dfe9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.PersonIdent:285","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"r":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:273","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(']')"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}