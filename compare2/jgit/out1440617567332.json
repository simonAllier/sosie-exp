{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":10,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":7,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchNone":140,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":38,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":82,"org.eclipse.jgit.api.FetchCommandTest.testFetch":73,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":66,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":46,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":48,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":37,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":31,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":45,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":1,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":100,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":17,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":28,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":42,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":69,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":43,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked":116,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":15,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":5,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":96,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":44,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":123,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":36,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":143,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":80,"org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_writeByte_Timeout":118,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":50,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testClear":106,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":65,"org.eclipse.jgit.api.PushCommandTest.testPush":89,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":79,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter":131,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3":129,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSameModification":122,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1":127,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":114,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2":128,"org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges":117,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":101,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":34,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2":136,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":88,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":109,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":111,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":32,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":30,"org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_Small":27,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":72,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":71,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting":139,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":141,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":2,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":76,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":41,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted":110,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":113,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":12,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":75,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":4,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":54,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":18,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":68,"org.eclipse.jgit.api.GitConstructionTest.testWrap":86,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":9,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":57,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":83,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":104,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":51,"org.eclipse.jgit.api.GitConstructionTest.testOpen":85,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":47,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":6,"org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_SmallBlocks1":23,"org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_CH_DATA":22,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":99,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":19,"org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_SmallBlocks3":24,"org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_Large":26,"org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_CH_ERROR":21,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":105,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":56,"org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications":120,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":53,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2":130,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":74,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":77,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting":135,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":29,"org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_CH_PROGRESS":25,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting":138,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":102,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":52,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":13,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":14,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":11,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":49,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":144,"org.eclipse.jgit.api.GitConstructionTest.testClose":84,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting":137,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":90,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored":107,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":0,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":108,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":119,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":55,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":64,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":63,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":3,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":87,"org.eclipse.jgit.lib.T0002_TreeTest.test006_addDeepTree":124,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications":121,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":126,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":16,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":92,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6":125,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":67,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":142,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":81,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":145,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":95,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":58,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":60,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":39,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":61,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":94,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":78,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":91,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":103,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":35,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":8,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":33,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":40,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":62,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":70,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":97,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":93,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":146,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":112,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1":132,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":20,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3":134,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2":133,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":98,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified":115,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":59},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,84,85,85,86,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"3b1833a5-4c29-11e5-a109-33f1492e8d74","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandOutputStream:170","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PacketLineOut.formatLength(byte[], int)"},"status":-1},{"failures":[106],"tindex":"3b185ab6-4c29-11e5-a109-8f9659c5439c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.BlockRevQueue:97","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.BlockRevQueue.Block = org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.BlockRevQueue.Block"},"variableMap":{"next":"head","b":"head"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:126","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.BlockRevQueue.Block = null"},"status":-1},{"failures":[],"tindex":"3b1881c7-4c29-11e5-a109-0bd772ac9407","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.RemoteConfig:503","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.transport.TagOpt"},"variableMap":{"tagopt":"org.eclipse.jgit.transport.TagOpt.AUTO_FOLLOW"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TagOpt:107","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.transport.TagOpt.org.eclipse.jgit.transport.TagOpt"},"status":-2},{"failures":[],"tindex":"3b1881c8-4c29-11e5-a109-aff5eac68fbd","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:921","type":"CtReturnImpl","sourcecode":"return new java.util.HashMap<java.lang.String, org.eclipse.jgit.lib.Ref>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:139","type":"CtTryImpl","sourcecode":"try {\n    java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String> java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String> = new java.util.HashMap<org.eclipse.jgit.lib.ObjectId, java.lang.String>();\n    org.eclipse.jgit.revwalk.FIFORevQueue org.eclipse.jgit.revwalk.FIFORevQueue = new org.eclipse.jgit.revwalk.FIFORevQueue();\n    if ((java.util.List<org.eclipse.jgit.lib.Ref>) != null) {\n        for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.List<org.eclipse.jgit.lib.Ref>)\n            org.eclipse.jgit.api.NameRevCommand.addRef(org.eclipse.jgit.lib.Ref, java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue);\n    } \n    org.eclipse.jgit.api.NameRevCommand.addPrefixes(java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue);\n    int int = org.eclipse.jgit.api.NameRevCommand.(minCommitTime()) - (org.eclipse.jgit.api.NameRevCommand.int);\n    while (true) {\n        org.eclipse.jgit.api.NameRevCommand.NameRevCommit org.eclipse.jgit.api.NameRevCommand.NameRevCommit = ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit)(org.eclipse.jgit.revwalk.FIFORevQueue.next()));\n        if (org.eclipse.jgit.api.NameRevCommand.NameRevCommit == null)\n            break;\n        \n        if ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit.getCommitTime()) < int)\n            continue;\n        \n        for (int int = 0 ; int < (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.getParentCount()) ; int++) {\n            org.eclipse.jgit.api.NameRevCommand.NameRevCommit org.eclipse.jgit.api.NameRevCommand.NameRevCommit = ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit)(org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.api.NameRevCommand.NameRevCommit.getParent(int))));\n            long long = (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.long) + (int > 0 ? int : 1);\n            if (((org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String) == null) || (org.eclipse.jgit.api.NameRevCommand.(compare(org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String, long, org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String, org.eclipse.jgit.api.NameRevCommand.NameRevCommit.long)) < 0)) {\n                if (int > 0) {\n                    org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String = org.eclipse.jgit.api.NameRevCommand.NameRevCommit.format().append('^').append((int + 1)).toString();\n                    org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int = 0;\n                } else {\n                    org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String = org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String;\n                    org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int = (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int) + 1;\n                }\n                org.eclipse.jgit.api.NameRevCommand.NameRevCommit.long = long;\n                org.eclipse.jgit.revwalk.FIFORevQueue.add(org.eclipse.jgit.api.NameRevCommand.NameRevCommit);\n            } \n        }\n    }\n    java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String> java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String> = new java.util.LinkedHashMap<org.eclipse.jgit.lib.ObjectId, java.lang.String>(java.util.List<org.eclipse.jgit.lib.ObjectId>.size());\n    for (org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId : java.util.List<org.eclipse.jgit.lib.ObjectId>) {\n        org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.ObjectId);\n        if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.api.NameRevCommand.NameRevCommit) {\n            org.eclipse.jgit.api.NameRevCommand.NameRevCommit org.eclipse.jgit.api.NameRevCommand.NameRevCommit = ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit)(org.eclipse.jgit.revwalk.RevObject));\n            if ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String) != null)\n                java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.put(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.api.NameRevCommand.org.eclipse.jgit.api.NameRevCommand.simplify(org.eclipse.jgit.api.NameRevCommand.NameRevCommit.format().toString()));\n            \n        } else {\n            java.lang.String java.lang.String = java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.get(org.eclipse.jgit.lib.ObjectId);\n            if (java.lang.String != null)\n                java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.put(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.api.NameRevCommand.org.eclipse.jgit.api.NameRevCommand.simplify(java.lang.String));\n            \n        }\n    }\n    org.eclipse.jgit.api.GitCommand<java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>>.setCallable(false);\n    org.eclipse.jgit.revwalk.RevWalk.release();\n    return java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>;\n} catch (java.io.IOException e) {\n    org.eclipse.jgit.revwalk.RevWalk.reset();\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException);\n}"},"status":-2},{"failures":[107,108,109,110,111,112,113,114,115,116,117],"tindex":"3b18a8d9-4c29-11e5-a109-e7c0d904138b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:161","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.dircache.DirCacheEntry) != null"},"variableMap":{"currentEntry":"dce"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:146","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.dircache.DirCacheEntry.getStage()) != 0)\n    return true;\n"},"status":-1},{"failures":[118],"tindex":"3b18cfea-4c29-11e5-a109-97130d41068e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:274","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"no type header\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.TimeoutOutputStream:98","type":"CtThrowImpl","sourcecode":"throw org.eclipse.jgit.util.io.TimeoutOutputStream.writeTimedOut()"},"status":-1},{"failures":[119,120,121,122,123],"tindex":"3b18cfeb-4c29-11e5-a109-4d0b9a684e2f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RefMap:332","type":"CtIfImpl","sourcecode":"if (int == 0)\n    (int)++;\n"},"variableMap":{"cmp":"commonSuffix","packedIdx":"minBSize"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:268","type":"CtWhileImpl","sourcecode":"while ((int < int) && (org.eclipse.jgit.diff.SequenceComparator<S>.equals(S, ((int - int) - 1), S, ((int - int) - 1))))\n    int++;"},"status":-1},{"failures":[],"tindex":"3b18cfec-4c29-11e5-a109-f3d1c1a21a48","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:196","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.diff.DiffEntry org.eclipse.jgit.diff.DiffEntry : java.util.List<org.eclipse.jgit.diff.DiffEntry>) {\n    if ((org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.diff.DiffEntry.ChangeType) == (org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType))\n        java.util.ArrayList<org.eclipse.jgit.diff.DiffEntry>.add(org.eclipse.jgit.diff.DiffEntry);\n    \n}"},"status":-2},{"failures":[],"tindex":"3b18cfed-4c29-11e5-a109-7fa6e5e10ad4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileSnapshot:78","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:279","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 16"},"status":-2},{"failures":[],"tindex":"3b18f6fe-4c29-11e5-a109-57a20b4ed0b9","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:716","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"variableMap":{"data":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IntList:143","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('[')"},"status":-2},{"failures":[],"tindex":"3b18f6ff-4c29-11e5-a109-dde270263110","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackConnection:201","type":"CtIfImpl","sourcecode":"if (java.lang.String == (org.eclipse.jgit.transport.PacketLineIn.java.lang.String))\n    break;\n"},"variableMap":{"line":"pattern","org.eclipse.jgit.transport.PacketLineIn.END":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:90","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"!\")) {\n    int++;\n    boolean = true;\n} "},"status":-2},{"failures":[124],"tindex":"3b18f700-4c29-11e5-a109-07bd573a7c81","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.filter.AndRevFilter:201","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" AND \")"},"variableMap":{"r":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TreeEntry:249","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('/')"},"status":-1},{"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"tindex":"3b18f701-4c29-11e5-a109-1706f250912e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:104","type":"CtReturnImpl","sourcecode":"return !(org.eclipse.jgit.util.SystemReader.getInstance().isMacOS())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:165","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[144,145,146],"tindex":"3b191e12-4c29-11e5-a109-bb873cf0b59f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector:135","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.storage.pack.PackConfig = org.eclipse.jgit.storage.pack.PackConfig"},"variableMap":{"packConfig":"pc","newConfig":"pc"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleWriter:196","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.storage.pack.PackConfig = new org.eclipse.jgit.storage.pack.PackConfig(org.eclipse.jgit.lib.Repository)"},"status":-1},{"failures":[],"tindex":"3b191e13-4c29-11e5-a109-318193c08a65","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:426","type":"CtIfImpl","sourcecode":"if ((int) <= int)\n    int = 0;\n"},"variableMap":{"tableSize":"len","ptr":"org.eclipse.jgit.internal.storage.pack.DeltaIndex.MAX_CHAIN_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:163","type":"CtDoImpl","sourcecode":"do {\n    if ((++int) == (org.eclipse.jgit.internal.storage.pack.DeltaIndex.int)) {\n        org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner.int[][int] = 0;\n        break;\n    } \n    int = org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner.int[][int];\n} while (int != 0 )"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}