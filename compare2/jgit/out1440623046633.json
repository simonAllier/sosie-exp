{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindObjectWrongOffset":0,"org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindNextOffsetWrongOffset":1,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":2,"org.eclipse.jgit.lib.ConfigTest.testSetEnum":3},"transformations":[{"failures":[],"tindex":"fd05c727-4c35-11e5-bb76-55ff3c646304","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:248","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:183","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator[][int]"},"status":-2},{"failures":[],"tindex":"fd05ee38-4c35-11e5-bb76-6f39f84dfc3b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:552","type":"CtOperatorAssignmentImpl","sourcecode":"long -= int"},"variableMap":{"sz":"len","n":"org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:1031","type":"CtOperatorAssignmentImpl","sourcecode":"long -= org.eclipse.jgit.lib.Constants.int"},"status":-2},{"failures":[],"tindex":"fd05ee39-4c35-11e5-bb76-a1d650dc8d65","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate:131","type":"CtReturnImpl","sourcecode":"return \"forced-update\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BranchConfig:93","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"fd05ee3a-4c35-11e5-bb76-c9ff189c9c17","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:224","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevCommit"},"variableMap":{"srcParent":"newHead"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:142","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.List<org.eclipse.jgit.lib.Ref>) {\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getPeeledObjectId();\n    if (org.eclipse.jgit.lib.ObjectId == null)\n        org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId();\n    \n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId);\n    if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) != 1)\n        throw new org.eclipse.jgit.api.errors.MultipleParentsNotAllowedException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.revwalk.RevCommit.name(), java.lang.Integer.valueOf(org.eclipse.jgit.revwalk.RevCommit.getParentCount())));\n    \n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n    org.eclipse.jgit.revwalk.RevWalk.parseHeaders(org.eclipse.jgit.revwalk.RevCommit);\n    java.lang.String java.lang.String = org.eclipse.jgit.api.RevertCommand.calculateOurName(org.eclipse.jgit.lib.Ref);\n    java.lang.String java.lang.String = ((org.eclipse.jgit.revwalk.RevCommit.getId().abbreviate(7).name()) + \" \") + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage());\n    org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository)));\n    org.eclipse.jgit.merge.ResolveMerger.setWorkingTreeIterator(new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository));\n    org.eclipse.jgit.merge.ResolveMerger.setBase(org.eclipse.jgit.revwalk.RevCommit.getTree());\n    org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"BASE\" , java.lang.String , java.lang.String });\n    java.lang.String java.lang.String = (\"Revert \\\"\" + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage())) + \"\\\"\";\n    java.lang.String java.lang.String = (((java.lang.String + \"\\n\\n\") + \"This reverts commit \") + (org.eclipse.jgit.revwalk.RevCommit.getId().getName())) + \".\\n\";\n    if (org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)) {\n        if (org.eclipse.jgit.lib.AnyObjectId.equals(org.eclipse.jgit.revwalk.RevCommit.getTree().getId(), org.eclipse.jgit.merge.ResolveMerger.getResultTreeId()))\n            continue;\n        \n        org.eclipse.jgit.dircache.DirCacheCheckout org.eclipse.jgit.dircache.DirCacheCheckout = new org.eclipse.jgit.dircache.DirCacheCheckout(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.revwalk.RevCommit.getTree() , org.eclipse.jgit.lib.Repository.lockDirCache() , org.eclipse.jgit.merge.ResolveMerger.getResultTreeId());\n        org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true);\n        org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n        org.eclipse.jgit.revwalk.RevCommit = new org.eclipse.jgit.api.Git(org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.revwalk.RevCommit>.getRepository()).commit().setMessage(java.lang.String).setReflogComment((\"revert: \" + java.lang.String)).call();\n        java.util.List<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref);\n        org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit;\n    } else {\n        java.util.List<java.lang.String> = org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths();\n        java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> = org.eclipse.jgit.merge.ResolveMerger.getFailingPaths();\n        if (java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> != null)\n            org.eclipse.jgit.api.MergeResult = new org.eclipse.jgit.api.MergeResult(null , org.eclipse.jgit.merge.ResolveMerger.getBaseCommitId() , new org.eclipse.jgit.lib.ObjectId[]{ org.eclipse.jgit.revwalk.RevCommit.getId() , org.eclipse.jgit.revwalk.RevCommit.getId() } , org.eclipse.jgit.api.MergeResult.MergeStatus.org.eclipse.jgit.api.MergeResult.MergeStatus , org.eclipse.jgit.merge.MergeStrategy , org.eclipse.jgit.merge.ResolveMerger.getMergeResults() , java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> , null);\n        else\n            org.eclipse.jgit.api.MergeResult = new org.eclipse.jgit.api.MergeResult(null , org.eclipse.jgit.merge.ResolveMerger.getBaseCommitId() , new org.eclipse.jgit.lib.ObjectId[]{ org.eclipse.jgit.revwalk.RevCommit.getId() , org.eclipse.jgit.revwalk.RevCommit.getId() } , org.eclipse.jgit.api.MergeResult.MergeStatus.org.eclipse.jgit.api.MergeResult.MergeStatus , org.eclipse.jgit.merge.MergeStrategy , org.eclipse.jgit.merge.ResolveMerger.getMergeResults() , java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> , null);\n        \n        if ((!(org.eclipse.jgit.merge.ResolveMerger.failed())) && (!(java.util.List<java.lang.String>.isEmpty()))) {\n            java.lang.String java.lang.String = new org.eclipse.jgit.merge.MergeMessageFormatter().formatWithConflicts(java.lang.String, org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths());\n            org.eclipse.jgit.lib.Repository.writeRevertHead(org.eclipse.jgit.revwalk.RevCommit.getId());\n            org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(java.lang.String);\n        } \n        return null;\n    }\n}"},"status":-2},{"failures":[],"tindex":"fd06154b-4c35-11e5-bb76-8ba0c49bf3f9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getGlobalListenerList().dispatch(new org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:277","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.RefDirectory.fireRefsChanged()"},"status":-2},{"failures":[],"tindex":"fd06154c-4c35-11e5-bb76-77419e02112e","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:1020","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.dircache.DirCache.read(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:239","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.dircache.DirCache"},"status":-2},{"failures":[],"tindex":"fd06154d-4c35-11e5-bb76-cdd8e9d4b763","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:349","type":"CtIfImpl","sourcecode":"if ((int) == 30)\n    throw new org.eclipse.jgit.diff.SimilarityIndex.TableFullException();\n"},"variableMap":{"idHashBits":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.Base64:182","type":"CtIfImpl","sourcecode":"if (int < int) {\n    org.eclipse.jgit.util.Base64.org.eclipse.jgit.util.Base64.encode3to4(byte[], (int + int), (int - int), byte[], int);\n    int += 4;\n} "},"status":-2},{"failures":[],"tindex":"fd06154e-4c35-11e5-bb76-51744ed33ddb","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter:110","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \".*\" + java.lang.String"},"variableMap":{"pattern":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.attributes.AttributesRule:139","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"/\" + java.lang.String"},"status":0},{"failures":[],"tindex":"fd063c5f-4c35-11e5-bb76-b33203004c69","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TagOpt:106","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0))\n    return org.eclipse.jgit.transport.TagOpt.org.eclipse.jgit.transport.TagOpt;\n"},"variableMap":{"org.eclipse.jgit.transport.TagOpt.AUTO_FOLLOW":"tagopt","o":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TagOpt:109","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.TagOpt.option().equals(java.lang.String))\n    return org.eclipse.jgit.transport.TagOpt;\n"},"status":0},{"failures":[],"tindex":"fd063c60-4c35-11e5-bb76-3965a8874b95","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:349","type":"CtAssignmentImpl","sourcecode":"int = int = int = int"},"variableMap":{"middleK":"delayFreeFlags","beginK":"delayFreeFlags","k":"delayFreeFlags","endK":"delayFreeFlags"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1167","type":"CtOperatorAssignmentImpl","sourcecode":"int &= ~(int)"},"status":0},{"failures":[0,1],"tindex":"fd063c61-4c35-11e5-bb76-b1914014d93c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription:74","type":"CtReturnImpl","sourcecode":"return java.lang.System.identityHashCode(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackReverseIndex:212","type":"CtReturnImpl","sourcecode":"return -1"},"status":-1},{"failures":[],"tindex":"fd063c62-4c35-11e5-bb76-bf1fea5f4036","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:441","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.FileSnapshot = null"},"status":0},{"failures":[],"tindex":"fd063c63-4c35-11e5-bb76-517bfa0f41ab","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:1265","type":"CtAssignmentImpl","sourcecode":"boolean = !boolean"},"variableMap":{"quote":"sizeIsValid"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:205","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[2,3],"tindex":"fd063c64-4c35-11e5-bb76-37fe8ffe6c34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:172","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(' ')"},"status":-1},{"failures":[],"tindex":"fd063c65-4c35-11e5-bb76-a7dc78a0691a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.pack.PackConfig:728","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", deltaCacheSize=\")"},"variableMap":{"b":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.FastIgnoreRule:186","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.ignore.FastIgnoreRule.char)"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}