{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":43,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":56,"org.eclipse.jgit.api.BlameCommandTest.testRename":77,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":49,"org.eclipse.jgit.lib.IndexDiffTest.testModified":84,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":58,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":116,"org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartEnd":33,"org.eclipse.jgit.merge.MergeAlgorithmTest.testDeleteVsModify":27,"org.eclipse.jgit.merge.MergeAlgorithmTest.testNoAgainstOneModification":28,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_Insert2":34,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":57,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":83,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":45,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":75,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":67,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":53,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtEnd":18,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":76,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":103,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoGroupsCase1":10,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoGroupsCase0":9,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":69,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_LinuxBug":29,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testNameOnlyMatches":2,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":44,"org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify":23,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":59,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSameModification":25,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":114,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":21,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":42,"org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified":93,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":115,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":107,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":113,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":54,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":60,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":112,"org.eclipse.jgit.lib.T0002_TreeTest.test007_manyFileLookup":89,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testFileNameWildcards":0,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":106,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":104,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":66,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_DeleteEnd":37,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LcsContainsUnique":81,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_InsertsIntoMidPosition":38,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":61,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":70,"org.eclipse.jgit.lib.T0002_TreeTest.test008_SubtreeInternalSorting":90,"org.eclipse.jgit.lib.T0002_TreeTest.test004_addTree":86,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":74,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":80,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_InsertsIntoMidPosition":32,"org.eclipse.jgit.merge.MergeAlgorithmTest.testEmptyTexts":17,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":55,"org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption":94,"org.eclipse.jgit.lib.IndexDiffTest.testRemoved":85,"org.eclipse.jgit.lib.T0002_TreeTest.test005_addRecursiveTree":88,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii":97,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":63,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":71,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":78,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":79,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":95,"org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications":26,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":62,"org.eclipse.jgit.lib.T0002_TreeTest.test005_addRecursiveFile":87,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":46,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":100,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCombinedRangesInOneGroupCase0":3,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_InsertEnd":30,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":68,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":22,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":48,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":51,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":96,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii":99,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":73,"org.eclipse.jgit.lib.T0002_TreeTest.test006_addDeepTree":92,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications":24,"org.eclipse.jgit.lib.T0002_TreeTest.test002_addFile":91,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":64,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testInversedGroupCase2":8,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":39,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":101,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_InsertEnd":36,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":111,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoNonConflictingModifications":19,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":110,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_DeleteEnd":31,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LinuxBug":35,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":109,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":108,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase5":6,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":82,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":117,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":47,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":50,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":40,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test012_SubtreeExternalSorting":98,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testTargetWithoutLeadingSlash":1,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSeperateModifications":20,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase3":4,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testInversedGroupCase1":7,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase4":5,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":41,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupRangeCase3":13,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":72,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":65,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":52,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupRangeCase2":12,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":102,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupRangeCase1":11,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase1":14,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase2":15,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":105,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":118,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase4":16},"transformations":[{"failures":[],"tindex":"dc863c17-4c74-11e5-82de-d11b3f5c2df1","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:544","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"shallowPack":"retain"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:602","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"dc868a38-4c74-11e5-82de-a76a02e19ae8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.fnmatch.GroupHead:89","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern(''))"},"variableMap":{"characterClasses":"characterClasses"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:78","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange(char , char))"},"status":-1},{"failures":[],"tindex":"dc868a39-4c74-11e5-82de-ffd6f84449cd","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Tree:557","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.FileTreeEntry(this , org.eclipse.jgit.lib.ObjectId , byte[] , true)"},"variableMap":{"name":"name","ent":"ent","id":"id"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:559","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.Tree(this , org.eclipse.jgit.lib.ObjectId , byte[])"},"status":-2},{"failures":[],"tindex":"dc868a3a-4c74-11e5-82de-bbb6477a553b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:175","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.util.RawParseUtils.next(byte[], int, ' ')"},"variableMap":{"buf":"res","tokenBegin":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:282","type":"CtLocalVariableImpl","sourcecode":"final int int = byte[].int"},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"dc86b14b-4c74-11e5-82de-d1547aa5142a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:550","type":"CtOperatorAssignmentImpl","sourcecode":"int += 3"},"variableMap":{"ptr":"aPtr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RawTextComparator:302","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.diff.Edit.int = org.eclipse.jgit.diff.RawTextComparator.org.eclipse.jgit.diff.RawTextComparator.findForwardLine(org.eclipse.jgit.diff.RawText.org.eclipse.jgit.util.IntList, org.eclipse.jgit.diff.Edit.int, int)"},"status":-1},{"failures":[21,81],"tindex":"dc86b14c-4c74-11e5-82de-7758a61fba25","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:426","type":"CtIfImpl","sourcecode":"if ((int) <= int)\n    int = 0;\n"},"variableMap":{"tableSize":"np","ptr":"np"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:291","type":"CtIfImpl","sourcecode":"if (int == 0)\n    break TRY_LOCATIONS;\n"},"status":-1},{"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"tindex":"dc86b14d-4c74-11e5-82de-356b85b4bcec","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:341","type":"CtAssignmentImpl","sourcecode":"int = (int * 100) / int"},"variableMap":{"dirMax":"p","dirSim":"p","dirScoreLtr":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:372","type":"CtAssignmentImpl","sourcecode":"int = -(int + 1)"},"status":-1},{"failures":[],"tindex":"dc86d85e-4c74-11e5-82de-2541da1dc285","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.PathFilter:77","type":"CtWhileImpl","sourcecode":"while (java.lang.String.endsWith(\"/\"))\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));"},"variableMap":{"path":"suffix"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:399","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    org.eclipse.jgit.api.ArchiveCommand.Format<?> = org.eclipse.jgit.api.ArchiveCommand.org.eclipse.jgit.api.ArchiveCommand.formatBySuffix(java.lang.String);\nelse\n    org.eclipse.jgit.api.ArchiveCommand.Format<?> = org.eclipse.jgit.api.ArchiveCommand.org.eclipse.jgit.api.ArchiveCommand.lookupFormat(java.lang.String);\n"},"status":-2},{"failures":[],"tindex":"dc86d85f-4c74-11e5-82de-393ad7eeaaae","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:302","type":"CtLocalVariableImpl","sourcecode":"int int = ((int * 99) + (int * 1)) / 10000"},"variableMap":{"contentScore":"org.eclipse.jgit.lib.Constants.OBJ_BAD","nameScore":"org.eclipse.jgit.lib.Constants.OBJ_BAD"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:710","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.lib.Constants.int"},"status":-2},{"failures":[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"dc86d860-4c74-11e5-82de-93156dd0d8c9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:239","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return 0;\n"},"variableMap":{"total":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:463","type":"CtIfImpl","sourcecode":"if (0 <= long)\n    return long;\n"},"status":-1},{"failures":[],"tindex":"dc86ff71-4c74-11e5-82de-c9d447ce5fd4","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:742","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.internal.storage.file.LargePackedWholeObject(int , long , long , int , this , org.eclipse.jgit.internal.storage.file.WindowCursor.org.eclipse.jgit.internal.storage.file.FileObjectDatabase)"},"variableMap":{"p":"type","pos":"size","sz":"size","curs":"wc","db":"db","typeCode":"type"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:186","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject(int , long , java.io.File , org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.storage.file.WindowCursor.org.eclipse.jgit.internal.storage.file.FileObjectDatabase)"},"status":-2},{"failures":[],"tindex":"dc86ff72-4c74-11e5-82de-b1c57c5fb612","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:471","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.util.zip.DataFormatException();\n"},"variableMap":{"n":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:410","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseOldName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":12,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}