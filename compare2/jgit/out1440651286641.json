{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":23,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":528,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":527,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":543,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":287,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":268,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":223,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":7,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":143,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":231,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":497,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":153,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":518,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":588,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":244,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":618,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":178,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":67,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles":421,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwice":180,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":463,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":531,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked":128,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":148,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict":99,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":442,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":107,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":616,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":602,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.idOffset":263,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":168,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":441,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":419,"org.eclipse.jgit.merge.CherryPickTest.testRevert":521,"org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet":315,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":3,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":554,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":30,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":138,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":439,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":66,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":409,"org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges":238,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":278,"org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified":96,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit":119,"org.eclipse.jgit.api.BranchCommandTest.testDelete":283,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":515,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":58,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":212,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":377,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":185,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":378,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":111,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":542,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":374,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":375,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":376,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":423,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":577,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":426,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted":117,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":603,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":9,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":526,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":202,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":578,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":156,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":312,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":73,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":623,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":307,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":179,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch":418,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":509,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified":112,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":468,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":482,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":529,"org.eclipse.jgit.api.RmCommandTest.testRemoveCached":157,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting":81,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":381,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":382,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":236,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":383,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":235,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":247,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":172,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":411,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":379,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":380,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":505,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeleted":114,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":429,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":354,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":270,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":356,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":355,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":533,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":358,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":154,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":357,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":572,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":305,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":41,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":233,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":309,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":254,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":222,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":565,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":431,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":620,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":540,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":92,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6":91,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":279,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":458,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine":183,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":313,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":589,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":14,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":281,"org.eclipse.jgit.lib.ConfigTest.testReadUserConfigWithInvalidCharactersStripped":20,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":249,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":385,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":158,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":386,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":387,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":388,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":538,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext10":52,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":17,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":208,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":384,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":545,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":350,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":349,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":264,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":352,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":351,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":353,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag":272,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":197,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":175,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":284,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":69,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":548,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":604,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":496,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":440,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":40,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":606,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":402,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":465,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":401,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":403,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":400,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":399,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":166,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":200,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":532,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":118,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":290,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":60,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":136,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree":101,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":472,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":16,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":499,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":147,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":203,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":344,"org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart":274,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":346,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":345,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":275,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":348,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":347,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":130,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":282,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":524,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":246,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":149,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":537,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":33,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":248,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":142,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":454,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":443,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":302,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":424,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":295,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter":90,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":291,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":525,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":174,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":240,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":461,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":256,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":126,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":334,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":106,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":213,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":75,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2":82,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":8,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":65,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":207,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":234,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":611,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":609,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":259,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":340,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":339,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":342,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":619,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":341,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":146,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":435,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":343,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":519,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":135,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":459,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":546,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":61,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":221,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":2,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":13,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameSameAssumeValidDifferentContent":95,"org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree":481,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":6,"org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers":137,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":237,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit":187,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":294,"org.eclipse.jgit.lib.IndexDiffTest.testRemoved":564,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":495,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":568,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":293,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":5,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":330,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":329,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2":89,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":57,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":215,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":575,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy":576,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":530,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":608,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":220,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":551,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":447,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory":262,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":336,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":297,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":335,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":338,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":337,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":600,"org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig":21,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":536,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":115,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":450,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":359,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":406,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":361,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":360,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":363,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":362,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":405,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap":98,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":517,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":167,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":199,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":478,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":573,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":470,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":605,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":31,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":46,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":201,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":216,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":569,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":45,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":451,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":324,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":550,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":326,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":434,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":325,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":308,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":449,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":269,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":316,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":144,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":317,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":318,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":319,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":320,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":433,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":224,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":280,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":332,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":331,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":333,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":484,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":273,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":204,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":71,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine1":54,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine2":55,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":436,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified":127,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":585,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6":584,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":553,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":587,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":586,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":579,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2":581,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5":583,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":159,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4":582,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":0,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":42,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":607,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":321,"org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1":34,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":19,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":322,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":556,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":151,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":266,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":150,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":562,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":544,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive":124,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b":596,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules1thru3_NoIndexEntry":570,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":328,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":327,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":18,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":574,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":104,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":165,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":614,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":504,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":558,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":120,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":108,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":299,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":460,"org.eclipse.jgit.api.CleanCommandTest.testClean":129,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":68,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":523,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":534,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":155,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":410,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":522,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3":88,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":298,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":561,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1":86,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":131,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2":87,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":260,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":456,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":613,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":44,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext0":48,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":214,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext1":49,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":110,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":121,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":140,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":559,"org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged":184,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting":85,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":408,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile":188,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":498,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":164,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":323,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":560,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":567,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":186,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":539,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":63,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":134,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":257,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":123,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":125,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":306,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":488,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":407,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":467,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":494,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":516,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":72,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":471,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":457,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":211,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":420,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":152,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":535,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":557,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid":94,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch":239,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":301,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":210,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":190,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":255,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":11,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":480,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":475,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":476,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":417,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":241,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":427,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":369,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":229,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":373,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":372,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":371,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":370,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":489,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":286,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":448,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":490,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":219,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":452,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored":103,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":462,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":105,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":510,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":601,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b":597,"org.eclipse.jgit.api.ApplyCommandTest.testModifyX":38,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":12,"org.eclipse.jgit.api.ApplyCommandTest.testModifyY":39,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":615,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":173,"org.eclipse.jgit.api.ApplyCommandTest.testModifyE":37,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":261,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":414,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":15,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":555,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":228,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":303,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":444,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":163,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":227,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":4,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":145,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":598,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":22,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":469,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModified":109,"org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testPathCompare":102,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":242,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":141,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":113,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":513,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":486,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":70,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":483,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":412,"org.eclipse.jgit.api.BlameCommandTest.testRename":474,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":422,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":549,"org.eclipse.jgit.lib.IndexDiffTest.testModified":563,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile":580,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":1,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":364,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":365,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":366,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":367,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":368,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":64,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":296,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":393,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":610,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":389,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":32,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":390,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":56,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":391,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":566,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":392,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":493,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":437,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":191,"org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName":413,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":77,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":491,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":473,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":622,"org.eclipse.jgit.api.BranchCommandTest.testCreateAndList":277,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":466,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":445,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":26,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":177,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":251,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":252,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":265,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine":189,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":170,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":245,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":502,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":446,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":27,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":464,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":181,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":506,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":552,"org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint":285,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":397,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutUncachedChanges":571,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":218,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":398,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":599,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":508,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":394,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":206,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":395,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":205,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":396,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":416,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":314,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":243,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":453,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":514,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testEmpty1":53,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":209,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":176,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":250,"org.eclipse.jgit.lib.RefTest.testRemoteNames":25,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":62,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":288,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":28,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":541,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":621,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":425,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":225,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":477,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":485,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":192,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":595,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":217,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":76,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":74,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_13":592,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_14":593,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":503,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":594,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":300,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":304,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":24,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":501,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":591,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testNoDF_NoGap":97,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":590,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":404,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":512,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":310,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":43,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":132,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":232,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting":84,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext3":50,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":10,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext5":51,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":171,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":253,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":487,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1":35,"org.eclipse.jgit.api.ApplyCommandTest.testAddA2":36,"org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName":428,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":430,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting":83,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":507,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":617,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":161,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne":100,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead":267,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":500,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext100":47,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":432,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":292,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":455,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":198,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":116,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":415,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":479,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":492,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSame":93,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":289,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":438,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":139,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":162,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":59,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":193,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":511,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit":271,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":195,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":196,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":169,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":29,"org.eclipse.jgit.merge.CherryPickTest.testPick":520,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":547,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":258,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":612,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":133,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":276,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":122,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1":78,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":160,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":182,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3":80,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":230,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2":79,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":311,"org.eclipse.jgit.api.RevertCommandTest.testRevert":226,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":194},"transformations":[{"failures":[],"tindex":"bd5d84bf-4c77-11e5-b0f8-edc7aa40f378","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker:88","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.BitmapIndex.Bitmap != null)\n    org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.or(org.eclipse.jgit.lib.BitmapIndex.Bitmap);\n"},"status":-2},{"failures":[],"tindex":"bd5dabd0-4c77-11e5-b0f8-3d72e273a680","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:376","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.ObjectDirectory.openLooseFromSelfOrAlternate(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)"},"variableMap":{"this":"db","curs":"wc","objectId":"id"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:104","type":"CtTryImpl","sourcecode":"try {\n    java.io.InputStream = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.buffer(java.io.InputStream);\n    java.io.InputStream.mark(20);\n    final byte[] byte[] = new byte[64];\n    org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], 0, 2);\n    if (org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.isStandardFormat(byte[])) {\n        java.io.InputStream.reset();\n        java.util.zip.Inflater java.util.zip.Inflater = org.eclipse.jgit.internal.storage.file.WindowCursor.inflater();\n        java.io.InputStream java.io.InputStream = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(java.io.InputStream, java.util.zip.Inflater);\n        int int = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.readSome(java.io.InputStream, byte[], 0, 64);\n        if (int < 5)\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        final org.eclipse.jgit.util.MutableInteger org.eclipse.jgit.util.MutableInteger = new org.eclipse.jgit.util.MutableInteger();\n        int int = org.eclipse.jgit.lib.Constants.decodeTypeString(org.eclipse.jgit.lib.AnyObjectId, byte[], ((byte)(' ')), org.eclipse.jgit.util.MutableInteger);\n        long long = org.eclipse.jgit.util.RawParseUtils.parseLongBase10(byte[], org.eclipse.jgit.util.MutableInteger.int, org.eclipse.jgit.util.MutableInteger);\n        if (long < 0)\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        if ((byte[][(org.eclipse.jgit.util.MutableInteger.int)++]) != 0)\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        if ((java.io.File == null) && ((java.lang.Integer.int) < long)) {\n            org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit;\n            org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit = new org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit();\n            org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit.setObjectId(org.eclipse.jgit.lib.AnyObjectId);\n            throw org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit;\n        } \n        if ((long < (org.eclipse.jgit.internal.storage.file.WindowCursor.getStreamFileThreshold())) || (java.io.File == null)) {\n            byte[] byte[] = new byte[((int)(long))];\n            int int = int - (org.eclipse.jgit.util.MutableInteger.int);\n            if (int > 0)\n                java.lang.System.arraycopy(byte[], org.eclipse.jgit.util.MutableInteger.int, byte[], 0, int);\n            \n            org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], int, ((byte[].int) - int));\n            org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.checkValidEndOfStream(java.io.InputStream, java.util.zip.Inflater, org.eclipse.jgit.lib.AnyObjectId, byte[]);\n            return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n        } \n        return new org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject(int , long , java.io.File , org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.storage.file.WindowCursor.org.eclipse.jgit.internal.storage.file.FileObjectDatabase);\n    } else {\n        org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.readSome(java.io.InputStream, byte[], 2, 18);\n        int int = (byte[][0]) & 255;\n        int int = (int >> 4) & 7;\n        long long = int & 15;\n        int int = 4;\n        int int = 1;\n        while ((int & 128) != 0) {\n            int = (byte[][int++]) & 255;\n            long += ((long)((int & 127))) << int;\n            int += 7;\n        }\n        switch (int) {\n            case org.eclipse.jgit.lib.Constants.int :\n            case org.eclipse.jgit.lib.Constants.int :\n            case org.eclipse.jgit.lib.Constants.int :\n            case org.eclipse.jgit.lib.Constants.int :\n                break;\n            default :\n                throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        }\n        if ((java.io.File == null) && ((java.lang.Integer.int) < long)) {\n            org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit;\n            org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit = new org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit();\n            org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit.setObjectId(org.eclipse.jgit.lib.AnyObjectId);\n            throw org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit;\n        } \n        if ((long < (org.eclipse.jgit.internal.storage.file.WindowCursor.getStreamFileThreshold())) || (java.io.File == null)) {\n            java.io.InputStream.reset();\n            org.eclipse.jgit.util.IO.skipFully(java.io.InputStream, int);\n            java.util.zip.Inflater java.util.zip.Inflater = org.eclipse.jgit.internal.storage.file.WindowCursor.inflater();\n            java.io.InputStream java.io.InputStream = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(java.io.InputStream, java.util.zip.Inflater);\n            byte[] byte[] = new byte[((int)(long))];\n            org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], 0, byte[].int);\n            org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.checkValidEndOfStream(java.io.InputStream, java.util.zip.Inflater, org.eclipse.jgit.lib.AnyObjectId, byte[]);\n            return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n        } \n        return new org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject(int , long , java.io.File , org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.storage.file.WindowCursor.org.eclipse.jgit.internal.storage.file.FileObjectDatabase);\n    }\n} catch (java.util.zip.ZipException badStream) {\n    throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"bd5dd2e1-4c77-11e5-b0f8-bb92a61cb9d1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:325","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCursor.pin(org.eclipse.jgit.internal.storage.file.PackFile, long)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"bd5dd2e2-4c77-11e5-b0f8-d3c55e0f5a9d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.filter.RevFilter:117","type":"CtReturnImpl","sourcecode":"return \"ALL\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.UserConfig:211","type":"CtReturnImpl","sourcecode":"return java.lang.String == null ? null : java.lang.String.replaceAll(\"<|>|\\n\", \"\")"},"status":-1},{"failures":[24,25],"tindex":"bd5dd2e3-4c77-11e5-b0f8-e75013789bc7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BranchConfig:179","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Constants.java.lang.String"},"variableMap":{"org.eclipse.jgit.lib.Constants.DEFAULT_REMOTE_NAME":"remotePrefix"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1288","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(java.lang.String.length())"},"status":-1},{"failures":[26,27,28,29],"tindex":"bd5dd2e4-4c77-11e5-b0f8-e7cdd25e5f07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1060","type":"CtOperatorAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ConfigLine.java.lang.String += char"},"status":-1},{"failures":[30,31,32,33],"tindex":"bd5df9f5-4c77-11e5-b0f8-35e2ac0022cd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:127","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.notes.NoteBucket instanceof org.eclipse.jgit.notes.InMemoryNoteBucket)\n    return ((org.eclipse.jgit.notes.InMemoryNoteBucket)(org.eclipse.jgit.notes.NoteBucket));\n"},"variableMap":{"b":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.FanoutBucket:125","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.notes.NoteBucket == null)\n    return null;\n"},"status":-1},{"failures":[],"tindex":"bd5df9f6-4c77-11e5-b0f8-d10667640a15","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Config:1174","type":"CtIfImpl","sourcecode":"if ((' ' == int) || ('\\t' == int))\n    continue;\n"},"variableMap":{"c":"oursEndB"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:240","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.diff.Edit.getEndA()) < (org.eclipse.jgit.diff.Edit.getEndA())) {\n    int += (org.eclipse.jgit.diff.Edit.getEndA()) - (org.eclipse.jgit.diff.Edit.getEndA());\n} else {\n    int += (org.eclipse.jgit.diff.Edit.getEndA()) - (org.eclipse.jgit.diff.Edit.getEndA());\n}"},"status":0},{"failures":[34,35,36,37,38,39,5,6,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,17,62,63,64,65,66,67,68,69,70,71,72,73,74,18,75,76,77,19],"tindex":"bd5df9f7-4c77-11e5-b0f8-c1b677001aab","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:373","type":"CtReturnImpl","sourcecode":"return ((int + ((int + 7) >> 3)) + ((int + 63) >> 6)) + 11"},"variableMap":{"insz":"startOffset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:163","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"bd5df9f8-4c77-11e5-b0f8-69d53cbb4685","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.DepthGenerator:159","type":"CtUnaryOperatorImpl","sourcecode":"~(org.eclipse.jgit.revwalk.RevWalk.int)"},"variableMap":{"org.eclipse.jgit.revwalk.RevWalk.UNINTERESTING":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DelayRevQueue:90","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,0,1,177,178,179,2,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,3,221,222,223,224,225,226,4,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,5,6,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,7,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,8,304,305,9,306,307,10,308,309,310,11,311,312,313,314,40,41,42,43,44,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,24,426,427,428,429,430,431,432,433,434,61,435,17,62,436,437,438,63,64,65,66,439,440,441,442,443,444,445,446,447,67,448,449,450,451,68,69,452,453,454,455,456,70,71,457,72,458,73,74,18,459,460,461,462,463,75,76,464,77,465,19,45,46,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,57,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614],"tindex":"bd5e2109-4c77-11e5-b0f8-07ce17be897c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.Base64:246","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:319","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(org.eclipse.jgit.treewalk.AbstractTreeIterator.byte[], int, org.eclipse.jgit.treewalk.AbstractTreeIterator.int, int, int)"},"status":-1},{"failures":[615],"tindex":"bd5e481a-4c77-11e5-b0f8-d398ff14bc06","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:262","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = null"},"variableMap":{"newHead":"notesCommit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddNoteCommand:94","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Ref.getObjectId())"},"status":-1},{"failures":[616,30,32,33],"tindex":"bd5e481b-4c77-11e5-b0f8-7dd49c6e1349","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMapMerger:227","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.notes.NoteBucket instanceof org.eclipse.jgit.notes.InMemoryNoteBucket)\n    org.eclipse.jgit.notes.FanoutBucket.setBucket(int, ((org.eclipse.jgit.notes.InMemoryNoteBucket)(org.eclipse.jgit.notes.NoteBucket)).writeTree(org.eclipse.jgit.lib.ObjectInserter));\nelse\n    org.eclipse.jgit.notes.FanoutBucket.setBucket(int, org.eclipse.jgit.notes.NoteBucket.getTreeId());\n"},"status":-1},{"failures":[617,618,619,620,621,622,623],"tindex":"bd5e481c-4c77-11e5-b0f8-65cbf76dccf8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:1067","type":"CtInvocationImpl","sourcecode":"java.util.Set<org.eclipse.jgit.lib.ObjectId>.clear()"},"variableMap":{"wantIds":"haves"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.AbstractAdvertiseRefsHook:72","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.BaseReceivePack.setAdvertisedRefs(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}