{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":35,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":49,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":115,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":120,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":91,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule":61,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":66,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtStart":96,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":81,"org.eclipse.jgit.lib.IndexDiffTest.testModified":7,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":74,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":67,"org.eclipse.jgit.merge.MergeAlgorithmTest.testDeleteVsModify":105,"org.eclipse.jgit.merge.MergeAlgorithmTest.testNoAgainstOneModification":106,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":92,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":84,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_ReverseGitSortOrder":119,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":107,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":13,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":6,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":9,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":70,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":124,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":11,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":44,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":89,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":18,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtEnd":94,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":51,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":28,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":111,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":113,"org.eclipse.jgit.util.ChangeIdUtilTest.testEmptyMessages":62,"org.eclipse.jgit.api.CleanCommandTest.testClean":17,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":27,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":86,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":39,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":80,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":116,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":58,"org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify":101,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":75,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":118,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":48,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSameModification":103,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":19,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":56,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":59,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":98,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":16,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":90,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":76,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":71,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":5,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":31,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":14,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":24,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":10,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":22,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":23,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":65,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":46,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":68,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":77,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":123,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":40,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":73,"org.eclipse.jgit.attributes.AttributesMatcherTest.testTargetWithoutLeadingSlash":126,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":36,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique":2,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":57,"org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers":117,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":122,"org.eclipse.jgit.merge.MergeAlgorithmTest.testEmptyTexts":93,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":88,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":109,"org.eclipse.jgit.lib.IndexDiffTest.testRemoved":8,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":4,"org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_17":0,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":26,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":43,"org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications":100,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":72,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":79,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":34,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":42,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":12,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":20,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":29,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":52,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":78,"org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications":104,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":3,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":60,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":108,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":53,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":110,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":55,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":54,"org.eclipse.jgit.attributes.AttributesMatcherTest.testFileNameWildcards":125,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":30,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":25,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":32,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":37,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":99,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":87,"org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_Full":1,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications":102,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":63,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":38,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":47,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":45,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoNonConflictingModifications":95,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":33,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":69,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":112,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":85,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":41,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":114,"org.eclipse.jgit.attributes.AttributesMatcherTest.testNameOnlyMatches":127,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSeperateModifications":97,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":121,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":82,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":15,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":83,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":64,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":21},"transformations":[{"failures":[],"tindex":"ddb93c05-4c5a-11e5-9515-5f4765b78bfd","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:104","type":"CtReturnImpl","sourcecode":"return !(org.eclipse.jgit.util.SystemReader.getInstance().isMacOS())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:399","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"ddb98a26-4c5a-11e5-9515-617d7b8db112","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:783","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit)\n    org.eclipse.jgit.revwalk.RevTree = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject)).getTree();\nelse if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevTree))\n    throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.lib.AnyObjectId.toObjectId() , org.eclipse.jgit.lib.Constants.java.lang.String);\nelse\n    org.eclipse.jgit.revwalk.RevTree = ((org.eclipse.jgit.revwalk.RevTree)(org.eclipse.jgit.revwalk.RevObject));\n"},"status":-2},{"failures":[],"tindex":"ddb98a27-4c5a-11e5-9515-2b303b329f3c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommit:127","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revplot.PlotCommit.getId().equals(org.eclipse.jgit.revplot.PlotCommit.getId()))\n    return ;\n"},"variableMap":{"c":"c","pc":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommit:126","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.revplot.PlotCommit org.eclipse.jgit.revplot.PlotCommit : org.eclipse.jgit.revplot.PlotCommit[])\n    if (org.eclipse.jgit.revplot.PlotCommit.getId().equals(org.eclipse.jgit.revplot.PlotCommit.getId()))\n        return ;\n    "},"status":0},{"failures":[0,1,2],"tindex":"ddb98a28-4c5a-11e5-9515-d77af4420346","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:835","type":"CtIfImpl","sourcecode":"if (int == int)\n    return int;\n"},"variableMap":{"modeT":"cmp","modeO":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:238","type":"CtIfImpl","sourcecode":"if (int != 0)\n    return int;\n"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"ddb9b139-4c5a-11e5-9515-915fe8cd613a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:510","type":"CtAssignmentImpl","sourcecode":"java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>()"},"status":-1},{"failures":[62],"tindex":"ddb9b13a-4c5a-11e5-9515-7d1010ac831c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0)\n    return null;\n"},"status":-1},{"failures":[],"tindex":"ddb9b13b-4c5a-11e5-9515-a9dd087403c8","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.RecursiveMerger:156","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:725","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.blame.Candidate.getParent(int)"},"status":-2},{"failures":[],"tindex":"ddb9b13c-4c5a-11e5-9515-4b1c4383d531","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.WalkPushConnection:226","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<org.eclipse.jgit.lib.ObjectId> java.util.Set<org.eclipse.jgit.lib.ObjectId> = new java.util.HashSet<org.eclipse.jgit.lib.ObjectId>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:326","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<org.eclipse.jgit.lib.ObjectId> java.util.Set<org.eclipse.jgit.lib.ObjectId> = null"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,46,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"ddb9d84d-4c5a-11e5-9515-3b1f68bd8a32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeFormatter:84","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.merge.MergeChunk org.eclipse.jgit.merge.MergeChunk : org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>) {\n    org.eclipse.jgit.diff.RawText org.eclipse.jgit.diff.RawText = org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>.getSequences().get(org.eclipse.jgit.merge.MergeChunk.getSequenceIndex());\n    if ((java.lang.String != null) && ((org.eclipse.jgit.merge.MergeChunk.getConflictState()) != (org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState))) {\n        java.io.OutputStream.write(((\">>>>>>> \" + java.lang.String) + \"\\n\").getBytes(java.lang.String));\n        java.lang.String = null;\n    } \n    if ((org.eclipse.jgit.merge.MergeChunk.getConflictState()) == (org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState)) {\n        java.io.OutputStream.write(((\"<<<<<<< \" + (java.util.List<java.lang.String>.get(org.eclipse.jgit.merge.MergeChunk.getSequenceIndex()))) + \"\\n\").getBytes(java.lang.String));\n        java.lang.String = java.util.List<java.lang.String>.get(org.eclipse.jgit.merge.MergeChunk.getSequenceIndex());\n    } else if ((org.eclipse.jgit.merge.MergeChunk.getConflictState()) == (org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState)) {\n        java.lang.String = java.util.List<java.lang.String>.get(org.eclipse.jgit.merge.MergeChunk.getSequenceIndex());\n        java.io.OutputStream.write((boolean ? \"=======\\n\" : (\"======= \" + java.lang.String) + \"\\n\").getBytes(java.lang.String));\n    } \n    for (int int = org.eclipse.jgit.merge.MergeChunk.getBegin() ; int < (org.eclipse.jgit.merge.MergeChunk.getEnd()) ; int++) {\n        org.eclipse.jgit.diff.RawText.writeLine(java.io.OutputStream, int);\n        java.io.OutputStream.write('\\n');\n    }\n}"},"status":-1},{"failures":[117,118,119,120,121,122,123,124],"tindex":"ddb9d84e-4c5a-11e5-9515-7baa3f777ae5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheBuilder:192","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheBuilder.resort()"},"status":-1},{"failures":[],"tindex":"ddb9ff5f-4c5a-11e5-9515-494364c76c0c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getGlobalListenerList().dispatch(new org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleAddCommand:174","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.lib.StoredConfig.save();\n} catch (java.io.IOException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"ddb9ff60-4c5a-11e5-9515-0577a21d8cfb","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:564","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:99","type":"CtLocalVariableImpl","sourcecode":"final int int = int"},"status":-2},{"failures":[],"tindex":"ddb9ff61-4c5a-11e5-9515-d1d8be902571","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:392","type":"CtInvocationImpl","sourcecode":"java.util.TreeSet<java.lang.Integer>.remove(java.lang.Integer)"},"status":0},{"failures":[],"tindex":"ddb9ff62-4c5a-11e5-9515-c34820ffa5f8","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:290","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Repository.getFS().supportsExecute()) {\n    java.io.File java.io.File = java.io.File.createTempFile(\"try\", \"execute\", org.eclipse.jgit.lib.Repository.getDirectory());\n    org.eclipse.jgit.lib.Repository.getFS().setExecute(java.io.File, true);\n    final boolean boolean = org.eclipse.jgit.lib.Repository.getFS().canExecute(java.io.File);\n    org.eclipse.jgit.lib.Repository.getFS().setExecute(java.io.File, false);\n    final boolean boolean = org.eclipse.jgit.lib.Repository.getFS().canExecute(java.io.File);\n    org.eclipse.jgit.util.FileUtils.delete(java.io.File);\n    boolean = boolean && (!boolean);\n} else {\n    boolean = false;\n}"},"variableMap":{"this":"repo","fileMode":"startSpecified"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.LogCommand:144","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    try {\n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.lib.Constants.java.lang.String);\n        if (org.eclipse.jgit.lib.ObjectId == null)\n            throw new org.eclipse.jgit.api.errors.NoHeadException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        org.eclipse.jgit.api.LogCommand.add(org.eclipse.jgit.lib.ObjectId);\n    } catch (java.io.IOException e) {\n        throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.io.IOException);\n    }\n} "},"status":-2},{"failures":[125,126,127],"tindex":"ddba2673-4c5a-11e5-9515-eb2d773e0aca","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:280","type":"CtWhileImpl","sourcecode":"while ((int < int) && (int > 0))\n    int <<= 1;"},"variableMap":{"newCapacity":"in_brackets","capacity":"in_brackets"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:285","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int++;\n    boolean = false;\n} "},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}