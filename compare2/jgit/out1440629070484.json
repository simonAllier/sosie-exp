{"failureDictionary":{"org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testEntryPath":0,"org.eclipse.jgit.transport.PacketLineInTest.testReadStringRaw3":64,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":20,"org.eclipse.jgit.transport.PacketLineInTest.testReadStringRaw1":63,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":42,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":58,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection":2,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":17,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":44,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":16,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":5,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":10,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":13,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":29,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":51,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":6,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":7,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":60,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":8,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":50,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":59,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues":3,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":32,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":12,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":49,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":52,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":11,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues":1,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue":4,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":15,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":27,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":26,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":43,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":53,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":28,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":56,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":41,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":30,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":40,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":57,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":36,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":62,"org.eclipse.jgit.api.BranchCommandTest.testDelete":37,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":9,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":21,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":23,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":24,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":35,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":34,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":38,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":18,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":54,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":45,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":48,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":46,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":47,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":55,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":61,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":25,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":39,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":33,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":14,"org.eclipse.jgit.api.RevertCommandTest.testRevert":19,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":31,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":22},"transformations":[{"failures":[],"tindex":"0381230f-4c44-11e5-bff2-17cacf9fa5da","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:664","type":"CtInvocationImpl","sourcecode":"java.lang.System.runFinalization()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.storage.pack.PackConfig:701","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.storage.pack.PackConfig.setDeltaCacheSize(org.eclipse.jgit.lib.Config.getLong(\"pack\", \"deltacachesize\", org.eclipse.jgit.storage.pack.PackConfig.getDeltaCacheSize()))"},"status":0},{"failures":[0],"tindex":"03814a20-4c44-11e5-bff2-772205c06a0e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:333","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int << 4) | (int & 15)))"},"variableMap":{"buf":"path","len":"pathLen","sz":"pathLen","typeCode":"pathLen"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:174","type":"CtAssignmentImpl","sourcecode":"byte[][(int)++] = '/'"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"03814a21-4c44-11e5-bff2-fb098fb87df3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:863","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref.getObjectId()) != null)\n    return org.eclipse.jgit.lib.Ref.getObjectId().name();\n"},"variableMap":{"head":"head"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:861","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref.isSymbolic())\n    return org.eclipse.jgit.lib.Ref.getTarget().getName();\n"},"status":-1},{"failures":[],"tindex":"03814a22-4c44-11e5-bff2-dd2d60a14f8f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.internal.Strings:87","type":"CtIfImpl","sourcecode":"if (int == (-1))\n    break;\n"},"variableMap":{"start":"endIdx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:354","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheEntry[][int];\n    if ((org.eclipse.jgit.dircache.DirCacheEntry.getStage()) != 0)\n        throw new org.eclipse.jgit.errors.UnmergedPathException(org.eclipse.jgit.dircache.DirCacheEntry);\n    \n    final byte[] byte[] = org.eclipse.jgit.dircache.DirCacheEntry.byte[];\n    if (int < (int)) {\n        final org.eclipse.jgit.dircache.DirCacheTree org.eclipse.jgit.dircache.DirCacheTree = org.eclipse.jgit.dircache.DirCacheTree[][int];\n        if (org.eclipse.jgit.dircache.DirCacheTree.contains(byte[], int, byte[].int)) {\n            final int int = (int + (org.eclipse.jgit.dircache.DirCacheTree.nameLength())) + 1;\n            org.eclipse.jgit.dircache.DirCacheTree.writeTree(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter);\n            int += org.eclipse.jgit.lib.TreeFormatter.org.eclipse.jgit.lib.TreeFormatter.entrySize(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.dircache.DirCacheTree.nameLength());\n            int += org.eclipse.jgit.dircache.DirCacheTree.int;\n            int++;\n            continue;\n        } \n    } \n    int += org.eclipse.jgit.lib.TreeFormatter.org.eclipse.jgit.lib.TreeFormatter.entrySize(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode(), ((byte[].int) - int));\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"03817133-4c44-11e5-bff2-050cc78c8ff5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.LeafBucket:97","type":"CtIfImpl","sourcecode":"if (int == 0)\n    return int;\nelse\n    int = int + 1;\n"},"variableMap":{"low":"eol","cmp":"c","mid":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:307","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.patch.FileHeader.getHunks().isEmpty()) && (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.Patch.byte[])) >= 0)) {\n    org.eclipse.jgit.patch.FileHeader.org.eclipse.jgit.patch.FileHeader.PatchType = org.eclipse.jgit.patch.FileHeader.PatchType.org.eclipse.jgit.patch.FileHeader.PatchType;\n    return org.eclipse.jgit.patch.Patch.parseGitBinary(org.eclipse.jgit.patch.FileHeader, int, int);\n} "},"status":-2},{"failures":[],"tindex":"03817134-4c44-11e5-bff2-199add1c7be8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.GarbageCollectCommand:129","type":"CtAssignmentImpl","sourcecode":"this.java.util.Date = java.util.Date"},"status":0},{"failures":[],"tindex":"03817135-4c44-11e5-bff2-315f6ce4ce0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:386","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][0] = org.eclipse.jgit.revwalk.RevObjectList.Block"},"status":0},{"failures":[],"tindex":"03817136-4c44-11e5-bff2-db3e8001fbdf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:774","type":"CtTryImpl","sourcecode":"try {\n    int = java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.NumberFormatException nfe) {\n    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n}"},"status":-2},{"failures":[],"tindex":"03819847-4c44-11e5-bff2-81e71a450322","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.internal.Strings:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException((\"Pattern must have at least two segments: \" + java.lang.String));\n"},"variableMap":{"count":"m","pattern":"time"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:592","type":"CtForImpl","sourcecode":"for (int = int + 2 ; int < (char[].int) ; ++int) {\n    if ((char[][int]) == '}') {\n        java.lang.String = new java.lang.String(char[] , (int + 2) , ((int - int) - 2));\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"03819848-4c44-11e5-bff2-5b6e90aaa231","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:385","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObjectList.Block = new org.eclipse.jgit.revwalk.RevObjectList.Block(((org.eclipse.jgit.revwalk.RevObjectList.Block.int) + (org.eclipse.jgit.revwalk.RevObjectList.int)))"},"status":-2},{"failures":[59,60,61,62],"tindex":"03819849-4c44-11e5-bff2-63ef1b6dc298","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:550","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.IndexDiff.diff()) {\n    if ((((((((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) == (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) && (org.eclipse.jgit.lib.IndexDiff.getAdded().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getChanged().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getConflicting().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getMissing().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getModified().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getRemoved().isEmpty())) {\n        continue;\n    } \n    java.util.Set<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n} "},"status":-1},{"failures":[],"tindex":"0381984a-4c44-11e5-bff2-0fb0ec228f20","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:2360","type":"CtReturnImpl","sourcecode":"return ((((long) + (long)) + (long)) + (long)) + (long)"},"variableMap":{"timeWriting":"size","timeCompressing":"size","timeSearchingForReuse":"size","timeSearchingForSizes":"size","timeCounting":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:183","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"0381984b-4c44-11e5-bff2-0f90a4886e8e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:125","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++ , int++)\n    if ((byte[][int]) != (byte[][int]))\n        return -1;\n    "},"variableMap":{"b":"buf","src":"buf","length":"bol","ptr":"eol"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:361","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final int int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int, ' ');\n    if (int >= int) {\n        return int;\n    } \n    final int int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int, '/');\n    if (int >= int)\n        return int;\n    \n    if (org.eclipse.jgit.patch.FileHeader.eq(int, (int - 1), int, (int - 1))) {\n        if ((byte[][int]) == '\\\"') {\n            if ((byte[][(int - 2)]) != '\\\"') {\n                return int;\n            } \n            java.lang.String = org.eclipse.jgit.util.QuotedString.org.eclipse.jgit.util.QuotedString.GitPathStyle.dequote(byte[], int, (int - 1));\n            java.lang.String = org.eclipse.jgit.patch.FileHeader.org.eclipse.jgit.patch.FileHeader.p1(java.lang.String);\n        } else {\n            java.lang.String = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decode(org.eclipse.jgit.lib.Constants.java.nio.charset.Charset, byte[], int, (int - 1));\n        }\n        java.lang.String = java.lang.String;\n        return int;\n    } \n    int = int;\n}"},"status":-2},{"failures":[63,64],"tindex":"0381bf5c-4c44-11e5-bff2-f35a89e012eb","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:249","type":"CtIfImpl","sourcecode":"if (int < 4)\n    int = 4;\n"},"variableMap":{"eb":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PacketLineIn:176","type":"CtIfImpl","sourcecode":"if (int <= (byte[].int))\n    byte[] = byte[];\nelse\n    byte[] = new byte[int];\n"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}