{"failureDictionary":{"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode":36,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":66,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile":41,"org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive":47,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":1,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":18,"org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline":46,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":0,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":62,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode":34,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":13,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile":39,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent":29,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":43,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":44,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":48,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode":37,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":15,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":5,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":50,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":7,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle":33,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":42,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":11,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":12,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":67,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":65,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":14,"org.eclipse.jgit.api.NameRevCommandTest.prefix":26,"org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk":32,"org.eclipse.jgit.api.NameRevCommandTest.onePathMerge":28,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle":35,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":64,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":16,"org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor":27,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":10,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":60,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":61,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":53,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":59,"org.eclipse.jgit.api.NameRevCommandTest.nameExact":31,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode":40,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":6,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":57,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":56,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":58,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":55,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":54,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent":25,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":52,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":2,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":63,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":51,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":19,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":4,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":9,"org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline":45,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":49,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath":30,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":23,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":17,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":22,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsNoMerge":24,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":8,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":3,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":20,"org.eclipse.jgit.api.RevertCommandTest.testRevert":21,"org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100":38},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"f2570131-4c79-11e5-9a21-b574f5aee257","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:525","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) {\n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n    if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0)\n        org.eclipse.jgit.revwalk.RevObject = null;\n    else\n        org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n    \n} else\n    throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n"},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23],"tindex":"f2572842-4c79-11e5-9a21-0f537b9033e5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.Merger:274","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit == null)\n    return null;\n"},"variableMap":{"base":"headCommit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:142","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.List<org.eclipse.jgit.lib.Ref>) {\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getPeeledObjectId();\n    if (org.eclipse.jgit.lib.ObjectId == null)\n        org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId();\n    \n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId);\n    if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) != 1)\n        throw new org.eclipse.jgit.api.errors.MultipleParentsNotAllowedException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.revwalk.RevCommit.name(), java.lang.Integer.valueOf(org.eclipse.jgit.revwalk.RevCommit.getParentCount())));\n    \n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n    org.eclipse.jgit.revwalk.RevWalk.parseHeaders(org.eclipse.jgit.revwalk.RevCommit);\n    java.lang.String java.lang.String = org.eclipse.jgit.api.RevertCommand.calculateOurName(org.eclipse.jgit.lib.Ref);\n    java.lang.String java.lang.String = ((org.eclipse.jgit.revwalk.RevCommit.getId().abbreviate(7).name()) + \" \") + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage());\n    org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository)));\n    org.eclipse.jgit.merge.ResolveMerger.setWorkingTreeIterator(new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository));\n    org.eclipse.jgit.merge.ResolveMerger.setBase(org.eclipse.jgit.revwalk.RevCommit.getTree());\n    org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"BASE\" , java.lang.String , java.lang.String });\n    java.lang.String java.lang.String = (\"Revert \\\"\" + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage())) + \"\\\"\";\n    java.lang.String java.lang.String = (((java.lang.String + \"\\n\\n\") + \"This reverts commit \") + (org.eclipse.jgit.revwalk.RevCommit.getId().getName())) + \".\\n\";\n    if (org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)) {\n        if (org.eclipse.jgit.lib.AnyObjectId.equals(org.eclipse.jgit.revwalk.RevCommit.getTree().getId(), org.eclipse.jgit.merge.ResolveMerger.getResultTreeId()))\n            continue;\n        \n        org.eclipse.jgit.dircache.DirCacheCheckout org.eclipse.jgit.dircache.DirCacheCheckout = new org.eclipse.jgit.dircache.DirCacheCheckout(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.revwalk.RevCommit.getTree() , org.eclipse.jgit.lib.Repository.lockDirCache() , org.eclipse.jgit.merge.ResolveMerger.getResultTreeId());\n        org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true);\n        org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n        org.eclipse.jgit.revwalk.RevCommit = new org.eclipse.jgit.api.Git(org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.revwalk.RevCommit>.getRepository()).commit().setMessage(java.lang.String).setReflogComment((\"revert: \" + java.lang.String)).call();\n        java.util.List<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref);\n        org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit;\n    } else {\n        java.util.List<java.lang.String> = org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths();\n        java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> = org.eclipse.jgit.merge.ResolveMerger.getFailingPaths();\n        if (java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> != null)\n            org.eclipse.jgit.api.MergeResult = new org.eclipse.jgit.api.MergeResult(null , org.eclipse.jgit.merge.ResolveMerger.getBaseCommitId() , new org.eclipse.jgit.lib.ObjectId[]{ org.eclipse.jgit.revwalk.RevCommit.getId() , org.eclipse.jgit.revwalk.RevCommit.getId() } , org.eclipse.jgit.api.MergeResult.MergeStatus.org.eclipse.jgit.api.MergeResult.MergeStatus , org.eclipse.jgit.merge.MergeStrategy , org.eclipse.jgit.merge.ResolveMerger.getMergeResults() , java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> , null);\n        else\n            org.eclipse.jgit.api.MergeResult = new org.eclipse.jgit.api.MergeResult(null , org.eclipse.jgit.merge.ResolveMerger.getBaseCommitId() , new org.eclipse.jgit.lib.ObjectId[]{ org.eclipse.jgit.revwalk.RevCommit.getId() , org.eclipse.jgit.revwalk.RevCommit.getId() } , org.eclipse.jgit.api.MergeResult.MergeStatus.org.eclipse.jgit.api.MergeResult.MergeStatus , org.eclipse.jgit.merge.MergeStrategy , org.eclipse.jgit.merge.ResolveMerger.getMergeResults() , java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> , null);\n        \n        if ((!(org.eclipse.jgit.merge.ResolveMerger.failed())) && (!(java.util.List<java.lang.String>.isEmpty()))) {\n            java.lang.String java.lang.String = new org.eclipse.jgit.merge.MergeMessageFormatter().formatWithConflicts(java.lang.String, org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths());\n            org.eclipse.jgit.lib.Repository.writeRevertHead(org.eclipse.jgit.revwalk.RevCommit.getId());\n            org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(java.lang.String);\n        } \n        return null;\n    }\n}"},"status":-1},{"failures":[],"tindex":"f2574f53-4c79-11e5-9a21-1faa088163cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FormatError:111","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"  in \")"},"status":0},{"failures":[],"tindex":"f2574f54-4c79-11e5-9a21-d738bdf42d28","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:256","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:97","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"f2574f55-4c79-11e5-9a21-4b040faba5ea","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getGlobalListenerList().dispatch(new org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddNoteCommand:145","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.CommitBuilder.setParentIds(org.eclipse.jgit.revwalk.RevCommit)"},"status":-2},{"failures":[],"tindex":"f2577666-4c79-11e5-9a21-bdecfc597646","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"PATH\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:947","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.util.RawParseUtils.decode(byte[], 0, int)"},"status":-2},{"failures":[24,25,26,27,28,29,30,31],"tindex":"f2577667-4c79-11e5-9a21-f779dfd75f75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:320","type":"CtIfImpl","sourcecode":"if ((java.util.List<org.eclipse.jgit.lib.Ref>) == null)\n    org.eclipse.jgit.api.NameRevCommand.addPrefix(org.eclipse.jgit.lib.Constants.java.lang.String, java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue);\n"},"status":-1},{"failures":[],"tindex":"f2577668-4c79-11e5-9a21-35facc16aa1d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:301","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"mustExist":"rewrote"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RewriteGenerator:109","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"f2577669-4c79-11e5-9a21-496cd8c74023","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.BatchRefUpdate:115","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"allow":"ignorable","allowNonFastForwards":"ignorable"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:576","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"f2579d7a-4c79-11e5-9a21-393358cb3122","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackConnection:201","type":"CtIfImpl","sourcecode":"if (java.lang.String == (org.eclipse.jgit.transport.PacketLineIn.java.lang.String))\n    break;\n"},"variableMap":{"line":"id","org.eclipse.jgit.transport.PacketLineIn.END":"id"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:81","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String.length()) ; int++)\n    org.eclipse.jgit.util.RawParseUtils.parseHexInt4(((byte)(java.lang.String.charAt(int))));"},"status":-2},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"f2579d7b-4c79-11e5-9a21-a1c90c03ba0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:438","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-1},{"failures":[],"tindex":"f2579d7c-4c79-11e5-9a21-0fe14bb71b7c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:370","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject))"},"variableMap":{"obj":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:230","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId)"},"status":-2},{"failures":[],"tindex":"f257c48d-4c79-11e5-9a21-7d94d16488b7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1:205","type":"CtReturnImpl","sourcecode":"return com.googlecode.javaewah.EWAHCompressedBitmap.and(com.googlecode.javaewah.EWAHCompressedBitmap)"},"variableMap":{"blobs":"bitmap","bitmap":"bitmap"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper:195","type":"CtReturnImpl","sourcecode":"return com.googlecode.javaewah.EWAHCompressedBitmap"},"status":0},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"f257c48e-4c79-11e5-9a21-1dad6746e99d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:734","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.PackFile.Delta != null) {\n    int = int;\n    break SEARCH;\n} "},"status":-1},{"failures":[],"tindex":"f257c48f-4c79-11e5-9a21-33816d02bde5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.RemoteConfig:503","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.transport.TagOpt"},"variableMap":{"tagopt":"org.eclipse.jgit.transport.TagOpt.AUTO_FOLLOW"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TagOpt:107","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.transport.TagOpt.org.eclipse.jgit.transport.TagOpt"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}