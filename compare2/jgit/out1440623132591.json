{"failureDictionary":{"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidCommitter":142,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":165,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":155,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":171,"org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive":48,"org.eclipse.jgit.patch.GetTextTest.testGetText_BothISO88591":31,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":161,"org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline":47,"org.eclipse.jgit.patch.EditListTest.testTypes":49,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit2Parent":137,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":172,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NoBodySobAndBug":215,"org.eclipse.jgit.util.GitDateFormatterTest.DEFAULT":146,"org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1":12,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile":40,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":89,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":219,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":131,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode":38,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle":33,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":77,"org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange":37,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":128,"org.eclipse.jgit.util.io.UnionInputStreamTest.testReadSingleBytes":1,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":85,"org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedNew":26,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":166,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":190,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":189,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":167,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle":35,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters":188,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameModeChange":53,"org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet":24,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":78,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadOneLine":102,"org.eclipse.jgit.patch.EditListTest.testFileHeader":51,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":159,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":221,"org.eclipse.jgit.util.ChangeIdUtilTest.testTimeAltersId":201,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":175,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":194,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":76,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":191,"org.eclipse.jgit.submodule.SubmoduleAddTest.addExistentSubmodule":151,"org.eclipse.jgit.util.ChangeIdUtilTest.testId":150,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":8,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":23,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext0":62,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete":59,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext1":63,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NonFooterAndBugAndSob":211,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add":55,"org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline":46,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":193,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":73,"org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc":105,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugBrackersAndSob":196,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":90,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3":122,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":82,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles":124,"org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld":107,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter":110,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":83,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":134,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitBlankAuthor":139,"org.eclipse.jgit.util.io.UnionInputStreamTest.testEmptyStream":0,"org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile":106,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody":185,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":180,"org.eclipse.jgit.transport.RefSpecTest.testSetDestination_SourceNull":96,"org.eclipse.jgit.util.ChangeIdUtilTest.testWithEndingURL":208,"org.eclipse.jgit.util.ChangeIdUtilTest.testFirstParentAltersId":203,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":182,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":152,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":153,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter":187,"org.eclipse.jgit.util.ChangeIdUtilTest.testKernelStyleFooter":202,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":98,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder2":116,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":170,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":94,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder1":115,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNegativeContextFails":60,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit1Parent":135,"org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk":29,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak":186,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":22,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":181,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithSignedOffBy":207,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":192,"org.eclipse.jgit.api.ApplyCommandTest.testModifyX":18,"org.eclipse.jgit.api.ApplyCommandTest.testModifyY":19,"org.eclipse.jgit.api.ApplyCommandTest.testModifyZ":20,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1":111,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter2":141,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter1":140,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink":54,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE":117,"org.eclipse.jgit.api.ApplyCommandTest.testModifyE":17,"org.eclipse.jgit.util.ChangeIdUtilTest.testATwoLines":198,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_LsFiles":123,"org.eclipse.jgit.patch.EditListTest.testHunkHeader":50,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":164,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":169,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext10":66,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":71,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":6,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow":126,"org.eclipse.jgit.util.GitDateFormatterTest.LOCALE":145,"org.eclipse.jgit.util.ChangeIdUtilTest.testOneliner":197,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":163,"org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertOutOfOrder":119,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":162,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":183,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessagesWithSignedOffBy":206,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":79,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderWithoutIndexLine":56,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testSpecificEntryNumber":101,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":80,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNormalTime":138,"org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter":108,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents":113,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile":42,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTag":136,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":156,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1Sub":15,"org.eclipse.jgit.util.ChangeIdUtilTest.testDirCacheAltersId":218,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":74,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":184,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":174,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter":112,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBug_NonFooterLineAndSob":213,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":45,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":32,"org.eclipse.jgit.util.GitDateFormatterTest.RAW":148,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":88,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugLineWithASpaceAndSob":205,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO":118,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithBug_SubButNoBody":217,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":133,"org.eclipse.jgit.patch.PatchErrorTest.testError_BodyTooLong":30,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow":125,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":157,"org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk":25,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary":58,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAfterBugOrIssue":204,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNoParent":143,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":177,"org.eclipse.jgit.api.PushCommandTest.testPush":4,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommit":210,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":154,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":86,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":3,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode":41,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":75,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":178,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadTwoLine":103,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify":52,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithoutFooter":214,"org.eclipse.jgit.transport.RefSpecTest.invalidSetDestination":97,"org.eclipse.jgit.api.ApplyCommandTest.testDeleteD":21,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":132,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":91,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testEmpty1":67,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":220,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":70,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":160,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":168,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":72,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":158,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":11,"org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100":39,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugEmptyLineAndSob":216,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":87,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":84,"org.eclipse.jgit.util.GitDateFormatterTest.ISO":147,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":176,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":179,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode":34,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":10,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit128Parent":144,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":44,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":9,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":92,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext3":64,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":43,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext5":65,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadWhileAppendIsInProgress":99,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1":13,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessages":209,"org.eclipse.jgit.api.ApplyCommandTest.testAddA2":14,"org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedOld":27,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":5,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":130,"org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneFIFO":120,"org.eclipse.jgit.util.GitDateFormatterTest.RFC":149,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext100":61,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":173,"org.eclipse.jgit.util.ChangeIdUtilTest.testNoteInMiddle":212,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":2,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree":121,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF2":16,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree":127,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":7,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":195,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommitWithSob_ButNoBody":200,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment":100,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameWithoutContentChange":57,"org.eclipse.jgit.util.ChangeIdUtilTest.testOnelinerFollowedByBlank":199,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":129,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":104,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory":114,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":93,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NO_MERGES":109,"org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles":28,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":81,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine1":68,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine2":69,"org.eclipse.jgit.transport.RefSpecTest.testSetDestination":95},"transformations":[{"failures":[],"tindex":"303e921a-4c36-11e5-a44b-09df6b9bf965","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.RenameDetector:588","type":"CtAssignmentImpl","sourcecode":"long[][int] = org.eclipse.jgit.diff.SimilarityRenameDetector.encode(int, int, int)"},"variableMap":{"score":"ptr","delIdx":"ptr","mNext":"key","addIdx":"ptr","matrix":"entries"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner:113","type":"CtAssignmentImpl","sourcecode":"long[][int] = (((long)(int)) << 32) | int"},"status":-2},{"failures":[0,1],"tindex":"303e921b-4c36-11e5-a44b-c729d10537a0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:637","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.UnionInputStream:122","type":"CtReturnImpl","sourcecode":"return java.util.LinkedList<java.io.InputStream>.isEmpty()"},"status":-1},{"failures":[2,3,4,5,6,7],"tindex":"303eb92c-4c36-11e5-a44b-f7f3f9e14f70","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:664","type":"CtInvocationImpl","sourcecode":"java.lang.System.runFinalization()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PushCommand:155","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.transport.PushResult org.eclipse.jgit.transport.PushResult = org.eclipse.jgit.transport.Transport.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream);\n    java.util.ArrayList<org.eclipse.jgit.transport.PushResult>.add(org.eclipse.jgit.transport.PushResult);\n} catch (org.eclipse.jgit.errors.TransportException e) {\n    throw new org.eclipse.jgit.api.errors.TransportException(org.eclipse.jgit.errors.TransportException.getMessage() , org.eclipse.jgit.errors.TransportException);\n} finally {\n    org.eclipse.jgit.transport.Transport.close();\n}"},"status":-1},{"failures":[],"tindex":"303eb92d-4c36-11e5-a44b-dd1a2351a2b7","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:204","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.checkout()"},"status":0},{"failures":[8,9],"tindex":"303eb92e-4c36-11e5-a44b-49d5c5b2433c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.PlotWalk:193","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:882","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.blame.Region.int) + (org.eclipse.jgit.blame.Region.int)"},"status":-1},{"failures":[],"tindex":"303eb92f-4c36-11e5-a44b-dd92420081b8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:161","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.initializeShallowCommits()"},"variableMap":{"walk":"walk"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RemoveNoteCommand:91","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref != null) {\n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Ref.getObjectId());\n    org.eclipse.jgit.notes.NoteMap = org.eclipse.jgit.notes.NoteMap.read(org.eclipse.jgit.revwalk.RevWalk.getObjectReader(), org.eclipse.jgit.revwalk.RevCommit);\n} "},"status":-2},{"failures":[],"tindex":"303ee040-4c36-11e5-a44b-bb3bd0f29316","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:791","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.PackFile.invalid()) {\n    org.eclipse.jgit.internal.storage.file.PackFile.close();\n    continue;\n} "},"variableMap":{"p":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:356","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs2(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor);\n} finally {\n    org.eclipse.jgit.internal.storage.file.PackFile.endCopyAsIs();\n}"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"303ee041-4c36-11e5-a44b-1fd9206f6b9a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.FetchHeadRecord:75","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"remote branch\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else {\n    java.lang.String = \"\";\n    java.lang.String = java.lang.String;\n}"},"variableMap":{"org.eclipse.jgit.lib.Constants.R_REMOTES":"oldPath","name":"oldPath","sourceName":"newPath","type":"oldPath"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:406","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.patch.FileHeader.(org.eclipse.jgit.patch.FileHeader.isHunkHdr(byte[], int, int)) >= 1) {\n    break;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseOldName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-1},{"failures":[],"tindex":"303f0752-4c36-11e5-a44b-25b613c300b6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:388","type":"CtReturnImpl","sourcecode":"return int != 0 ? int : -1"},"variableMap":{"cnt":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:412","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[90,91,92,93,94,95,96,97,98],"tindex":"303f0753-4c36-11e5-a44b-1baaf767dbd8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.ChangeIdUtil:69","type":"CtInvocationImpl","sourcecode":"java.lang.String.replaceAll(\"(?i)(?m)^Signed-off-by:.*$\\n?\", \"\").replaceAll(\"(?m)^#.*$\\n?\", \"\").replaceAll(\"(?m)\\n\\n\\n+\", \"\\\\\\n\").replaceAll(\"\\\\n*$\", \"\")"},"variableMap":{"msg":"destination"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:264","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.transport.RefSpec.java.lang.String = org.eclipse.jgit.transport.RefSpec.org.eclipse.jgit.transport.RefSpec.checkValid(java.lang.String)"},"status":-1},{"failures":[],"tindex":"303f2e64-4c36-11e5-a44b-974a1d740262","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:414","type":"CtInvocationImpl","sourcecode":"new org.eclipse.jgit.transport.RefSpec().setSource(org.eclipse.jgit.lib.Ref.getName())"},"status":0},{"failures":[12,13,14,15,16,17,18,19,20,21,99,100,101,102,103,25,26,27,28,30,104,31,32,33,35,39,105,106,43,44,45,46,47,48,49,50,51,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,61,62,63,64,65,66,67,68,69],"tindex":"303f2e65-4c36-11e5-a44b-a931c37180e0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:568","type":"CtIfImpl","sourcecode":"if (int == 0)\n    int += 46;\n"},"variableMap":{"ptr":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:224","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final byte byte = org.eclipse.jgit.util.RawParseUtils.byte[][byte[][int]];\n    if (byte < 0)\n        break;\n    \n    int = (int * 10) + byte;\n    int++;\n}"},"status":-1},{"failures":[151],"tindex":"303f2e66-4c36-11e5-a44b-598cc532d6c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleAddCommand:146","type":"CtTryImpl","sourcecode":"try {\n    if (org.eclipse.jgit.api.SubmoduleAddCommand.submoduleExists())\n        throw new org.eclipse.jgit.api.errors.JGitInternalException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    \n} catch (java.io.IOException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException);\n}"},"status":-1},{"failures":[],"tindex":"303f2e67-4c36-11e5-a44b-0797a6d97aec","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:577","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(0)"},"variableMap":{"commit":"srcParent"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:219","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(((java.lang.Integer.intValue()) - 1))"},"status":-2},{"failures":[152,153,10,11,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,70,71,72,73,75,76,194,78,79,80,81,82,83,84,85,86,87,88,89,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221],"tindex":"303f5578-4c36-11e5-a44b-a7109d8935e5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV1:232","type":"CtReturnImpl","sourcecode":"return ((4 + (org.eclipse.jgit.lib.Constants.int)) * int) + 4"},"variableMap":{"mid":"footerFirstLine","org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH":"footerFirstLine"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:289","type":"CtReturnImpl","sourcecode":"return int"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}