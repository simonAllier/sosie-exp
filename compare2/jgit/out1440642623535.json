{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":29,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6":28,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":31,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":61,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":30,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":321,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":22,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2":25,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":51,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5":27,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4":26,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":81,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":262,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":286,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":85,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":102,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":263,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":300,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":259,"org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartEnd":338,"org.eclipse.jgit.merge.MergeAlgorithmTest.testNoAgainstOneModification":333,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_Insert2":340,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":6,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":271,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":273,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":179,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":32,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":270,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":52,"org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin":318,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":199,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b":44,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules1thru3_NoIndexEntry":12,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":147,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":174,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":5,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":268,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource":315,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":17,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":82,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtEnd":323,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":141,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_LinuxBug":334,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":83,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":109,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":162,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":140,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":149,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":275,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":62,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":255,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":234,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":312,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":139,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":138,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":76,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":187,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":208,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack1":204,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeFullBlob":284,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":50,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":75,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack2":205,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":8,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":20,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":136,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":7,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":117,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_InsertsIntoMidPosition":344,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":116,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":226,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":240,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":74,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15b":15,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1":24,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":348,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":230,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":157,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":257,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":352,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":156,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique":197,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":21,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":209,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":243,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":260,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":276,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":124,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":219,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":272,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation":314,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":159,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":202,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":111,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":72,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":67,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":87,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":122,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjects":298,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":356,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":88,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterSmallObjects":188,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":320,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":214,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":77,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":308,"org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications":331,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":127,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":176,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":64,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":360,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":227,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":274,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":151,"org.eclipse.jgit.transport.PackParserTest.test1":195,"org.eclipse.jgit.api.GitConstructionTest.testClose":236,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":115,"org.eclipse.jgit.transport.PackParserTest.test2":196,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead":287,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_InsertEnd":335,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects":191,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":346,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":120,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":192,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":210,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":49,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":233,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":84,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b":45,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":129,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":279,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":14,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications":329,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":69,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":158,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":78,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":125,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":33,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":258,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_InsertEnd":342,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":249,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":193,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoNonConflictingModifications":324,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":169,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":4,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":53,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":112,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":305,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":143,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":171,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":177,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":170,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSeperateModifications":325,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":46,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":265,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":57,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":253,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":350,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":70,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":251,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":282,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":150,"org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror":317,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":56,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":232,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":206,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":172,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":277,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":63,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":154,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":222,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":168,"org.eclipse.jgit.api.BlameCommandTest.testRename":355,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":79,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":58,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile":23,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":3,"org.eclipse.jgit.merge.MergeAlgorithmTest.testDeleteVsModify":332,"org.eclipse.jgit.events.ConfigChangeEventTest.testFileRepository_ChangeEventsOnlyOnSave":0,"org.eclipse.jgit.api.FetchCommandTest.testFetch":239,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":256,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":107,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":359,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":184,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":353,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":211,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":358,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":229,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":181,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":95,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":267,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":167,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":228,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":201,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":250,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":354,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":347,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":144,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":269,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":178,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":194,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":235,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":152,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":142,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":80,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":145,"org.eclipse.jgit.api.PushCommandTest.testPush":247,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":310,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":106,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":166,"org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify":328,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":103,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":163,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSameModification":330,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":99,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":297,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":175,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":299,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":326,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":345,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":296,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":164,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":113,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":137,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":246,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutUncachedChanges":13,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":47,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":295,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":185,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":183,"org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob":285,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":290,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":98,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":97,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":289,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":126,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":221,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":200,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":241,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":100,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":133,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":266,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":54,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":71,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":161,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":132,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":101,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":134,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_DeleteEnd":343,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":280,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":2,"org.eclipse.jgit.api.GitConstructionTest.testWrap":238,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":357,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback":190,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":224,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_InsertsIntoMidPosition":337,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":89,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":215,"org.eclipse.jgit.merge.MergeAlgorithmTest.testEmptyTexts":322,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":41,"org.eclipse.jgit.api.GitConstructionTest.testOpen":237,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_18":42,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":261,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_19":43,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":165,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":160,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_13":37,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":105,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_14":38,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15":39,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":212,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":40,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":173,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":231,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":110,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":114,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":10,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":35,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":244,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_12":36,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":34,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":319,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":203,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":207,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":349,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":302,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":313,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":19,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":311,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":242,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":121,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":182,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":283,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":60,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":118,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":146,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":281,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":108,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":220,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":68,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":66,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":48,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":225,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase":309,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":128,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":304,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout":18,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":73,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":198,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":327,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":130,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":16,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":104,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":153,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":254,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":93,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReaderResolve":189,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":245,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":351,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":65,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":306,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":94,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":11,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":148,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":288,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":339,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":59,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":278,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":119,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":294,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":293,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":252,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":292,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_DeleteEnd":336,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LinuxBug":341,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":291,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":91,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":92,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":264,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":301,"org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart":316,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":131,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":86,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":307,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":217,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":303,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":213,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":218,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":223,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":55,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":186,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":96,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":155,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":248,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":180,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":135,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":123,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":216,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":90},"transformations":[{"failures":[],"tindex":"91c0c149-4c63-11e5-907f-c572f20ef830","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevFlagSet:98","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.eclipse.jgit.revwalk.RevFlagSet) {\n    final int int = ((org.eclipse.jgit.revwalk.RevFlagSet)(java.util.Collection<?>)).int;\n    return ((int) & int) == int;\n} "},"status":0},{"failures":[0],"tindex":"91c0c14a-4c63-11e5-907f-87f2e82fb7a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.events.RepositoryEvent:68","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Repository) == null)\n    org.eclipse.jgit.lib.Repository = org.eclipse.jgit.lib.Repository;\n"},"status":-1},{"failures":[1,2,3,4,5,6],"tindex":"91c0e85b-4c63-11e5-907f-7b9936d3417d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.FetchHeadRecord:76","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"remote branch\""},"variableMap":{"type":"ourCommitName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:267","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,1,2,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,4,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,5,161,162,163,164,165,166,167,168,6,169],"tindex":"91c0e85c-4c63-11e5-907f-ef95ace8b79e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ApplyCommand:239","type":"CtReturnImpl","sourcecode":"return "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:686","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheBuildIterator == null) {\n    if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (!(org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored()))) {\n        if (!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode))) {\n            if ((org.eclipse.jgit.lib.ObjectId == null) || (!org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryObjectId(), org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode())))) {\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, null, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                return ;\n            } \n        } \n    } \n    if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null)\n        org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n    else if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null)\n        org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n    else {\n        if (org.eclipse.jgit.dircache.DirCacheCheckout.equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode)) {\n            if (boolean)\n                org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n            else\n                org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        \n    }\n} else {\n    if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n        if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) || (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))) {\n            if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) && (org.eclipse.jgit.treewalk.NameConflictTreeWalk.isDirectoryFileConflict())) {\n                if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator == null) || (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))))\n                    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                else\n                    org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n                \n            } else\n                org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        \n    } else if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n        if (org.eclipse.jgit.lib.FileMode == (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode)) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n        } else {\n            if (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n                if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))) {\n                    if ((!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode()))) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode)))\n                        return ;\n                    else\n                        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                    \n                } else\n                    org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n                \n            } else\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            \n        }\n    } else {\n        if (((!org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        else if ((!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n            if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode()))) {\n                org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n            } else if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader())))) {\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            } else {\n                org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n            }\n        } else {\n            org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"91c1367d-4c63-11e5-907f-b5d9f62afc25","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:908","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Constants:575","type":"CtLocalVariableImpl","sourcecode":"final int int = java.nio.ByteBuffer.limit()"},"status":-2},{"failures":[170],"tindex":"91c1367e-4c63-11e5-907f-5940aee62357","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:542","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriter.ObjectIdSet>.add(org.eclipse.jgit.internal.storage.file.GC.org.eclipse.jgit.internal.storage.file.GC.objectIdSet(org.eclipse.jgit.internal.storage.file.PackFile.getIndex()))"},"status":-1},{"failures":[171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,170,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,63,225,226,64,227,228,65,229,230,231,232,66,1,2,233,67,234,235,236,236,237,237,238,238,239,240,241,242,243,244,245,246,247,248,249,250,251,89,252,90,91,92,253,93,254,255,256,94,257,95,96,97,98,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"tindex":"91c1367f-4c63-11e5-907f-63ca034793e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexWriter:212","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackIndexWriter.writeImpl()"},"status":-1},{"failures":[],"tindex":"91c13680-4c63-11e5-907f-29d17ec79151","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:653","type":"CtReturnImpl","sourcecode":"return byte[].clone()"},"variableMap":{"path":"dstbuf"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:454","type":"CtReturnImpl","sourcecode":"return byte[]"},"status":-2},{"failures":[277],"tindex":"91c13681-4c63-11e5-907f-8f23f3a441cb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:393","type":"CtIfImpl","sourcecode":"if (int > 0)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"incorrectly sorted\");\n"},"variableMap":{"cmp":"deleteOptions"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:220","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.pack.PackExt.org.eclipse.jgit.internal.storage.pack.PackExt.equals(org.eclipse.jgit.internal.storage.pack.PackExt)) {\n    java.io.File java.io.File = org.eclipse.jgit.internal.storage.file.GC.nameFor(java.lang.String, (\".\" + (org.eclipse.jgit.internal.storage.pack.PackExt.getExtension())));\n    org.eclipse.jgit.util.FileUtils.delete(java.io.File, int);\n    break;\n} "},"status":-1},{"failures":[],"tindex":"91c15d92-4c63-11e5-907f-837346b45fed","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:362","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.TreeWalk.isSubtree())\n    org.eclipse.jgit.treewalk.TreeWalk.enterSubtree();\n"},"variableMap":{"walk":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:380","type":"CtIfImpl","sourcecode":"if ((long) < long) {\n    org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref;\n    org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref;\n    do {\n        if (org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.boolean) {\n            org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.boolean = false;\n            org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref;\n            org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref;\n            continue;\n        } else if (org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref == org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref)\n            break;\n        \n        org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref;\n        org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref;\n        org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref;\n        org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = null;\n        org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.java.lang.Object = null;\n        long -= org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.int;\n        org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.org.eclipse.jgit.internal.storage.dfs.DfsPackKey.java.util.concurrent.atomic.AtomicLong.addAndGet(-(org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.int));\n        (long)++;\n    } while ((long) < long );\n    org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref;\n} "},"status":-2},{"failures":[172,173,171,174,175,176,177,178,179,181,182,183,184,185,186,187,278,180,198,199,200,279,280,201,202,281,195,196,282,283,284,285,286,287,288,289,204,205,206,290,208,291,292,293,294,295,296,297,298,299,300,301,222,223,224,63,225,226,64,227,228,65,229,230,231,232,214,66,1,2,233,67,234,235,239,302,240,241,242,303,236,236,237,237,238,238,89,252,90,91,92,253,93,254,255,256,94,257,95,96,97,98,243,244,245,246,247,304,305,306,248,307,249,250,251,258,259,260,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"tindex":"91c15d93-4c63-11e5-907f-1fa1ff963d71","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.OpenSshConfig:94","type":"CtAssignmentImpl","sourcecode":"java.io.File = new java.io.File(\".\").getAbsoluteFile()"},"variableMap":{"home":"tmpIdx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:190","type":"CtAssignmentImpl","sourcecode":"java.io.File = new java.io.File(org.eclipse.jgit.internal.storage.file.FileObjectDatabase.getDirectory() , (org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.(org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.baseName(java.io.File)) + \".idx\"))"},"status":-1},{"failures":[174,175,176,172,173,171,308,309,310,311,312,181,182,183,184,185,186,187,177,178,179,313,278,180,314,315,316,317,318,319,320,198,199,200,279,280,201,202,222,223,224,63,225,226,64,227,228,65,229,230,231,232,66,1,2,233,67,234,235,240,241,242,303,236,236,237,237,238,238,89,252,90,91,92,253,93,254,255,256,94,257,95,96,97,98,243,244,245,246,306,248,307,249,250,251,258,259,321,263,264,265,266,267,268,269,270,271,272,274,276],"tindex":"91c184a4-4c63-11e5-907f-b309cf593679","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:425","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.RefSpec.isWildcard()) {\n    int int = java.lang.String.indexOf('*');\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    return (((java.lang.String.length()) > ((java.lang.String.length()) + (java.lang.String.length()))) && (java.lang.String.startsWith(java.lang.String))) && (java.lang.String.endsWith(java.lang.String));\n} "},"status":-1},{"failures":[322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,53,55,345,61,62,233,346,69,70,71,85,347,348,349,350,351,352,353,354,355,356,88,357,358,102,103,113,116,118,122,359,360,169,4,153,155,5,164,165,168,6],"tindex":"91c184a5-4c63-11e5-907f-6d65c0859e10","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:276","type":"CtAssignmentImpl","sourcecode":"int = (1 << (int)) - 1"},"variableMap":{"bits":"aPtr","mask":"aPtr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RawTextComparator:302","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.diff.Edit.int = org.eclipse.jgit.diff.RawTextComparator.org.eclipse.jgit.diff.RawTextComparator.findForwardLine(org.eclipse.jgit.diff.RawText.org.eclipse.jgit.util.IntList, org.eclipse.jgit.diff.Edit.int, int)"},"status":-1},{"failures":[],"tindex":"91c1abb6-4c63-11e5-907f-d91188ffa906","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:538","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"variableMap":{"keyEnd":"sz"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.LeafBucket:216","type":"CtForImpl","sourcecode":"for (org.eclipse.jgit.notes.NonNoteEntry org.eclipse.jgit.notes.NonNoteEntry = org.eclipse.jgit.notes.NonNoteEntry ; org.eclipse.jgit.notes.NonNoteEntry != null ; org.eclipse.jgit.notes.NonNoteEntry = org.eclipse.jgit.notes.NonNoteEntry.org.eclipse.jgit.notes.NonNoteEntry)\n    int += org.eclipse.jgit.notes.NonNoteEntry.treeEntrySize();"},"status":-2},{"failures":[],"tindex":"91c1abb7-4c63-11e5-907f-d30cd3c513a3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashListCommand:102","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.ReflogEntry org.eclipse.jgit.lib.ReflogEntry : java.util.Collection<org.eclipse.jgit.lib.ReflogEntry>)\n    try {\n        java.util.List<org.eclipse.jgit.revwalk.RevCommit>.add(org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ReflogEntry.getNewId()));\n    } catch (java.io.IOException e) {\n        throw new org.eclipse.jgit.api.errors.JGitInternalException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.ReflogEntry.getNewId()) , java.io.IOException);\n    }"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}