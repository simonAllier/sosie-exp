{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":31,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":45,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":46,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":59,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":77,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":12,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":37,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":47,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":34,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":20,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":39,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":66,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":23,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":83,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":4,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":8,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":57,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs":75,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":56,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":9,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":88,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":3,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":38,"org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned":91,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":17,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":40,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":42,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":41,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":25,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":5,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":48,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":22,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":2,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":10,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":13,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":65,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":19,"org.eclipse.jgit.dircache.DirCachePathEditTest.testPathEditShouldBeCalledForEachStage":6,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":35,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":84,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":16,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":87,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":14,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":61,"org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeletePathAndTreeNormalNames":7,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":67,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":54,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":81,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":82,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":29,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":86,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":69,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":50,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":89,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":11,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":51,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":78,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":76,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":92,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":36,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":27,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":90,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":85,"org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test17_FromString":0,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":62,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat":74,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":33,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":53,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":28,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":30,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":21,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes":79,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":58,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":15,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":24,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":70,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":49,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":44,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":64,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":18,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":73,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":63,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":68,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":71,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":32,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":55,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":52,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":80,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":43,"org.eclipse.jgit.notes.NoteMapTest.testEditFlat":72,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":60,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique":1},"transformations":[{"failures":[0,1,2],"tindex":"9a411faf-4c28-11e5-8507-8b2240648caa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.MergeResult:86","type":"CtReturnImpl","sourcecode":"return \"Fast-forward-squashed\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:368","type":"CtReturnImpl","sourcecode":"return new java.lang.String(char[] , 0 , int)"},"status":-1},{"failures":[],"tindex":"9a4146c0-4c28-11e5-8507-b9f5af859ca2","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:370","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.lang.String>.containsKey(\"opaque\"))\n    java.util.Map<java.lang.String, java.lang.String>.put(\"opaque\", java.util.Map<java.lang.String, java.lang.String>.get(\"opaque\"));\n"},"variableMap":{"r":"replacements","params":"replacements"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteConfig:287","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n    if ((java.util.Map.Entry<java.lang.String, java.lang.String> != null) && ((java.util.Map.Entry<java.lang.String, java.lang.String>.getKey().length()) > (java.util.Map.Entry<java.lang.String, java.lang.String>.getKey().length())))\n        continue;\n    \n    if (!(java.lang.String.startsWith(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey())))\n        continue;\n    \n    java.util.Map.Entry<java.lang.String, java.lang.String> = java.util.Map.Entry<java.lang.String, java.lang.String>;\n}"},"status":0},{"failures":[],"tindex":"9a4146c1-4c28-11e5-8507-99ea3b3f2570","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.TopoSortGenerator:122","type":"CtUnaryOperatorImpl","sourcecode":"~(org.eclipse.jgit.revwalk.TopoSortGenerator.int)"},"variableMap":{"org.eclipse.jgit.revwalk.TopoSortGenerator.TOPO_DELAY":"nContext"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:140","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"9a416dd2-4c28-11e5-8507-a361f3b24c7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEditor:140","type":"CtAssignmentImpl","sourcecode":"int = boolean ? int : org.eclipse.jgit.dircache.DirCache.nextEntry(int)"},"status":-1},{"failures":[86,87,88,89],"tindex":"9a4194e3-4c28-11e5-8507-6dea862957ac","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.UserConfig:211","type":"CtReturnImpl","sourcecode":"return java.lang.String == null ? null : java.lang.String.replaceAll(\"<|>|\\n\", \"\")"},"variableMap":{"s":"message"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TagBuilder:142","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"9a41bbf4-4c28-11e5-8507-13929d8a3386","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:89","type":"CtForImpl","sourcecode":"for (int = 0 ; (int < int) && (int < int) ; int++) {\n    final int int = ((byte[][int]) & 255) - ((byte[][int]) & 255);\n    if (int != 0)\n        return int;\n    \n}"},"variableMap":{"a":"b","b":"b","aLen":"sz","bLen":"sz","cPos":"sz"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:412","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    if ((byte[][int++]) == char)\n        return int;\n    \n}"},"status":-2},{"failures":[90,91,47],"tindex":"9a41bbf5-4c28-11e5-8507-85fe3ceb9431","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:377","type":"CtAssignmentImpl","sourcecode":"java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref> = new java.util.HashMap<java.lang.String, org.eclipse.jgit.lib.Ref>()"},"variableMap":{"newRefs":"newRefs"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:375","type":"CtAssignmentImpl","sourcecode":"java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.internal.storage.file.GC.getAllRefs()"},"status":-1},{"failures":[],"tindex":"9a41bbf6-4c28-11e5-8507-75da1e5c49ee","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:295","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackIndex org.eclipse.jgit.internal.storage.file.PackIndex = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:224","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackIndex org.eclipse.jgit.internal.storage.file.PackIndex = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref<org.eclipse.jgit.internal.storage.file.PackIndex>.get()"},"status":-2},{"failures":[],"tindex":"9a41bbf7-4c28-11e5-8507-df2c2836054c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:623","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.internal.storage.file.FileRepository.getIndexFile()) == null)\n    return java.util.Collections.emptySet();\n"},"variableMap":{"repo":"repo"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:622","type":"CtTryImpl","sourcecode":"try {\n    if ((org.eclipse.jgit.internal.storage.file.FileRepository.getIndexFile()) == null)\n        return java.util.Collections.emptySet();\n    \n} catch (org.eclipse.jgit.errors.NoWorkTreeException e) {\n    return java.util.Collections.emptySet();\n}"},"status":0},{"failures":[],"tindex":"9a41bbf8-4c28-11e5-8507-6f84072aa85b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1167","type":"CtUnaryOperatorImpl","sourcecode":"~(int)"},"variableMap":{"delayFreeFlags":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:147","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"9a41bbf9-4c28-11e5-8507-8ff196cf4ef8","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:464","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n    return false;\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:470","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.blame.Region) != null) {\n    org.eclipse.jgit.blame.Region org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Region;\n    int -= org.eclipse.jgit.blame.Region.int;\n    if ((org.eclipse.jgit.blame.Region.org.eclipse.jgit.blame.Region) != null) {\n        org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Region.org.eclipse.jgit.blame.Region;\n        return true;\n    } \n    if ((org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Candidate) != null)\n        return org.eclipse.jgit.blame.BlameGenerator.result(org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Candidate);\n    \n    org.eclipse.jgit.blame.Candidate = null;\n    org.eclipse.jgit.blame.Region = null;\n} "},"status":0},{"failures":[],"tindex":"9a41e30a-4c28-11e5-8507-a9699075545b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:414","type":"CtAssignmentImpl","sourcecode":"byte[][int--] = '0'"},"status":-2},{"failures":[92],"tindex":"9a41e30b-4c28-11e5-8507-ff1b5c81ab3a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:1174","type":"CtIfImpl","sourcecode":"if ((' ' == int) || ('\\t' == int))\n    continue;\n"},"variableMap":{"c":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1237","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case -1 :\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    case '\\n' :\n        continue;\n    case 't' :\n        java.lang.StringBuilder.append('\\t');\n        continue;\n    case 'b' :\n        java.lang.StringBuilder.append('\\b');\n        continue;\n    case 'n' :\n        java.lang.StringBuilder.append('\\n');\n        continue;\n    case '\\\\' :\n        java.lang.StringBuilder.append('\\\\');\n        continue;\n    case '\\\"' :\n        java.lang.StringBuilder.append('\\\"');\n        continue;\n    default :\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Character.valueOf(((char)(int)))));\n}"},"status":-1},{"failures":[],"tindex":"9a41e30c-4c28-11e5-8507-89b34ed8479a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefWriter:113","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.Collection<org.eclipse.jgit.lib.Ref>) {\n    if (org.eclipse.jgit.lib.Constants.java.lang.String.equals(org.eclipse.jgit.lib.Ref.getName())) {\n        continue;\n    } \n    org.eclipse.jgit.lib.Ref.getObjectId().copyTo(char[], java.io.StringWriter);\n    java.io.StringWriter.write('\\t');\n    java.io.StringWriter.write(org.eclipse.jgit.lib.Ref.getName());\n    java.io.StringWriter.write('\\n');\n    if ((org.eclipse.jgit.lib.Ref.getPeeledObjectId()) != null) {\n        org.eclipse.jgit.lib.Ref.getPeeledObjectId().copyTo(char[], java.io.StringWriter);\n        java.io.StringWriter.write('\\t');\n        java.io.StringWriter.write(org.eclipse.jgit.lib.Ref.getName());\n        java.io.StringWriter.write(\"^{}\\n\");\n    } \n}"},"status":0},{"failures":[],"tindex":"9a41e30d-4c28-11e5-8507-4df8a0a3f4d6","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:624","type":"CtIfImpl","sourcecode":"if (0 < int)\n    int--;\n"},"variableMap":{"pOff":"commitTime"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DateRevQueue:120","type":"CtWhileImpl","sourcecode":"while ((org.eclipse.jgit.revwalk.DateRevQueue.Entry != null) && ((org.eclipse.jgit.revwalk.DateRevQueue.Entry.org.eclipse.jgit.revwalk.RevCommit.int) > long)) {\n    org.eclipse.jgit.revwalk.DateRevQueue.Entry = org.eclipse.jgit.revwalk.DateRevQueue.Entry;\n    org.eclipse.jgit.revwalk.DateRevQueue.Entry = org.eclipse.jgit.revwalk.DateRevQueue.Entry.org.eclipse.jgit.revwalk.DateRevQueue.Entry;\n}"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}