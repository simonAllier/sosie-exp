{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":15,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testBinaryDetect":111,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":17,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":16,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":44,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":127,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":149,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":121,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":68,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":131,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":147,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":18,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":65,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":60,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree":5,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":45,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testBasic":134,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1":35,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123":122,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules1thru3_NoIndexEntry":8,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":123,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":81,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":129,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":12,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict":3,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":150,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":95,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testCR":109,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":97,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":54,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testLF":110,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":32,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":6,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":104,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":151,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine":119,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":94,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testNameOnlyMatches":136,"org.eclipse.jgit.merge.CherryPickTest.testRevert":41,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":42,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":96,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testTrailingSlash":138,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":71,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":146,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":67,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":106,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":93,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":105,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":92,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":126,"org.eclipse.jgit.util.ChangeIdUtilTest.testId":141,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testGetters":137,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":29,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testFileNameWildcards":133,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":84,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":43,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":83,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testBinaryDontDetect":112,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile":118,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":52,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":75,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":50,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":144,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":128,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":89,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":59,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":103,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":145,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":88,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":90,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS":37,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":116,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15b":10,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad":36,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testParentDirectoryGitIgnores":132,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":101,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":14,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":125,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":27,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_18":28,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":39,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_13":23,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":66,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_14":24,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15":25,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":26,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testResetState":140,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":69,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":21,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch":49,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":53,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":70,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_12":22,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":51,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":57,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":61,"org.eclipse.jgit.util.ChangeIdUtilTest.testFirstParentAltersId":142,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":20,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":115,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testCRLF":107,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testNegation":139,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":13,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":113,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":38,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":73,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":114,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":55,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":98,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":85,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":30,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyOk":120,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":86,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":130,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":56,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne":4,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":63,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap":2,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":58,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":31,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":87,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":33,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":79,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":124,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":9,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":80,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":7,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":64,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":102,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":99,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":48,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":74,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine":117,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":19,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testLFCR":108,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":77,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":78,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":148,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":72,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testTargetWithoutLeadingSlash":135,"org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest.testBoundary":0,"org.eclipse.jgit.merge.CherryPickTest.testPick":40,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":46,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":82,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":143,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":100,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix":34,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":47,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":91,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":62,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":76},"transformations":[{"failures":[0],"tindex":"3e10ed9e-4c41-11e5-82eb-6b4d686e8bfe","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:89","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.io.AutoCRLFOutputStream.write(byte[], ((byte[].int) - int), int)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"3e1114af-4c41-11e5-82eb-b79d7d4a05a9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.TreeWalk:377","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator"},"variableMap":{"parent":"minRef","o":"minRef"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:142","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator[][int]"},"status":-1},{"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"3e1114b0-4c41-11e5-82eb-554a3f7dd722","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.EolCanonicalizingInputStream:138","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    if (((int) == (int)) && (!org.eclipse.jgit.util.io.EolCanonicalizingInputStream.(fillBuffer()))) {\n        break;\n    } \n    byte byte = byte[][(int)++];\n    if ((boolean) || (byte != '\\r')) {\n        byte[][int++] = byte;\n        continue;\n    } \n    if (((int) == (int)) && (!org.eclipse.jgit.util.io.EolCanonicalizingInputStream.(fillBuffer()))) {\n        byte[][int++] = '\\r';\n        break;\n    } \n    if ((byte[][int]) == '\\n') {\n        byte[][int++] = '\\n';\n        (int)++;\n    } else\n        byte[][int++] = '\\r';\n    \n}"},"status":-1},{"failures":[],"tindex":"3e113bc1-4c41-11e5-82eb-a98e78e76c9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:424","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.ByteArrayWindow != null) {\n    org.eclipse.jgit.internal.storage.file.ByteArrayWindow.crc32(java.util.zip.CRC32, long, ((int)(long)));\n} else {\n    long long = long;\n    long long = long;\n    while (long > 0) {\n        final int int = ((int)(java.lang.Math.min(long, byte[].int)));\n        org.eclipse.jgit.internal.storage.file.PackFile.readFully(long, byte[], 0, int, org.eclipse.jgit.internal.storage.file.WindowCursor);\n        java.util.zip.CRC32.update(byte[], 0, int);\n        long += int;\n        long -= int;\n    }\n}"},"status":-2},{"failures":[120,121,122,123,124,125,126],"tindex":"3e113bc2-4c41-11e5-82eb-f1ca06b7bfc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:301","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final int int = int & (int);\n    int int = int[][int];\n    if (int == 0) {\n        int = org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.step(int, byte[][int++], byte[][int++]);\n        continue;\n    } \n    int int = -1;\n    int int = -1;\n    int int = 0;\n    do {\n        long long = long[][int++];\n        if (org.eclipse.jgit.internal.storage.pack.DeltaIndex.(org.eclipse.jgit.internal.storage.pack.DeltaIndex.keyOf(long)) == int) {\n            int int = 0;\n            if (int < int) {\n                int = int - int;\n                int = org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.negmatch(byte[], int, byte[], org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.valOf(long), int);\n            } \n            int int = int + org.eclipse.jgit.internal.storage.pack.DeltaIndex.(org.eclipse.jgit.internal.storage.pack.DeltaIndex.fwdmatch(byte[], int, byte[], org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.valOf(long)));\n            if (int < int) {\n                int = int;\n                int = org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.valOf(long);\n                int = int;\n            } \n        } else if ((org.eclipse.jgit.internal.storage.pack.DeltaIndex.(org.eclipse.jgit.internal.storage.pack.DeltaIndex.keyOf(long)) & (int)) != int)\n            break;\n        \n    } while ((int < 4096) && (int < (long[].int)) );\n    if (int < (org.eclipse.jgit.internal.storage.pack.DeltaIndex.int)) {\n        int = org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.step(int, byte[][int++], byte[][int++]);\n        continue;\n    } \n    int -= int;\n    if (int < int) {\n        int int = int - int;\n        if (!(org.eclipse.jgit.internal.storage.pack.DeltaEncoder.insert(byte[], int, int)))\n            return false;\n        \n    } \n    if (!(org.eclipse.jgit.internal.storage.pack.DeltaEncoder.copy((int - int), int)))\n        return false;\n    \n    int += int;\n    int = int;\n    int = int + (org.eclipse.jgit.internal.storage.pack.DeltaIndex.int);\n    if (int <= int)\n        break;\n    \n    int = org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.hashBlock(byte[], int);\n}"},"status":-1},{"failures":[127,128,129,130,131],"tindex":"3e113bc3-4c41-11e5-82eb-71c125e5717d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleInitCommand:116","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    org.eclipse.jgit.lib.StoredConfig.setString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String);\n"},"status":-1},{"failures":[],"tindex":"3e113bc4-4c41-11e5-82eb-055f6ea4400e","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:200","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.diff.HistogramDiffIndex.int) < int)\n    int = org.eclipse.jgit.diff.HistogramDiffIndex.int;\n"},"variableMap":{"org.eclipse.jgit.diff.HistogramDiffIndex.MAX_CNT":"org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH","newCnt":"org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:443","type":"CtInvocationImpl","sourcecode":"java.io.Writer.write(char[], 0, org.eclipse.jgit.lib.Constants.int)"},"status":-2},{"failures":[132,133,134,135,136,137,138,139,140],"tindex":"3e113bc5-4c41-11e5-82eb-bff814253ced","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:156","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int = 0;\n"},"variableMap":{"nextIn":"endIndex","nextFlg":"endIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:95","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\"/\")) {\n    int--;\n    boolean = true;\n} "},"status":-1},{"failures":[141,142],"tindex":"3e113bc6-4c41-11e5-82eb-a7c91c4bf939","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.NameRevCommand:106","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(((java.lang.Object)(null)))"},"variableMap":{"sb":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:108","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.lib.ObjectId.toString(org.eclipse.jgit.lib.ObjectId))"},"status":-1},{"failures":[],"tindex":"3e1162d7-4c41-11e5-82eb-f316125e59d1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:1105","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectIdRef.getObjectId()"},"variableMap":{"this":"f"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:696","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Ref.getPeeledObjectId()"},"status":0},{"failures":[],"tindex":"3e1162d8-4c41-11e5-82eb-23479f65e0b8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:116","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.internal.storage.dfs.DfsPackFile org.eclipse.jgit.internal.storage.dfs.DfsPackFile : org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getPackFiles())\n    org.eclipse.jgit.internal.storage.dfs.DfsPackFile.org.eclipse.jgit.internal.storage.dfs.DfsPackKey.java.util.concurrent.atomic.AtomicLong.set(0);"},"status":0},{"failures":[143],"tindex":"3e1162d9-4c41-11e5-82eb-671324f8cd2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:227","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String> java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String> : java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.entrySet()) {\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String>.getKey();\n    try {\n        final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId);\n        if (!(org.eclipse.jgit.revwalk.RevCommit.has(org.eclipse.jgit.revwalk.RevFlag))) {\n            org.eclipse.jgit.revwalk.RevCommit.add(org.eclipse.jgit.revwalk.RevFlag);\n            java.util.List<org.eclipse.jgit.revwalk.RevObject>.add(org.eclipse.jgit.revwalk.RevCommit);\n        } \n    } catch (org.eclipse.jgit.errors.MissingObjectException notFound) {\n        java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.put(org.eclipse.jgit.lib.ObjectId, java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String>.getValue());\n    } catch (java.io.IOException err) {\n        throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.Transport.org.eclipse.jgit.transport.URIish , java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.ObjectId.name()) , java.io.IOException);\n    }\n}"},"status":-1},{"failures":[6,32,144,7,45,145,146,147,148,149,150,151,96],"tindex":"3e1162da-4c41-11e5-82eb-d5bf4a1fc566","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:738","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0)"},"status":-1},{"failures":[],"tindex":"3e1162db-4c41-11e5-82eb-f134f15d0aec","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CreateBranchCommand:248","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.StoredConfig org.eclipse.jgit.lib.StoredConfig = org.eclipse.jgit.lib.Repository.getConfig()"},"variableMap":{"repo":"repo"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RenameBranchCommand:151","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.StoredConfig org.eclipse.jgit.lib.StoredConfig = org.eclipse.jgit.lib.Repository.getConfig()"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}