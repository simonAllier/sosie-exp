{"failureDictionary":{"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":26,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withCommitLoadedByDifferentRevWalk":6,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":38,"org.eclipse.jgit.revwalk.RevFlagSetTest.testRemove":16,"org.eclipse.jgit.util.Base64Test.testDecode":21,"org.eclipse.jgit.revwalk.RevFlagSetTest.testContainsAll":11,"org.eclipse.jgit.revwalk.RevObjectTest.testRemoveRevFlagSet":20,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge":5,"org.eclipse.jgit.revwalk.RevFlagSetTest.testContains":12,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":25,"org.eclipse.jgit.revwalk.RevFlagSetTest.testEquals":15,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":45,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches":9,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":43,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":2,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":10,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":30,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":37,"org.eclipse.jgit.revwalk.RevFlagSetTest.testAddTwo":14,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":34,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":35,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.oneCommit":8,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":32,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":33,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":3,"org.eclipse.jgit.revwalk.RevObjectTest.testAddRevFlagSet":17,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":29,"org.eclipse.jgit.revwalk.RevObjectTest.testHasAllFlag":18,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":31,"org.eclipse.jgit.util.Base64Test.testEncodeMatchesDecode":22,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":27,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":24,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":40,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":41,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":42,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":1,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":39,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":23,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":36,"org.eclipse.jgit.revwalk.RevObjectTest.testHasAnyFlag":19,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":46,"org.eclipse.jgit.revwalk.RevFlagSetTest.testAddOne":13,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":44,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits":7,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":28,"org.eclipse.jgit.api.CleanCommandTest.testClean":0},"transformations":[{"failures":[],"tindex":"87db9fee-4c75-11e5-be52-3b7359ea90bc","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:821","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    final byte byte = byte[][int];\n    if ((org.eclipse.jgit.util.RawParseUtils.byte[][byte]) == 0) {\n        if (byte == ':')\n            return int;\n        \n        return -1;\n    } \n    int++;\n}"},"variableMap":{"org.eclipse.jgit.util.RawParseUtils.footerLineKeyChars":"destination","raw":"org.eclipse.jgit.util.Base64.DEC","ptr":"destOffset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.Base64:218","type":"CtIfImpl","sourcecode":"if ((byte[][(int + 2)]) == (org.eclipse.jgit.util.Base64.byte)) {\n    int int = (((org.eclipse.jgit.util.Base64.byte[][byte[][int]]) & 255) << 18) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 1)]]) & 255) << 12);\n    byte[][int] = ((byte)(int >>> 16));\n    return 1;\n} else if ((byte[][(int + 3)]) == (org.eclipse.jgit.util.Base64.byte)) {\n    int int = ((((org.eclipse.jgit.util.Base64.byte[][byte[][int]]) & 255) << 18) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 1)]]) & 255) << 12)) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 2)]]) & 255) << 6);\n    byte[][int] = ((byte)(int >>> 16));\n    byte[][(int + 1)] = ((byte)(int >>> 8));\n    return 2;\n} else {\n    int int = (((((org.eclipse.jgit.util.Base64.byte[][byte[][int]]) & 255) << 18) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 1)]]) & 255) << 12)) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 2)]]) & 255) << 6)) | ((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 3)]]) & 255);\n    byte[][int] = ((byte)(int >> 16));\n    byte[][(int + 1)] = ((byte)(int >> 8));\n    byte[][(int + 2)] = ((byte)(int));\n    return 3;\n}"},"status":-2},{"failures":[],"tindex":"87dbee0f-4c75-11e5-be52-8ba5dc62d8ad","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:386","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.eclipse.jgit.revwalk.RevWalk.int"},"variableMap":{"flags":"slash","org.eclipse.jgit.revwalk.RevWalk.SEEN":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:287","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.lib.Tree.org.eclipse.jgit.lib.Tree.binarySearch(org.eclipse.jgit.lib.TreeEntry[], byte[], byte, int, int)"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"87dd2590-4c75-11e5-be52-edbb79c9a749","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CleanCommand:99","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.TreeSet<java.lang.String>(org.eclipse.jgit.api.Status.getUntracked())"},"variableMap":{"status":"status"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CleanCommand:101","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.TreeSet<java.lang.String>(org.eclipse.jgit.api.Status.getUntrackedFolders())"},"status":-1},{"failures":[],"tindex":"87dd2591-4c75-11e5-be52-d5a9a88deae7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:339","type":"CtIfImpl","sourcecode":"if (int < (int))\n    return (int) + ((int ^ (int)) & 1);\nelse if (int > (int))\n    return (int) - ((int ^ (int)) & 1);\n"},"variableMap":{"maxK":"ptr","minK":"ptr","k":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:413","type":"CtIfImpl","sourcecode":"if ((byte[][int++]) == char)\n    return int;\n"},"status":-2},{"failures":[5,6,7,8,9,10],"tindex":"87dd2592-4c75-11e5-be52-d9a057a7ab3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalkUtils:175","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref)"},"status":-1},{"failures":[],"tindex":"87de0ff3-4c75-11e5-be52-4f4ba86a7169","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:664","type":"CtInvocationImpl","sourcecode":"java.lang.System.runFinalization()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:867","type":"CtIfImpl","sourcecode":"if (java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.compareAndSet(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.set(int, org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef)))\n    java.util.concurrent.atomic.AtomicInteger.incrementAndGet();\n"},"status":0},{"failures":[],"tindex":"87de0ff4-4c75-11e5-be52-c3bc48367378","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AnyObjectId:408","type":"CtLocalVariableImpl","sourcecode":"int int = int + 7"},"variableMap":{"p":"org.eclipse.jgit.lib.Constants.OBJ_BAD"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:710","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.lib.Constants.int"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20],"tindex":"87de0ff5-4c75-11e5-be52-afa5f28b162d","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:1180","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == (int - 1)))\n    return false;\n"},"variableMap":{"len":"mask","i":"mask"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevFlagSet:107","type":"CtIfImpl","sourcecode":"if (((int) & (org.eclipse.jgit.revwalk.RevFlag.int)) != 0)\n    return false;\n"},"status":-1},{"failures":[21,22],"tindex":"87de3706-4c75-11e5-be52-817753540cdb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.URIish:256","type":"CtReturnImpl","sourcecode":"return ((org.eclipse.jgit.util.RawParseUtils.parseHexInt4(byte)) << 4) | (org.eclipse.jgit.util.RawParseUtils.parseHexInt4(byte))"},"variableMap":{"c1":"org.eclipse.jgit.util.Base64.EQUALS_SIGN","c2":"org.eclipse.jgit.util.Base64.EQUALS_SIGN"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.Base64:226","type":"CtIfImpl","sourcecode":"if ((byte[][(int + 3)]) == (org.eclipse.jgit.util.Base64.byte)) {\n    int int = ((((org.eclipse.jgit.util.Base64.byte[][byte[][int]]) & 255) << 18) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 1)]]) & 255) << 12)) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 2)]]) & 255) << 6);\n    byte[][int] = ((byte)(int >>> 16));\n    byte[][(int + 1)] = ((byte)(int >>> 8));\n    return 2;\n} else {\n    int int = (((((org.eclipse.jgit.util.Base64.byte[][byte[][int]]) & 255) << 18) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 1)]]) & 255) << 12)) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 2)]]) & 255) << 6)) | ((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 3)]]) & 255);\n    byte[][int] = ((byte)(int >> 16));\n    byte[][(int + 1)] = ((byte)(int >> 8));\n    byte[][(int + 2)] = ((byte)(int));\n    return 3;\n}"},"status":-1},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"87de5e17-4c75-11e5-be52-9d538617063f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.MergeResult:136","type":"CtReturnImpl","sourcecode":"return \"Merged-squashed\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:263","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"87de8528-4c75-11e5-be52-712119631067","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:229","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.pack.ObjectToPack.isEdge()) {\n    org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaBase(org.eclipse.jgit.internal.storage.pack.ObjectToPack.copy());\n} else {\n    org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaBase(org.eclipse.jgit.internal.storage.pack.ObjectToPack);\n}"},"variableMap":{"srcObj":"noteOn","resObj":"noteOn"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMap:367","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.notes.NoteMap.set(org.eclipse.jgit.lib.AnyObjectId, null)"},"status":-2},{"failures":[],"tindex":"87de8529-4c75-11e5-be52-c7651acf7d80","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:408","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.blame.BlameGenerator.(find(org.eclipse.jgit.blame.ReverseWalk.ReverseCommit, org.eclipse.jgit.treewalk.filter.PathFilter)))\n    return this;\n"},"variableMap":{"result":"sourceBlob","this":"this","resultPath":"resultPath"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:319","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.ObjectLoader.getType()) == (org.eclipse.jgit.lib.Constants.int)) {\n    if (java.lang.String == null)\n        java.lang.String = org.eclipse.jgit.internal.JGitText.get().java.lang.String;\n    \n    org.eclipse.jgit.blame.Candidate.BlobCandidate org.eclipse.jgit.blame.Candidate.BlobCandidate = new org.eclipse.jgit.blame.Candidate.BlobCandidate(java.lang.String , org.eclipse.jgit.treewalk.filter.PathFilter);\n    org.eclipse.jgit.blame.Candidate.BlobCandidate.org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.AnyObjectId.toObjectId();\n    org.eclipse.jgit.blame.Candidate.BlobCandidate.org.eclipse.jgit.diff.RawText = new org.eclipse.jgit.diff.RawText(org.eclipse.jgit.lib.ObjectLoader.getCachedBytes(java.lang.Integer.int));\n    org.eclipse.jgit.blame.Candidate.BlobCandidate.org.eclipse.jgit.blame.Region = new org.eclipse.jgit.blame.Region(0 , 0 , org.eclipse.jgit.blame.Candidate.BlobCandidate.org.eclipse.jgit.diff.RawText.size());\n    int = org.eclipse.jgit.blame.Candidate.BlobCandidate.org.eclipse.jgit.diff.RawText.size();\n    org.eclipse.jgit.blame.BlameGenerator.push(org.eclipse.jgit.blame.Candidate.BlobCandidate);\n    return this;\n} "},"status":-2},{"failures":[],"tindex":"87deac3a-4c75-11e5-be52-01c734d5aee4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RevertCommand:139","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit"},"variableMap":{"newHead":"p","headCommit":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RewriteGenerator:149","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit[][0]"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":13,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}