{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":23,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":76,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":33,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":92,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtStart":45,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":68,"org.eclipse.jgit.lib.IndexDiffTest.testModified":105,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":82,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":35,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":6,"org.eclipse.jgit.merge.MergeAlgorithmTest.testDeleteVsModify":54,"org.eclipse.jgit.merge.MergeAlgorithmTest.testNoAgainstOneModification":55,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":93,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":104,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":69,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":28,"org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits":12,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":8,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":90,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtEnd":43,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2":96,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":14,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":73,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":38,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testNameOnlyMatches":95,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":11,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":30,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":77,"org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify":50,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":83,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSameModification":52,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":16,"org.eclipse.jgit.diff.RawTextTest.testWriteLine1":65,"org.eclipse.jgit.diff.RawTextTest.testWriteLine3":66,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":47,"org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified":99,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext0":57,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":91,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":84,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext1":58,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":25,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":18,"org.eclipse.jgit.lib.T0002_TreeTest.test007_manyFileLookup":100,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":7,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":24,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":29,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testEmpty1":62,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":80,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting2":0,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":85,"org.eclipse.jgit.lib.T0002_TreeTest.test008_SubtreeInternalSorting":101,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":26,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testParentDirectoryGitIgnores":94,"org.eclipse.jgit.merge.MergeAlgorithmTest.testEmptyTexts":42,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":71,"org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption":97,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":13,"org.eclipse.jgit.lib.IndexDiffTest.testRemoved":106,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":10,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":19,"org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications":49,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":87,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":22,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":36,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext3":59,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":15,"org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications":53,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext5":60,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":86,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":70,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":72,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":17,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting5":1,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting6":2,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting7":3,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting8":4,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":81,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":9,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":20,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":27,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":48,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext100":56,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":89,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":37,"org.eclipse.jgit.lib.T0002_TreeTest.test006_addDeepTree":102,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":32,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications":51,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":78,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":67,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoNonConflictingModifications":44,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":21,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames4":5,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":103,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":74,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext10":61,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":88,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":41,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":75,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test012_SubtreeExternalSorting":98,"org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch":34,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked":39,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":40,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSeperateModifications":46,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":79,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine1":63,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine2":64,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":31},"transformations":[{"failures":[],"tindex":"d91279e3-4c41-11e5-a62f-fda19dd71424","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:674","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.lib.PersonIdent = org.eclipse.jgit.lib.PersonIdent"},"variableMap":{"author":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.PersonIdent:162","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.PersonIdent.this(java.lang.String, java.lang.String, long, org.eclipse.jgit.util.SystemReader.getInstance().getTimezone(long))"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"d912a0f4-4c41-11e5-a62f-038925b90811","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.NB:81","type":"CtReturnImpl","sourcecode":"return int | ((byte[][(int + 1)]) & 255)"},"variableMap":{"r":"aMode","offset":"aMode","intbuf":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:302","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.lastPathChar(int)) - ((byte[][int]) & 255)"},"status":-1},{"failures":[],"tindex":"d912c805-4c41-11e5-a62f-5bf0cb3d98ee","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1129","type":"CtLocalVariableImpl","sourcecode":"java.util.List<org.eclipse.jgit.revwalk.RevCommit> java.util.List<org.eclipse.jgit.revwalk.RevCommit> = new java.util.ArrayList<org.eclipse.jgit.revwalk.RevCommit>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashListCommand:97","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.eclipse.jgit.revwalk.RevCommit> java.util.List<org.eclipse.jgit.revwalk.RevCommit> = new java.util.ArrayList<org.eclipse.jgit.revwalk.RevCommit>(java.util.Collection<org.eclipse.jgit.lib.ReflogEntry>.size())"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"d912c806-4c41-11e5-a62f-d38250e69ddb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:196","type":"CtIfImpl","sourcecode":"if (0 <= int)\n    int = int;\nelse\n    break;\n"},"variableMap":{"s":"i","cr":"m"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:593","type":"CtIfImpl","sourcecode":"if ((char[][int]) == '}') {\n    java.lang.String = new java.lang.String(char[] , (int + 2) , ((int - int) - 2));\n    break;\n} "},"status":-1},{"failures":[],"tindex":"d912ef17-4c41-11e5-a62f-e3fc465dece7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommit:122","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    if (!(org.eclipse.jgit.revplot.PlotCommit.getId().equals(org.eclipse.jgit.revplot.PlotCommit[][0].getId())))\n        org.eclipse.jgit.revplot.PlotCommit[] = new org.eclipse.jgit.revplot.PlotCommit[]{ org.eclipse.jgit.revplot.PlotCommit[][0] , org.eclipse.jgit.revplot.PlotCommit };\n    \n} else {\n    for (org.eclipse.jgit.revplot.PlotCommit org.eclipse.jgit.revplot.PlotCommit : org.eclipse.jgit.revplot.PlotCommit[])\n        if (org.eclipse.jgit.revplot.PlotCommit.getId().equals(org.eclipse.jgit.revplot.PlotCommit.getId()))\n            return ;\n        \n    final org.eclipse.jgit.revplot.PlotCommit[] org.eclipse.jgit.revplot.PlotCommit[] = new org.eclipse.jgit.revplot.PlotCommit[int + 1];\n    java.lang.System.arraycopy(org.eclipse.jgit.revplot.PlotCommit[], 0, org.eclipse.jgit.revplot.PlotCommit[], 0, int);\n    org.eclipse.jgit.revplot.PlotCommit[][int] = org.eclipse.jgit.revplot.PlotCommit;\n    org.eclipse.jgit.revplot.PlotCommit[] = org.eclipse.jgit.revplot.PlotCommit[];\n}"},"status":0},{"failures":[],"tindex":"d912ef18-4c41-11e5-a62f-7f812fb9c89f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:556","type":"CtForImpl","sourcecode":"for (int = int + 1 ; int < (char[].int) ; ++int) {\n    if (!(java.lang.Character.isDigit(char[][int])))\n        break;\n    \n}"},"status":-2},{"failures":[37,38,39,40,41],"tindex":"d912ef19-4c41-11e5-a62f-b14b801448c5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportSftp:422","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new org.eclipse.jgit.errors.TransportException((\"Empty ref: \" + java.lang.String));\n"},"variableMap":{"line":"refName","name":"refName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:648","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef = org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(null, java.lang.String);\n    if ((org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef == null) || (org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.isSymbolic()))\n        continue;\n    \n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(java.lang.String);\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.getObjectId();\n    if ((org.eclipse.jgit.lib.ObjectId != null) && (org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.lib.Ref.getObjectId()))) {\n        org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>;\n        org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>;\n        do {\n            org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.get();\n            int int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.find(java.lang.String);\n            if (int < 0)\n                break;\n            \n            org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.remove(int);\n        } while (!(java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.compareAndSet(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>)) );\n        int int = org.eclipse.jgit.internal.storage.file.RefDirectory.(org.eclipse.jgit.internal.storage.file.RefDirectory.levelsIn(java.lang.String)) - 2;\n        org.eclipse.jgit.internal.storage.file.RefDirectory.org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(java.lang.String), int);\n    } \n} finally {\n    org.eclipse.jgit.internal.storage.file.LockFile.unlock();\n}"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,8,25,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"d913162a-4c41-11e5-a62f-a32870f2872c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RefList:212","type":"CtInvocationImpl","sourcecode":"java.lang.Math.max(16, int)"},"variableMap":{"n":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RawText:141","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[94,95],"tindex":"d913162b-4c41-11e5-a62f-792e70a13288","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:197","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.String java.lang.String = java.lang.String[][int];\n    if ((java.lang.String.length()) == 0)\n        continue;\n    \n    if ((java.lang.String.equals(java.lang.String)) && org.eclipse.jgit.ignore.IgnoreRule.(doesMatchDirectoryExpectations(boolean, int, java.lang.String[].int)))\n        return true;\n    \n}"},"status":-1},{"failures":[],"tindex":"d913162c-4c41-11e5-a62f-9f32b2a0d234","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.TreeWalk:561","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk.skipEntriesEqual()"},"variableMap":{"this":"treeWalk"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:445","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = org.eclipse.jgit.treewalk.TreeWalk.getPathString();\n    org.eclipse.jgit.lib.IndexDiff.addConflict(java.lang.String, int);\n    continue;\n} "},"status":-2},{"failures":[96],"tindex":"d913162d-4c41-11e5-a62f-878fd3e8ae35","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1232","type":"CtOperatorAssignmentImpl","sourcecode":"int |= (org.eclipse.jgit.revwalk.RevWalk.int) | (int)"},"variableMap":{"retainOnReset":"dstIdx","org.eclipse.jgit.revwalk.RevWalk.PARSED":"dstIdx","retainFlags":"dstKey"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:266","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.keyOf(long[][int])"},"status":-1},{"failures":[],"tindex":"d9133d3e-4c41-11e5-a62f-f3317c958813","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:408","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.diff.SimilarityRenameDetector.int) - int"},"variableMap":{"v":"idx","org.eclipse.jgit.diff.SimilarityRenameDetector.INDEX_MASK":"idx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:310","type":"CtReturnImpl","sourcecode":"return ((org.eclipse.jgit.diff.HashedSequenceComparator<S>.hash(org.eclipse.jgit.diff.HashedSequence<S>, int)) * -1640562687) >>> (int)"},"status":-2},{"failures":[],"tindex":"d9133d3f-4c41-11e5-a62f-3f627483adad","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameResult:336","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.PersonIdent org.eclipse.jgit.lib.PersonIdent = org.eclipse.jgit.blame.BlameGenerator.getSourceCommitter()"},"variableMap":{"gen":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.PersonIdent:242","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.PersonIdent org.eclipse.jgit.lib.PersonIdent = ((org.eclipse.jgit.lib.PersonIdent)(java.lang.Object))"},"status":-2},{"failures":[97,98,99,100,101,102,103,104,105,106],"tindex":"d9133d40-4c41-11e5-a62f-cfb31dfa5cda","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:363","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    return int;\n} "},"variableMap":{"eol":"mid","sp":"mid"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:158","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int + 1;\nelse if (int == 0)\n    return int;\nelse\n    int = int;\n"},"status":-1},{"failures":[],"tindex":"d9133d41-4c41-11e5-a62f-37ed7f7efb82","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DateRevQueue:139","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.DateRevQueue.freeEntry(org.eclipse.jgit.revwalk.DateRevQueue.Entry)"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}