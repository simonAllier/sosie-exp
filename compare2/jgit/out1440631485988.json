{"failureDictionary":{"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBackslash":109,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":69,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":43,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":146,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":2,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":52,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":18,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.test2AlphaGroupsCase0":102,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":10,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":22,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSimpleStarCase3":108,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":19,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSimpleStarCase2":107,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSimpleStarCase1":106,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":53,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":73,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":33,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":24,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":135,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":136,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritPreferredAuthentications":125,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":130,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":58,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":143,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase7":95,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":64,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123":74,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":30,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":75,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":150,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":140,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":51,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":72,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":3,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoGroupsCase1":105,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoGroupsCase0":104,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":134,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":54,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":62,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":0,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":20,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":4,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":129,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testNameOnlyMatches":122,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":132,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":41,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":40,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":8,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":70,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":85,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":131,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":23,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":15,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":39,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":38,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":79,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":138,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":68,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":145,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":49,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":25,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":37,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBracket4":118,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":31,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testFileNameWildcards":120,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":142,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritBatchMode":123,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":56,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":133,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":36,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":17,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":66,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":34,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":9,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834":84,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":21,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":93,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":26,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":149,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCreateMatcherForSuffix":99,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":6,"org.eclipse.jgit.attributes.AttributesMatcherTest.testTargetWithoutLeadingSlash":127,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testParentDirectoryGitIgnores":119,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":45,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMultipleEscapedCharacters1":103,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleWildCardCase2":96,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":148,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":77,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimplePatternCase2":101,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":50,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":47,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":46,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":60,"org.eclipse.jgit.util.RefListTest.testCopyLeadingPrefix":94,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyFails":78,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testReset":100,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":5,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":28,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testIncompleteRangesInOneGroupCase2":111,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testIncompleteRangesInOneGroupCase0":110,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleStarCase2":117,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":141,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":80,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":90,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCopyConstructor":97,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":89,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":86,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":88,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":27,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":87,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":139,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":13,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":59,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":61,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":137,"org.eclipse.jgit.attributes.AttributesMatcherTest.testFileNameWildcards":126,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":7,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":55,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":42,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":151,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":76,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":81,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsInherit":124,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch":82,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":14,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":57,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":91,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":92,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":83,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":1,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testFilePathSimpleCase":98,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":29,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":63,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":35,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":65,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testTargetWithoutLeadingSlash":121,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase1":113,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase0":112,"org.eclipse.jgit.attributes.AttributesMatcherTest.testNameOnlyMatches":128,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":147,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":12,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":11,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":67,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":71,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":144,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":32,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":16,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase3":115,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":44,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase2":114,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase4":116},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"a341ccd6-4c49-11e5-9de0-679e53ec5fd4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.StashApplyCommand:224","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"stashed HEAD\" , \"HEAD\" , \"untracked files\" })"},"variableMap":{"untrackedMerger":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:611","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>)"},"status":-1},{"failures":[],"tindex":"a341f3e7-4c49-11e5-9de0-136cc3e22de9","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:229","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevCommit[].int) != 1) {\n    if (int == (org.eclipse.jgit.revwalk.RevCommit.int))\n        return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.RevCommit);\n    \n    for (int int = 1 ; int < (org.eclipse.jgit.revwalk.RevCommit[].int) ; int++) {\n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit[][int];\n        if (((org.eclipse.jgit.revwalk.RevCommit.int) & int) == int)\n            continue;\n        \n        org.eclipse.jgit.revwalk.RevCommit.int |= int;\n        org.eclipse.jgit.revwalk.FIFORevQueue org.eclipse.jgit.revwalk.FIFORevQueue = org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.carryFlags1(org.eclipse.jgit.revwalk.RevCommit, int, (int + 1));\n        if (org.eclipse.jgit.revwalk.FIFORevQueue != null)\n            return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.FIFORevQueue, int, org.eclipse.jgit.revwalk.RevCommit[], (int + 1));\n        \n    }\n} "},"variableMap":{"pList":"parents","org.eclipse.jgit.revwalk.RevCommit.STACK_DEPTH":"depth","depth":"carry","c":"c","length":"carry","flags":"length","this":"c","carry":"flags"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:225","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    org.eclipse.jgit.revwalk.RevCommit[] org.eclipse.jgit.revwalk.RevCommit[] = org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit[];\n    if ((org.eclipse.jgit.revwalk.RevCommit[] == null) || ((org.eclipse.jgit.revwalk.RevCommit[].int) == 0))\n        return null;\n    \n    if ((org.eclipse.jgit.revwalk.RevCommit[].int) != 1) {\n        if (int == (org.eclipse.jgit.revwalk.RevCommit.int))\n            return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.RevCommit);\n        \n        for (int int = 1 ; int < (org.eclipse.jgit.revwalk.RevCommit[].int) ; int++) {\n            org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit[][int];\n            if (((org.eclipse.jgit.revwalk.RevCommit.int) & int) == int)\n                continue;\n            \n            org.eclipse.jgit.revwalk.RevCommit.int |= int;\n            org.eclipse.jgit.revwalk.FIFORevQueue org.eclipse.jgit.revwalk.FIFORevQueue = org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.carryFlags1(org.eclipse.jgit.revwalk.RevCommit, int, (int + 1));\n            if (org.eclipse.jgit.revwalk.FIFORevQueue != null)\n                return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.FIFORevQueue, int, org.eclipse.jgit.revwalk.RevCommit[], (int + 1));\n            \n        }\n    } \n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit[][0];\n    if (((org.eclipse.jgit.revwalk.RevCommit.int) & int) == int)\n        return null;\n    \n    org.eclipse.jgit.revwalk.RevCommit.int |= int;\n}"},"status":-2},{"failures":[],"tindex":"a3421af8-4c49-11e5-9de0-8d63b898d761","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:187","type":"CtIfImpl","sourcecode":"if ((int & 16) != 0)\n    int = (byte[][int++]) & 255;\n"},"variableMap":{"deltaPtr":"pathLen","copySize":"pathLen","delta":"path","cmd":"pathLen"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:173","type":"CtIfImpl","sourcecode":"if ((byte[][((int) - 1)]) != '/')\n    byte[][(int)++] = '/';\n"},"status":0},{"failures":[],"tindex":"a3421af9-4c49-11e5-9de0-bb0208460c17","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1329","type":"CtIfImpl","sourcecode":"if (int == 0)\n    int = java.lang.Runtime.getRuntime().availableProcessors();\n"},"variableMap":{"threads":"slot"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:460","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry = new org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry(org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.clean(org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry) , org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref<T>);\n    if (java.util.concurrent.atomic.AtomicReferenceArray<org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry>.compareAndSet(int, org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry, org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry))\n        break;\n    \n    org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry = java.util.concurrent.atomic.AtomicReferenceArray<org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry>.get(int);\n}"},"status":0},{"failures":[71,72,73,74,75,76,77,78,79,80],"tindex":"a3421afa-4c49-11e5-9de0-57a30c88a06d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:277","type":"CtIfImpl","sourcecode":"if (int != (org.eclipse.jgit.internal.storage.pack.DeltaEncoder.int)) {\n    if ((byte = ((byte)(int & 255))) != 0) {\n        int |= 16;\n        byte[][int++] = byte;\n    } \n    if ((byte = ((byte)((int >>> 8) & 255))) != 0) {\n        int |= 32;\n        byte[][int++] = byte;\n    } \n    if ((byte = ((byte)((int >>> 16) & 255))) != 0) {\n        int |= 64;\n        byte[][int++] = byte;\n    } \n} "},"status":-1},{"failures":[],"tindex":"a3421afb-4c49-11e5-9de0-f324510ac42f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashListCommand:84","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Repository.getRef(org.eclipse.jgit.lib.Constants.java.lang.String)) == null)\n    return java.util.Collections.emptyList();\n"},"status":-2},{"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"a342420c-4c49-11e5-9de0-0bbb584e30ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefList:213","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.RefList.Builder<T>.addAll(org.eclipse.jgit.lib.Ref[], 0, int)"},"status":-1},{"failures":[],"tindex":"a342420d-4c49-11e5-9de0-e3a5e6c6f32c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:334","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= 4"},"status":0},{"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"tindex":"a342420e-4c49-11e5-9de0-277f354a7de2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.fnmatch.AbstractHead:70","type":"CtAssignmentImpl","sourcecode":"this.java.util.List<org.eclipse.jgit.fnmatch.Head> = java.util.List<org.eclipse.jgit.fnmatch.Head>"},"variableMap":{"newHeads":"heads"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:332","type":"CtAssignmentImpl","sourcecode":"java.util.List<org.eclipse.jgit.fnmatch.Head> = java.util.List<org.eclipse.jgit.fnmatch.Head>"},"status":-1},{"failures":[126,127,128],"tindex":"a342420f-4c49-11e5-9de0-d1fdac8fc4d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:339","type":"CtIfImpl","sourcecode":"if (boolean)\n    org.eclipse.jgit.ignore.internal.Strings.org.eclipse.jgit.ignore.internal.Strings.setNext(char[], char);\nelse\n    java.lang.StringBuilder.append(char);\n"},"status":-1},{"failures":[129,130,131,132,71,133,72,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150],"tindex":"a3424210-4c49-11e5-9de0-c54b2a786ce4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:129","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult)"},"status":-1},{"failures":[151],"tindex":"a3424211-4c49-11e5-9de0-8f3794f8712f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:130","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"variableMap":{"tokenBegin":"modeB"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:492","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.merge.ResolveMerger.mergeFileModes(int, int, int)"},"status":-1},{"failures":[],"tindex":"a3426922-4c49-11e5-9de0-c321c73228b4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:141","type":"CtIfImpl","sourcecode":"if (boolean)\n    break;\n"},"variableMap":{"eof":"flush"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.Merger:204","type":"CtIfImpl","sourcecode":"if (boolean && boolean)\n    org.eclipse.jgit.lib.ObjectInserter.flush();\n"},"status":-2},{"failures":[],"tindex":"a3426923-4c49-11e5-9de0-91b73edbe192","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.CachedObjectDirectory:99","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) != 2)\n    continue;\n"},"variableMap":{"d":"corruptObjectBadStream"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:241","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    int int;\n    try {\n        int = java.util.zip.Inflater.inflate(byte[]);\n    } catch (java.util.zip.DataFormatException e) {\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    }\n    if (int != 0)\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    if (java.util.zip.Inflater.finished()) {\n        if (((java.util.zip.Inflater.getRemaining()) != 0) || ((java.io.InputStream.read()) != (-1)))\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        break;\n    } \n    if (!(java.util.zip.Inflater.needsInput()))\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    int = java.io.InputStream.read(byte[]);\n    if (int <= 0)\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    java.util.zip.Inflater.setInput(byte[], 0, int);\n}"},"status":-2},{"failures":[],"tindex":"a3426924-4c49-11e5-9de0-7fbdb94e9e0b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RefWriter:151","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref.getStorage().isPacked()) && (org.eclipse.jgit.lib.Ref.isPeeled())) {\n    boolean = true;\n    break;\n} "},"variableMap":{"r":"res","peeled":"sizeIsValid"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:207","type":"CtIfImpl","sourcecode":"if (0 <= (int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.find(java.lang.String))) {\n    org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(java.lang.String);\n    org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.remove(int);\n    boolean = false;\n} "},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}