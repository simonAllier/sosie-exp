{"failureDictionary":{"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":489,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":535,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":534,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":611,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchNone":140,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":479,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":375,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":1,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":351,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":31,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":310,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":378,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":584,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":206,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":6,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":284,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":317,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob":114,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_Negate_ALL":146,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":27,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":172,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors2":78,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":263,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":365,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors1":77,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit":285,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":427,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":103,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":649,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":540,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":672,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":49,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":60,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":453,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpr":210,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":644,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":278,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk":231,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":496,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":602,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":74,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_And_NONE":156,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":643,"org.eclipse.jgit.merge.CherryPickTest.testRevert":513,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":594,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":289,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":539,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":348,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":624,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":327,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge":89,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":302,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":498,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":641,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":640,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":589,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEmpty_NoMatch":141,"org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges":456,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":608,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":417,"org.eclipse.jgit.api.BranchCommandTest.testDelete":548,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":24,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":604,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":196,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":732,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent":253,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":733,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":281,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":610,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad":223,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":447,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":731,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":288,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":434,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1":235,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":598,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":454,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":401,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":533,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePath":239,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":491,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindowsOnUnix":221,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":330,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":318,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":412,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":478,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":538,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":370,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":666,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathSecondCheckout":222,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches":91,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":403,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows":243,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":428,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":18,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified":282,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":467,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":180,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":93,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":536,"org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits":177,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":444,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":92,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting":135,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":736,"org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindNextOffset":759,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":737,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":36,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":738,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":35,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":266,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":419,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":590,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":734,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":14,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":53,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":735,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":625,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":711,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":3,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":713,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":552,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":682,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":712,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":56,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":715,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":51,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":683,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":714,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":432,"org.eclipse.jgit.api.GitConstructionTest.testClose":170,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1":112,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_MY_ALL":154,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":400,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":113,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_REVERSE":129,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testNone":86,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":39,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":33,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":406,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":248,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":202,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":350,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly":383,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":43,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":367,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":502,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1":98,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":100,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6":99,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":544,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":665,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":681,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":413,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":187,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":546,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches":272,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":268,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgLpt1":240,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":564,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":739,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":740,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":557,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":741,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":632,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":613,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow":107,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkTwoLevels":228,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":68,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_MY_ALL":152,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":482,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":707,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":706,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":182,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":709,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":708,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":710,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":324,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":422,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":549,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":435,"org.eclipse.jgit.notes.NoteMapTest.testEditFlat":485,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":655,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":71,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":601,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":617,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":527,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":69,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case":220,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":642,"org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter":102,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":54,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":677,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":755,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":754,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":756,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2":225,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitsEmptyTree":116,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1":224,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":753,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":752,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":571,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":511,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":328,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADSOnUnix":229,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter":96,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":551,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":290,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod":130,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":381,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":301,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":472,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":189,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":8,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":163,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":313,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":331,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":703,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":542,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":705,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO":128,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":704,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":530,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":547,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":600,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":4,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":265,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":50,"org.eclipse.jgit.revwalk.RevWalkMergedIntoTest.testOldCommitWalk":75,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":556,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":508,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":267,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":306,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":658,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":44,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":396,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":596,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":388,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter":83,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":384,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":531,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":259,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":421,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":670,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":190,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":299,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":582,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":458,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":583,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":277,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":307,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":581,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2":136,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":673,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":398,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":440,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":639,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":34,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":580,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":167,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":165,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes":503,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":680,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":572,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_Default":123,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":193,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":366,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":486,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":701,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":700,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":312,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":631,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":28,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":702,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":45,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":614,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":630,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":349,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":63,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":429,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":186,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeleted":300,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1OnUnix":244,"org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree":178,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkForNormalCase":117,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC":124,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":374,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":247,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad":230,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testSimple1":142,"org.eclipse.jgit.api.GitConstructionTest.testWrap":47,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":55,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":40,"org.eclipse.jgit.api.TagCommandTest.testTagging":338,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":501,"org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption":115,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":387,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":70,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":526,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":684,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":430,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":559,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":386,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":246,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs":495,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2":82,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":574,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":468,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":309,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case":219,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":344,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":537,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":164,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":347,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":603,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase2":85,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase1":84,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":621,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":648,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":697,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter0":95,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":271,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":391,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":480,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":699,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":57,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":698,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":615,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict":504,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":555,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":287,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":652,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":66,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":716,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":718,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":717,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":720,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout":433,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":586,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":719,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":510,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":26,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":493,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":174,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":326,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":470,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":72,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":505,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":329,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":159,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":431,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":653,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":363,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":620,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":629,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":691,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":358,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat":494,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":405,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":651,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":2,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchAll":143,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":490,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":686,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":311,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":687,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":585,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":688,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":689,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":628,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":690,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":352,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":545,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":695,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":694,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":696,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":515,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case":218,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":609,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":541,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":377,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":332,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":662,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":359,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":634,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":450,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL":157,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":623,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross":88,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":436,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_NONE":144,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTags":254,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":565,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":389,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEmpty_EmptyTree":131,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":251,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":424,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":171,"org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38":487,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":73,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2":214,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows3":215,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":678,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":280,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":315,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent":497,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":184,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":201,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":314,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":612,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":58,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive":296,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":693,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":692,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":668,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":274,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":570,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible":408,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroOnSameCommit":122,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":64,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderIgnored":295,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":457,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":13,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":197,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkSecondCheckout":238,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon":209,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":291,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":279,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":393,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":669,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":529,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":654,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":41,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":553,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":52,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":528,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3":81,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":392,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithZeroAsEnd":121,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":200,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1":79,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2":80,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":194,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":286,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":660,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":169,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":308,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":576,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows":242,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":292,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":198,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":304,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":605,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOk":208,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting":139,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix":217,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":588,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":7,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_And_NONE":155,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":38,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":569,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":199,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":204,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":362,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":346,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":500,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":637,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath":258,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":191,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2":237,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":294,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":298,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1":236,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":402,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":37,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":342,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":519,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":587,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":466,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":25,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":525,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":471,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":664,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":663,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":42,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE":145,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":337,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":207,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":595,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":316,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter":158,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":554,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":111,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":395,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgDotCon":211,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":336,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":249,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":371,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":409,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":176,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":475,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent":257,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":476,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":5,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":593,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":260,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":599,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":726,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":483,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":29,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":730,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":105,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":729,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":728,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":727,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":520,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder2":126,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":373,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":521,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":650,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder1":125,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":162,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":656,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":410,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":671,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":0,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":443,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderUntracked":297,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":276,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":19,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":445,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":185,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithoutCommonAncestor":120,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":181,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE":127,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":420,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":195,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":591,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":205,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":188,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":415,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":455,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth2":109,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth3":110,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":397,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":645,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":568,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":372,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":356,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":355,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":48,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":437,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":469,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":618,"org.eclipse.jgit.notes.NoteMapMergerTest.testDeleteDifferentNotes":499,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix":213,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat":446,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":573,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":261,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommitted":275,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows":232,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":305,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":283,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":22,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":517,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":661,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":514,"org.eclipse.jgit.api.BlameCommandTest.testRename":474,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits":179,"org.eclipse.jgit.notes.NoteMapTest.testGetCachedBytes":488,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":619,"org.eclipse.jgit.notes.NoteMapMergerTest.testNoChange":509,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":360,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":425,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":721,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":722,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":723,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":724,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":65,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":725,"org.eclipse.jgit.api.FetchCommandTest.testFetch":340,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":606,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":638,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":390,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":61,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":746,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":166,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":742,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":506,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":743,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":203,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":744,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1":227,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":745,"org.eclipse.jgit.notes.NoteMapTest.testReadFlatTwoNotes":484,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":524,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":635,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":62,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":676,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix":216,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":522,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":369,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":473,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow":106,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":465,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":646,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_Or_NONE":150,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":426,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":183,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":270,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":416,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":264,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":11,"org.eclipse.jgit.api.PushCommandTest.testPush":441,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":647,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":563,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":675,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":15,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":67,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":104,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_ALL":147,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":622,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testObjectDirectorySnapshot":108,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":750,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_ALL":149,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":161,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":438,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":751,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":17,"org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir":679,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix":241,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":575,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":747,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":334,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":748,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":333,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":749,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":414,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":481,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":262,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":657,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":343,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":23,"org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindObject":758,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":335,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":269,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":423,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":376,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":633,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testSimple":87,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS":233,"org.eclipse.jgit.revwalk.RevWalkResetTest.testRevFilterReceivesParsedCommits":101,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":459,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":368,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":353,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1OnUnix":212,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":477,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":516,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":319,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":449,"org.eclipse.jgit.api.GitConstructionTest.testOpen":46,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":160,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":250,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":674,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":667,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":12,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":394,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":399,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":10,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":597,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":273,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":21,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":550,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":757,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":463,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":464,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":341,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":532,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":460,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithMerges":119,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":461,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":407,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":462,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":32,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting":138,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgCon":234,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":561,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":404,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_Or_NONE":148,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":418,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":245,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":492,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":357,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":518,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":626,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":16,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting":137,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":448,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":364,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":59,"org.eclipse.jgit.api.NameRevCommandTest.onePathMerge":256,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":9,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":685,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":97,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":627,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":385,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":659,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":325,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":558,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":439,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":592,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":175,"org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor":255,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":380,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":442,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":523,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon1":226,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":379,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroWhenMergedInto":118,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":382,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":636,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":303,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testNoRename":94,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":567,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":339,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":361,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":579,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":20,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":320,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":578,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory":76,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":577,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":322,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":562,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":323,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":451,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":560,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":607,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NO_MERGES":151,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":345,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":452,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit":173,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_ALL":153,"org.eclipse.jgit.merge.CherryPickTest.testPick":512,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":507,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":616,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":168,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":192,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsNoMerge":252,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":543,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":293,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1":132,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":566,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":30,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3":134,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2":133,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":411,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits":90,"org.eclipse.jgit.api.RevertCommandTest.testRevert":354,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":321},"transformations":[{"failures":[],"tindex":"d549a8f6-4c5a-11e5-9448-0ffe68f3bb44","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandOutputStream:127","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.SideBandOutputStream.writeBuffer()"},"variableMap":{"this":"channelStream"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:723","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream);\n} finally {\n    java.nio.channels.FileChannel.force(true);\n    java.io.OutputStream.close();\n    java.io.FileOutputStream.close();\n}"},"status":-2},{"failures":[],"tindex":"d549d007-4c5a-11e5-9448-a70957156e15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefWriter:129","type":"CtInvocationImpl","sourcecode":"java.io.StringWriter.write('\\t')"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"d549d008-4c5a-11e5-9448-7faa96f69348","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashCreateCommand:201","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.CommitBuilder.setCommitter(org.eclipse.jgit.lib.PersonIdent)"},"status":-1},{"failures":[],"tindex":"d549d009-4c5a-11e5-9448-a536a2fa5f8b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:189","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.FileUtils.mkdirs(java.io.File)"},"variableMap":{"objects":"packFile"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:237","type":"CtIfImpl","sourcecode":"if ((java.io.File) == null)\n    java.io.File = new java.io.File(((java.io.File.getPath()) + \".keep\"));\n"},"status":-2},{"failures":[46,47,48,49,50,51,52],"tindex":"d549d00a-4c5a-11e5-9448-8386ea35bd62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:213","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref != null)\n    org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Ref;\n"},"status":-1},{"failures":[],"tindex":"d549d00b-4c5a-11e5-9448-0387db34ad9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:860","type":"CtIfImpl","sourcecode":"if (java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.compareAndSet(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.remove(int)))\n    java.util.concurrent.atomic.AtomicInteger.incrementAndGet();\n"},"status":0},{"failures":[],"tindex":"d549d00c-4c5a-11e5-9448-d52ecd6bf2f3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BundleWriter:135","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((org.eclipse.jgit.internal.JGitText.get().java.lang.String) + java.lang.String))"},"variableMap":{"name":"refNotResolved","duplicateRef":"refNotResolved"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DescribeCommand:137","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.RefNotFoundException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String))"},"status":-2},{"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,170,46,46,47,47,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,48,312,313,49,50,314,315,316,317,51,52,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,0,1,2,3,4,5,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,448,449,450,451,452,453,454,455,29,30,31,32,33,34,35,36,37,38,39,40,456,41,42,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,43,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,44,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,45,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757],"tindex":"d549f71d-4c5a-11e5-9448-2fa8e1e5395d","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:111","type":"CtAssignmentImpl","sourcecode":"int = ((int) | (org.eclipse.jgit.revwalk.MergeBaseGenerator.int)) | (org.eclipse.jgit.revwalk.MergeBaseGenerator.int)"},"variableMap":{"recarryMask":"w5","org.eclipse.jgit.revwalk.MergeBaseGenerator.MERGE_BASE":"p","org.eclipse.jgit.revwalk.MergeBaseGenerator.POPPED":"w5","branchMask":"w5"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.MutableObjectId:243","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.RawParseUtils.parseHexInt32(byte[], (int + 32))"},"status":-1},{"failures":[307,308,309,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477],"tindex":"d54a1e2e-4c5a-11e5-9448-47f7dc835f77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:180","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.blame.BlameGenerator.getRepository())"},"status":-1},{"failures":[],"tindex":"d54a1e2f-4c5a-11e5-9448-3fdf369af71b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.MergeConfig:146","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:403","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"d54a1e30-4c5a-11e5-9448-d9a46be206ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:324","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int << (org.eclipse.jgit.revwalk.RevObjectList.Block.int)"},"status":-2},{"failures":[],"tindex":"d54a1e31-4c5a-11e5-9448-ff6dc0a7f13f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:680","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.util.RawParseUtils.match(byte[], 0, org.eclipse.jgit.lib.Constants.byte[])) != 4)\n    throw new java.io.IOException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"variableMap":{"buf":"raw","notAPACKFile":"corruptObjectInvalidMode2","org.eclipse.jgit.lib.Constants.PACK_SIGNATURE":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:528","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int int = byte[][int++];\n    if ((int < '0') || (int > '7'))\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.TreeEntry.getId() , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    int int = int - '0';\n    for ( ;  ; ) {\n        int = byte[][int++];\n        if (' ' == int)\n            break;\n        else if ((int < '0') || (int > '7'))\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.TreeEntry.getId() , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        int <<= 3;\n        int += int - '0';\n    }\n    int int = 0;\n    while ((byte[][(int + int)]) != 0)\n        int++;\n    final byte[] byte[] = new byte[int];\n    java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    int += int + 1;\n    final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.fromRaw(byte[], int);\n    int += org.eclipse.jgit.lib.Constants.int;\n    final org.eclipse.jgit.lib.TreeEntry org.eclipse.jgit.lib.TreeEntry;\n    if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n        org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.FileTreeEntry(this , org.eclipse.jgit.lib.ObjectId , byte[] , false);\n    else if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n        org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.FileTreeEntry(this , org.eclipse.jgit.lib.ObjectId , byte[] , true);\n    else if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n        org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.Tree(this , org.eclipse.jgit.lib.ObjectId , byte[]);\n    else if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n        org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.SymlinkTreeEntry(this , org.eclipse.jgit.lib.ObjectId , byte[]);\n    else if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n        org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.GitlinkTreeEntry(this , org.eclipse.jgit.lib.ObjectId , byte[]);\n    else\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.TreeEntry.getId() , java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.toOctalString(int)));\n    \n    org.eclipse.jgit.lib.TreeEntry[][int++] = org.eclipse.jgit.lib.TreeEntry;\n}"},"status":-2},{"failures":[359,758,759,572,573,575,581,582,583,584,585],"tindex":"d54a4542-4c5a-11e5-9448-c3f5e73d00a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackReverseIndex:139","type":"CtForImpl","sourcecode":"for ( ; int < int ; int--) {\n    if (long > (long[][int[][(int - 1)]]))\n        break;\n    \n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[581,582],"tindex":"d54a4543-4c5a-11e5-9448-7d96c69dff30","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:127","type":"CtWhileImpl","sourcecode":"while (!(org.eclipse.jgit.treewalk.CanonicalTreeParser.eof())) {\n    int int = org.eclipse.jgit.treewalk.CanonicalTreeParser.pathCompare(byte[], int, int, int);\n    if (int < 0) {\n        org.eclipse.jgit.treewalk.CanonicalTreeParser.next();\n        continue;\n    } \n    if (int > 0)\n        continue CHECK_BASE;\n    \n    if (int == int) {\n        if ((org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryFileMode().getObjectType()) == int) {\n            org.eclipse.jgit.lib.MutableObjectId.fromRaw(org.eclipse.jgit.treewalk.CanonicalTreeParser.idBuffer(), org.eclipse.jgit.treewalk.CanonicalTreeParser.idOffset());\n            org.eclipse.jgit.internal.storage.pack.BaseSearch.add(org.eclipse.jgit.lib.MutableObjectId, int, int);\n        } \n        continue CHECK_BASE;\n    } \n    if (!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryRawMode())))\n        continue CHECK_BASE;\n    \n    int = int + 1;\n    int = org.eclipse.jgit.internal.storage.pack.BaseSearch.org.eclipse.jgit.internal.storage.pack.BaseSearch.nextSlash(byte[], int, int);\n    int = int != int ? org.eclipse.jgit.internal.storage.pack.BaseSearch.int : int;\n    org.eclipse.jgit.lib.MutableObjectId.fromRaw(org.eclipse.jgit.treewalk.CanonicalTreeParser.idBuffer(), org.eclipse.jgit.treewalk.CanonicalTreeParser.idOffset());\n    org.eclipse.jgit.treewalk.CanonicalTreeParser.reset(org.eclipse.jgit.internal.storage.pack.BaseSearch.readTree(org.eclipse.jgit.lib.MutableObjectId));\n}"},"status":-1},{"failures":[],"tindex":"d54a4544-4c5a-11e5-9448-6b22842a77dc","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.GitDateParser:79","type":"CtReturnImpl","sourcecode":"return new java.util.HashMap<java.util.Locale, java.util.Map<org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.text.SimpleDateFormat>>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:318","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.util.RefMap(java.lang.String , org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> , org.eclipse.jgit.internal.storage.file.RefDirectory.upcast(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>) , org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>.toRefList())"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}