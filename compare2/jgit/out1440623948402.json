{"failureDictionary":{"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":39,"org.eclipse.jgit.internal.storage.file.PackIndexV2Test.testCompareEntriesOffsetsWithFindOffsets":18,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":41,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":69,"org.eclipse.jgit.api.BlameCommandTest.testRename":36,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort":51,"org.eclipse.jgit.transport.URIishTest.testScpStyleNoURIDecoding":55,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":16,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":29,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":25,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":26,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":30,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":37,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":38,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":66,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":21,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":62,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":22,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":23,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":65,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":24,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":34,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort":58,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":4,"org.eclipse.jgit.transport.RemoteConfigTest.noInsteadOf":47,"org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserRelativePath":48,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort":50,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":67,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":35,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":2,"org.eclipse.jgit.transport.URIishTest.testGitProtoWindowsPort":54,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":27,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertWholeObject_Length12":42,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":61,"org.eclipse.jgit.transport.URIishTest.testScpStyleWithUser":53,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":64,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort":49,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":63,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":40,"org.eclipse.jgit.transport.URIishTest.testGetSet":57,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":32,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":46,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":14,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":15,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":7,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":13,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":19,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":20,"org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode":52,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":11,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":10,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":12,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":9,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":8,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":6,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":17,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":5,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":68,"org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserAbsolutePath":56,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":3,"org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindObject":0,"org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles":43,"org.eclipse.jgit.transport.URIishTest.testGitWithUserHome":60,"org.eclipse.jgit.transport.URIishTest.testGitProtoWindows":59,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":31,"org.eclipse.jgit.transport.RemoteConfigTest.noPushInsteadOf":45,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":44,"org.eclipse.jgit.internal.storage.file.PackIndexV1Test.testCompareEntriesOffsetsWithFindOffsets":1,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":28,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":33},"transformations":[{"failures":[],"tindex":"16814c39-4c38-11e5-a765-efb91c8c548e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:170","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.treewalk.AbstractTreeIterator.byte[]"},"variableMap":{"org.eclipse.jgit.treewalk.AbstractTreeIterator.zeroid":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:437","type":"CtReturnImpl","sourcecode":"return byte[]"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"1681734a-4c38-11e5-a765-673a16cd8192","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.EmptyTreeIterator:102","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectId.zeroId()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.MutableObjectId:252","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.ObjectId(this)"},"status":-1},{"failures":[],"tindex":"1681734b-4c38-11e5-a765-65e30872a83c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getGlobalListenerList().dispatch(new org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefAdvertiser:200","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.RefAdvertiser.advertiseAny(org.eclipse.jgit.lib.Ref.getPeeledObjectId(), ((org.eclipse.jgit.lib.Ref.getName()) + \"^{}\"))"},"status":-2},{"failures":[40,41,42],"tindex":"16819a5c-4c38-11e5-a765-4b77f6540701","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:298","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[],"tindex":"16819a5d-4c38-11e5-a765-cdfc7122b0bf","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FS:485","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.io.PrintStream.println(\"readpipe returns null\")"},"variableMap":{"java.lang.System.err":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PushCommand:126","type":"CtTryImpl","sourcecode":"try {\n    if (java.util.List<org.eclipse.jgit.transport.RefSpec>.isEmpty()) {\n        org.eclipse.jgit.transport.RemoteConfig org.eclipse.jgit.transport.RemoteConfig = new org.eclipse.jgit.transport.RemoteConfig(org.eclipse.jgit.lib.Repository.getConfig() , org.eclipse.jgit.api.PushCommand.getRemote());\n        java.util.List<org.eclipse.jgit.transport.RefSpec>.addAll(org.eclipse.jgit.transport.RemoteConfig.getPushRefSpecs());\n    } \n    if (java.util.List<org.eclipse.jgit.transport.RefSpec>.isEmpty()) {\n        org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(org.eclipse.jgit.lib.Constants.java.lang.String);\n        if ((org.eclipse.jgit.lib.Ref != null) && (org.eclipse.jgit.lib.Ref.isSymbolic()))\n            java.util.List<org.eclipse.jgit.transport.RefSpec>.add(new org.eclipse.jgit.transport.RefSpec(org.eclipse.jgit.lib.Ref.getLeaf().getName()));\n        \n    } \n    if (boolean) {\n        for (int int = 0 ; int < (java.util.List<org.eclipse.jgit.transport.RefSpec>.size()) ; int++)\n            java.util.List<org.eclipse.jgit.transport.RefSpec>.set(int, java.util.List<org.eclipse.jgit.transport.RefSpec>.get(int).setForceUpdate(true));\n    } \n    final java.util.List<org.eclipse.jgit.transport.Transport> java.util.List<org.eclipse.jgit.transport.Transport>;\n    java.util.List<org.eclipse.jgit.transport.Transport> = org.eclipse.jgit.transport.Transport.openAll(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.transport.Transport.Operation.org.eclipse.jgit.transport.Transport.Operation);\n    for (final org.eclipse.jgit.transport.Transport org.eclipse.jgit.transport.Transport : java.util.List<org.eclipse.jgit.transport.Transport>) {\n        org.eclipse.jgit.transport.Transport.setPushThin(boolean);\n        if ((java.lang.String) != null)\n            org.eclipse.jgit.transport.Transport.setOptionReceivePack(java.lang.String);\n        \n        org.eclipse.jgit.transport.Transport.setDryRun(boolean);\n        org.eclipse.jgit.api.TransportCommand<org.eclipse.jgit.api.PushCommand, java.lang.Iterable<org.eclipse.jgit.transport.PushResult>>.configure(org.eclipse.jgit.transport.Transport);\n        final java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate> java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate> = org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(java.util.List<org.eclipse.jgit.transport.RefSpec>);\n        try {\n            org.eclipse.jgit.transport.PushResult org.eclipse.jgit.transport.PushResult = org.eclipse.jgit.transport.Transport.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream);\n            java.util.ArrayList<org.eclipse.jgit.transport.PushResult>.add(org.eclipse.jgit.transport.PushResult);\n        } catch (org.eclipse.jgit.errors.TransportException e) {\n            throw new org.eclipse.jgit.api.errors.TransportException(org.eclipse.jgit.errors.TransportException.getMessage() , org.eclipse.jgit.errors.TransportException);\n        } finally {\n            org.eclipse.jgit.transport.Transport.close();\n        }\n    }\n} catch (java.net.URISyntaxException e) {\n    throw new org.eclipse.jgit.api.errors.InvalidRemoteException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n} catch (org.eclipse.jgit.errors.TransportException e) {\n    throw new org.eclipse.jgit.api.errors.TransportException(org.eclipse.jgit.errors.TransportException.getMessage() , org.eclipse.jgit.errors.TransportException);\n} catch (org.eclipse.jgit.errors.NotSupportedException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , org.eclipse.jgit.errors.NotSupportedException);\n} catch (java.io.IOException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"16819a5e-4c38-11e5-a765-bd5887dab0ba","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:464","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n    return false;\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackConnection:275","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"1681c16f-4c38-11e5-a765-9756d8087b6a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:205","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BranchTrackingStatus:93","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Ref.getObjectId())"},"status":-2},{"failures":[],"tindex":"1681c170-4c38-11e5-a765-cd6d647dafb6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AnyObjectId:481","type":"CtAssignmentImpl","sourcecode":"char[][int--] = org.eclipse.jgit.lib.AnyObjectId.char[][(int & 15)]"},"variableMap":{"dst":"buffer","w":"i","org.eclipse.jgit.lib.AnyObjectId.hexchar":"buffer","o":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:386","type":"CtAssignmentImpl","sourcecode":"char[][int] = 0"},"status":0},{"failures":[],"tindex":"1681c171-4c38-11e5-a765-4777fc75755f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:469","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:426","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"bytes\" , \"KiB\" , \"MiB\" , \"GiB\" }"},"status":-2},{"failures":[43],"tindex":"1681c172-4c38-11e5-a765-0fa1dbce1567","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:293","type":"CtSwitchImpl","sourcecode":"switch (byte[][int]) {\n    case '@' :\n    case 'd' :\n    case '\\n' :\n        break;\n    default :\n        if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.Patch.byte[])) < 0)\n            org.eclipse.jgit.patch.Patch.warn(byte[], int, org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n}"},"status":-1},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"1681c173-4c38-11e5-a765-ed2acd9d4df3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.URIish:639","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.URIish.(getScheme()) != null) {\n    if (!(org.eclipse.jgit.transport.URIish.getPath().startsWith(\"/\")))\n        java.lang.StringBuilder.append('/');\n    \n} else if (org.eclipse.jgit.transport.URIish.(getHost()) != null)\n    java.lang.StringBuilder.append(':');\n"},"variableMap":{"r":"r","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:629","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.transport.URIish.(getUser()) != null) && ((org.eclipse.jgit.transport.URIish.getUser().length()) > 0))\n    java.lang.StringBuilder.append('@');\n"},"status":-1},{"failures":[61,62,63,64],"tindex":"1681c174-4c38-11e5-a765-8dc3685646a4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.TagBuilder:166","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.TagBuilder.getObjectId().copyTo(java.io.OutputStreamWriter)"},"variableMap":{"w":"w","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TagBuilder:185","type":"CtInvocationImpl","sourcecode":"java.io.OutputStreamWriter.write(org.eclipse.jgit.lib.TagBuilder.getMessage())"},"status":-1},{"failures":[65],"tindex":"1681e885-4c38-11e5-a765-719c898325f7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.PacketLineIn:189","type":"CtIfImpl","sourcecode":"if ((int != 0) && (int < 4))\n    throw new java.lang.ArrayIndexOutOfBoundsException();\n"},"variableMap":{"len":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:344","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream[][1].write(byte[], int, (int - int))"},"status":-1},{"failures":[],"tindex":"16820f96-4c38-11e5-a765-7beb2eb4455a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.IntSet:65","type":"CtDoImpl","sourcecode":"do {\n    int int = (int + int) >>> 1;\n    if (int < (int[][int]))\n        int = int;\n    else if (int == (int[][int]))\n        return false;\n    else\n        int = int + 1;\n    \n} while (int < int )"},"variableMap":{"high":"org.eclipse.jgit.internal.storage.pack.DeltaIndex.BLKSZ","set":"table","low":"end","key":"org.eclipse.jgit.internal.storage.pack.DeltaIndex.BLKSZ"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:290","type":"CtIfImpl","sourcecode":"if ((int < (org.eclipse.jgit.internal.storage.pack.DeltaIndex.int)) || ((int[].int) == 0))\n    return org.eclipse.jgit.internal.storage.pack.DeltaEncoder.insert(byte[]);\n"},"status":-2},{"failures":[66,67,68,69],"tindex":"16820f97-4c38-11e5-a765-75931b6fd293","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.RecursiveMerger:201","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.merge.RecursiveMerger.createCommitForTree(org.eclipse.jgit.lib.ObjectId, java.util.List<org.eclipse.jgit.revwalk.RevCommit>)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}