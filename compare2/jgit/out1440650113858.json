{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":42,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross":7,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":45,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":68,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":60,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":0,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":18,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":29,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":62,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":106,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":48,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":15,"org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange":109,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":85,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":24,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":100,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":14,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":102,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":50,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooTabBar":108,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":46,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":12,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":22,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooC":110,"org.eclipse.jgit.revwalk.RevWalkMergedIntoTest.testOldCommitWalk":11,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":34,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":47,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":70,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_FooSpBar":112,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":53,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":31,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":98,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":43,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_Foo":113,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge":8,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":65,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":96,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":99,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":95,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":20,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":41,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":72,"org.eclipse.jgit.api.BranchCommandTest.testDelete":52,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":17,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":44,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":88,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":37,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":87,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":2,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":27,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testIndexSize":103,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":93,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":39,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":49,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":92,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testSimple":6,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":23,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":74,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooCNonStandardPrefix":111,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":79,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":32,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooSpLfNulBar":107,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches":10,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":73,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":71,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":67,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":36,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":78,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":105,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":77,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":16,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase2":5,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase1":4,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":25,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":75,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":104,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":69,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":55,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":30,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":33,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":58,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":89,"org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk":114,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":76,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":56,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly":64,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":66,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":83,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":90,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":54,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":57,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":61,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":51,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":84,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":28,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":97,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":3,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":63,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":1,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":13,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":81,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":82,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":35,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":91,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":19,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":38,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":21,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":40,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":101,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":59,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":86,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":94,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits":9,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":80},"transformations":[{"failures":[],"tindex":"0255091c-4c75-11e5-b33b-71f447ad0e9d","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:64","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.isSupported()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:200","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.add(new org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit(org.eclipse.jgit.revwalk.RevCommit , !(java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.isEmpty()) , int))"},"status":-2},{"failures":[],"tindex":"0255302d-4c75-11e5-b33b-e18086c3fa4a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:160","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.eclipse.jgit.revwalk.MergeBaseGenerator.int"},"variableMap":{"org.eclipse.jgit.revwalk.MergeBaseGenerator.MERGE_BASE":"value","carry":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevTag:153","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.MutableInteger.int = 53"},"status":-2},{"failures":[],"tindex":"0255302e-4c75-11e5-b33b-7b0fa965135f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:469","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int + 1) == (java.lang.String.length()))) {\n    return java.util.Collections.emptyMap();\n} "},"variableMap":{"auth":"tip","eq":"mergeCost"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:139","type":"CtTryImpl","sourcecode":"try {\n    java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String> java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String> = new java.util.HashMap<org.eclipse.jgit.lib.ObjectId, java.lang.String>();\n    org.eclipse.jgit.revwalk.FIFORevQueue org.eclipse.jgit.revwalk.FIFORevQueue = new org.eclipse.jgit.revwalk.FIFORevQueue();\n    if ((java.util.List<org.eclipse.jgit.lib.Ref>) != null) {\n        for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.List<org.eclipse.jgit.lib.Ref>)\n            org.eclipse.jgit.api.NameRevCommand.addRef(org.eclipse.jgit.lib.Ref, java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue);\n    } \n    org.eclipse.jgit.api.NameRevCommand.addPrefixes(java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue);\n    int int = org.eclipse.jgit.api.NameRevCommand.(minCommitTime()) - (org.eclipse.jgit.api.NameRevCommand.int);\n    while (true) {\n        org.eclipse.jgit.api.NameRevCommand.NameRevCommit org.eclipse.jgit.api.NameRevCommand.NameRevCommit = ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit)(org.eclipse.jgit.revwalk.FIFORevQueue.next()));\n        if (org.eclipse.jgit.api.NameRevCommand.NameRevCommit == null)\n            break;\n        \n        if ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit.getCommitTime()) < int)\n            continue;\n        \n        for (int int = 0 ; int < (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.getParentCount()) ; int++) {\n            org.eclipse.jgit.api.NameRevCommand.NameRevCommit org.eclipse.jgit.api.NameRevCommand.NameRevCommit = ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit)(org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.api.NameRevCommand.NameRevCommit.getParent(int))));\n            long long = (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.long) + (int > 0 ? int : 1);\n            if (((org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String) == null) || (org.eclipse.jgit.api.NameRevCommand.(compare(org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String, long, org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String, org.eclipse.jgit.api.NameRevCommand.NameRevCommit.long)) < 0)) {\n                if (int > 0) {\n                    org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String = org.eclipse.jgit.api.NameRevCommand.NameRevCommit.format().append('^').append((int + 1)).toString();\n                    org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int = 0;\n                } else {\n                    org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String = org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String;\n                    org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int = (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int) + 1;\n                }\n                org.eclipse.jgit.api.NameRevCommand.NameRevCommit.long = long;\n                org.eclipse.jgit.revwalk.FIFORevQueue.add(org.eclipse.jgit.api.NameRevCommand.NameRevCommit);\n            } \n        }\n    }\n    java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String> java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String> = new java.util.LinkedHashMap<org.eclipse.jgit.lib.ObjectId, java.lang.String>(java.util.List<org.eclipse.jgit.lib.ObjectId>.size());\n    for (org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId : java.util.List<org.eclipse.jgit.lib.ObjectId>) {\n        org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.ObjectId);\n        if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.api.NameRevCommand.NameRevCommit) {\n            org.eclipse.jgit.api.NameRevCommand.NameRevCommit org.eclipse.jgit.api.NameRevCommand.NameRevCommit = ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit)(org.eclipse.jgit.revwalk.RevObject));\n            if ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String) != null)\n                java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.put(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.api.NameRevCommand.org.eclipse.jgit.api.NameRevCommand.simplify(org.eclipse.jgit.api.NameRevCommand.NameRevCommit.format().toString()));\n            \n        } else {\n            java.lang.String java.lang.String = java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.get(org.eclipse.jgit.lib.ObjectId);\n            if (java.lang.String != null)\n                java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.put(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.api.NameRevCommand.org.eclipse.jgit.api.NameRevCommand.simplify(java.lang.String));\n            \n        }\n    }\n    org.eclipse.jgit.api.GitCommand<java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>>.setCallable(false);\n    org.eclipse.jgit.revwalk.RevWalk.release();\n    return java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>;\n} catch (java.io.IOException e) {\n    org.eclipse.jgit.revwalk.RevWalk.reset();\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"0255573f-4c75-11e5-b33b-b766cc3618f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:198","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit[][0]"},"status":-1},{"failures":[101,102],"tindex":"02557e50-4c75-11e5-b33b-353a7945aff9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleUpdateCommand:167","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.CloneCommand.setGitDir(new java.io.File(new java.io.File(org.eclipse.jgit.lib.Repository.getDirectory() , org.eclipse.jgit.lib.Constants.java.lang.String) , org.eclipse.jgit.submodule.SubmoduleWalk.getPath()))"},"status":-1},{"failures":[],"tindex":"02557e51-4c75-11e5-b33b-f5205403b4b5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.pack.PackConfig:708","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.storage.pack.PackConfig.setBigFileThreshold(org.eclipse.jgit.lib.Config.getInt(\"core\", \"bigfilethreshold\", org.eclipse.jgit.storage.pack.PackConfig.getBigFileThreshold()))"},"variableMap":{"rc":"rc","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.storage.pack.PackConfig:699","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.storage.pack.PackConfig.setDeltaSearchMemoryLimit(org.eclipse.jgit.lib.Config.getLong(\"pack\", \"windowmemory\", org.eclipse.jgit.storage.pack.PackConfig.getDeltaSearchMemoryLimit()))"},"status":0},{"failures":[],"tindex":"02557e52-4c75-11e5-b33b-7b00b8269bac","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:435","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectLoader:189","type":"CtLocalVariableImpl","sourcecode":"long long = org.eclipse.jgit.lib.ObjectStream.getSize()"},"status":-2},{"failures":[],"tindex":"02557e53-4c75-11e5-b33b-cd393d585bca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:490","type":"CtWhileImpl","sourcecode":"while (int < (int))\n    org.eclipse.jgit.dircache.DirCacheTree.removeChild(((int) - 1));"},"status":0},{"failures":[103],"tindex":"02557e54-4c75-11e5-b33b-051d1ac5ae0a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:91","type":"CtReturnImpl","sourcecode":"return \"None\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:436","type":"CtReturnImpl","sourcecode":"return (((\"DeltaIndex[\" + long) + \" \") + (java.lang.String[][int])) + \"]\""},"status":-1},{"failures":[],"tindex":"02557e55-4c75-11e5-b33b-d3b100e71587","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:310","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsBlock = org.eclipse.jgit.internal.storage.dfs.DfsBlock"},"variableMap":{"readBlock":"block","v":"block"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:669","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsBlock = null"},"status":0},{"failures":[104,105,106,107,108,109,110,111,112,113,114],"tindex":"02557e56-4c75-11e5-b33b-5b115bb1d784","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.FooterLine:91","type":"CtIfImpl","sourcecode":"if (((int) - int) != int)\n    return false;\n"},"variableMap":{"keyEnd":"bPtr","bPtr":"bPtr","len":"aEnd"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:568","type":"CtIfImpl","sourcecode":"if ((int - int) != (int - int)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"0255a567-4c75-11e5-b33b-ef7ac99d8b82","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.GarbageCollectCommand:221","type":"CtInvocationImpl","sourcecode":"java.util.Properties.put(\"numberOfLooseObjects\", org.eclipse.jgit.internal.storage.file.GC.RepoStatistics.long)"},"variableMap":{"p":"p","numberOfLooseObjects":"numberOfPackedRefs","stats":"stats"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.GarbageCollectCommand:224","type":"CtInvocationImpl","sourcecode":"java.util.Properties.put(\"numberOfPackedRefs\", org.eclipse.jgit.internal.storage.file.GC.RepoStatistics.long)"},"status":-2},{"failures":[],"tindex":"0255a568-4c75-11e5-b33b-ffa3b88b11d4","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FS_Win32:157","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(\"/c\")"},"variableMap":{"argv":"unmergedPaths"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:515","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString())"},"status":0},{"failures":[],"tindex":"0255a569-4c75-11e5-b33b-ababb63f686e","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:104","type":"CtReturnImpl","sourcecode":"return !(org.eclipse.jgit.util.SystemReader.getInstance().isMacOS())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaTask:327","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"0255a56a-4c75-11e5-b33b-efdc01092968","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:490","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    org.eclipse.jgit.blame.Candidate org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.BlameGenerator.pop();\n    if (org.eclipse.jgit.blame.Candidate == null)\n        return org.eclipse.jgit.blame.BlameGenerator.done();\n    \n    int int = org.eclipse.jgit.blame.Candidate.getParentCount();\n    if (int == 1) {\n        if (org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate))\n            return true;\n        \n    } else if (1 < int) {\n        if (org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate))\n            return true;\n        \n    } else if (org.eclipse.jgit.blame.Candidate instanceof org.eclipse.jgit.blame.Candidate.ReverseCandidate) {\n    } else {\n        return org.eclipse.jgit.blame.BlameGenerator.result(org.eclipse.jgit.blame.Candidate);\n    }\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:601","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.blame.BlameGenerator.split(org.eclipse.jgit.blame.Candidate.getNextCandidate(0), org.eclipse.jgit.blame.Candidate)"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}