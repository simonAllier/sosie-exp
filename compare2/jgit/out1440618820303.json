{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":37,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":34,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":94,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":59,"org.eclipse.jgit.api.FetchCommandTest.testFetch":61,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":76,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":102,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":104,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":55,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":21,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":112,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":101,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":12,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":27,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":44,"org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange":116,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":18,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":79,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":98,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":99,"org.eclipse.jgit.lib.IndexDiffTest.testStageState":3,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":42,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooTabBar":115,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":16,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":51,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooC":117,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":100,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":0,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":54,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":57,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_FooSpBar":119,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":106,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_Foo":120,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":75,"org.eclipse.jgit.api.PushCommandTest.testPush":90,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":56,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":2,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":28,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":24,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":89,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":22,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":20,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":82,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":81,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":1,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":4,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":13,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":64,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":97,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":39,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":63,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":15,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":85,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":45,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":78,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooCNonStandardPrefix":118,"org.eclipse.jgit.api.GitConstructionTest.testWrap":33,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":36,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":67,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":60,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":108,"org.eclipse.jgit.api.GitConstructionTest.testOpen":32,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":107,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":103,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":17,"org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_CH_DATA":6,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":26,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooSpLfNulBar":114,"org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_SmallBlocks3":8,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":46,"org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_SmallBlocks2":7,"org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_Large":10,"org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_CH_ERROR":5,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":109,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":87,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":84,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":62,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":111,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":65,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":19,"org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_CH_PROGRESS":9,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":110,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":29,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":83,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":40,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":41,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":38,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":105,"org.eclipse.jgit.api.GitConstructionTest.testClose":31,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":91,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":11,"org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk":113,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":86,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":74,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":73,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":14,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":88,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":43,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":93,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":77,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":58,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":50,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":68,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":70,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":71,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":95,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":49,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":66,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":92,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":30,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":53,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":35,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":23,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":96,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":72,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":52,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":80,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":48,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":47,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":25,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":69},"transformations":[{"failures":[],"tindex":"25ebcb02-4c2c-11e5-93c0-6f5c843c1adf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:139","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(1000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleInitCommand:95","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<java.util.Collection<java.lang.String>>.checkCallable()"},"status":-2},{"failures":[],"tindex":"25ebf213-4c2c-11e5-93c0-d901f41f1f62","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1304","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.this.next()"},"variableMap":{"first":"currentBase"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.RecursiveMerger:201","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.merge.RecursiveMerger.createCommitForTree(org.eclipse.jgit.lib.ObjectId, java.util.List<org.eclipse.jgit.revwalk.RevCommit>)"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"25ebf214-4c2c-11e5-93c0-639641da4033","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.FooterLine:96","type":"CtOperatorAssignmentImpl","sourcecode":"byte += 'a' - 'A'"},"variableMap":{"b":"stageMask"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:593","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= org.eclipse.jgit.lib.IndexDiff.StageState.getStageMask()"},"status":-1},{"failures":[],"tindex":"25ebf215-4c2c-11e5-93c0-195da3cbc309","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.notes.LeafBucket:229","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.notes.LeafBucket.split().append(org.eclipse.jgit.notes.Note)"},"variableMap":{"note":"noteOn","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.LeafBucket:161","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.notes.LeafBucket.shouldSplit()) {\n    return org.eclipse.jgit.notes.LeafBucket.split().set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader);\n} else {\n    org.eclipse.jgit.notes.LeafBucket.growIfFull();\n    int = -(int + 1);\n    if (int < (int))\n        java.lang.System.arraycopy(org.eclipse.jgit.notes.Note[], int, org.eclipse.jgit.notes.Note[], (int + 1), ((int) - int));\n    \n    org.eclipse.jgit.notes.Note[][int] = new org.eclipse.jgit.notes.Note(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.lib.AnyObjectId.copy());\n    (int)++;\n    return this;\n}"},"status":-2},{"failures":[],"tindex":"25ec1926-4c2c-11e5-93c0-69d5380fef5b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefUpdate:586","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref != null) && ((org.eclipse.jgit.lib.Ref.getObjectId()) != null))\n    org.eclipse.jgit.lib.RefUpdate.setNewObjectId(org.eclipse.jgit.lib.Ref.getObjectId());\n"},"status":-2},{"failures":[],"tindex":"25ec1927-4c2c-11e5-93c0-7d30fb082bf5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:272","type":"CtLocalVariableImpl","sourcecode":"final int int = 1 << (int)"},"variableMap":{"bits":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:251","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"25ec1928-4c2c-11e5-93c0-b3c673c7669a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:634","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[128]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1437","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = org.eclipse.jgit.lib.Repository.readGitDirectoryFile(org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-2},{"failures":[],"tindex":"25ec1929-4c2c-11e5-93c0-492c312d3701","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV1:171","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\nelse if (int == 0) {\n    int int = (byte[][(int - 4)]) & 255;\n    int int = (byte[][(int - 3)]) & 255;\n    int int = (byte[][(int - 2)]) & 255;\n    int int = (byte[][(int - 1)]) & 255;\n    return (((((long)(int)) << 24) | (int << 16)) | (int << 8)) | int;\n} else\n    int = int + 1;\n"},"variableMap":{"high":"length","data":"b","pos":"ptr","low":"ptr","cmp":"sign","mid":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:261","type":"CtTryImpl","sourcecode":"try {\n    final int int = byte[].int;\n    while ((int < int) && ((byte[][int]) == ' '))\n        int++;\n    if (int >= int)\n        return 0;\n    \n    switch (byte[][int]) {\n        case '-' :\n            int = -1;\n            int++;\n            break;\n        case '+' :\n            int++;\n            break;\n    }\n    while (int < int) {\n        final byte byte = org.eclipse.jgit.util.RawParseUtils.byte[][byte[][int]];\n        if (byte < 0)\n            break;\n        \n        long = (long * 10) + byte;\n        int++;\n    }\n} catch (java.lang.ArrayIndexOutOfBoundsException e) {\n}"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,31,32,32,33,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"tindex":"25ec192a-4c2c-11e5-93c0-8dc8d0091a49","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:279","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.write(byte[], 0, 12)"},"variableMap":{"packOut":"out","buf":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandOutputStream:138","type":"CtWhileImpl","sourcecode":"while (0 < int) {\n    int int = (byte[].int) - (int);\n    if (((int) == (org.eclipse.jgit.transport.SideBandOutputStream.int)) && (int < int)) {\n        org.eclipse.jgit.transport.PacketLineOut.formatLength(byte[], byte[].int);\n        java.io.OutputStream.write(byte[], 0, org.eclipse.jgit.transport.SideBandOutputStream.int);\n        java.io.OutputStream.write(byte[], int, int);\n        int += int;\n        int -= int;\n    } else {\n        if (int == 0)\n            org.eclipse.jgit.transport.SideBandOutputStream.writeBuffer();\n        \n        int int = java.lang.Math.min(int, int);\n        java.lang.System.arraycopy(byte[], int, byte[], int, int);\n        int += int;\n        int += int;\n        int -= int;\n    }\n}"},"status":-1},{"failures":[],"tindex":"25ec403b-4c2c-11e5-93c0-8b9fb0146e7c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:252","type":"CtReturnImpl","sourcecode":"return \"jgit receive-pack\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.UserConfig:106","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"25ec403c-4c2c-11e5-93c0-a59432689e49","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:270","type":"CtReturnImpl","sourcecode":"return ((int) >>> (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)) & (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)"},"variableMap":{"org.eclipse.jgit.internal.storage.pack.ObjectToPack.EXT_SHIFT":"length","flags":"length","org.eclipse.jgit.internal.storage.pack.ObjectToPack.EXT_MASK":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:912","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.blame.Region.int"},"status":-2},{"failures":[],"tindex":"25ec403d-4c2c-11e5-93c0-cf12028c1ae8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:686","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId[] = new org.eclipse.jgit.lib.ObjectId[int]"},"variableMap":{"ids":"parentIds","pCnt":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.CommitBuilder:179","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId[] = new org.eclipse.jgit.lib.ObjectId[org.eclipse.jgit.lib.ObjectId[].int]"},"status":-2},{"failures":[],"tindex":"25ec403e-4c2c-11e5-93c0-3f255952f482","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.LimitedInputStream:138","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.min(long, long)"},"variableMap":{"left":"pos","n":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackInputStream:70","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"status":0},{"failures":[110,111,112,113,114,115,116,117,118,119,120],"tindex":"25ec403f-4c2c-11e5-93c0-81a1822260f4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ConfigSnapshot:208","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (java.lang.String == null))\n    return 1;\n"},"variableMap":{"bSubsection":"newPath","aSubsection":"oldPath"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:376","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.patch.FileHeader.eq(int, (int - 1), int, (int - 1))) {\n    if ((byte[][int]) == '\\\"') {\n        if ((byte[][(int - 2)]) != '\\\"') {\n            return int;\n        } \n        java.lang.String = org.eclipse.jgit.util.QuotedString.org.eclipse.jgit.util.QuotedString.GitPathStyle.dequote(byte[], int, (int - 1));\n        java.lang.String = org.eclipse.jgit.patch.FileHeader.org.eclipse.jgit.patch.FileHeader.p1(java.lang.String);\n    } else {\n        java.lang.String = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decode(org.eclipse.jgit.lib.Constants.java.nio.charset.Charset, byte[], int, (int - 1));\n    }\n    java.lang.String = java.lang.String;\n    return int;\n} "},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}