{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockHEAD":18,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":60,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadRightLog":9,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross":52,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":6,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":56,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody":35,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":32,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testCheckout":8,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_SkipNonFooter":47,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":30,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":7,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":53,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_IgnoreWhitespace":45,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwards_ConfusingPathName":27,"org.eclipse.jgit.revwalk.FooterLineTest.testEmptyValueNoLF":48,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":10,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter":37,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":15,"org.eclipse.jgit.revwalk.FooterLineTest.testMatchesBugId":43,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":54,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":57,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":11,"org.eclipse.jgit.revwalk.RevWalkMergedIntoTest.testOldCommitWalk":51,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak":36,"org.eclipse.jgit.lib.RefTest.testReadSymRefToPacked":24,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":58,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserNoLF":42,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly":20,"org.eclipse.jgit.revwalk.FooterLineTest.testShortKey":49,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":14,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters":38,"org.eclipse.jgit.revwalk.FooterLineTest.testFilterFootersIgnoreCase":46,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":55,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":33,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsTwo":28,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":31,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_16384":4,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":12,"org.eclipse.jgit.revwalk.FooterLineTest.testEmptyValueWithLF":41,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":5,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":13,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":59,"org.eclipse.jgit.lib.RefTest.testResolvedSymRef":23,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead":21,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserWithLF":39,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":22,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_ManyUsers":50,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":29,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4096":3,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":17,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":19,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":34,"org.eclipse.jgit.revwalk.FooterLineTest.testNonDelimtedEmail":44,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4095":2,"org.eclipse.jgit.revwalk.FooterLineTest.testNotEmail":40,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4094":1,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4090":0,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead":16,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_BackwardsTwo":26,"org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testUpdateOnBackgroundThreads":25},"transformations":[{"failures":[0,1,2,3,4],"tindex":"213367f2-4c80-11e5-af8e-2df6a203525b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:664","type":"CtInvocationImpl","sourcecode":"java.lang.System.runFinalization()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:176","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(byte[])"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"21338f03-4c80-11e5-af8e-434d57221c45","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:690","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref.getStorage().isPacked()) && (org.eclipse.jgit.lib.Ref.isPeeled()))\n    return org.eclipse.jgit.lib.Ref;\n"},"variableMap":{"f":"dst"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:732","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref == null)\n    return null;\n"},"status":-1},{"failures":[25],"tindex":"21338f04-4c80-11e5-af8e-fbca9e04ab8e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor:165","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.ReentrantLock.lock()"},"status":-1},{"failures":[],"tindex":"21338f05-4c80-11e5-af8e-d73620572945","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:204","type":"CtIfImpl","sourcecode":"if (int == (-1))\n    throw new org.eclipse.jgit.errors.NoClosingBracketException(int , \"[\" , \"]\" , java.lang.String);\n"},"variableMap":{"possibleGroupEnd":"length","pattern":"revstr","indexOfStartBracket":"done"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:446","type":"CtSwitchImpl","sourcecode":"switch (char[][(int + 1)]) {\n    case '0' :\n    case '1' :\n    case '2' :\n    case '3' :\n    case '4' :\n    case '5' :\n    case '6' :\n    case '7' :\n    case '8' :\n    case '9' :\n        int int;\n        org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevObject);\n        for (int = int + 1 ; int < (char[].int) ; ++int) {\n            if (!(java.lang.Character.isDigit(char[][int])))\n                break;\n            \n        }\n        java.lang.String java.lang.String = new java.lang.String(char[] , (int + 1) , ((int - int) - 1));\n        int int;\n        try {\n            int = java.lang.Integer.parseInt(java.lang.String);\n        } catch (java.lang.NumberFormatException e) {\n            throw new org.eclipse.jgit.errors.RevisionSyntaxException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.lang.String);\n        }\n        if (int != 0) {\n            org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n            if (int > (org.eclipse.jgit.revwalk.RevCommit.getParentCount()))\n                org.eclipse.jgit.revwalk.RevObject = null;\n            else\n                org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent((int - 1));\n            \n        } \n        int = int - 1;\n        int = int;\n        break;\n    case '{' :\n        int int;\n        java.lang.String java.lang.String = null;\n        for (int = int + 2 ; int < (char[].int) ; ++int) {\n            if ((char[][int]) == '}') {\n                java.lang.String = new java.lang.String(char[] , (int + 2) , ((int - int) - 2));\n                break;\n            } \n        }\n        int = int;\n        if (java.lang.String != null)\n            if (java.lang.String.equals(\"tree\")) {\n                org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.revwalk.RevObject);\n            } else if (java.lang.String.equals(\"commit\")) {\n                org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevObject);\n            } else if (java.lang.String.equals(\"blob\")) {\n                org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n                if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevBlob))\n                    throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n                \n            } else if (java.lang.String.equals(\"\")) {\n                org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n            } else\n                throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n            \n        else\n            throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n        \n        int = int;\n        break;\n    default :\n        org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n        if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) {\n            org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n            if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0)\n                org.eclipse.jgit.revwalk.RevObject = null;\n            else\n                org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n            \n        } else\n            throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n        \n}"},"status":-2},{"failures":[],"tindex":"2133b616-4c80-11e5-af8e-b343b8163bcf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.NoteMapMerger:240","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.notes.InMemoryNoteBucket org.eclipse.jgit.notes.InMemoryNoteBucket = new org.eclipse.jgit.notes.LeafBucket((int * 2))"},"variableMap":{"treeDepth":"prefixLen"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.FanoutBucket:244","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.notes.InMemoryNoteBucket org.eclipse.jgit.notes.InMemoryNoteBucket = new org.eclipse.jgit.notes.LeafBucket(int)"},"status":0},{"failures":[],"tindex":"2133b617-4c80-11e5-af8e-7991530d4be1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.StartGenerator:132","type":"CtOperatorAssignmentImpl","sourcecode":"int |= (org.eclipse.jgit.revwalk.Generator.int) | (org.eclipse.jgit.revwalk.Generator.int)"},"variableMap":{"pendingOutputType":"bs","org.eclipse.jgit.revwalk.Generator.NEEDS_REWRITE":"bs","org.eclipse.jgit.revwalk.Generator.HAS_REWRITE":"bs"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:261","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":0},{"failures":[26,27,28],"tindex":"2133b618-4c80-11e5-af8e-1d0d542cb3e5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:182","type":"CtIfImpl","sourcecode":"if (int == 0)\n    break;\n"},"variableMap":{"c":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:327","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(int[], 1, int[], 0, int)"},"status":-1},{"failures":[29,30,31,32,33,34,35,36,37,38],"tindex":"2133dd29-4c80-11e5-af8e-3d3480a1f72c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:137","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\\\n\\\\\\n\")"},"variableMap":{"r":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeMessageFormatter:156","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('\\t')"},"status":-1},{"failures":[],"tindex":"2133dd2a-4c80-11e5-af8e-a9c006a73760","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.DateRevQueue:117","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.DateRevQueue.Entry = org.eclipse.jgit.revwalk.DateRevQueue.Entry"},"variableMap":{"head":"q","n":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DateRevQueue:138","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.DateRevQueue.Entry = org.eclipse.jgit.revwalk.DateRevQueue.Entry.org.eclipse.jgit.revwalk.DateRevQueue.Entry"},"status":-2},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"2133dd2b-4c80-11e5-af8e-fd88219e317a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.NB:151","type":"CtLocalVariableImpl","sourcecode":"int int = ((byte[][(int + 1)]) & 255) << 8"},"variableMap":{"offset":"valStart","intbuf":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:549","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int)"},"status":-1},{"failures":[],"tindex":"2133dd2c-4c80-11e5-af8e-a9772618ceb6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.PersonIdent:270","type":"CtLocalVariableImpl","sourcecode":"final int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:154","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"2133dd2d-4c80-11e5-af8e-47ba9eed3615","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:515","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0)\n    org.eclipse.jgit.revwalk.RevObject = null;\nelse\n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n"},"variableMap":{"rev":"additionalParent","commit":"additionalParent"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.CommitBuilder:203","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.ObjectId[].int) == 0) {\n    org.eclipse.jgit.lib.CommitBuilder.setParentId(org.eclipse.jgit.lib.AnyObjectId);\n} else {\n    org.eclipse.jgit.lib.ObjectId[] org.eclipse.jgit.lib.ObjectId[] = new org.eclipse.jgit.lib.ObjectId[(org.eclipse.jgit.lib.ObjectId[].int) + 1];\n    java.lang.System.arraycopy(org.eclipse.jgit.lib.ObjectId[], 0, org.eclipse.jgit.lib.ObjectId[], 0, org.eclipse.jgit.lib.ObjectId[].int);\n    org.eclipse.jgit.lib.ObjectId[][org.eclipse.jgit.lib.ObjectId[].int] = org.eclipse.jgit.lib.AnyObjectId.copy();\n    org.eclipse.jgit.lib.ObjectId[] = org.eclipse.jgit.lib.ObjectId[];\n}"},"status":-2},{"failures":[],"tindex":"2133dd2e-4c80-11e5-af8e-9f3e53d83c98","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:280","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.parseHeaders(this)"},"variableMap":{"c":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:99","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.MergeBaseGenerator.add(org.eclipse.jgit.revwalk.RevCommit)"},"status":-2},{"failures":[51,52,53,54,55,56,57,58,59,60],"tindex":"2134043f-4c80-11e5-af8e-6146cac1f615","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.StartGenerator:99","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.org.eclipse.jgit.revwalk.Generator = org.eclipse.jgit.revwalk.MergeBaseGenerator"},"status":-1},{"failures":[],"tindex":"21340440-4c80-11e5-af8e-5788793db606","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:207","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}