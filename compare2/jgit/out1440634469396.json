{"failureDictionary":{"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":69,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":79,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":74,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":0,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":73,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":81,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":37,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":41,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":15,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":30,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":38,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":28,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":82,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":1,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":23,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":40,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":18,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":32,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":65,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":49,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":31,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":19,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":75,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":80,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":21,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":3,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":50,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects":27,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":63,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":39,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":77,"org.eclipse.jgit.api.CleanCommandTest.testClean":20,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":51,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":60,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":68,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":66,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":2,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":61,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":64,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":34,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":59,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":58,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":22,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":33,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":72,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":13,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":14,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":6,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":12,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":78,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":57,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":10,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":9,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":11,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":8,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":7,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":44,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":5,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":45,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":16,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":48,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":4,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":47,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":54,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":62,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":17,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":53,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":56,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":25,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":26,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":76,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":52,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":55,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":42,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":35,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":46,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":24,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":70,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":67,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":29,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":71,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":43},"transformations":[{"failures":[],"tindex":"95816d37-4c50-11e5-aa38-cbf26fd5683f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.LeafBucket:97","type":"CtIfImpl","sourcecode":"if (int == 0)\n    return int;\nelse\n    int = int + 1;\n"},"variableMap":{"low":"idHashBits","cmp":"idHashBits","mid":"idHashBits"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:345","type":"CtReturnImpl","sourcecode":"return ((1 << int) * (int - 3)) / int"},"status":-2},{"failures":[],"tindex":"95819448-4c50-11e5-aa38-4dd31e6d62eb","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.RawTextComparator:79","type":"CtLocalVariableImpl","sourcecode":"int int = 5381"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:261","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"95819449-4c50-11e5-aa38-cbf5702c44bd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.MergeCommand:379","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.revwalk.RevCommit.getId()"},"variableMap":{"newHeadId":"oldValue","headCommit":"oldValue"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefUpdate:413","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"9581944a-4c50-11e5-aa38-73c08a954bf8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectInserter:194","type":"CtIfImpl","sourcecode":"if (byte[] == null)\n    byte[] = byte[] = new byte[8192];\n"},"variableMap":{"b":"data","tempBuffer":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:802","type":"CtDoImpl","sourcecode":"do {\n    if (boolean)\n        boolean = false;\n    else if ((org.eclipse.jgit.internal.storage.file.PackFile.Delta.org.eclipse.jgit.internal.storage.file.PackFile.Delta) == null)\n        org.eclipse.jgit.internal.storage.file.WindowCursor.getDeltaBaseCache().store(this, org.eclipse.jgit.internal.storage.file.PackFile.Delta.long, byte[], int);\n    \n    long = org.eclipse.jgit.internal.storage.file.PackFile.Delta.long;\n    final byte[] byte[] = org.eclipse.jgit.internal.storage.file.PackFile.decompress((long + (org.eclipse.jgit.internal.storage.file.PackFile.Delta.int)), org.eclipse.jgit.internal.storage.file.PackFile.Delta.int, org.eclipse.jgit.internal.storage.file.WindowCursor);\n    if (byte[] == null) {\n        byte[] = null;\n        throw new org.eclipse.jgit.errors.LargeObjectException.OutOfMemory(new java.lang.OutOfMemoryError());\n    } \n    final long long = org.eclipse.jgit.internal.storage.pack.BinaryDelta.getResultSize(byte[]);\n    if ((java.lang.Integer.int) <= long)\n        throw new org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit();\n    \n    final byte[] byte[];\n    try {\n        byte[] = new byte[((int)(long))];\n    } catch (java.lang.OutOfMemoryError tooBig) {\n        byte[] = null;\n        throw new org.eclipse.jgit.errors.LargeObjectException.OutOfMemory(java.lang.OutOfMemoryError);\n    }\n    org.eclipse.jgit.internal.storage.pack.BinaryDelta.apply(byte[], byte[], byte[]);\n    byte[] = byte[];\n    org.eclipse.jgit.internal.storage.file.PackFile.Delta = org.eclipse.jgit.internal.storage.file.PackFile.Delta.org.eclipse.jgit.internal.storage.file.PackFile.Delta;\n} while (org.eclipse.jgit.internal.storage.file.PackFile.Delta != null )"},"status":-1},{"failures":[],"tindex":"9581944b-4c50-11e5-aa38-8936134b6927","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:953","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:336","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[20,21,22,23,24,25,26],"tindex":"9581bb5c-4c50-11e5-aa38-7b9537ae91cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CleanCommand:122","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.Set<java.lang.String>)\n    if ((java.util.Set<java.lang.String>.isEmpty()) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n        if (!(boolean))\n            org.eclipse.jgit.util.FileUtils.delete(new java.io.File(org.eclipse.jgit.lib.Repository.getWorkTree() , java.lang.String));\n        \n        java.util.Set<java.lang.String>.add(java.lang.String);\n    } "},"status":-1},{"failures":[],"tindex":"9581bb5d-4c50-11e5-aa38-49fb61b1198e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ListBranchCommand:108","type":"CtLocalVariableImpl","sourcecode":"java.util.Collection<org.eclipse.jgit.lib.Ref> java.util.Collection<org.eclipse.jgit.lib.Ref> = new java.util.ArrayList<org.eclipse.jgit.lib.Ref>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:284","type":"CtLocalVariableImpl","sourcecode":"final java.util.Collection<org.eclipse.jgit.lib.Ref> java.util.Collection<org.eclipse.jgit.lib.Ref> = new java.util.ArrayList<org.eclipse.jgit.lib.Ref>(java.util.HashMap<org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.Ref>.values())"},"status":-2},{"failures":[],"tindex":"9581bb5e-4c50-11e5-aa38-2b7c5f8309d8","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.StartGenerator:173","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((org.eclipse.jgit.revwalk.DateRevQueue.peek()) != null)\n        org.eclipse.jgit.revwalk.Generator = new org.eclipse.jgit.revwalk.DelayRevQueue(org.eclipse.jgit.revwalk.Generator);\n    \n    org.eclipse.jgit.revwalk.Generator = new org.eclipse.jgit.revwalk.FixUninterestingGenerator(org.eclipse.jgit.revwalk.Generator);\n} "},"status":0},{"failures":[27],"tindex":"9581bb5f-4c50-11e5-aa38-fd3e978e994a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1165","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    int |= int;\n    int &= ~(int);\n    int = 0;\n} "},"variableMap":{"delayFreeFlags":"last","carryFlags":"last","freeFlags":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:222","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.TemporaryBuffer.Heap.write(int)"},"status":-1},{"failures":[],"tindex":"9581bb60-4c50-11e5-aa38-035051395d4c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:790","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.parseHeaders(org.eclipse.jgit.revwalk.RevTree)"},"variableMap":{"t":"newRev","this":"walker"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushProcess:226","type":"CtIfImpl","sourcecode":"if (((!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit)) || (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit))) || (!(org.eclipse.jgit.revwalk.RevWalk.isMergedInto(((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject)), ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject))))))\n    boolean = false;\n"},"status":-2},{"failures":[],"tindex":"9581e271-4c50-11e5-aa38-958164f01cf5","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:179","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.CanonicalTreeParser.parseEntry()"},"variableMap":{"p":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:374","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryObjectId())"},"status":-2},{"failures":[],"tindex":"9581e272-4c50-11e5-aa38-450710be29cd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1277","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPathSegment(org.eclipse.jgit.lib.ObjectChecker, org.eclipse.jgit.treewalk.CanonicalTreeParser)"},"status":-2},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"9581e273-4c50-11e5-aa38-9743d10b9177","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:245","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.api.CherryPickCommand.include(org.eclipse.jgit.lib.AnyObjectId.getName(), org.eclipse.jgit.lib.AnyObjectId)"},"variableMap":{"commit":"commit","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:256","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.api.CherryPickCommand.include(new org.eclipse.jgit.lib.ObjectIdRef.Unpeeled(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , java.lang.String , org.eclipse.jgit.lib.AnyObjectId.copy()))"},"status":-1},{"failures":[],"tindex":"9581e274-4c50-11e5-aa38-db25c1557957","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RemoveNoteCommand:136","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RefUpdate.setExpectedOldObjectId(org.eclipse.jgit.revwalk.RevCommit)"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}