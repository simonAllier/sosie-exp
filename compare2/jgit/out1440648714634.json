{"failureDictionary":{"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":462,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":283,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":297,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":470,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":60,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder":369,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":160,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":38,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":62,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":320,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":178,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":386,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":48,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":199,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":248,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":430,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":338,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":153,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":116,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoOtherThanMaster":15,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":286,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":43,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict":275,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":110,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":380,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":208,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":28,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":224,"org.eclipse.jgit.merge.CherryPickTest.testRevert":279,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":157,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":309,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoHeadOtherThanMaster":13,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":108,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":107,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":219,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127":361,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":196,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":429,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":347,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":383,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":296,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":389,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":226,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":239,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":228,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":204,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":7,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":282,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":464,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":6,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":240,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testRecursiveFiltering":467,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":51,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":87,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":471,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":132,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":8,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":154,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":190,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified":384,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":90,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":349,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":284,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting":447,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":340,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":145,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":220,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":186,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":26,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":289,"org.eclipse.jgit.treewalk.ForPathTest.testFindObjects":466,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":49,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":234,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":80,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1":458,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":459,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testOneBranch":20,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive":363,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":37,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":83,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":57,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":159,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":214,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":94,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":273,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":356,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":131,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":88,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":249,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":2,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":342,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":205,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":294,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":99,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":53,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":299,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":397,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":170,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":148,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":432,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":121,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":209,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":302,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":271,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testKeyIsPrefixOfFilter":374,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":109,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":312,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":141,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTwoBranches":17,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":329,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":172,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":288,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":390,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":64,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":143,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree":277,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag":10,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":180,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":42,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":174,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":316,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":280,"org.eclipse.jgit.lib.ValidRefNameTest.testWindowsReservedNames":415,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":339,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule":359,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":44,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":293,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":341,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":124,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":111,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":76,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":227,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":69,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":65,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":281,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter":456,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":147,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":336,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":136,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":396,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":379,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":137,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2":448,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":52,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":78,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":106,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":408,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":406,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":460,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":41,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":98,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":200,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":135,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":300,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":426,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":97,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":158,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":155,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":1,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches":14,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":56,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":21,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":68,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":270,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":230,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":67,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":55,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2":455,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testOneOnly":375,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":237,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":333,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy":238,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":285,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":405,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":156,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":306,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":115,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":71,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":256,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":472,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":292,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":118,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":388,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":24,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":343,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":216,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":198,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap":274,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":330,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":235,"org.eclipse.jgit.lib.T0002_TreeTest.test006_addDeepTree":30,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":210,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":335,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":173,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":231,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":422,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":119,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":334,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":305,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":96,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":82,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":117,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":463,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":39,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri":11,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":95,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":161,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":259,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":175,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":128,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":101,"org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles":403,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":246,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6":434,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":247,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":308,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":358,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":241,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_3":244,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2":243,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5":433,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":206,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4":245,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":150,"org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail":360,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":313,"org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38":461,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":142,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree":371,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":382,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":46,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":45,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":404,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":298,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive":394,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree":370,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b":442,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules1thru3_NoIndexEntry":232,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":134,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":236,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":377,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":207,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":22,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":310,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":185,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":211,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":295,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon":416,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":29,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":73,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":381,"org.eclipse.jgit.api.CleanCommandTest.testClean":315,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":120,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":469,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":290,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":50,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":344,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":468,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":72,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3":454,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":213,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":317,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1":452,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2":453,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":126,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":387,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":410,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":321,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":391,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":353,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":399,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting":451,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":218,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":179,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":328,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":212,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":215,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":272,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":104,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":425,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":34,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":393,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":395,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":81,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":263,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":217,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1":357,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15b":431,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":197,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":269,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":130,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":129,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":33,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":47,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":291,"org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths":420,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testExact":373,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":457,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":352,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":75,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch":201,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid":376,"org.eclipse.jgit.lib.ObjectCheckerTest.testRejectDevicesOnWindows":414,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":32,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":58,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":398,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":85,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":91,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":92,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":401,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":337,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit":19,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":229,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":412,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":264,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":59,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":265,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":413,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":424,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":122,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":378,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":191,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":257,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b":443,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":0,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":421,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":146,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed":12,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":221,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":3,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":351,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":35,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":77,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":112,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":327,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":165,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":164,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":40,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":254,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":303,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":323,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix":417,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive":367,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":400,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":385,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":194,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":261,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":127,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":258,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":345,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":225,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":304,"org.eclipse.jgit.lib.IndexDiffTest.testModified":354,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile":242,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":151,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":23,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":105,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":70,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":407,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":355,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":428,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1":418,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":268,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":102,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":311,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":140,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":266,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":322,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":113,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":152,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":332,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":203,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":183,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":114,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":139,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":187,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":25,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":411,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":307,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutUncachedChanges":233,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":255,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":189,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix":419,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":177,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":176,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":223,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":89,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":202,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":123,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion":366,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":195,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":31,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset":362,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":149,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":61,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":100,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":287,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":402,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":162,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":260,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":166,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":253,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":423,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_18":440,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":138,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_19":441,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":133,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_13":437,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_14":438,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15":439,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":184,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":252,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":74,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":79,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_10":435,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":182,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":251,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_12":436,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testNoDF_NoGap":368,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":250,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":193,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":350,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":84,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":314,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":318,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting":450,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":9,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":144,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":54,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":465,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":262,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":93,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":188,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath":365,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting":449,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoSymbolicRefHeadPointingToMaster":18,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":325,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne":276,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":181,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":27,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":66,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":125,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":171,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree":364,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":222,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":348,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":267,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":63,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":103,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":427,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":326,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":4,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":192,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":168,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":169,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch":16,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testFilterIsPrefixOfKey":372,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":331,"org.eclipse.jgit.merge.CherryPickTest.testPick":278,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":301,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":409,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":319,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":392,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":324,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1":444,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":346,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":36,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3":446,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2":445,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":86,"org.eclipse.jgit.api.RevertCommandTest.testRevert":163,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":167},"transformations":[{"failures":[],"tindex":"c054b41b-4c71-11e5-843f-eff1d3aad9cd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:366","type":"CtReturnImpl","sourcecode":"return long | long"},"variableMap":{"ret":"len","y":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:495","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"c054db2c-4c71-11e5-843f-33672b6a6542","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:548","type":"CtInvocationImpl","sourcecode":"java.lang.System.exit(1)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMapMerger:250","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.sameContent(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note))\n    org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.Note);\nelse if (org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.sameContent(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note))\n    org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.Note);\nelse if (org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.sameContent(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note))\n    org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.Note);\nelse\n    org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.NoteMerger.merge(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectInserter));\n"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"c054db2d-4c71-11e5-843f-3104e1d50d31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeMessageFormatter:79","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref.getName().startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n    java.util.List<java.lang.String>.add(((\"\\'\" + (org.eclipse.jgit.lib.Repository.shortenRefName(org.eclipse.jgit.lib.Ref.getName()))) + \"\\'\"));\nelse if (org.eclipse.jgit.lib.Ref.getName().startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n    java.util.List<java.lang.String>.add(((\"\\'\" + (org.eclipse.jgit.lib.Repository.shortenRefName(org.eclipse.jgit.lib.Ref.getName()))) + \"\\'\"));\nelse if (org.eclipse.jgit.lib.Ref.getName().startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n    java.util.List<java.lang.String>.add(((\"\\'\" + (org.eclipse.jgit.lib.Repository.shortenRefName(org.eclipse.jgit.lib.Ref.getName()))) + \"\\'\"));\nelse if (org.eclipse.jgit.lib.Ref.getName().equals(org.eclipse.jgit.lib.Ref.getObjectId().getName()))\n    java.util.List<java.lang.String>.add(((\"\\'\" + (org.eclipse.jgit.lib.Ref.getName())) + \"\\'\"));\nelse\n    java.util.List<java.lang.String>.add(org.eclipse.jgit.lib.Ref.getName());\n"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29],"tindex":"c055023e-4c71-11e5-843f-0b5adb96749c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:475","type":"CtIfImpl","sourcecode":"if (int > (org.eclipse.jgit.revwalk.RevCommit.getParentCount()))\n    org.eclipse.jgit.revwalk.RevObject = null;\nelse\n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent((int - 1));\n"},"status":-1},{"failures":[30],"tindex":"c055023f-4c71-11e5-843f-cd17a6aa160c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TreeEntry:247","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.TreeEntry.appendFullName(java.lang.StringBuilder)"},"status":-1},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,7,81,8,9,82,83,84,85,86,87,88,89,90,91,92,26,93,94,27,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,28,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,29,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,4,167,168,169,170,171,5,172,173,6,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"tindex":"c0550240-4c71-11e5-843f-3ddf0ec3ba43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:168","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n} else if ((((boolean) && org.eclipse.jgit.treewalk.NameConflictTreeWalk.(org.eclipse.jgit.treewalk.NameConflictTreeWalk.isTree(org.eclipse.jgit.treewalk.AbstractTreeIterator))) && (!org.eclipse.jgit.treewalk.NameConflictTreeWalk.(org.eclipse.jgit.treewalk.NameConflictTreeWalk.isTree(org.eclipse.jgit.treewalk.AbstractTreeIterator)))) && org.eclipse.jgit.treewalk.NameConflictTreeWalk.(org.eclipse.jgit.treewalk.NameConflictTreeWalk.nameEqual(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator))) {\n    for (int int = 0 ; int < int ; int++) {\n        final org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator[][int];\n        if ((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) == org.eclipse.jgit.treewalk.AbstractTreeIterator)\n            org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n        \n    }\n    org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    boolean = true;\n} else\n    boolean = false;\n"},"status":-1},{"failures":[311,312,313,314,315,316,317,318,319,320,321,322,323,183,185,205,206,324,325,326,327,328,207,329,330,208,331,332,62,65,71,74,78,7,9,85,333,334,335,336,337,202,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,231,356,235,236,237,240,357,246,358,247,252,359,360,361,362,363,364,365,366,367,368,274,275,276,277,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,100,297,298,299,300,302,303,305,306],"tindex":"c0552951-4c71-11e5-843f-efd4c53c2d09","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:210","type":"CtIfImpl","sourcecode":"if ((int) <= int)\n    return ;\n"},"variableMap":{"endOffset":"mode","eol":"pathLen"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:248","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheTree.contains(byte[], int, byte[].int)) {\n    org.eclipse.jgit.dircache.DirCacheTree = org.eclipse.jgit.dircache.DirCacheTree;\n    (int)++;\n    if (org.eclipse.jgit.dircache.DirCacheTree.isValid())\n        org.eclipse.jgit.dircache.DirCacheTree.getObjectId().copyRawTo(byte[], 0);\n    \n    int = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.getBits();\n    byte[] = byte[];\n    int = (int) + (org.eclipse.jgit.dircache.DirCacheTree.nameLength());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"c0552952-4c71-11e5-843f-09ba9e26a895","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper:180","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.BasePackBitmapIndex.StoredBitmap.getBitmap()"},"variableMap":{"stored":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.BasePackBitmapIndex:63","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.BasePackBitmapIndex.StoredBitmap != null ? org.eclipse.jgit.internal.storage.file.BasePackBitmapIndex.StoredBitmap.getBitmap() : null"},"status":-2},{"failures":[398,311,399,400,40,206,324,325,326,327,328,207,329,208,331,59,62,65,74,78,7,9,83,85,87,217,344,401,402,338,340,403,353,213,404,354,215,405,406,407,408,409,410,411,412,374,95,413,118,122,124,296,301],"tindex":"c0555063-4c71-11e5-843f-7d9617fdc3ee","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:435","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.eclipse.jgit.lib.Constants.int]"},"variableMap":{"org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:200","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = byte[][][int]"},"status":-1},{"failures":[],"tindex":"c0555064-4c71-11e5-843f-cf44fa1f8acb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalkUtils:158","type":"CtLocalVariableImpl","sourcecode":"java.util.List<org.eclipse.jgit.lib.Ref> java.util.List<org.eclipse.jgit.lib.Ref> = new java.util.ArrayList<org.eclipse.jgit.lib.Ref>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:323","type":"CtLocalVariableImpl","sourcecode":"java.util.List<org.eclipse.jgit.lib.Ref> java.util.List<org.eclipse.jgit.lib.Ref> = new java.util.LinkedList<org.eclipse.jgit.lib.Ref>()"},"status":-2},{"failures":[414,415,416,417,418,419,420],"tindex":"c0555065-4c71-11e5-843f-8dd886a8c0b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:610","type":"CtSwitchImpl","sourcecode":"switch (org.eclipse.jgit.lib.ObjectChecker.org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][int])) {\n    case 'a' :\n        if (((((int - int) >= 3) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 1)])) == 'u')) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 2)])) == 'x')) && (((int - int) == 3) || ((byte[][(int + 3)]) == '.')))\n            throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid name \\'AUX\\'\");\n        \n        break;\n    case 'c' :\n        if (((((int - int) >= 3) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 2)])) == 'n')) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 1)])) == 'o')) && (((int - int) == 3) || ((byte[][(int + 3)]) == '.')))\n            throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid name \\'CON\\'\");\n        \n        if ((((((int - int) >= 4) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 2)])) == 'm')) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 1)])) == 'o')) && org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.isPositiveDigit(byte[][(int + 3)]))) && (((int - int) == 4) || ((byte[][(int + 4)]) == '.')))\n            throw new org.eclipse.jgit.errors.CorruptObjectException(((\"invalid name \\'COM\" + ((char)(byte[][(int + 3)]))) + \"\\'\"));\n        \n        break;\n    case 'l' :\n        if ((((((int - int) >= 4) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 1)])) == 'p')) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 2)])) == 't')) && org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.isPositiveDigit(byte[][(int + 3)]))) && (((int - int) == 4) || ((byte[][(int + 4)]) == '.')))\n            throw new org.eclipse.jgit.errors.CorruptObjectException(((\"invalid name \\'LPT\" + ((char)(byte[][(int + 3)]))) + \"\\'\"));\n        \n        break;\n    case 'n' :\n        if (((((int - int) >= 3) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 1)])) == 'u')) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 2)])) == 'l')) && (((int - int) == 3) || ((byte[][(int + 3)]) == '.')))\n            throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid name \\'NUL\\'\");\n        \n        break;\n    case 'p' :\n        if (((((int - int) >= 3) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 1)])) == 'r')) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 2)])) == 'n')) && (((int - int) == 3) || ((byte[][(int + 3)]) == '.')))\n            throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid name \\'PRN\\'\");\n        \n        break;\n}"},"status":-1},{"failures":[421],"tindex":"c0557776-4c71-11e5-843f-e17a77530404","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ShowNoteCommand:105","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevObject"},"status":-1},{"failures":[],"tindex":"c0557777-4c71-11e5-843f-9f4d44c1f2d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:714","type":"CtIfImpl","sourcecode":"if ((long >= (org.eclipse.jgit.lib.Config.long)) && ((long % (org.eclipse.jgit.lib.Config.long)) == 0))\n    java.lang.String = (java.lang.String.valueOf((long / (org.eclipse.jgit.lib.Config.long)))) + \" k\";\nelse\n    java.lang.String = java.lang.String.valueOf(long);\n"},"status":-2},{"failures":[422,423,424,312,313,315,316,317,318,319,425,426,320,321,322,323,183,185,198,205,206,324,325,326,327,328,207,329,330,208,331,332,62,64,427,65,71,74,78,7,9,85,336,337,202,338,339,340,341,342,428,333,429,334,335,346,347,343,344,345,430,348,349,353,355,231,356,431,235,236,237,238,432,240,357,243,244,245,433,434,246,249,250,435,251,436,437,438,439,440,441,442,443,256,257,350,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,468,469,280,281,282,470,283,284,471,286,100,297,298,299,300,472,302,303,305,306],"tindex":"c0557778-4c71-11e5-843f-192b33ac508c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:257","type":"CtLocalVariableImpl","sourcecode":"final int int = int++"},"variableMap":{"p":"cIdx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:349","type":"CtLocalVariableImpl","sourcecode":"final int int = int + (int)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}