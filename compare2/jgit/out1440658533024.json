{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":39,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":23,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":36,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":57,"org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld":1,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":22,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugEmptyLineAndSob":68,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":18,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":5,"org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile":3,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":47,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":37,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":10,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NoBodySobAndBug":67,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":9,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":29,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":17,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":19,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":45,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":14,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":32,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":7,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":15,"org.eclipse.jgit.util.ChangeIdUtilTest.testKernelStyleFooter":61,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugLineWithASpaceAndSob":63,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":41,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":42,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":43,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithBug_SubButNoBody":69,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":20,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":40,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":49,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":16,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":56,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithSignedOffBy":65,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":28,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAfterBugOrIssue":62,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":27,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":21,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":6,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":44,"org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile":4,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":30,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommitWithSob_ButNoBody":60,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NonFooterAndBugAndSob":66,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":52,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":53,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":55,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":0,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":51,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":50,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":25,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":26,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":35,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":54,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":34,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":58,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":13,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":38,"org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc":2,"org.eclipse.jgit.lib.ConfigTest.testQuotingForSubSectionNames":71,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":12,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessagesWithSignedOffBy":64,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugBrackersAndSob":59,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":33,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":70,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":48,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":8,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":46,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":31,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":24},"transformations":[{"failures":[0,1,2,3,4],"tindex":"9c8ba9e9-4c88-11e5-a642-a3b5d98da974","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.RawText:250","type":"CtIfImpl","sourcecode":"if (int == (-1))\n    break;\n"},"variableMap":{"n":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedFileHeader:150","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.patch.FileHeader.(org.eclipse.jgit.patch.FileHeader.isHunkHdr(byte[], int, int)) >= 1) {\n    break;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseOldName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.CombinedFileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.CombinedFileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.CombinedFileHeader.parseModeLine((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.CombinedFileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.CombinedFileHeader.parseDeletedFileMode((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-1},{"failures":[],"tindex":"9c8bd0fa-4c88-11e5-a642-cd2dc7347dc2","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddCommand:178","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.lib.FileMode)"},"status":0},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"9c8bd0fb-4c88-11e5-a642-5fd4b13469e0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry:59","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.internal.storage.pack.DeltaIndex = null"},"variableMap":{"index":"idx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:388","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaIndex = new org.eclipse.jgit.internal.storage.pack.DeltaIndex(org.eclipse.jgit.internal.storage.pack.DeltaWindow.buffer(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry))"},"status":-1},{"failures":[],"tindex":"9c8bd0fc-4c88-11e5-a642-89d75a47f2ce","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:311","type":"CtLocalVariableImpl","sourcecode":"int int = 8192"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectId:242","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.util.RawParseUtils.parseHexInt32(byte[], (int + 32))"},"status":-2},{"failures":[],"tindex":"9c8bd0fd-4c88-11e5-a642-3dbf1cca6387","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.MutableObjectId:239","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.RawParseUtils.parseHexInt32(byte[], int)"},"variableMap":{"p":"r","bs":"buf","w1":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:244","type":"CtAssignmentImpl","sourcecode":"int = java.util.zip.Inflater.inflate(byte[])"},"status":-2},{"failures":[],"tindex":"9c8bd0fe-4c88-11e5-a642-4f493a4f7b58","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LocalObjectToPack:68","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackFile = null"},"variableMap":{"pack":"f"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation:78","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.org.eclipse.jgit.internal.storage.file.PackFile = org.eclipse.jgit.internal.storage.file.PackFile"},"status":0},{"failures":[],"tindex":"9c8bf80f-4c88-11e5-a642-f35f9141b01d","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1509","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.pack.ObjectToPack.isWritten())\n    return ;\n"},"variableMap":{"otp":"iId"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:814","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n    if (org.eclipse.jgit.lib.FileMode == (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode)) {\n        org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n    } else {\n        if (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n            if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))) {\n                if ((!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode()))) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode)))\n                    return ;\n                else\n                    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                \n            } else\n                org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        \n    }\n} else {\n    if (((!org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    else if ((!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n        if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode()))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        } else if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader())))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        } else {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        }\n    } else {\n        org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    }\n}"},"status":-2},{"failures":[],"tindex":"9c8bf810-4c88-11e5-a642-9b9911abe7c3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:541","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Candidate"},"variableMap":{"queueNext":"parent","queue":"parent","n":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:552","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Candidate.BlobCandidate.org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.Candidate"},"status":-2},{"failures":[],"tindex":"9c8bf811-4c88-11e5-a642-e905fbbecd72","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:121","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"compression":"sz"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner:127","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 1"},"status":0},{"failures":[59,60,61,62,63,64,65,66,67,68,69],"tindex":"9c8c1f22-4c88-11e5-a642-b33ee8f8b123","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:210","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String[][int])"},"status":-1},{"failures":[],"tindex":"9c8c1f23-4c88-11e5-a642-b5919313cae3","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:341","type":"CtIfImpl","sourcecode":"if (int > (int))\n    return (int) - ((int ^ (int)) & 1);\n"},"variableMap":{"maxK":"c","k":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:312","type":"CtIfImpl","sourcecode":"if ((((org.eclipse.jgit.patch.FileHeader.getHunks().isEmpty()) && ((org.eclipse.jgit.patch.Patch.byte[].int) < (int - int))) && (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], (int - (org.eclipse.jgit.patch.Patch.byte[].int)), org.eclipse.jgit.patch.Patch.byte[])) >= 0)) && org.eclipse.jgit.patch.Patch.(org.eclipse.jgit.patch.Patch.matchAny(byte[], int, org.eclipse.jgit.patch.Patch.byte[][]))) {\n    org.eclipse.jgit.patch.FileHeader.org.eclipse.jgit.patch.FileHeader.PatchType = org.eclipse.jgit.patch.FileHeader.PatchType.org.eclipse.jgit.patch.FileHeader.PatchType;\n    return int;\n} "},"status":0},{"failures":[70],"tindex":"9c8c1f24-4c88-11e5-a642-a56cd23885b2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseFetchConnection:77","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.BaseFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)"},"status":-1},{"failures":[],"tindex":"9c8c1f25-4c88-11e5-a642-cd57256e17b3","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackConnection:228","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String.substring(0, 40))"},"variableMap":{"line":"org.eclipse.jgit.lib.Constants.HEAD"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:173","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-2},{"failures":[],"tindex":"9c8c1f26-4c88-11e5-a642-37fb2f1ee6f7","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportProtocol:197","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.transport.URIish.getPort()) <= 0)\n    return false;\n"},"variableMap":{"uri":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.FastIgnoreRule:203","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object)\n    return true;\n"},"status":-2},{"failures":[71],"tindex":"9c8c1f27-4c88-11e5-a642-1f002657f804","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.internal.Strings:294","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(']');\n    boolean = true;\n    break;\n} "},"variableMap":{"ignoreLastBracket":"quoted","seenEscape":"quoted","sb":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:993","type":"CtIfImpl","sourcecode":"if (!boolean)\n    java.lang.StringBuilder.append('\\\"');\n"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}