{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4":2,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":17,"org.eclipse.jgit.api.TagCommandTest.testTagging":28,"org.eclipse.jgit.util.io.UnionInputStreamTest.testSkip":20,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegationInDifferentFiles2":57,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegationInDifferentFiles4":59,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegationInDifferentFiles3":58,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":31,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":49,"org.eclipse.jgit.util.io.UnionInputStreamTest.testAutoCloseDuringRead":19,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":43,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegationAllExceptJavaInSrcAndExceptChildDirInSrc":60,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent":15,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":47,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":34,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules1thru3_NoIndexEntry":0,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":40,"org.eclipse.jgit.attributes.AttributeNodeTest.testEmptyValueKey":54,"org.eclipse.jgit.notes.DefaultNoteMergerTest.testAddAdd":14,"org.eclipse.jgit.attributes.AttributeNodeTest.testEmptyLine":52,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRules":56,"org.eclipse.jgit.util.io.UnionInputStreamTest.testReadSingleBytes":26,"org.eclipse.jgit.attributes.AttributeNodeTest.testBasic":51,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":9,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":46,"org.eclipse.jgit.transport.PackParserTest.testPackWithTrailingGarbage":27,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout":1,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":48,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":45,"org.eclipse.jgit.attributes.AttributeNodeTest.testTabSeparator":50,"org.eclipse.jgit.util.io.UnionInputStreamTest.testExceptionDuringClose":25,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":36,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":6,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":5,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":16,"org.eclipse.jgit.util.io.UnionInputStreamTest.testCloseDuringClose":23,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":18,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject4":10,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegateAllExceptJavaInSrc":61,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject5":11,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject6":12,"org.eclipse.jgit.util.io.UnionInputStreamTest.testArrayConstructor":21,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":39,"org.eclipse.jgit.notes.DefaultNoteMergerTest.testEditEdit":13,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":29,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":38,"org.eclipse.jgit.attributes.AttributeNodeTest.testEmptyNegativeAttributeKey":53,"org.eclipse.jgit.util.io.UnionInputStreamTest.testReadByteBlocks":22,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":30,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":3,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":35,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":41,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":33,"org.eclipse.jgit.attributes.AttributesMatcherTest.testNameOnlyMatches":55,"org.eclipse.jgit.lib.ConfigTest.testQuotingForSubSectionNames":4,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":44,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":42,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":32,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":37,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":8,"org.eclipse.jgit.util.io.UnionInputStreamTest.testNonBlockingPartialRead":24,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":7},"transformations":[{"failures":[0,1,2,3],"tindex":"3ead60fe-4c76-11e5-8a9d-7d68daeab090","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.InitCommand:97","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = \".\";\n"},"variableMap":{"dStr":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:739","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheCheckout.equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode)) {\n    if (boolean)\n        org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n    else\n        org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    \n} else\n    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n"},"status":-1},{"failures":[],"tindex":"3ead880f-4c76-11e5-8a9d-635fe3999549","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:186","type":"CtReturnImpl","sourcecode":"return ((int) >> (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)) & 7"},"variableMap":{"org.eclipse.jgit.internal.storage.pack.ObjectToPack.TYPE_SHIFT":"org.eclipse.jgit.diff.HistogramDiffIndex.REC_PTR_SHIFT","flags":"org.eclipse.jgit.diff.HistogramDiffIndex.REC_PTR_SHIFT"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:324","type":"CtReturnImpl","sourcecode":"return ((int)((long >>> (org.eclipse.jgit.diff.HistogramDiffIndex.int)))) & (org.eclipse.jgit.diff.HistogramDiffIndex.int)"},"status":-2},{"failures":[],"tindex":"3ead8810-4c76-11e5-8a9d-6543ca00123b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.PacketLineIn:103","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0)\n    throw new org.eclipse.jgit.errors.PackProtocolException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"variableMap":{"expectedACKNAKFoundEOF":"unexpectedEndOfConfigFile","line":"badEntryDelimiter"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1161","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    int = org.eclipse.jgit.lib.Config.StringReader.read();\n    if (int < 0)\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    if ('=' == int)\n        break;\n    \n    if (((';' == int) || ('#' == int)) || ('\\n' == int)) {\n        org.eclipse.jgit.lib.Config.StringReader.reset();\n        break;\n    } \n    if ((' ' == int) || ('\\t' == int))\n        continue;\n    \n    throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n}"},"status":-2},{"failures":[4,5],"tindex":"3ead8811-4c76-11e5-8a9d-8fef4bc4bd51","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1383","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"ng \")"},"variableMap":{"r":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:181","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('\\\"')"},"status":-1},{"failures":[6,7,8,9],"tindex":"3eadaf22-4c76-11e5-8a9d-81520351fb69","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:120","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackBitmapIndex org.eclipse.jgit.internal.storage.file.PackBitmapIndex = org.eclipse.jgit.internal.storage.file.PackFile.getBitmapIndex()"},"variableMap":{"pack":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:1054","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.internal.storage.file.PackBitmapIndex org.eclipse.jgit.internal.storage.file.PackBitmapIndex = org.eclipse.jgit.internal.storage.file.PackBitmapIndex.open(org.eclipse.jgit.internal.storage.file.PackFile.extFile(org.eclipse.jgit.internal.storage.pack.PackExt.org.eclipse.jgit.internal.storage.pack.PackExt), org.eclipse.jgit.internal.storage.file.PackFile.idx(), org.eclipse.jgit.internal.storage.file.PackFile.getReverseIdx())"},"status":-1},{"failures":[10,11,12],"tindex":"3eadaf23-4c76-11e5-8a9d-e70a672efab1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:860","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:271","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid object\")"},"status":-1},{"failures":[8],"tindex":"3eadaf24-4c76-11e5-8a9d-dd83d9ce2fa9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:763","type":"CtAssignmentImpl","sourcecode":"byte[] = org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry.byte[]"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"3eadaf25-4c76-11e5-8a9d-f13867bc4d1b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.UnionInputStream:109","type":"CtInvocationImpl","sourcecode":"java.util.LinkedList<java.io.InputStream>.add(java.io.InputStream)"},"status":-1},{"failures":[],"tindex":"3eadaf26-4c76-11e5-8a9d-c53dea4a153c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalkUtils:160","type":"CtLocalVariableImpl","sourcecode":"final int int = 24 * 3600"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:353","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.patch.BinaryHunk.parseHunk(int, int)"},"status":-2},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"3eadaf27-4c76-11e5-8a9d-514a05020e24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1029","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevTag) {\n    org.eclipse.jgit.revwalk.RevWalk.parseHeaders(org.eclipse.jgit.revwalk.RevObject);\n    org.eclipse.jgit.revwalk.RevObject = ((org.eclipse.jgit.revwalk.RevTag)(org.eclipse.jgit.revwalk.RevObject)).getObject();\n}"},"status":-1},{"failures":[],"tindex":"3eadaf28-4c76-11e5-8a9d-71bf07aa1d0e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:664","type":"CtInvocationImpl","sourcecode":"java.lang.System.runFinalization()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.TimeoutOutputStream:124","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.io.TimeoutOutputStream.beginWrite()"},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"3eadd639-4c76-11e5-8a9d-47cd9f724da0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:85","type":"CtIfImpl","sourcecode":"if ((int <= (int)) || (int >= (int)))\n    return int == (int);\n"},"variableMap":{"nextPosition":"subLength","position":"startIncl","sizeInBits":"endExcl"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.LeadingAsteriskMatcher:71","type":"CtIfImpl","sourcecode":"if (int > (int - int))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"3eadd63a-4c76-11e5-8a9d-213638548680","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.TagBuilder:222","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(((java.lang.String) != null ? java.lang.String : \"NOT_SET\"))"},"variableMap":{"r":"out","tag":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1005","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.escapeValue(org.eclipse.jgit.lib.ConfigLine.java.lang.String))"},"status":-2},{"failures":[],"tindex":"3eadd63b-4c76-11e5-8a9d-89fa37a083ec","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject:103","type":"CtLocalVariableImpl","sourcecode":"java.io.InputStream java.io.InputStream"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:205","type":"CtLocalVariableImpl","sourcecode":"java.io.InputStream java.io.InputStream = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(java.io.InputStream, java.util.zip.Inflater)"},"status":-2},{"failures":[],"tindex":"3eadd63c-4c76-11e5-8a9d-d3845ff63c86","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:376","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.FileMode.fromBits(int).getObjectType()) == (org.eclipse.jgit.lib.Constants.int))\n    throw new org.eclipse.jgit.errors.CorruptObjectException((\"invalid mode \" + int));\n"},"variableMap":{"org.eclipse.jgit.lib.Constants.OBJ_BAD":"port","thisMode":"port"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:224","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n    if ((org.eclipse.jgit.transport.OpenSshConfig.Host.int) == 0)\n        org.eclipse.jgit.transport.OpenSshConfig.Host.int = int;\n    "},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}