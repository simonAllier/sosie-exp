{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":215,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":179,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":178,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":203,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":255,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":52,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":260,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":25,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":36,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":65,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":136,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":129,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":231,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":97,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":144,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":146,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":113,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":252,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":143,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":204,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsentGrowsWithObjects":310,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":225,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":88,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":105,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":184,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":94,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":141,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":164,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":256,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":238,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":165,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":188,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":95,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":169,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":257,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":270,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":86,"org.eclipse.jgit.merge.CherryPickTest.testRevert":171,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":173,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":294,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":46,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":183,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":191,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":69,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":148,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":24,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":216,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":153,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":172,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":269,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":289,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":166,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":288,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":22,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":104,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":249,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":202,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":4,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":232,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":43,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":168,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":185,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":287,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":42,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":72,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":119,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":132,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":177,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":125,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":250,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":61,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":92,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":47,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":18,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":130,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":149,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":145,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":280,"org.eclipse.jgit.transport.RefSpecTest.testForceMaster":157,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":182,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":192,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":297,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":275,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":54,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":17,"org.eclipse.jgit.transport.RefSpecTest.testSetDestination_SourceNull":163,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":14,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":243,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":217,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":75,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":180,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":218,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":219,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":41,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterSmallObjects":311,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":40,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":222,"org.eclipse.jgit.transport.RefSpecTest.testSetSourceDestination":160,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":239,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":34,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":80,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":107,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":76,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":120,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":190,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":121,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":258,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":77,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":147,"org.eclipse.jgit.api.GitConstructionTest.testClose":150,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":274,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":278,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects":314,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":44,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":38,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":277,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":244,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":196,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":167,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":199,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":1,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":283,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":29,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":186,"org.eclipse.jgit.transport.RefSpecTest.testSetSource":161,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":49,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":296,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":23,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":281,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":128,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":32,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":31,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":8,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":254,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":195,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":220,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":83,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":70,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":155,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":205,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":87,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":110,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":111,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":201,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":28,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":138,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":210,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":226,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":51,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsent":309,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":89,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat":3,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":209,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":127,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":305,"org.eclipse.jgit.transport.RefSpecTest.testCreateEmpty":158,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":108,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":302,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":247,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":117,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":295,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":114,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":301,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":211,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":53,"org.eclipse.jgit.api.FetchCommandTest.testFetch":131,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":228,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":68,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":189,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod":48,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":101,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":263,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":15,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":33,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":233,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":124,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":84,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":98,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":140,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":230,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":308,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":96,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":122,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":174,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":320,"org.eclipse.jgit.transport.RefSpecTest.testMaster":162,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":142,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":291,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":194,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":224,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":7,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":112,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":154,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":236,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":290,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":272,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":292,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":267,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":175,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":264,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":50,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":19,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":240,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":318,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":106,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":214,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":306,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":317,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":299,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":71,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":85,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":39,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":242,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":102,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":100,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":64,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":63,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":304,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":282,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":21,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":133,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":139,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":248,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":285,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":16,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":253,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":206,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":223,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":298,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":284,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":10,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":198,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":261,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":286,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":55,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":30,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":259,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":13,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":200,"org.eclipse.jgit.api.GitConstructionTest.testWrap":152,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":116,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback":313,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":45,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":319,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":303,"org.eclipse.jgit.api.GitConstructionTest.testOpen":151,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":300,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":93,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":67,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":109,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":237,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":126,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":78,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":271,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":273,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii":2,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":235,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":266,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":11,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":12,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":246,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":176,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":134,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":74,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":181,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":99,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":37,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":197,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testInserterDiscardsPack":315,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":213,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":73,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":9,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":268,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":221,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":316,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":207,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":193,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":118,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":81,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":241,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1":0,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":234,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":79,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":251,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":82,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination":156,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":60,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":90,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":265,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":227,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReaderResolve":312,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii":5,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":66,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":123,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":229,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":187,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":262,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":293,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":212,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":276,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":6,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":56,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":245,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":58,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":59,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":137,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":26,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":135,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":115,"org.eclipse.jgit.merge.CherryPickTest.testPick":170,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":208,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":20,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":103,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":62,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":91,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":307,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":35,"org.eclipse.jgit.transport.RefSpecTest.testSetDestination":159,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":279,"org.eclipse.jgit.api.RevertCommandTest.testRevert":27,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":57},"transformations":[{"failures":[0],"tindex":"0304183d-4c2c-11e5-ba7f-93361b017ed8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.storage.pack.PackConfig:718","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.storage.pack.PackConfig.setCutDeltaChains(org.eclipse.jgit.lib.Config.getBoolean(\"pack\", \"cutdeltachains\", org.eclipse.jgit.storage.pack.PackConfig.getCutDeltaChains()))"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"03043f4e-4c2c-11e5-ba7f-0dde7d14ef85","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.CommitBuilder:297","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write('\\n')"},"status":-1},{"failures":[],"tindex":"03043f4f-4c2c-11e5-ba7f-bbbe9771dffa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ResetCommand:177","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:181","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"03043f50-4c2c-11e5-ba7f-e338cb3f2995","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:813","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.revwalk.RevCommit.getFullMessage().replaceAll(\"([\\n\\r])\", \"$1# \"))"},"variableMap":{"sb":"r","commitToPick":"oldId"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ReflogWriter:234","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.lib.ObjectId.toString(org.eclipse.jgit.lib.ObjectId))"},"status":-2},{"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,150,151,151,152,152,153,154,155,156,157,158,159,160,161,162,163],"tindex":"03043f51-4c2c-11e5-ba7f-35ea75014b94","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.URIish:352","type":"CtIfImpl","sourcecode":"if (((((java.lang.String.length()) >= 3) && ((java.lang.String.charAt(0)) == '/')) && ((java.lang.String.charAt(2)) == ':')) && ((((java.lang.String.charAt(1)) >= 'A') && ((java.lang.String.charAt(1)) <= 'Z')) || (((java.lang.String.charAt(1)) >= 'a') && ((java.lang.String.charAt(1)) <= 'z'))))\n    return java.lang.String.substring(1);\nelse if ((((java.lang.String != null) && ((java.lang.String.length()) >= 2)) && ((java.lang.String.charAt(0)) == '/')) && ((java.lang.String.charAt(1)) == '~'))\n    return java.lang.String.substring(1);\nelse\n    return java.lang.String;\n"},"variableMap":{"p":"dstName","s":"dstName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:248","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,12,13,196,14,197,24,198,199,25,26,200,27,28,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,29,30,31,32,217,218,219,220,221,222,49,50,51,223,52,53,224,225,54,55,56,57,58,59,226,227,60,228,229,61,230,62,63,64,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,65,262,263,264,265,266,67,267,68,268,269,270,271,272,70,71,273,274,72,275,73,276,277,75,278,279,280,281,282,80,81,283,82,284,285,83,286,287,85,288,289,86,290,87,291,292,88,293,294,89,90,295,91,92,296,297,93,94,298,95,299,300,96,301,97],"tindex":"03046662-4c2c-11e5-ba7f-73c95512ec59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.Merger:199","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.eclipse.jgit.revwalk.RevObject[].int) ; int++)\n    org.eclipse.jgit.revwalk.RevTree[][int] = org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.revwalk.RevObject[][int]);"},"status":-1},{"failures":[],"tindex":"03046663-4c2c-11e5-ba7f-5f121f3a3319","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:107","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Repository.org.eclipse.jgit.events.ListenerList"},"variableMap":{"org.eclipse.jgit.lib.Repository.globalListeners":"myListeners"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:141","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.events.ListenerList"},"status":-2},{"failures":[],"tindex":"03046664-4c2c-11e5-ba7f-f58354e4ace8","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackReverseIndex:136","type":"CtLocalVariableImpl","sourcecode":"final int int = int - 1"},"variableMap":{"vi":"pathOff"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:463","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.dircache.DirCacheTree.org.eclipse.jgit.dircache.DirCacheTree.slash(byte[], int)"},"status":-2},{"failures":[302],"tindex":"03046665-4c2c-11e5-ba7f-1d9c0696a5fa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1454","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevCommit) == null) {\n    throw new java.lang.IllegalStateException(\"setUpstreamName must be called after setUpstream.\");\n} "},"variableMap":{"upstreamCommit":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:176","type":"CtIfImpl","sourcecode":"if (boolean)\n    org.eclipse.jgit.revwalk.RevCommit.disposeBody();\n"},"status":-1},{"failures":[303,304,305,306,307,138,141],"tindex":"03046666-4c2c-11e5-ba7f-6d41f8faf2d4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.PacketLineIn:142","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 4"},"variableMap":{"len":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackOutputStream:212","type":"CtOperatorAssignmentImpl","sourcecode":"int += org.eclipse.jgit.internal.storage.pack.PackOutputStream.org.eclipse.jgit.internal.storage.pack.PackOutputStream.ofsDeltaVarIntLength(long)"},"status":-1},{"failures":[],"tindex":"03048d77-4c2c-11e5-ba7f-5f7abab4a440","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.errors.ConcurrentRefUpdateException:96","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.RefUpdate.Result"},"variableMap":{"rc":"org.eclipse.jgit.lib.RefUpdate.Result.LOCK_FAILURE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefUpdate:613","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result"},"status":-2},{"failures":[308,151],"tindex":"03048d78-4c2c-11e5-ba7f-6389332b7b24","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:492","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid name \\'..\\'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:579","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.RepositoryNotFoundException(org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.getGitDir())"},"status":-1},{"failures":[309,310,311,312,313,314,315,316,13,14,317,318,307,319,57,58,59,227,60,228,229,61,230,62,63,64,320],"tindex":"03048d79-4c2c-11e5-ba7f-a58d0d8ae52f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:188","type":"CtUnaryOperatorImpl","sourcecode":"--int"},"variableMap":{"ptr":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:198","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= org.eclipse.jgit.lib.ObjectIdOwnerMap.int"},"status":-1},{"failures":[],"tindex":"03048d7a-4c2c-11e5-ba7f-cb45f5543b97","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:229","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.pack.ObjectToPack.isEdge()) {\n    org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaBase(org.eclipse.jgit.internal.storage.pack.ObjectToPack.copy());\n} else {\n    org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaBase(org.eclipse.jgit.internal.storage.pack.ObjectToPack);\n}"},"variableMap":{"srcObj":"id","resObj":"id"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:241","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    int int;\n    try {\n        int = java.util.zip.Inflater.inflate(byte[]);\n    } catch (java.util.zip.DataFormatException e) {\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    }\n    if (int != 0)\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    if (java.util.zip.Inflater.finished()) {\n        if (((java.util.zip.Inflater.getRemaining()) != 0) || ((java.io.InputStream.read()) != (-1)))\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        break;\n    } \n    if (!(java.util.zip.Inflater.needsInput()))\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    int = java.io.InputStream.read(byte[]);\n    if (int <= 0)\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    java.util.zip.Inflater.setInput(byte[], 0, int);\n}"},"status":-2},{"failures":[],"tindex":"03048d7b-4c2c-11e5-ba7f-8f8b585bbc57","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ResetCommand:345","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk org.eclipse.jgit.treewalk.TreeWalk = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.RecursiveMerger:268","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk org.eclipse.jgit.treewalk.TreeWalk = new org.eclipse.jgit.treewalk.TreeWalk(org.eclipse.jgit.lib.ObjectReader)"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}