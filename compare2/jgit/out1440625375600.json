{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.absoluteGitDirRef":253,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":235,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":225,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":222,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":14,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":152,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":185,"org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail":381,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":46,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":180,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":91,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":187,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsDotGit_CreateRepositoryFromWorkDirOnly":251,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":16,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":315,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":177,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":316,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":375,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":99,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":101,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":27,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":98,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":378,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":226,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":60,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.relativeGitDirRef":252,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":56,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":302,"org.eclipse.jgit.transport.RemoteConfigTest.noInsteadOf":245,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":320,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":96,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":173,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_Seek2IsEOF":7,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":223,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":297,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":373,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":282,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":216,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":141,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":140,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":198,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":308,"org.eclipse.jgit.api.CleanCommandTest.testClean":273,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":296,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":166,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":103,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":178,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":236,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":113,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":30,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":164,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":197,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":163,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":217,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":275,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":70,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":80,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":255,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek3IsEOF":4,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":376,"org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged":257,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":353,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":224,"org.eclipse.jgit.attributes.AttributesMatcherTest.testParentDirectoryGitAttributes":237,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":280,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":351,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":352,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":219,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":317,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":377,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":161,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":278,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":374,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":371,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":51,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":130,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":204,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3":139,"org.eclipse.jgit.attributes.AttributesMatcherTest.testTargetWithoutLeadingSlash":239,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":136,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_BackwardsTwo":3,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":116,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":170,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":263,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique":75,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":306,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":81,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":17,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":28,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":104,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":100,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":122,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":212,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Forward":6,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":63,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":171,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":205,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":370,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":272,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":39,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":269,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":146,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":209,"org.eclipse.jgit.api.RmCommandTest.testRemoveCached":258,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":147,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":148,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":248,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":355,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":356,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":90,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":283,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":354,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":291,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":350,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":58,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":349,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":348,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":347,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":337,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":131,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":336,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":132,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":183,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":338,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":102,"org.eclipse.jgit.transport.PackParserTest.test1":41,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":304,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":380,"org.eclipse.jgit.api.GitConstructionTest.testClose":32,"org.eclipse.jgit.transport.PackParserTest.test2":42,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":203,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":210,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":267,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":208,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":82,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":38,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts1":1,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":218,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":292,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts2":2,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":142,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":247,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsTwo":12,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":270,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":288,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":213,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":15,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":145,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":19,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":144,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":73,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":357,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":221,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":358,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":149,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":359,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":159,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":227,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":49,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":333,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":25,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":77,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":334,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":182,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":335,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":181,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":93,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_ForwardOneAtATime":5,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":110,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":262,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":21,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":43,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":271,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":243,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Backwards":10,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":167,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":230,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":138,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":78,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":259,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":54,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":290,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":128,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":295,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":168,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":125,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":368,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":367,"org.eclipse.jgit.api.BlameCommandTest.testRename":264,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":369,"org.eclipse.jgit.transport.URIishTest.testScpStyleNoURIDecoding":242,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":366,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":231,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":153,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":343,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":344,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":345,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":346,"org.eclipse.jgit.api.FetchCommandTest.testFetch":50,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":114,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":195,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_workDirSet":254,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":362,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":67,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":189,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":289,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":83,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":360,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":361,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":135,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":64,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":95,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":117,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":331,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":176,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":330,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":332,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":133,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":274,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsOneAtATime":8,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":20,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":62,"org.eclipse.jgit.transport.PackParserTest.testPackWithTrailingGarbage":45,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":261,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":97,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":299,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":154,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":26,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":74,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":265,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":260,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":31,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":281,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":305,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":298,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":200,"org.eclipse.jgit.api.PushCommandTest.testPush":24,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":300,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":194,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":309,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":190,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":150,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":256,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":284,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":57,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":234,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":174,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":23,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":162,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":201,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":268,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":365,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":68,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":66,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":120,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":363,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":119,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":364,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":214,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":124,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":287,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":327,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":61,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":52,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":328,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":94,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":158,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":286,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":329,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":151,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":228,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":279,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":307,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":157,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":179,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":160,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":186,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":155,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":143,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":184,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":37,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":246,"org.eclipse.jgit.api.GitConstructionTest.testWrap":34,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback":72,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":127,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":105,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":85,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromWorkDirOnly":250,"org.eclipse.jgit.api.GitConstructionTest.testOpen":33,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":13,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":175,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":172,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":193,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":84,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":55,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":137,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":199,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":202,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":29,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":379,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek2":0,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":192,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":36,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":321,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":121,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":79,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":53,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":372,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":65,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":266,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":276,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwards_ConfusingPathName":11,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":249,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":44,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":233,"org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserRelativePath":240,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":206,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":301,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":40,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":325,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":123,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":196,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":324,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":326,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":35,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":129,"org.eclipse.jgit.attributes.AttributesMatcherTest.testFileNameWildcards":238,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":303,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":156,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":76,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":285,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":340,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":339,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":342,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":341,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":59,"org.eclipse.jgit.transport.URIishTest.testScpStyleWithUser":241,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":293,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":112,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":191,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":111,"org.eclipse.jgit.lib.MergeHeadMsgTest.testReadWriteMergeMsg":215,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReaderResolve":71,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":22,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":134,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":115,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":188,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":220,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":47,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":165,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":232,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":319,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":318,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":207,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":106,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":108,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":92,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":109,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":311,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":312,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":313,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":294,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":314,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":87,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":322,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":89,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":88,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":323,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":126,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":229,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":69,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Seek1IsEOF":9,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":118,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":18,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":169,"org.eclipse.jgit.transport.RemoteConfigTest.noPushInsteadOf":244,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":277,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":48,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":86,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":211,"org.eclipse.jgit.api.RevertCommandTest.testRevert":310,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":107},"transformations":[{"failures":[],"tindex":"69317b74-4c3b-11e5-9062-8db0dd6032fc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:425","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.filter.TreeFilter) != null)\n    java.util.Collection<org.eclipse.jgit.treewalk.filter.TreeFilter>.add(org.eclipse.jgit.treewalk.filter.TreeFilter);\n"},"status":-2},{"failures":[],"tindex":"6931c995-4c3b-11e5-9062-9b6236c51e89","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:692","type":"CtTryImpl","sourcecode":"try {\n    return org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.lib.Constants.java.lang.String);\n} finally {\n    org.eclipse.jgit.lib.Repository.close();\n}"},"variableMap":{"org.eclipse.jgit.lib.Constants.HEAD":"revstr","subRepo":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:735","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Repository.isValidRefName((\"x/\" + java.lang.String))) {\n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRefDatabase().getRef(java.lang.String);\n    if (org.eclipse.jgit.lib.Ref != null)\n        return org.eclipse.jgit.lib.Ref.getObjectId();\n    \n} "},"status":-2},{"failures":[],"tindex":"6931c996-4c3b-11e5-9062-c7780a17d377","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:538","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"variableMap":{"keyEnd":"namePos"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TreeFormatter:255","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], int, byte[], int, int)"},"status":-2},{"failures":[],"tindex":"6931c997-4c3b-11e5-9062-e53af07114cf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:311","type":"CtLocalVariableImpl","sourcecode":"int int = 8192"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:520","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.lib.AbbreviatedObjectId.mask(int, 1, int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,32,33,33,34,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"tindex":"6931c998-4c3b-11e5-9062-6b739d409896","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:352","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write((int >>> 8))"},"status":-1},{"failures":[139],"tindex":"69335039-4c3b-11e5-9062-35e79bba6a5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:188","type":"CtAssignmentImpl","sourcecode":"byte[][--int] = '\\n'"},"status":-1},{"failures":[],"tindex":"6933774a-4c3b-11e5-9062-2f25c3b3e6a2","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:734","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.PersonIdent:256","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"6933774b-4c3b-11e5-9062-550676d9cc49","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:283","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.FileUtils.mkdir(new java.io.File(org.eclipse.jgit.lib.Repository.getDirectory() , \"hooks\"))"},"variableMap":{"this":"repository"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:517","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) {\n    org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode = org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode;\n    org.eclipse.jgit.submodule.SubmoduleWalk org.eclipse.jgit.submodule.SubmoduleWalk = org.eclipse.jgit.submodule.SubmoduleWalk.forIndex(org.eclipse.jgit.lib.Repository);\n    while (org.eclipse.jgit.submodule.SubmoduleWalk.next()) {\n        try {\n            if (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode == null)\n                org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode = org.eclipse.jgit.submodule.SubmoduleWalk.getModulesIgnore();\n            \n            if (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.equals(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode))\n                continue;\n            \n        } catch (org.eclipse.jgit.errors.ConfigInvalidException e) {\n            java.io.IOException java.io.IOException = new java.io.IOException((\"Found invalid ignore param for submodule \" + (org.eclipse.jgit.submodule.SubmoduleWalk.getPath())));\n            java.io.IOException.initCause(org.eclipse.jgit.errors.ConfigInvalidException);\n            throw java.io.IOException;\n        }\n        org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository = org.eclipse.jgit.submodule.SubmoduleWalk.getRepository();\n        if (org.eclipse.jgit.lib.Repository != null) {\n            try {\n                org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(\"HEAD\");\n                if ((org.eclipse.jgit.lib.ObjectId != null) && (!(org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId()))))\n                    java.util.Set<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n                else if ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) {\n                    org.eclipse.jgit.lib.IndexDiff org.eclipse.jgit.lib.IndexDiff = java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff>.get(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n                    if (org.eclipse.jgit.lib.IndexDiff == null) {\n                        org.eclipse.jgit.lib.IndexDiff = new org.eclipse.jgit.lib.IndexDiff(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId() , org.eclipse.jgit.lib.IndexDiff.WorkingTreeIteratorFactory.getWorkingTreeIterator(org.eclipse.jgit.lib.Repository));\n                        java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff>.put(org.eclipse.jgit.submodule.SubmoduleWalk.getPath(), org.eclipse.jgit.lib.IndexDiff);\n                    } \n                    if (org.eclipse.jgit.lib.IndexDiff.diff()) {\n                        if ((((((((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) == (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) && (org.eclipse.jgit.lib.IndexDiff.getAdded().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getChanged().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getConflicting().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getMissing().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getModified().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getRemoved().isEmpty())) {\n                            continue;\n                        } \n                        java.util.Set<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n                    } \n                } \n            } finally {\n                org.eclipse.jgit.lib.Repository.close();\n            }\n        } \n    }\n} "},"status":-2},{"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,36,37,38,106,107,108,109,110,111,112,114,115,116,117,118,119,120,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236],"tindex":"6933774c-4c3b-11e5-9062-4fc043f0bbbb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:286","type":"CtLocalVariableImpl","sourcecode":"final java.io.File java.io.File = new java.io.File(new java.io.File(java.io.File , \".ssh\") , \"known_hosts\")"},"variableMap":{"home":"gitDir"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1350","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.io.File , org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-1},{"failures":[],"tindex":"6933774d-4c3b-11e5-9062-01d18af4422b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CheckoutCommand:606","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.revwalk.RevCommit = null"},"variableMap":{"startCommit":"newp"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RewriteGenerator:108","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit[][int] = org.eclipse.jgit.revwalk.RevCommit"},"status":-2},{"failures":[237,238,239],"tindex":"69339e5e-4c3b-11e5-9062-c7c8eabb90bd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:115","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(\"sh\")"},"variableMap":{"argv":"segments"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:117","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(java.lang.String.substring(int))"},"status":-1},{"failures":[240,241,242,243,244,245],"tindex":"69339e5f-4c3b-11e5-9062-2be45a2d87fc","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RefMap:286","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(java.lang.String.length())"},"variableMap":{"prefix":"user","name":"user"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:230","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.util.regex.Matcher.group(1)"},"status":-1},{"failures":[26,27,30,31,93,96,246,247,49,57,58,248,249,54,55,65,67,68,69,70,250,251,252,253,254],"tindex":"69339e60-4c3b-11e5-9062-676287f74357","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:601","type":"CtIfImpl","sourcecode":"if (!(java.io.File.isFile()))\n    org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.setGitDir(java.io.File);\nelse\n    org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.setGitDir(org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.org.eclipse.jgit.lib.BaseRepositoryBuilder.getSymRef(org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.getWorkTree(), java.io.File, org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.safeFS()));\n"},"status":-1},{"failures":[255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,151,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,39,107,108,109,111,115,117,118,119,120,287,288,289,290,291,156,292,293,294,157,158,160,163,164,295,296,297,298,299,300,301,302,303,165,167,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,187,189,190,196,198,370,201,204,371,206,372,209,93,373,374,375,376,377,378,219,379,380,65,66,67,68,69,70,221,381,224,225,226,230,232],"tindex":"69339e61-4c3b-11e5-9062-510cd8ec10e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheBuilder:133","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.BaseDirCacheEditor.fastKeep(int, int)"},"status":-1},{"failures":[],"tindex":"69339e62-4c3b-11e5-9062-4fcfd5f01abf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:211","type":"CtIfImpl","sourcecode":"if (int >= int)\n    return 0;\n"},"variableMap":{"sz":"cnt","ptr":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.AutoCRLFInputStream:105","type":"CtIfImpl","sourcecode":"if ((int) == (-1))\n    return -1;\n"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}