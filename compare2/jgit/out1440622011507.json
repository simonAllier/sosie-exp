{"failureDictionary":{"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":37,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":27,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter":18,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":48,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":11,"org.eclipse.jgit.notes.NoteMapTest.testGetCachedBytes":36,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":29,"org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38":35,"org.eclipse.jgit.notes.NoteMapMergerTest.testNoChange":53,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTag":0,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":55,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs":44,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent":45,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter":12,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":30,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":51,"org.eclipse.jgit.notes.NoteMapTest.testReadFlatTwoNotes":32,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":40,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO":15,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder2":13,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict":50,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoType4":10,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":20,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":28,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":54,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":41,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":43,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":46,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1":16,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoTagHeader3":5,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoTagHeader2":4,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoTagHeader1":3,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE":14,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject4":6,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTagHasNoTaggerHeader":9,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject5":7,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject6":8,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":31,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat":42,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":38,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes":49,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":24,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":23,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NO_MERGES":17,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagInvalidTaggerHeader3":2,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":34,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagInvalidTaggerHeader1":1,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":26,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":21,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":25,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":52,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":22,"org.eclipse.jgit.notes.NoteMapTest.testEditFlat":33,"org.eclipse.jgit.notes.NoteMapMergerTest.testDeleteDifferentNotes":47,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":39,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":19},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"94069370-4c33-11e5-9462-b9d49e7d1cc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:270","type":"CtIfImpl","sourcecode":"if (((int = org.eclipse.jgit.lib.ObjectChecker.id(byte[], int)) < 0) || ((byte[][int++]) != '\\n'))\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid object\");\n"},"status":-1},{"failures":[],"tindex":"94069371-4c33-11e5-9462-37c630b4a14b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:300","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:226","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList>.get()"},"status":-2},{"failures":[],"tindex":"9406ba82-4c33-11e5-9462-cf6f10b66c4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:196","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"status":0},{"failures":[11],"tindex":"9406ba83-4c33-11e5-9462-dbf24d5ee41b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:665","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode)"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"9406ba84-4c33-11e5-9462-f36407a18553","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:664","type":"CtInvocationImpl","sourcecode":"java.lang.System.runFinalization()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:145","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.revwalk.RevCommit.int) & (org.eclipse.jgit.revwalk.PendingGenerator.int)) != 0)\n    continue;\n"},"status":-1},{"failures":[],"tindex":"9406ba85-4c33-11e5-9462-754f49d42f5f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StatusCommand:143","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != null)\n    org.eclipse.jgit.lib.IndexDiff.setIgnoreSubmoduleMode(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode);\n"},"status":0},{"failures":[],"tindex":"9406ba86-4c33-11e5-9462-5732a6384f72","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Tree:113","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int int = (byte[][int]) & 255;\n    if (int < int)\n        return -1;\n    else if (int > int)\n        return 1;\n    else if (int == (int - 1))\n        return 0;\n    else\n        return 1;\n    \n} "},"variableMap":{"nameEnd":"ptr","lasta":"sz","nameUTF8":"b","k":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:1053","type":"CtIfImpl","sourcecode":"if ((int < int) && ((byte[][int]) == '\\n'))\n    return int + 1;\n"},"status":0},{"failures":[],"tindex":"9406ba87-4c33-11e5-9462-c5b036d34454","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:139","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(1000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DateRevQueue:139","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.DateRevQueue.freeEntry(org.eclipse.jgit.revwalk.DateRevQueue.Entry)"},"status":-2},{"failures":[],"tindex":"9406e198-4c33-11e5-9462-078ea4c669cc","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:146","type":"CtAssignmentImpl","sourcecode":"int = (byte[].int) + 1"},"variableMap":{"length":"ptr","binbuf":"buf","binbufcnt":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:165","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.patch.Patch.parseFile(byte[], int, int)"},"status":-2},{"failures":[],"tindex":"9406e199-4c33-11e5-9462-b719417bf74e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:410","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Object java.lang.Object = org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String);\n    if (java.lang.Object != null)\n        if (java.lang.Object instanceof java.lang.String)\n            return ((java.lang.String)(java.lang.Object));\n        else\n            return ((org.eclipse.jgit.lib.AnyObjectId)(java.lang.Object)).getName();\n        \n    \n    return null;\n} finally {\n    org.eclipse.jgit.revwalk.RevWalk.release();\n}"},"status":-2},{"failures":[27,28,29,30,31],"tindex":"9406e19a-4c33-11e5-9462-a3e166d57417","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DiffCommand:156","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.diff.DiffFormatter.flush()"},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"9406e19b-4c33-11e5-9462-8b602464bb38","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.TreeWalk:678","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.MutableObjectId.clear()"},"variableMap":{"out":"id"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteParser:153","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.MutableObjectId.fromString(byte[], int)"},"status":-1},{"failures":[],"tindex":"9406e19c-4c33-11e5-9462-bda46b0134d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:769","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case org.eclipse.jgit.lib.Constants.int :\n    case org.eclipse.jgit.lib.Constants.int :\n    case org.eclipse.jgit.lib.Constants.int :\n    case org.eclipse.jgit.lib.Constants.int :\n        {\n            if (org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta != null) {\n                byte[] = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.decompress((long + int), ((int)(long)), org.eclipse.jgit.internal.storage.dfs.DfsReader);\n                int = int;\n                break SEARCH;\n            } \n            if (long < (org.eclipse.jgit.internal.storage.dfs.DfsReader.getStreamFileThreshold())) {\n                byte[] = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.decompress((long + int), ((int)(long)), org.eclipse.jgit.internal.storage.dfs.DfsReader);\n                if (byte[] != null)\n                    return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n                \n            } \n            return new org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject(int , long , long , int , this , org.eclipse.jgit.internal.storage.dfs.DfsReader.org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase);\n        }\n    case org.eclipse.jgit.lib.Constants.int :\n        {\n            int = (byte[][int++]) & 255;\n            long long = int & 127;\n            while ((int & 128) != 0) {\n                long += 1;\n                int = (byte[][int++]) & 255;\n                long <<= 7;\n                long += int & 127;\n            }\n            long = long - long;\n            org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta = new org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta(org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta , long , ((int)(long)) , int , long);\n            if (long != (org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.int))\n                break SEARCH;\n            \n            org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry = org.eclipse.jgit.internal.storage.dfs.DfsReader.getDeltaBaseCache().get(org.eclipse.jgit.internal.storage.dfs.DfsPackKey, long);\n            if (org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry != null) {\n                int = org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry.int;\n                byte[] = org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry.byte[];\n                boolean = true;\n                break SEARCH;\n            } \n            long = long;\n            continue SEARCH;\n        }\n    case org.eclipse.jgit.lib.Constants.int :\n        {\n            org.eclipse.jgit.internal.storage.dfs.DfsPackFile.readFully((long + int), byte[], 0, 20, org.eclipse.jgit.internal.storage.dfs.DfsReader);\n            long long = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.findDeltaBase(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ObjectId.fromRaw(byte[]));\n            org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta = new org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta(org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta , long , ((int)(long)) , (int + 20) , long);\n            if (long != (org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.int))\n                break SEARCH;\n            \n            org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry = org.eclipse.jgit.internal.storage.dfs.DfsReader.getDeltaBaseCache().get(org.eclipse.jgit.internal.storage.dfs.DfsPackKey, long);\n            if (org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry != null) {\n                int = org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry.int;\n                byte[] = org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry.byte[];\n                boolean = true;\n                break SEARCH;\n            } \n            long = long;\n            continue SEARCH;\n        }\n    default :\n        throw new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.valueOf(int)));\n}"},"status":-2},{"failures":[],"tindex":"940708ad-4c33-11e5-9462-e9eeb264dac6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:282","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.eclipse.jgit.revplot.PlotLane = org.eclipse.jgit.revplot.PlotCommitList<L>.nextFreeLane(java.util.BitSet);\n    org.eclipse.jgit.revplot.PlotCommit.addForkingOffLane(org.eclipse.jgit.revplot.PlotLane);\n    org.eclipse.jgit.revplot.PlotCommitList<L>.closeLane(org.eclipse.jgit.revplot.PlotLane);\n} else {\n    int int = org.eclipse.jgit.revplot.PlotCommitList<L>.getFreePosition(java.util.BitSet);\n    java.util.TreeSet<java.lang.Integer>.add(java.lang.Integer.valueOf(org.eclipse.jgit.revplot.PlotLane.getPosition()));\n    org.eclipse.jgit.revplot.PlotLane.int = int;\n}"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}