{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":172,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":35,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":97,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":32,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":81,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":137,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":190,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":105,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":107,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":46,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":104,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":10,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":77,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":94,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":162,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":80,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":102,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":86,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":158,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":75,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":179,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":109,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":128,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":148,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":169,"org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified":183,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":70,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":23,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":160,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":165,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":7,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":52,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":112,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":58,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":131,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":40,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":138,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":180,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":110,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":106,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":178,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":13,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":72,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":18,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":147,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":14,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":16,"org.eclipse.jgit.lib.T0002_TreeTest.test005_addRecursiveFile":184,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":96,"org.eclipse.jgit.util.Base64Test.testEncodeMatchesDecode":1,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":156,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":53,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":54,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":73,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":108,"org.eclipse.jgit.api.GitConstructionTest.testClose":117,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":17,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":41,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":146,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":39,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":78,"org.eclipse.jgit.lib.T0002_TreeTest.test002_addFile":187,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":34,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":155,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":136,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":140,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":36,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":157,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":189,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":15,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":91,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":44,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":38,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":99,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":125,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":164,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":142,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":170,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":151,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":60,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":21,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":92,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":50,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":47,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":19,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":63,"org.eclipse.jgit.lib.IndexDiffTest.testModified":191,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":5,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":153,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":87,"org.eclipse.jgit.api.FetchCommandTest.testFetch":111,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":167,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":129,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":82,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":67,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":42,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":57,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":64,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":101,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":132,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":83,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":55,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":12,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":141,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":174,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":150,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":103,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":45,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":154,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":149,"org.eclipse.jgit.api.PushCommandTest.testPush":116,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":166,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":175,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":89,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":30,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":95,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":31,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":29,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":115,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":28,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":68,"org.eclipse.jgit.lib.T0002_TreeTest.test007_manyFileLookup":185,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":66,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":22,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":135,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":20,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":134,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":11,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":84,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":100,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":85,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":163,"org.eclipse.jgit.util.Base64Test.testEncode":0,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":145,"org.eclipse.jgit.lib.T0002_TreeTest.test008_SubtreeInternalSorting":186,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":71,"org.eclipse.jgit.api.GitConstructionTest.testWrap":119,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":49,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":120,"org.eclipse.jgit.api.GitConstructionTest.testOpen":118,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":43,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":93,"org.eclipse.jgit.lib.IndexDiffTest.testRemoved":192,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":59,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":61,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":181,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":144,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":76,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":176,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":113,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":177,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":65,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":159,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":37,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":74,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":143,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":2,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":51,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":88,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":9,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":79,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":127,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":126,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":114,"org.eclipse.jgit.lib.T0002_TreeTest.test006_addDeepTree":188,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":56,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":130,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":8,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":3,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":6,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":27,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":26,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":173,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":25,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":121,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":24,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":123,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":98,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":124,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":33,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":62,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":152,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":168,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test012_SubtreeExternalSorting":182,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":48,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":171,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":69,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":161,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":133,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":139,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":4,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":90,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":122},"transformations":[{"failures":[],"tindex":"ce40ef6f-4c43-11e5-9cdd-23779849510e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:151","type":"CtIfImpl","sourcecode":"if ((int) <= (int))\n    break;\n"},"variableMap":{"cur":"org.eclipse.jgit.lib.IndexDiff.WORKDIR","end":"org.eclipse.jgit.lib.IndexDiff.WORKDIR"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:432","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.treewalk.TreeWalk.next()) {\n    org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator);\n    org.eclipse.jgit.dircache.DirCacheIterator org.eclipse.jgit.dircache.DirCacheIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator);\n    org.eclipse.jgit.treewalk.WorkingTreeIterator org.eclipse.jgit.treewalk.WorkingTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator);\n    if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n        final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry();\n        if (org.eclipse.jgit.dircache.DirCacheEntry != null) {\n            int int = org.eclipse.jgit.dircache.DirCacheEntry.getStage();\n            if (int > 0) {\n                java.lang.String java.lang.String = org.eclipse.jgit.treewalk.TreeWalk.getPathString();\n                org.eclipse.jgit.lib.IndexDiff.addConflict(java.lang.String, int);\n                continue;\n            } \n        } \n    } \n    if (org.eclipse.jgit.treewalk.AbstractTreeIterator != null) {\n        if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n            if ((!(org.eclipse.jgit.treewalk.AbstractTreeIterator.idEqual(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryRawMode()) != (org.eclipse.jgit.dircache.DirCacheIterator.getEntryRawMode()))) {\n                if (((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.AbstractTreeIterator))) || (!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator)))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                    java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n                \n            } \n        } else {\n            if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.AbstractTreeIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n            if (org.eclipse.jgit.treewalk.WorkingTreeIterator != null)\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n        }\n    } else {\n        if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n            if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n        } else {\n            if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (!(org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored()))) {\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            } \n        }\n    }\n    if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n        if (org.eclipse.jgit.treewalk.WorkingTreeIterator == null) {\n            if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n        } else {\n            if (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry(), true, org.eclipse.jgit.treewalk.TreeWalk.getObjectReader())) {\n                if (((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || (!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.WorkingTreeIterator)))) || (((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) && ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode))))\n                    java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n                \n            } \n        }\n    } \n    for (int int = 0 ; int < (org.eclipse.jgit.treewalk.TreeWalk.getTreeCount()) ; int++) {\n        java.util.Set<java.lang.String> java.util.Set<java.lang.String> = java.util.Map<org.eclipse.jgit.lib.FileMode, java.util.Set<java.lang.String>>.get(org.eclipse.jgit.treewalk.TreeWalk.getFileMode(int));\n        java.lang.String java.lang.String = org.eclipse.jgit.treewalk.TreeWalk.getPathString();\n        if (java.lang.String != null) {\n            if (java.util.Set<java.lang.String> == null)\n                java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>();\n            \n            java.util.Set<java.lang.String>.add(java.lang.String);\n            java.util.Map<org.eclipse.jgit.lib.FileMode, java.util.Set<java.lang.String>>.put(org.eclipse.jgit.treewalk.TreeWalk.getFileMode(int), java.util.Set<java.lang.String>);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"ce413d90-4c43-11e5-9cdd-2fddf04a2c4d","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:159","type":"CtAssignmentImpl","sourcecode":"int = ((int << 5) + int) + int"},"variableMap":{"c":"cmd","hash":"cmd"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:204","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"ce413d91-4c43-11e5-9cdd-f392a3d5eb94","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1329","type":"CtIfImpl","sourcecode":"if (int == 0)\n    int = java.lang.Runtime.getRuntime().availableProcessors();\n"},"variableMap":{"threads":"refcnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:300","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.api.ArchiveCommand.FormatEntry.int) == 1) {\n    org.eclipse.jgit.api.ArchiveCommand.FormatEntry = null;\n    continue;\n} "},"status":-2},{"failures":[0,1],"tindex":"ce413d92-4c43-11e5-9cdd-073bd5fa2739","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.Base64:114","type":"CtOperatorAssignmentImpl","sourcecode":"int |= ((byte[][(int + 2)]) << 24) >>> 24"},"status":-1},{"failures":[],"tindex":"ce413d93-4c43-11e5-9cdd-bd74ea4a3535","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommit:212","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revplot.PlotLane = null"},"variableMap":{"lane":"laneToUse"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:231","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revplot.PlotLane = org.eclipse.jgit.revplot.PlotCommitList<L>.handleMerge(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotLane)"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,117,118,118,119,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"tindex":"ce4164a4-4c43-11e5-9cdd-1ffce0392dfa","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:432","type":"CtTryImpl","sourcecode":"try {\n    java.io.File java.io.File = org.eclipse.jgit.internal.storage.file.ObjectDirectory.fileFor(org.eclipse.jgit.lib.AnyObjectId);\n    java.io.FileInputStream java.io.FileInputStream = new java.io.FileInputStream(java.io.File);\n    try {\n        org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.add(org.eclipse.jgit.lib.AnyObjectId);\n        return org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.FileInputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor);\n    } finally {\n        java.io.FileInputStream.close();\n    }\n} catch (java.io.FileNotFoundException noFile) {\n    org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.remove(org.eclipse.jgit.lib.AnyObjectId);\n    return null;\n}"},"variableMap":{"this":"this","id":"objectId","curs":"curs","unpackedObjectCache":"unpackedObjectCache"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:368","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.isUnpacked(org.eclipse.jgit.lib.AnyObjectId)) {\n    org.eclipse.jgit.lib.ObjectLoader org.eclipse.jgit.lib.ObjectLoader = org.eclipse.jgit.internal.storage.file.ObjectDirectory.openLooseObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId);\n    if (org.eclipse.jgit.lib.ObjectLoader != null)\n        return org.eclipse.jgit.lib.ObjectLoader;\n    \n} "},"status":-1},{"failures":[],"tindex":"ce433965-4c43-11e5-9cdd-c575a334063b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:550","type":"CtWhileImpl","sourcecode":"while (!org.eclipse.jgit.treewalk.AbstractTreeIterator.(first()))\n    org.eclipse.jgit.treewalk.AbstractTreeIterator.back(1);"},"variableMap":{"this":"cIter"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:312","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.dircache.DirCacheIterator != null) && (org.eclipse.jgit.dircache.DirCacheIterator.idEqual(org.eclipse.jgit.treewalk.AbstractTreeIterator))) {\n    org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry();\n    org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(org.eclipse.jgit.dircache.DirCacheEntry.getLastModified());\n    org.eclipse.jgit.dircache.DirCacheEntry.setLength(org.eclipse.jgit.dircache.DirCacheEntry.getLength());\n} "},"status":-2},{"failures":[],"tindex":"ce433966-4c43-11e5-9cdd-79eff5a30ffb","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.GarbageCollectCommand:223","type":"CtInvocationImpl","sourcecode":"java.util.Properties.put(\"numberOfPackedObjects\", org.eclipse.jgit.internal.storage.file.GC.RepoStatistics.long)"},"variableMap":{"p":"p","numberOfPackedObjects":"numberOfLooseObjects","stats":"stats"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.GarbageCollectCommand:221","type":"CtInvocationImpl","sourcecode":"java.util.Properties.put(\"numberOfLooseObjects\", org.eclipse.jgit.internal.storage.file.GC.RepoStatistics.long)"},"status":-2},{"failures":[],"tindex":"ce436077-4c43-11e5-9cdd-c72b7e3c2195","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:330","type":"CtReturnImpl","sourcecode":"return (int) >>> 24"},"variableMap":{"w1":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.AbstractPlotRenderer:196","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"ce436078-4c43-11e5-9cdd-3b0fa4799296","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.AbstractPlotRenderer:162","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revplot.AbstractPlotRenderer<TLane, TColor>.drawLine(TColor, int, 0, int, int, org.eclipse.jgit.revplot.AbstractPlotRenderer.int)"},"status":0},{"failures":[182,183,184,185,186,187,188,189,190,191,192],"tindex":"ce436079-4c43-11e5-9cdd-d30d3f992a3a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:174","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.eclipse.jgit.dircache.DirCacheEntry.int]"},"variableMap":{"org.eclipse.jgit.dircache.DirCacheEntry.NAME_MASK":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:291","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.eclipse.jgit.lib.Tree.org.eclipse.jgit.lib.Tree.substring(byte[], int, int)"},"status":-1},{"failures":[],"tindex":"ce43607a-4c43-11e5-9cdd-e13a9d7f6b42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.FanoutBucket:226","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":0},{"failures":[],"tindex":"ce43607b-4c43-11e5-9cdd-5d9a5bf4b602","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.FastIgnoreRule:115","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.ignore.internal.IMatcher = org.eclipse.jgit.ignore.internal.IMatcher.org.eclipse.jgit.ignore.internal.IMatcher"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":13,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}