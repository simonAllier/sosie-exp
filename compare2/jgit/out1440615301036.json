{"failureDictionary":{"org.eclipse.jgit.util.RawParseUtils_LineMapTest.testTwoLineFooBar":50,"org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter":10,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter":35,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":54,"org.eclipse.jgit.util.RawParseUtilsTest.testParseEncoding_badEncoding":42,"org.eclipse.jgit.util.io.UnionInputStreamTest.testSkip":57,"org.eclipse.jgit.util.io.UnionInputStreamTest.testEmptyStream":58,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":4,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":40,"org.eclipse.jgit.util.RawParseUtils_LineMapTest.testTwoLineNoLF":52,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter":36,"org.eclipse.jgit.util.RawParseUtilsTest.testParseEncoding_Accept_Latin_One_AsISO8859_1":44,"org.eclipse.jgit.util.RawParseUtilsTest.testParseEncoding_ISO8859_1_encoding":43,"org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits":59,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded":21,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":3,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":48,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO":30,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":38,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":2,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder2":28,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder1":27,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":39,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":55,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow":11,"org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneFIFO":33,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":46,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":56,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":5,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":41,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":24,"org.eclipse.jgit.util.RawParseUtils_LineMapTest.testOneBlankLine":49,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_mixed_encoded":13,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1":37,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":8,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":0,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE":29,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":9,"org.eclipse.jgit.revwalk.RevTagParseTest.testParseOldStyleNoTagger":14,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":45,"org.eclipse.jgit.util.RawParseUtils_LineMapTest.testFourLineBlanks":51,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory":31,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_encoded":26,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":53,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":7,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NO_MERGES":34,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow":12,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_UTF8_encoded":16,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEmbeddedAndEndingLF":25,"org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertOutOfOrder":32,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":6,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":47,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_OnlyLFMessage":15,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_GitStyleMessage":18,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded2":20,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEmbeddedLF":22,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEndLF":23,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":1,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyNoLF":19,"org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields":17},"transformations":[{"failures":[],"tindex":"f445ce77-4c23-11e5-afe0-7d23b5263c6a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:477","type":"CtIfImpl","sourcecode":"if ((int < int) && ((byte[][int]) == 0))\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"name contains byte 0x00\");\n"},"variableMap":{"e":"p","raw":"delta","end":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:92","type":"CtDoImpl","sourcecode":"do {\n    int = (byte[][int++]) & 255;\n} while ((int & 128) != 0 )"},"status":-2},{"failures":[],"tindex":"f445f588-4c23-11e5-afe0-63581d2d22a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:565","type":"CtAssignmentImpl","sourcecode":"java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref> = java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"f445f589-4c23-11e5-afe0-2d1da78a0caa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.BlockObjQueue:123","type":"CtReturnImpl","sourcecode":"return (int) == (org.eclipse.jgit.revwalk.BlockObjQueue.Block.int)"},"variableMap":{"tailIndex":"org.eclipse.jgit.merge.ResolveMerger.T_OURS","org.eclipse.jgit.revwalk.BlockObjQueue.Block.BLOCK_SIZE":"modeT"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:617","type":"CtIfImpl","sourcecode":"if (((int != 0) && (!(org.eclipse.jgit.treewalk.NameConflictTreeWalk.idEqual(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.merge.ResolveMerger.int)))) || ((int != 0) && (!(org.eclipse.jgit.treewalk.NameConflictTreeWalk.idEqual(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.merge.ResolveMerger.int))))) {\n    org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n    org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n    org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n    if (int == 0) {\n        if (org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheEntry))\n            return false;\n        \n        if (org.eclipse.jgit.merge.ResolveMerger.org.eclipse.jgit.merge.ResolveMerger.nonTree(int)) {\n            if (org.eclipse.jgit.dircache.DirCacheEntry != null)\n                java.util.Map<java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), org.eclipse.jgit.dircache.DirCacheEntry);\n            \n        } \n    } \n    java.util.List<java.lang.String>.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString());\n    java.util.Map<java.lang.String, org.eclipse.jgit.merge.MergeResult<? extends org.eclipse.jgit.diff.Sequence>>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), org.eclipse.jgit.merge.ResolveMerger.contentMerge(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser));\n} "},"status":-1},{"failures":[],"tindex":"f4461c9a-4c23-11e5-afe0-ef462ac7b9a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:175","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"f4461c9b-4c23-11e5-afe0-6b5dcac4673b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackConnection:158","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"f4461c9c-4c23-11e5-afe0-ed8629838657","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:380","type":"CtReturnImpl","sourcecode":"return (int) + (org.eclipse.jgit.dircache.DirCacheEntry.int)"},"variableMap":{"org.eclipse.jgit.dircache.DirCacheEntry.P_OBJECTID":"ptr","infoOffset":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:431","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.next(byte[], int, '\\n')"},"status":-2},{"failures":[],"tindex":"f4461c9d-4c23-11e5-afe0-fd4c80708c04","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.StartGenerator:102","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.MergeBaseGenerator.next()"},"variableMap":{"mbg":"g"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.BoundaryGenerator:74","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.Generator.next()"},"status":-2},{"failures":[],"tindex":"f4461c9e-4c23-11e5-afe0-ffa1e17debcf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:620","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.internal.storage.file.RefDirectory.readPackedRefs()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:512","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.internal.storage.file.RefDirectory.getPackedRefs()"},"status":0},{"failures":[],"tindex":"f4461c9f-4c23-11e5-afe0-470344824bf8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:602","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"\"))\n    java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n"},"variableMap":{"name":"argValue","org.eclipse.jgit.lib.Constants.HEAD":"preferredAuthentications"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:236","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n    if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n        org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.nows(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n    "},"status":-2},{"failures":[],"tindex":"f44643b0-4c23-11e5-afe0-e36f4161b016","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.HashedSequencePair:103","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[int]"},"variableMap":{"end":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.IntSet:76","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = new int[(int[].int) * 2]"},"status":-2},{"failures":[57,58],"tindex":"f44643b1-4c23-11e5-afe0-d135b5fa8ffe","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:366","type":"CtReturnImpl","sourcecode":"return long | long"},"variableMap":{"ret":"cnt","y":"skipped"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.UnionInputStream:167","type":"CtIfImpl","sourcecode":"if (0 < long) {\n    long += long;\n    long -= long;\n} else if (java.io.InputStream == (org.eclipse.jgit.util.io.UnionInputStream.java.io.InputStream)) {\n    return long;\n} else {\n    final int int = java.io.InputStream.read();\n    if (int < 0) {\n        org.eclipse.jgit.util.io.UnionInputStream.pop();\n        if (0 < long)\n            break;\n        \n    } else {\n        long += 1;\n        long -= 1;\n    }\n}"},"status":-1},{"failures":[],"tindex":"f44643b2-4c23-11e5-afe0-978de0f8e85a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:285","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.RefUpdate org.eclipse.jgit.lib.RefUpdate = org.eclipse.jgit.lib.Repository.updateRef(org.eclipse.jgit.lib.Constants.java.lang.String)"},"variableMap":{"this":"repo","org.eclipse.jgit.lib.Constants.HEAD":"notesRef"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RemoveNoteCommand:134","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.RefUpdate org.eclipse.jgit.lib.RefUpdate = org.eclipse.jgit.lib.Repository.updateRef(java.lang.String)"},"status":-2},{"failures":[59],"tindex":"f44643b3-4c23-11e5-afe0-33712b29eb45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:142","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ObjectId == null)\n    throw new org.eclipse.jgit.api.errors.InvalidRefNameException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":13,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}