{"failureDictionary":{"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":87,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsentGrowsWithObjects":7,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":74,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":66,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":81,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":24,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":25,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":78,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":91,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":61,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff1":31,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2":32,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":63,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":94,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test008_FailOnWrongVersion":72,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":89,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":28,"org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection":44,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":14,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":23,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":21,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags":64,"org.eclipse.jgit.lib.ConfigTest.testEmptyString":45,"org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive":37,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":55,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout":58,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":19,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":57,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":70,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":86,"org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile":2,"org.eclipse.jgit.lib.ConfigTest.testNoFinalNewline":46,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":77,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":95,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":18,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":26,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":12,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":79,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":88,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":22,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":76,"org.eclipse.jgit.lib.ConfigTest.test010_readNamesInSubSection":47,"org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc":0,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":17,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":39,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse1":51,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion":69,"org.eclipse.jgit.lib.ConfigTest.test001_ReadBareKey":43,"org.eclipse.jgit.lib.ConfigTest.testGetEnum":38,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3":98,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2":52,"org.eclipse.jgit.lib.BranchConfigTest.isRebase":54,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":67,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":83,"org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld":4,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":41,"org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile":1,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":93,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch":11,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":13,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":75,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":73,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsent":5,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":56,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.invalidRepositoryFormatVersion":68,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":71,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":15,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":96,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions":33,"org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue":50,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":90,"org.eclipse.jgit.lib.ConfigTest.test009_readNamesInSection":40,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch":53,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":10,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":97,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":65,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":84,"org.eclipse.jgit.lib.ConfigTest.testReadLong":42,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":16,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":80,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":20,"org.eclipse.jgit.lib.ConfigTest.test_ReadNamesInSectionRecursive":36,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":3,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":82,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGetAndContains":8,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":85,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":49,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":27,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGrowsWithObjects":6,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":59,"org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum":48,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":9,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge":30,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags":60,"org.eclipse.jgit.lib.ConfigTest.test006_readCaseInsensitive":29,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":92,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo1":34,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2":35,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":62},"transformations":[{"failures":[0,1,2,3,4],"tindex":"cca86468-4c3a-11e5-883c-ebe03145404a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedFileHeader:148","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final int int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int);\n    if (org.eclipse.jgit.patch.FileHeader.(org.eclipse.jgit.patch.FileHeader.isHunkHdr(byte[], int, int)) >= 1) {\n        break;\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.FileHeader.parseOldName(int, int);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.FileHeader.parseNewName(int, int);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.CombinedFileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.CombinedFileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.CombinedFileHeader.parseModeLine((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.CombinedFileHeader.parseNewFileMode(int, int);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.CombinedFileHeader.parseDeletedFileMode((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int);\n    } else {\n        break;\n    }\n    int = int;\n}"},"status":-1},{"failures":[5,6,7,8],"tindex":"cca86469-4c3a-11e5-883c-49ad78b42484","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:396","type":"CtReturnImpl","sourcecode":"return (int * 60) + int"},"variableMap":{"tzHours":"size","tzMins":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectIdSubclassMap:181","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"cca88b7a-4c3a-11e5-883c-8574510b042e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:239","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaBase(org.eclipse.jgit.internal.storage.pack.ObjectToPack)"},"variableMap":{"srcObj":"root","resObj":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:126","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.CanonicalTreeParser.reset(org.eclipse.jgit.internal.storage.pack.BaseSearch.readTree(org.eclipse.jgit.lib.ObjectId))"},"status":-2},{"failures":[],"tindex":"cca88b7b-4c3a-11e5-883c-69ab96b40b2c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.AndTreeFilter:74","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.filter.TreeFilter == (org.eclipse.jgit.treewalk.filter.TreeFilter.org.eclipse.jgit.treewalk.filter.TreeFilter))\n    return org.eclipse.jgit.treewalk.filter.TreeFilter;\n"},"variableMap":{"a":"a","b":"a","org.eclipse.jgit.treewalk.filter.TreeFilter.ALL":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.NotTreeFilter:74","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.treewalk.filter.TreeFilter"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17],"tindex":"cca88b7c-4c3a-11e5-883c-1b2c69015434","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:365","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.remove(org.eclipse.jgit.dircache.DirCacheBuildIterator.getEntryPathString())"},"status":-1},{"failures":[],"tindex":"cca88b7d-4c3a-11e5-883c-97923c4bdec8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:142","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"cca88b7e-4c3a-11e5-883c-137395d0b959","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.DaemonService:145","type":"CtTryImpl","sourcecode":"try {\n    if (org.eclipse.jgit.transport.DaemonService.isEnabledFor(org.eclipse.jgit.lib.Repository))\n        org.eclipse.jgit.transport.DaemonService.execute(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository);\n    \n} finally {\n    org.eclipse.jgit.lib.Repository.close();\n}"},"variableMap":{"this":"readLock","client":"readLock","db":"readLock"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:625","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if ((java.io.RandomAccessFile) != null) {\n        try {\n            java.io.RandomAccessFile.close();\n        } catch (java.io.IOException err) {\n        }\n        java.io.RandomAccessFile = null;\n    } \n}"},"status":-2},{"failures":[],"tindex":"cca88b7f-4c3a-11e5-883c-b519d18d0e82","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FileUtils:337","type":"CtIfImpl","sourcecode":"if (!(java.io.File.createNewFile()))\n    throw new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File));\n"},"status":0},{"failures":[],"tindex":"cca8b290-4c3a-11e5-883c-a53181920d1c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:292","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.eclipse.jgit.dircache.DirCacheEntry.int"},"variableMap":{"flags":"ptr","org.eclipse.jgit.dircache.DirCacheEntry.NAME_MASK":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:225","type":"CtOperatorAssignmentImpl","sourcecode":"int -= (org.eclipse.jgit.dircache.DirCacheTree.getEntrySpan()) - 1"},"status":0},{"failures":[],"tindex":"cca8b291-4c3a-11e5-883c-05e212bac32f","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:477","type":"CtIfImpl","sourcecode":"if ((int < int) && ((byte[][int]) == 0))\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"name contains byte 0x00\");\n"},"variableMap":{"e":"ptr","raw":"raw","end":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:486","type":"CtIfImpl","sourcecode":"if ((byte[][int]) == '.') {\n    switch (int - int) {\n        case 1 :\n            throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid name \\'.\\'\");\n        case 2 :\n            if ((byte[][(int + 1)]) == '.')\n                throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid name \\'..\\'\");\n            \n            break;\n        case 4 :\n            if (org.eclipse.jgit.lib.ObjectChecker.org.eclipse.jgit.lib.ObjectChecker.isGit(byte[], (int + 1)))\n                throw new org.eclipse.jgit.errors.CorruptObjectException(java.lang.String.format(\"invalid name \\'%s\\'\", org.eclipse.jgit.util.RawParseUtils.decode(byte[], int, int)));\n            \n            break;\n        default :\n            if (((int - int) > 4) && org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.isNormalizedGit(byte[], (int + 1), int)))\n                throw new org.eclipse.jgit.errors.CorruptObjectException(java.lang.String.format(\"invalid name \\'%s\\'\", org.eclipse.jgit.util.RawParseUtils.decode(byte[], int, int)));\n            \n    }\n} else if (org.eclipse.jgit.lib.ObjectChecker.org.eclipse.jgit.lib.ObjectChecker.isGitTilde1(byte[], int, int)) {\n    throw new org.eclipse.jgit.errors.CorruptObjectException(java.lang.String.format(\"invalid name \\'%s\\'\", org.eclipse.jgit.util.RawParseUtils.decode(byte[], int, int)));\n} "},"status":0},{"failures":[18],"tindex":"cca8b292-4c3a-11e5-883c-874194c9e0d6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.storage.pack.PackConfig:303","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"cca8b293-4c3a-11e5-883c-77e497c13096","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:1046","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ConfigLine = new org.eclipse.jgit.lib.ConfigLine()"},"variableMap":{"e":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1045","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ConfigLine = org.eclipse.jgit.lib.ConfigLine"},"status":-1},{"failures":[97],"tindex":"cca8d9a4-4c3a-11e5-883c-7b4953e93d8c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:491","type":"CtInvocationImpl","sourcecode":"java.io.File.deleteOnExit()"},"variableMap":{"finalPack":"tmpFile"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1253","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.dircache.DirCacheEntry.getRawMode())) {\n    if (!(org.eclipse.jgit.util.FS.canExecute(java.io.File)))\n        org.eclipse.jgit.util.FS.setExecute(java.io.File, true);\n    \n} else {\n    if (org.eclipse.jgit.util.FS.canExecute(java.io.File))\n        org.eclipse.jgit.util.FS.setExecute(java.io.File, false);\n    \n}"},"status":-1},{"failures":[98],"tindex":"cca8d9a5-4c3a-11e5-883c-3bcd711a278f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:682","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.TemporaryBuffer.writeTo(java.security.DigestOutputStream, null)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}