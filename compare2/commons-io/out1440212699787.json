{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"83be9785-46e1-11e5-a9c8-ed0659547872","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.IOUtils:504","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"Size must be equal or greater than zero: \" + int));\n} "},"variableMap":{"size":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.ProxyReader:95","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.input.ProxyReader.beforeRead(int)"},"status":0},{"failures":[],"tindex":"6ae6dfca-46d2-11e5-b85f-117f5fb46848","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:187","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(long);\n} catch (final java.lang.InterruptedException ignored) {\n}"},"variableMap":{"interval":"toSkip"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.IOUtils:2355","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalArgumentException((\"Bytes to skip must not be negative: \" + long));\n} "},"status":0},{"failures":[],"tindex":"c1fcefa5-46fc-11e5-9494-37c5181eba4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.ByteOrderMark:172","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\": \")"},"variableMap":{"builder":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.filefilter.NameFileFilter:179","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"(\")"},"status":0},{"failures":[],"tindex":"7b326e28-4701-11e5-9aa4-61feaebe026b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.input.NullInputStream:331","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"eof":"exists"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.monitor.FileEntry:103","type":"CtAssignmentImpl","sourcecode":"boolean = java.io.File.exists()"},"status":0},{"failures":[],"tindex":"bb972c36-46f0-11e5-a05f-67c73a354962","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.FileUtils:2444","type":"CtIfImpl","sourcecode":"if (!(java.io.File.exists())) {\n    java.lang.String java.lang.String = java.io.File + \" does not exist\";\n    throw new java.lang.IllegalArgumentException(java.lang.String);\n} "},"variableMap":{"file":"lockFile"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.output.LockableFileWriter:249","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.io.output.LockableFileWriter.org.apache.commons.io.output.LockableFileWriter) {\n    if (!(java.io.File.createNewFile())) {\n        throw new java.io.IOException(((\"Can\\'t write file, lock \" + (java.io.File.getAbsolutePath())) + \" exists\"));\n    } \n    java.io.File.deleteOnExit();\n}"},"status":0},{"failures":[],"tindex":"8a37f1d7-46e7-11e5-a237-87ee32f53a4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:2745","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(((\"Source \\'\" + java.io.File) + \"\\' is not a directory\"))"},"status":-1},{"failures":[],"tindex":"4efd9d3b-46fa-11e5-a521-79969d4b3fef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.HexDump:98","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"  \")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.filefilter.OrFileFilter:147","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"(\")"},"status":0},{"failures":[],"tindex":"34164fa3-46f4-11e5-a40c-0920d41a8e03","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.HexDump:81","type":"CtIfImpl","sourcecode":"if (java.io.OutputStream == null) {\n    throw new java.lang.IllegalArgumentException(\"cannot write to nullstream\");\n} "},"variableMap":{"stream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.output.ProxyOutputStream:69","type":"CtTryImpl","sourcecode":"try {\n    int int = byte[] != null ? byte[].int : 0;\n    org.apache.commons.io.output.ProxyOutputStream.beforeWrite(int);\n    java.io.OutputStream.write(byte[]);\n    org.apache.commons.io.output.ProxyOutputStream.afterWrite(int);\n} catch (java.io.IOException e) {\n    org.apache.commons.io.output.ProxyOutputStream.handleIOException(java.io.IOException);\n}"},"status":0},{"failures":[],"tindex":"82e75315-46f8-11e5-8ef1-4b2f8ff427ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.output.LockableFileWriter:233","type":"CtIfImpl","sourcecode":"if (!(java.io.File.exists())) {\n    throw new java.io.IOException((\"Could not find lockDir: \" + (java.io.File.getAbsolutePath())));\n} "},"variableMap":{"lockDir":"srcDir"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:1370","type":"CtIfImpl","sourcecode":"if ((java.io.File.isDirectory()) == false) {\n    throw new java.io.IOException(((\"Source \\'\" + java.io.File) + \"\\' exists but is not a directory\"));\n} "},"status":0},{"failures":[],"tindex":"931f0e22-4706-11e5-aa3b-496b2b376dd9","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.HexDump:90","type":"CtIfImpl","sourcecode":"if (int > 16) {\n    int = 16;\n} "},"variableMap":{"chars_read":"idx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.output.ProxyOutputStream:55","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write(int)"},"status":0},{"failures":[],"tindex":"50fd0ead-46d8-11e5-b3d3-2d1ab65648ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.FilenameUtils:643","type":"CtIfImpl","sourcecode":"if ((int == (-1)) && (int == (-1))) {\n    return int + 1;\n} "},"variableMap":{"len":"bytesRead","posWin":"bytesRead","posUnix":"bytesRead"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.BoundedInputStream:123","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return -1;\n} "},"status":0},{"failures":[],"tindex":"8f4579d6-46e8-11e5-b982-4b76e79b1211","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.IOUtils:2359","type":"CtIfImpl","sourcecode":"if (long != long) {\n    throw new java.io.EOFException((((\"Bytes to skip: \" + long) + \" actual: \") + long));\n} "},"variableMap":{"skipped":"toSkip","toSkip":"toSkip"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.IOUtils:2355","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalArgumentException((\"Bytes to skip must not be negative: \" + long));\n} "},"status":0},{"failures":[],"tindex":"a52a1b15-46d0-11e5-b4cf-11f9f56613ee","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:85","type":"CtIfImpl","sourcecode":"if (java.io.File == null) {\n    throw new java.lang.IllegalArgumentException(\"file array contains null\");\n} "},"variableMap":{"file":"directory"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:593","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.validateListFilesParameters(java.io.File, org.apache.commons.io.filefilter.IOFileFilter)"},"status":0},{"failures":[],"tindex":"5e706c89-46e1-11e5-b4d4-5db6a7ae3279","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:433","type":"CtIfImpl","sourcecode":"if (java.io.File[] == null) {\n    java.io.File[] = org.apache.commons.io.FileUtils.java.io.File[];\n} "},"variableMap":{"children":"files","org.apache.commons.io.FileUtils.EMPTY_FILE_ARRAY":"files"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:343","type":"CtForImpl","sourcecode":"for ( ; int < (java.io.File[].int) ; int++) {\n    org.apache.commons.io.monitor.FileEntry[][int] = org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(org.apache.commons.io.monitor.FileEntry, java.io.File[][int]);\n    org.apache.commons.io.monitor.FileAlterationObserver.doCreate(org.apache.commons.io.monitor.FileEntry[][int]);\n}"},"status":0},{"failures":[],"tindex":"b9cecf3a-46c8-11e5-a55f-71bb823c8c45","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.input.XmlStreamReader:656","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    int int = java.lang.String.indexOf(\";\");\n    if (int >= 0) {\n        java.lang.String = java.lang.String.substring(0, int);\n    } else {\n        java.lang.String = java.lang.String;\n    }\n    java.lang.String = java.lang.String.trim();\n} "},"variableMap":{"mime":"data","httpContentType":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.IOUtils:1526","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    java.io.OutputStream.write(java.lang.String.getBytes(org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)));\n} "},"status":0},{"failures":[],"tindex":"76be84c6-46cf-11e5-b3d7-7184fd213fd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.input.ReversedLinesFileReader:319","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"currentLastBytePos":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.output.WriterOutputStream:215","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":0},{"failures":[],"tindex":"f3eec107-46ea-11e5-ab7e-6931ab8f209c","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.FileSystemUtils:496","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.ThreadMonitor.stop(java.lang.Thread)"},"variableMap":{"monitor":"thread"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.ThreadMonitor:109","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupt()"},"status":0},{"failures":[],"tindex":"1f572153-46ef-11e5-a057-2df933f0dda8","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.FilenameUtils:489","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"variableMap":{"basePath":"filename"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FilenameUtils:352","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return java.lang.String;\n} "},"status":0},{"failures":[],"tindex":"e33b7bb5-46d6-11e5-85f9-e12672220762","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileUtils:1682","type":"CtIfImpl","sourcecode":"if ((int++) > int) {\n    return false;\n} "},"variableMap":{"seconds":"timeout","timeout":"seconds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:1679","type":"CtWhileImpl","sourcecode":"while (!(java.io.File.exists())) {\n    if ((int++) >= 10) {\n        int = 0;\n        if ((int++) > int) {\n            return false;\n        } \n    } \n    try {\n        java.lang.Thread.sleep(100);\n    } catch (java.lang.InterruptedException ignore) {\n    } catch (java.lang.Exception ex) {\n        break;\n    }\n}"},"status":0},{"failures":[],"tindex":"a6adb2da-46e3-11e5-a5d7-09dc60d6681a","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.FileUtils:1686","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException ignore) {\n} catch (java.lang.Exception ex) {\n    break;\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.output.WriterOutputStream:282","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.output.WriterOutputStream.flushOutput()"},"status":0}],"header":{"groupId":"commons-io","transformationCount":20,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"},"diffs":[{"transformation":"83be9785-46e1-11e5-a9c8-ed0659547872","diffs":[{"nodes":{},"edges":{"org.apache.commons.io.input.ProxyReaderTest.testNullCharArray":["org.apache.commons.io.input.ProxyReader.int read(char[],int,int) -> org.apache.commons.io.input.ProxyReader.void beforeRead(int)"]},"type":"graph"}]}]}