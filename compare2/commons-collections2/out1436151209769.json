{"failureDictionary":{"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":31,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":93,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":131,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":25,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":106,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":132,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":149,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":171,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":105,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":155,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":26,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":141,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":122,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":191,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":177,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":175,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":144,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":20,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":183,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":145,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":16,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":86,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":79,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":150,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":7,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":148,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":80,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":140,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":81,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":22,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":170,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":160,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":174,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":157,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":165,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":69,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":96,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":108,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":152,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":47,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":48,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":119,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":91,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":10,"org.apache.commons.collections4.map.HashedMapTest.testClone":85,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":27,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":134,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":164,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":120,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":187,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":115,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":121,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":95,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":18,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":60,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":39,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":4,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":142,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":23,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":38,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":103,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":104,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":92,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":84,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":128,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":161,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":130,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":151,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":111,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":17,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":127,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":137,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":163,"org.apache.commons.collections4.map.LinkedMapTest.testClone":147,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":40,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":166,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":53,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":56,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":110,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":139,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":71,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":58,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":146,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":64,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":179,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":184,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":24,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":159,"org.apache.commons.collections4.list.TreeListTest.testRemove":138,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":88,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":168,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":76,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":50,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":123,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":75,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":112,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":42,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":51,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":2,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":61,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":21,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":186,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":15,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":45,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":46,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":44,"org.apache.commons.collections4.bag.TreeBagTest.testCollections265":194,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":156,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":154,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":167,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":13,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":178,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":117,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":143,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":162,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":32,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":5,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":113,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":180,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":181,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":182,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":99,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":100,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":153,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":173,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":193,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":118,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":35,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":97,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":70,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":94,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":188,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":12,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":172,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":158,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":101,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":67,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":135,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":189,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":14,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":1,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":185,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":176,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":114,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":82},"transformations":[{"failures":[],"tindex":"2e8b0637-238a-11e5-82a1-77b9b521dd67","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1080","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(java.lang.Object)"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1099","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.IteratorUtils.org.apache.commons.collections4.IteratorUtils.singletonIterator(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"2e8b2d48-238a-11e5-82a1-1df0511a1971","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:164","type":"CtReturnImpl","sourcecode":"return this.int"},"status":-2},{"failures":[],"tindex":"2e8b2d49-238a-11e5-82a1-d7d90d479c2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:456","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? java.lang.Object : ((java.lang.ref.Reference<K>)(java.lang.Object)).get()"},"variableMap":{"key2":"value","org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.HARD":"value","keyType":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:601","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object = null"},"status":-2},{"failures":[0],"tindex":"2e8b2d4a-238a-11e5-82a1-89be9469d2f3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:183","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))"},"status":-1},{"failures":[],"tindex":"2e8b2d4b-238a-11e5-82a1-f16afee2b225","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchClosure:162","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FunctorUtils.<E>copy(org.apache.commons.collections4.Predicate<? super E>[])"},"variableMap":{"iPredicates":"iPredicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AbstractQuantifierPredicate:53","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FunctorUtils.<T>copy(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-2},{"failures":[],"tindex":"2e8b2d4c-238a-11e5-82a1-fbb2235520e4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:176","type":"CtReturnImpl","sourcecode":"return ((this.boolean) == (org.apache.commons.collections4.comparators.NullComparator<?>.boolean)) && (this.java.util.Comparator<? super E>.equals(org.apache.commons.collections4.comparators.NullComparator<?>.java.util.Comparator<? super ?>))"},"status":-2},{"failures":[],"tindex":"2e8b545d-238a-11e5-82a1-43154f69efe0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1421","type":"CtLocalVariableImpl","sourcecode":"K K = ((K)(java.io.ObjectInputStream.readObject()))"},"variableMap":{"stream":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1267","type":"CtLocalVariableImpl","sourcecode":"final K K = ((K)(java.io.ObjectInputStream.readObject()))"},"status":0},{"failures":[],"tindex":"2e8b545e-238a-11e5-82a1-572d243a873d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:871","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"2e8b545f-238a-11e5-82a1-0b40e38aeedc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:286","type":"CtReturnImpl","sourcecode":"return java.util.List<E>.indexOf(java.lang.Object)"},"status":-2},{"failures":[1,2],"tindex":"2e8b5460-238a-11e5-82a1-df20b1adc226","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:278","type":"CtInvocationImpl","sourcecode":"super.addMapping(int, int, K, V)"},"status":-1},{"failures":[],"tindex":"2e8b5461-238a-11e5-82a1-55ed11df3276","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:199","type":"CtReturnImpl","sourcecode":"return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(long, java.util.concurrent.TimeUnit)"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"tindex":"2e8b5462-238a-11e5-82a1-3b8d0853e357","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:364","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null"},"variableMap":{"data":"data","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1151","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][--int]"},"status":-1},{"failures":[],"tindex":"2e8b7b73-238a-11e5-82a1-cb844fc657d5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:853","type":"CtLocalVariableImpl","sourcecode":"final int int = int + int"},"status":-2},{"failures":[137],"tindex":"2e8b7b74-238a-11e5-82a1-29d66b5983a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:265","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"before":"last","link":"last","header":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:587","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null"},"status":-1},{"failures":[],"tindex":"2e8b7b75-238a-11e5-82a1-61461d016956","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:874","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:608","type":"CtReturnImpl","sourcecode":"return this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.size()"},"status":-2},{"failures":[138,139,140,141],"tindex":"2e8b7b76-238a-11e5-82a1-17fb1e6c17de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"indexRelativeToMe","lengthInBits":"indexRelativeToMe","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"indexRelativeToMe","otherOffsetInBits":"indexRelativeToMe","otherLengthInBits":"indexRelativeToMe"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:506","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E), null)"},"status":-1},{"failures":[142,143,144,145],"tindex":"2e8ba287-238a-11e5-82a1-179b2f3c8996","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"index","proposedCapacity":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-1},{"failures":[19,20,21,22,23,25,26,27,28,146,147,148,149,150,29,30,151,53,54,152,153,154,82,83,85,155,108,109,156,157,111,158,159,160,134,135],"tindex":"2e8ba288-238a-11e5-82a1-390fc2ae8703","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"2e8ba289-238a-11e5-82a1-cf40b7e1c99f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:460","type":"CtInvocationImpl","sourcecode":"java.util.List<K>.add(int, K)"},"status":0},{"failures":[],"tindex":"2e8ba28a-238a-11e5-82a1-65b78cc11da3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:137","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MultiMap<K, C>.clear()"},"status":-2},{"failures":[],"tindex":"2e8ba28b-238a-11e5-82a1-d15dce298579","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"next","parent":"next","left":"next","h":"next","right":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2071","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) || org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, K))) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"2e8bc99c-238a-11e5-82a1-d180fe14d560","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.DefaultEquator:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.DefaultEquator.org.apache.commons.collections4.functors.DefaultEquator"},"variableMap":{"org.apache.commons.collections4.functors.DefaultEquator.INSTANCE":"org.apache.commons.collections4.map.AbstractHashedMap.NULL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object"},"status":-2},{"failures":[],"tindex":"2e8bc99d-238a-11e5-82a1-4bfdab28c288","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:222","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"2e8bc99e-238a-11e5-82a1-b536ec41abda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:290","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.ValuesIterator<V>(java.util.Iterator<V> , this)"},"status":-2},{"failures":[],"tindex":"2e8bc99f-238a-11e5-82a1-6d489a49ad46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"variableMap":{"coll":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n            R.add(O);\n        } \n    }\n} "},"status":-2},{"failures":[],"tindex":"2e8bf0b0-238a-11e5-82a1-d530a7ee526a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:279","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Enumeration<?>.nextElement();\n} else {\n    java.util.Enumeration<?>.nextElement();\n}"},"status":-2},{"failures":[161,162,163,164],"tindex":"2e8bf0b1-238a-11e5-82a1-978cab61bcb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1047","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[165,166,167,168],"tindex":"2e8bf0b2-238a-11e5-82a1-815d7d7ea703","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl","sourcecode":"return (boolean) == false"},"variableMap":{"hasNext":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:151","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"2e8bf0b3-238a-11e5-82a1-916ef91c0184","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.AbstractSerializableSetDecorator:55","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"2e8bf0b4-238a-11e5-82a1-ef2d84108db9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2221","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:400","type":"CtReturnImpl","sourcecode":"return new java.util.HashSet<E>(this)"},"status":-2},{"failures":[],"tindex":"2e8bf0b5-238a-11e5-82a1-c98e16012b5e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:154","type":"CtReturnImpl","sourcecode":"return (boolean ? -1 : 1) * (java.util.Comparator<? super E>.hashCode())"},"status":-2},{"failures":[],"tindex":"2e8c17c6-238a-11e5-82a1-f5d13fdc483f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:59","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(java.util.SortedSet<E>)"},"variableMap":{"set":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:115","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)"},"status":-2},{"failures":[],"tindex":"2e8c17c7-238a-11e5-82a1-43e628380227","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:501","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:162","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"FilterListIterator.remove() is not supported.\")"},"status":0},{"failures":[],"tindex":"2e8c17c8-238a-11e5-82a1-e3ec5782288a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:558","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"next":"previous","after":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:570","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"2e8c17c9-238a-11e5-82a1-b3c0fa81a611","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:178","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey()"},"variableMap":{"header":"last","after":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:339","type":"CtReturnImpl","sourcecode":"return java.util.Map.Entry<K, V>.getKey()"},"status":0},{"failures":[169,170,171,172,173,174,175,176,177,178,179],"tindex":"2e8c17ca-238a-11e5-82a1-c5b4c7f066b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:331","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.clear(int)"},"status":-1},{"failures":[],"tindex":"2e8c3edb-238a-11e5-82a1-b74b8a2b6fd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"variableMap":{"composite":"value","i":"length","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:224","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[180,181,182,183,184,185,186,187,188,189,190,191,192],"tindex":"2e8c3edc-238a-11e5-82a1-4f4352a3fca0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:102","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:222","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"No more elements in the iteration\")"},"status":-1},{"failures":[],"tindex":"2e8c3edd-238a-11e5-82a1-a14588f07010","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1353","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.util.Map.Entry<K, V>>.next()"},"status":0},{"failures":[],"tindex":"2e8c3ede-238a-11e5-82a1-ab834c213cc7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:273","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator()"},"status":-2},{"failures":[],"tindex":"2e8c3edf-238a-11e5-82a1-791ffc20ce90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:751","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n    java.util.Iterator<T>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"2e8c3ee0-238a-11e5-82a1-57f0f1bb2461","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:186","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:466","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.createNode(E)"},"status":-2},{"failures":[193],"tindex":"2e8c65f1-238a-11e5-82a1-89064eb77956","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\");\n} "},"variableMap":{"result":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:192","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Array.set(this.java.lang.Object, this.int, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"2e8c65f2-238a-11e5-82a1-8f5db9afec79","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:169","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":"2e8c65f3-238a-11e5-82a1-a1f0cd9c858c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1950","type":"CtAssignmentImpl","sourcecode":"boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = false"},"variableMap":{"blackColor":"key","dataElement":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:386","type":"CtInvocationImpl","sourcecode":"java.lang.Object.equals(org.apache.commons.collections4.map.SingletonMap<K, V>.getKey())"},"status":-2},{"failures":[],"tindex":"2e8c65f4-238a-11e5-82a1-8bc023d172a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"status":-2},{"failures":[],"tindex":"2e8c65f5-238a-11e5-82a1-e19b2a7aa598","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:604","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getLeftSubTree()) == null) {\n    return org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeSelf();\n} "},"variableMap":{"this":"maxNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:820","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>.int) > (int)) {\n    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeMax();\n    final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>();\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n    int int = (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int) + int;\n    int int = 0;\n    while ((org.apache.commons.collections4.list.TreeList.AVLNode<E> != null) && ((org.apache.commons.collections4.list.TreeList.AVLNode<E>.int) > org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getHeight(org.apache.commons.collections4.list.TreeList.AVLNode<E>)))) {\n        int = int;\n        org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>.push(org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n        if (org.apache.commons.collections4.list.TreeList.AVLNode<E> != null) {\n            int += org.apache.commons.collections4.list.TreeList.AVLNode<E>.int;\n        } \n    }\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>, null);\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>, org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n    if (org.apache.commons.collections4.list.TreeList.AVLNode<E> != null) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E>.max().setRight(null, org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n        org.apache.commons.collections4.list.TreeList.AVLNode<E>.int -= int - 1;\n    } \n    if (org.apache.commons.collections4.list.TreeList.AVLNode<E> != null) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E>.min().setLeft(null, org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n        org.apache.commons.collections4.list.TreeList.AVLNode<E>.int = (int - int) + 1;\n    } \n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.int = (int - 1) - int;\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.int += int;\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n    while (!(org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>.isEmpty())) {\n        final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>.pop();\n        org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>, null);\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.balance();\n    }\n    return org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeMin();\n    final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>();\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = this;\n    int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.int;\n    int int = 0;\n    while ((org.apache.commons.collections4.list.TreeList.AVLNode<E> != null) && ((org.apache.commons.collections4.list.TreeList.AVLNode<E>.int) > org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getHeight(org.apache.commons.collections4.list.TreeList.AVLNode<E>)))) {\n        int = int;\n        org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>.push(org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n        if (org.apache.commons.collections4.list.TreeList.AVLNode<E> != null) {\n            int += org.apache.commons.collections4.list.TreeList.AVLNode<E>.int;\n        } \n    }\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>, null);\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>, org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n    if (org.apache.commons.collections4.list.TreeList.AVLNode<E> != null) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E>.min().setLeft(null, org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n        (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)++;\n    } \n    if (org.apache.commons.collections4.list.TreeList.AVLNode<E> != null) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E>.max().setRight(null, org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n        org.apache.commons.collections4.list.TreeList.AVLNode<E>.int = int - int;\n    } \n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.int = int - int;\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n    while (!(org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>.isEmpty())) {\n        final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>.pop();\n        org.apache.commons.collections4.list.TreeList.AVLNode<E>.setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>, null);\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.balance();\n    }\n    return org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n}"},"status":-2},{"failures":[],"tindex":"2e8cb416-238a-11e5-82a1-631314ea1468","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[],"tindex":"2e8cb417-238a-11e5-82a1-592d85a65f7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:116","type":"CtIfImpl","sourcecode":"if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n        int = int;\n    } \n} "},"variableMap":{"indexOfLargestMobileInteger":"indexOfLargestMobileInteger","keys":"keys","largestKey":"largestKey","length":"largestKey","i":"length","direction":"direction"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-2},{"failures":[194],"tindex":"2e8cb418-238a-11e5-82a1-9fb994f167ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:87","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"setValue() is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:87","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"))"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}