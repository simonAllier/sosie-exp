{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":15,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":126,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":3,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":48,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":89,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":63,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":13,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":80,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":113,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":21,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":76,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":107,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":64,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":111,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":1,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":94,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":110,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":35,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":145,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":77,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":95,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":22,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":54,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":72,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":129,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":91,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":96,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":131,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":37,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":10,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":120,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":78,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":2,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":128,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":69,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":59,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":58,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":140,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":90,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":100,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":108,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":79,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":143,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":103,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":116,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":146,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":130,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":20,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":141,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":85,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":135,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":40,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":92,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":23,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":127,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":38,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":74,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":125,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":93,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":27,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":97,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":39,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":19,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":46,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":137,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":122,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":139,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":50,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":104,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":31,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":133,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":115,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":42,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":75,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":71,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":105,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":101,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":9,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":118,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":70,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":82,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":34,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":41,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":67,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":68,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":66,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":52},"transformations":[{"failures":[0],"tindex":"e354f65c-239a-11e5-92ff-dd478c93901d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator<E>.getListIterator().add(E)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"e3551d6d-239a-11e5-92ff-db9d10679ac7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:508","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<java.util.Map.Entry<K, V>>.size()) > 0) {\n    return true;\n} "},"status":-1},{"failures":[20,21],"tindex":"e3551d6e-239a-11e5-92ff-9979b5366105","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-1},{"failures":[],"tindex":"e355447f-239a-11e5-92ff-c18208cb1455","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:97","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    java.util.ListIterator<E>.add(E);\n    return ;\n} "},"status":0},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"e3554480-239a-11e5-92ff-4db75cacf0bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) == 0"},"status":-1},{"failures":[],"tindex":"e3554481-239a-11e5-92ff-e79eebd37317","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:605","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>"},"status":-2},{"failures":[],"tindex":"e3554482-239a-11e5-92ff-d3b83ecc0028","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:272","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.StaticBucketMap<K, V>.getHash(K)"},"status":-2},{"failures":[48,49],"tindex":"e3556b93-239a-11e5-92ff-0f0f7b09c582","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1090","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.next())"},"status":-1},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"e3556b94-239a-11e5-92ff-37a5d7d29cc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:456","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? java.lang.Object : ((java.lang.ref.Reference<K>)(java.lang.Object)).get()"},"status":-1},{"failures":[21,71],"tindex":"e3556b95-239a-11e5-92ff-1b8c52b3779d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:187","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().addMapping(int, int, new org.apache.commons.collections4.keyvalue.MultiKey<K>(K , K), V)"},"status":-1},{"failures":[],"tindex":"e3556b96-239a-11e5-92ff-a9c2f7db7599","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"variableMap":{"root":"root","h":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:139","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":0},{"failures":[],"tindex":"e35592a7-239a-11e5-92ff-516bc9644958","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:201","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = null"},"variableMap":{"result":"array","size":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:132","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.MapEntry(((java.util.Map.Entry<K, V>)(java.lang.Object[][int])) , org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>)"},"status":-1},{"failures":[],"tindex":"e35592a8-239a-11e5-92ff-37e7d26c357f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"previousNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1658","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[],"tindex":"e35592a9-239a-11e5-92ff-8f21e24c716c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2161","type":"CtLocalVariableImpl","sourcecode":"final K K = java.util.Map.Entry<K, V> != null ? java.util.Map.Entry<K, V>.getKey() : null"},"variableMap":{"e":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:366","type":"CtLocalVariableImpl","sourcecode":"final K K = java.util.Map.Entry<K, V>.getKey()"},"status":0},{"failures":[],"tindex":"e355b9ba-239a-11e5-92ff-cde3f4d573d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:706","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.ListOrderedMap<K, V>.decorated()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:146","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[],"tindex":"e355b9bb-239a-11e5-92ff-0580ed0af202","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:680","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:622","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"e355b9bc-239a-11e5-92ff-914ae86ef94a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:190","type":"CtIfImpl","sourcecode":"if (java.io.ByteArrayInputStream != null) {\n    java.io.ByteArrayInputStream.close();\n} "},"variableMap":{"bais":"element"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    int++;\n} "},"status":-2},{"failures":[],"tindex":"e355b9bd-239a-11e5-92ff-e39ad50c16f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:880","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"e355e0ce-239a-11e5-92ff-612ea8ba64e6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"variableMap":{"other":"other","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"e355e0cf-239a-11e5-92ff-bf152d27ba5e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[],"tindex":"e355e0d0-239a-11e5-92ff-d76decfb29b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"e35607e1-239a-11e5-92ff-550ed807a494","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:966","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount()"},"status":-2},{"failures":[72],"tindex":"e35607e2-239a-11e5-92ff-7d5b3a398e8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1120","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = null"},"variableMap":{"current":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:883","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>.push(org.apache.commons.collections4.list.TreeList.AVLNode<E>)"},"status":-1},{"failures":[],"tindex":"e35607e3-239a-11e5-92ff-a9bdfcb30fbe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:138","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.lastKey()"},"variableMap":{"delegate":"delegate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:168","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.previousKey(K)"},"status":-2},{"failures":[],"tindex":"e35607e4-239a-11e5-92ff-1f45f229270b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:122","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.put(K, V)"},"status":-2},{"failures":[],"tindex":"e35607e5-239a-11e5-92ff-b95cf08e8085","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:291","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"e3562ef6-239a-11e5-92ff-538373326c9b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n} "},"status":-2},{"failures":[73],"tindex":"e3562ef7-239a-11e5-92ff-031c12bdd0f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"coll1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"e3562ef8-239a-11e5-92ff-875df56bea0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:621","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getRightSubTree()) == null) && (org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getLeftSubTree()) == null)) {\n    return null;\n} "},"variableMap":{"this":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:543","type":"CtReturnImpl","sourcecode":"return boolean ? null : org.apache.commons.collections4.list.TreeList.AVLNode<E>"},"status":-2},{"failures":[],"tindex":"e3562ef9-239a-11e5-92ff-796fc764c518","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1078","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"status":0},{"failures":[74],"tindex":"e3562efa-239a-11e5-92ff-77860634e424","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Enumeration<?>.nextElement();\n} else {\n    java.util.Enumeration<?>.nextElement();\n}"},"variableMap":{"i":"i","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1276","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<?>.hasMoreElements()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Enumeration<?>.nextElement();\n    } else {\n        java.util.Enumeration<?>.nextElement();\n    }\n}"},"status":-1},{"failures":[],"tindex":"e3562efb-239a-11e5-92ff-a9293a42aac4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:75","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:76","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>(java.lang.Class<?>[] , java.lang.Object[])"},"status":-2},{"failures":[],"tindex":"e356560c-239a-11e5-92ff-2347ee362167","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:360","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.Values()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1016","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.util.Iterator<I>, org.apache.commons.collections4.Transformer<? super I, ? extends O>, new java.util.ArrayList<O>())"},"status":-2},{"failures":[],"tindex":"e356560d-239a-11e5-92ff-3b94e1f63d78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[75],"tindex":"e356560e-239a-11e5-92ff-497afb74239a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:839","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"e356560f-239a-11e5-92ff-97ed327aa039","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1079","type":"CtAssignmentImpl","sourcecode":"int = --(int)"},"variableMap":{"nextIndex":"modCount","currentIndex":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:125","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"status":-1},{"failures":[],"tindex":"e3565610-239a-11e5-92ff-e179977ed5f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:137","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.keySet().removeAll(java.util.Collection<?>)"},"status":-2},{"failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"e3567d21-239a-11e5-92ff-2bc3fb879ee0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl","sourcecode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false"},"variableMap":{"object":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"e3567d22-239a-11e5-92ff-e7f39dc66b6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:532","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<V>.next()"},"status":-2},{"failures":[114,115,22,23,116,117,118,119,120,121,122,123,24,25,26,27,28,29,30,31,32,33,124,125,36,37,126,127,128,129,130,131,132,38,39,40,41,42,43,44,45,46,47],"tindex":"e3567d23-239a-11e5-92ff-59c50a078ea5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:874","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:380","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[133,134,135],"tindex":"e3567d24-239a-11e5-92ff-4117d14d1fd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:224","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e3567d25-239a-11e5-92ff-970cb8692bdd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"entry","modCount":"index","before":"previous","header":"entry","after":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:346","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)"},"status":-2},{"failures":[136],"tindex":"e356a436-239a-11e5-92ff-7779f673f42a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:552","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Equator must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"e356a437-239a-11e5-92ff-a137de9f38a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SetUtils:48","type":"CtReturnImpl","sourcecode":"return java.util.Collections.<E>emptySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1921","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet(this)"},"status":-2},{"failures":[],"tindex":"e356a438-239a-11e5-92ff-ff5d75625111","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:89","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().comparator()"},"status":-2},{"failures":[],"tindex":"e356a439-239a-11e5-92ff-51461bd7e0fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:271","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"e356a43a-239a-11e5-92ff-81021c0262f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:745","type":"CtIfImpl","sourcecode":"if ((java.util.Map.Entry<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator setValue() can only be called after next() and before remove()\");\n} "},"status":0},{"failures":[137,138,139,140,141,142,143,144,145,146],"tindex":"e356a43b-239a-11e5-92ff-bf80e3e095c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:283","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"No value has been returned yet\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:62","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")"},"status":-1},{"failures":[],"tindex":"e356a43c-239a-11e5-92ff-cd848335eb2f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"currentNode","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:892","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":49,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}