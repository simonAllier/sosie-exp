{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":134,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":217,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":19,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":27,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":0,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":52,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":193,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":128,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":21,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":6,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":46,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":175,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":129,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":93,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":38,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":171,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":179,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":54,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":202,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":109,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":92,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":72,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":131,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":34,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":212,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":124,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":39,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":71,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":98,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":224,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":22,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":115,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":138,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":28,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":208,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":57,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":91,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":30,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":78,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":120,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":186,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":126,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":9,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":203,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":83,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":81,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":188,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":23,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":228,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":172,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":207,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":190,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":133,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":25,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":185,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":130,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":26,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":75,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":96,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":14,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":58,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":73,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":108,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":29,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":44,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":105,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":194,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":174,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":196,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":153,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":222,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":226,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":127,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":132,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":161,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":107,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":56,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":62,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":167,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":173,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":88,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":177,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":198,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":118,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":36,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":76,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":116,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":215,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectEqualsSelf":229,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":178,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":142,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":181,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":197,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":162,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":140,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":100,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":16,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":199,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":123,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":45,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":5,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":50,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsSelfHashCode":235,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":220,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":10,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":42,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":67,"org.apache.commons.collections4.iterators.IteratorChainTest.testSerializeDeserializeThenCompare":236,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":94,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":60,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":87,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":90,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":117,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":8,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":195,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":7,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":218,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":47,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":74,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":17,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":144,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":70,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":86,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":68,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":84,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":137,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":145,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":201,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":37,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":149,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":221,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":80,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":216,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":12,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":168,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":170,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":59,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":169,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":40,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":101,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":154,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":1,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalFullCollectionExists":230,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":210,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":111,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":211,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":227,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":157,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":85,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":204,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":97,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":79,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":119,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":20,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":53,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":155,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":64,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":184,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":125,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":61,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":102,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":13,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":51,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":41,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":69,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":214,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":104,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":180,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":189,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":223,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":156,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalEmptyCollectionExists":232,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":165,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":213,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":63,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":35,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":114,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":121,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":141,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":113,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":163,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":164,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":77,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":99,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":176,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":31,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":48,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":43,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":158,"org.apache.commons.collections4.iterators.IteratorChainTest.testEqualsNull":231,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":135,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":182,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":89,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":15,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":136,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":225,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":106,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":139,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsContract":234,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":112,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":200,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":166,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":191,"org.apache.commons.collections4.iterators.IteratorChainTest.testSimpleSerialization":233,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":192,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":159,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":32,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":11,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":66,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":152,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":205,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":219,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":95,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":55,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":147,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":183,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":143,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":49,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":82,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":150,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":151,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":65,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":209,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":206,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":33,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":148,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":110},"transformations":[{"failures":[0],"tindex":"075484bc-2360-11e5-b041-37687b1b414c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:249","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.setValue(V)"},"status":-1},{"failures":[],"tindex":"0754abcd-2360-11e5-b041-9d76004f29da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"0754abce-2360-11e5-b041-c90672c2f789","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"hashIndex","lengthInBits":"hashIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"0754d2df-2360-11e5-b041-d377b16507e4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1785","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:130","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-2},{"failures":[],"tindex":"0754d2e0-2360-11e5-b041-6944d33ccdf7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:209","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:676","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Transformer must not be null\")"},"status":0},{"failures":[34],"tindex":"0754d2e1-2360-11e5-b041-5768fa025d86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:461","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().addMapping(int, int, new org.apache.commons.collections4.keyvalue.MultiKey<K>(K , K , K , K), V)"},"status":-1},{"failures":[],"tindex":"0754d2e2-2360-11e5-b041-2337b8a1c067","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:262","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"0754f8f3-2360-11e5-b041-23cb523fb3cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1546","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"07552004-2360-11e5-b041-557807937e76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"07552005-2360-11e5-b041-3bcf34f8f790","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"right","root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1109","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"07552006-2360-11e5-b041-bbcf630a40b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1114","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty() ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"path":"root","current":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1099","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"07552007-2360-11e5-b041-a1a7f33d6deb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)"},"status":-1},{"failures":[],"tindex":"07554718-2360-11e5-b041-45d0185b1d83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1003","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue())"},"status":-2},{"failures":[],"tindex":"07554719-2360-11e5-b041-c9014c2a6522","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:598","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != null) {\n    return (((\"Iterator[\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey())) + \"=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) + \"]\";\n} "},"variableMap":{"last":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:163","type":"CtIfImpl","sourcecode":"if ((java.util.Map.Entry<K, V>) != null) {\n    return (((\"MapIterator[\" + org.apache.commons.collections4.iterators.EntrySetMapIterator<K, V>.(getKey())) + \"=\") + org.apache.commons.collections4.iterators.EntrySetMapIterator<K, V>.(getValue())) + \"]\";\n} "},"status":0},{"failures":[],"tindex":"0755471a-2360-11e5-b041-6d0bdcbd6884","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:88","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal E[] E[] = ((E[])(java.util.Collection<E>.toArray()))"},"status":-2},{"failures":[],"tindex":"0755471b-2360-11e5-b041-896c63cd9305","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:304","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"0755471c-2360-11e5-b041-79d5a7ff1ee3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"variableMap":{"length":"i","key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"07556e2d-2360-11e5-b041-a3f10b33f19f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:252","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.SwitchTransformer.<I,O>switchTransformer(org.apache.commons.collections4.Predicate<? super I>[], org.apache.commons.collections4.Transformer<? super I, ? extends O>[], null)"},"status":-2},{"failures":[115,116,117,118,119,120,121,122,6,123,124,125,126,127,128,129,130,23],"tindex":"07556e2e-2360-11e5-b041-09f58919ed55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:577","type":"CtInvocationImpl","sourcecode":"java.util.List<V>.add(V)"},"status":-1},{"failures":[],"tindex":"07556e2f-2360-11e5-b041-3d27f6ef76a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:59","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.BidiMap<K, V>"},"variableMap":{"tmpMap":"reverseMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:83","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(java.util.Map<V, K> , java.util.Map<K, V> , org.apache.commons.collections4.BidiMap<K, V>)"},"status":-2},{"failures":[131,132],"tindex":"07556e30-2360-11e5-b041-af10b6819247","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"result","changed":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:268","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"07556e31-2360-11e5-b041-bf1ac2286447","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:526","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"deletedNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"07556e32-2360-11e5-b041-bd29e9a003f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:109","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap<K, V>.this(org.apache.commons.collections4.map.StaticBucketMap.int)"},"status":-2},{"failures":[],"tindex":"07559543-2360-11e5-b041-6101b3e89bd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    return java.util.List<K>.get((int - 1));\n} "},"variableMap":{"insertOrder":"insertOrder","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:390","type":"CtReturnImpl","sourcecode":"return java.util.List<K>.get(int)"},"status":-2},{"failures":[],"tindex":"07559544-2360-11e5-b041-df5fcedbb510","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash3","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:533","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = int;\n    K = K;\n    V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 2;\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"07559545-2360-11e5-b041-bf605f306773","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:952","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.KeySet<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:113","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<V>)"},"status":-2},{"failures":[133,134,34,135],"tindex":"07559546-2360-11e5-b041-b549dbdafebe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"07559547-2360-11e5-b041-89e4ae8e7ef7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:358","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>>.set(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    return false;\n} "},"variableMap":{"reference":"reference","h":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:365","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.selectR(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, K, int, org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.selectR(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, K, int, org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>>);\n    } \n} else {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.selectR(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, K, int, org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.selectR(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, K, int, org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>>);\n    } \n}"},"status":-2},{"failures":[],"tindex":"07559548-2360-11e5-b041-95400b4264af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:467","type":"CtLocalVariableImpl","sourcecode":"final V V = V"},"status":-2},{"failures":[136],"tindex":"07559549-2360-11e5-b041-3fab5e8d209c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:57","type":"CtReturnImpl","sourcecode":"return java.util.SortedSet<E>"},"variableMap":{"set":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:138","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(java.util.SortedSet<E>)"},"status":-1},{"failures":[],"tindex":"0755954a-2360-11e5-b041-29e063e664a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:103","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-2},{"failures":[137],"tindex":"0755954b-2360-11e5-b041-9f5abe80c3a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1730","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)))) {\n    return null;\n} "},"status":-1},{"failures":[138,139,140,141,142,143],"tindex":"0755bc5c-2360-11e5-b041-7bf832d44b74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:528","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<V>.hasNext()"},"status":-1},{"failures":[],"tindex":"0755bc5d-2360-11e5-b041-05c98b86f3bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.unmodifiableOrderedMapIterator(org.apache.commons.collections4.OrderedMapIterator<K, V>)"},"status":-2},{"failures":[],"tindex":"0755bc5e-2360-11e5-b041-91566cb6742f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:384","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"0755bc5f-2360-11e5-b041-a72d9eb7a6c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:462","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doHashCode(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"0755bc60-2360-11e5-b041-e9d28e2e4845","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:419","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"ListIterator does not support set\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:127","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\")"},"status":0},{"failures":[144,145],"tindex":"0755bc61-2360-11e5-b041-d993be780477","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"object","o2":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"0755bc62-2360-11e5-b041-4f4125ab088a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:204","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key1","next":"entry","entry":"previous","key2":"key2","previous":"previous","hashCode":"index","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[146],"tindex":"0755bc63-2360-11e5-b041-dd3fe21aa514","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:666","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap.int"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"0755bc64-2360-11e5-b041-9f19299755ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:783","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"NodeList must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:458","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String)"},"status":-2},{"failures":[],"tindex":"0755e375-2360-11e5-b041-497b2e028023","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:929","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.setValue(V)"},"status":-2},{"failures":[147,148,149,150,151,152],"tindex":"0755e376-2360-11e5-b041-2511dba77210","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:100","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Map must be empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:148","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"0755e377-2360-11e5-b041-5d82c8f486e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:260","type":"CtAssignmentImpl","sourcecode":"int = (int * 37) + ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == null ? 0 : org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior.hashCode())"},"variableMap":{"unknownObjectBehavior":"key1","total":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:360","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":0},{"failures":[],"tindex":"0755e378-2360-11e5-b041-f1f657038524","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:160","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The array of keys must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:132","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor threw an exception\" , java.lang.reflect.InvocationTargetException)"},"status":-2},{"failures":[153,154,155,156,157,158],"tindex":"0755e379-2360-11e5-b041-b3ba0218497f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(org.apache.commons.collections4.Transformer<? super E, ?>)"},"status":-1},{"failures":[],"tindex":"0755e37a-2360-11e5-b041-f740742e9bda","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:56","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"0755e37b-2360-11e5-b041-1f7e03dc8751","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2146","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<V,K>emptyOrderedMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:425","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K,V>emptyOrderedMapIterator()"},"status":-2},{"failures":[139,142,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236],"tindex":"0755e37c-2360-11e5-b041-e97b7ad13a2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:161","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"07560a8d-2360-11e5-b041-95bab1a9e749","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}