{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":104,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":61,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":60,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":3,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":115,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":36,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":92,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":97,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":85,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":130,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":127,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":18,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":89,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":44,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":120,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":90,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":14,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":64,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":45,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":136,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":82,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":128,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":30,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":110,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":55,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":122,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":59,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":108,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":11,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":13,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":12,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":67,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":95,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":51,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyIterator":118,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalFullCollectionExists":73,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":111,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":53,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":98,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":54,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":70,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":100,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":47,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":29,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":129,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":96,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":133,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":46,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":31,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":83,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":99,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":101,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":71,"org.apache.commons.collections4.map.ListOrderedMap2Test.testLastKey":106,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":27,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":15,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":114,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":50,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator":81,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":33,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":57,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":28,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":23,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":32,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":66,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalEmptyCollectionExists":75,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":8,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":56,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":126,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":107,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":125,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":116,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":17,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":6,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":7,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":39,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":65,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":69,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":132,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":124,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":19,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":103,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":4,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":113,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":88,"org.apache.commons.collections4.iterators.IteratorChainTest.testEqualsNull":74,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":10,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":16,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":25,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":20,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":123,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":109,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":58,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":86,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":94,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":68,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":0,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsContract":77,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectEqualsSelf":72,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":21,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":1,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":24,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":43,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":84,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":9,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":34,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":40,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":131,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":5,"org.apache.commons.collections4.iterators.IteratorChainTest.testSimpleSerialization":76,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":35,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":2,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":42,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":105,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":102,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":48,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":137,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":62,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":112,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsSelfHashCode":78,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":26,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":63,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":93,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":80,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":87,"org.apache.commons.collections4.iterators.IteratorChainTest.testSerializeDeserializeThenCompare":79,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":135,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":52,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":49,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":38,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":117,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testFullIterator":119,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":121,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":91},"transformations":[{"failures":[],"tindex":"449338c2-236b-11e5-9742-e9ac9e902dab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"coll","b":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"44935fd3-236b-11e5-9742-2bb4e3c15ca3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:161","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"44935fd4-236b-11e5-9742-a18ebe31f7f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator:65","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().inverseBidiMap()"},"variableMap":{"this":"tmpMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:61","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.SortedBidiMap<K, V>"},"status":-2},{"failures":[],"tindex":"449386e5-236b-11e5-9742-092e2d240301","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:180","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.ComparatorChain<E>.checkLocked()"},"status":0},{"failures":[],"tindex":"449386e6-236b-11e5-9742-19a0eac1323e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"lastReturned"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"status":-2},{"failures":[80],"tindex":"449386e7-236b-11e5-9742-1339bd0dc9da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:161","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(this.java.util.Map<K, V>[], 0, java.util.Map<K, V>[], 0, int)"},"status":-1},{"failures":[],"tindex":"449386e8-236b-11e5-9742-53dd6af82e73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[81,82,83],"tindex":"449386e9-236b-11e5-9742-df57d16a1080","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1785","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:119","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[84],"tindex":"449386ea-236b-11e5-9742-abba4afb832c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:93","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:48","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-1},{"failures":[],"tindex":"4493adfb-236b-11e5-9742-1761cbb33c08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"cacheSize","index":"maximumCacheSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:123","type":"CtWhileImpl","sourcecode":"while ((int) > (int)) {\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache();\n}"},"status":0},{"failures":[85,86,87,88,89],"tindex":"4493adfc-236b-11e5-9742-b78ffbe09baf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:621","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getRightSubTree()) == null) && (org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getLeftSubTree()) == null)) {\n    return null;\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:604","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getLeftSubTree()) == null) {\n    return org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeSelf();\n} "},"status":-1},{"failures":[],"tindex":"4493adfd-236b-11e5-9742-0128894eb071","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl","sourcecode":"return int < 0 ? int * (-1) : int"},"status":-2},{"failures":[],"tindex":"4493adfe-236b-11e5-9742-e1654c30c606","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2146","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<V,K>emptyOrderedMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:425","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K,V>emptyOrderedMapIterator()"},"status":-2},{"failures":[],"tindex":"4493adff-236b-11e5-9742-91c4dd62b2c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:479","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"4493ae00-236b-11e5-9742-8fb71376958d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:552","type":"CtReturnImpl","sourcecode":"return java.lang.Class<T>.newInstance()"},"variableMap":{"clazz":"clazz"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:551","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Class<T>.newInstance();\n} catch (final java.lang.Exception ex) {\n    throw new org.apache.commons.collections4.FunctorException((\"Cannot instantiate class: \" + (java.lang.Class<T>)) , java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"4493d511-236b-11e5-9742-23bf4a1aade4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2044","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"node":"entry","this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1154","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue())"},"status":-2},{"failures":[],"tindex":"4493d512-236b-11e5-9742-41aca1d712eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[],"tindex":"4493d513-236b-11e5-9742-4db705bdf139","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"status":-2},{"failures":[],"tindex":"4493d514-236b-11e5-9742-2941714a3424","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:423","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[3,4,5,6,7,8,9,90,91,10,11,12,13,92,93,14,15,94,95,96,16,97,98,17,99,18,100,19,20,21,22,101,23,24,25,26,27,28,102,103],"tindex":"4493d515-236b-11e5-9742-67e4ef9ee808","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:122","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>"},"status":-1},{"failures":[104],"tindex":"4493d516-236b-11e5-9742-7176841ccda7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1592","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey().equals(java.lang.Object))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"4493fc27-236b-11e5-9742-2341a47c3298","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:522","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.IteratorChain<E>(java.util.Collection<java.util.Iterator<? extends E>>)"},"status":-2},{"failures":[],"tindex":"4493fc28-236b-11e5-9742-57543d8661a6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:180","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[105],"tindex":"4493fc29-236b-11e5-9742-35ca1e47c00d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() method not supported for a NodeListIterator.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:62","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\")"},"status":-1},{"failures":[],"tindex":"4493fc2a-236b-11e5-9742-39bcf3025f3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:243","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"4493fc2b-236b-11e5-9742-d5c9f4707b62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"right","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1200","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n        return null;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                return null;\n            } else {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n}"},"status":-2},{"failures":[106,107,108,109],"tindex":"4494233c-236b-11e5-9742-c14e6570f6c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot set value to this map entry\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:181","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Map is empty\")"},"status":-1},{"failures":[110],"tindex":"4494233d-236b-11e5-9742-2f259b64578c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:614","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().addMapping(int, int, new org.apache.commons.collections4.keyvalue.MultiKey<K>(K , K , K , K , K), V)"},"status":-1},{"failures":[111,112,113,114,115],"tindex":"4494233e-236b-11e5-9742-b3f78a432b6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}"},"variableMap":{"this":"this","lock":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:198","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object))"},"status":-1},{"failures":[],"tindex":"4494233f-236b-11e5-9742-c785b5f7f6e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1266","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<?>.next()"},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1258","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int)"},"status":0},{"failures":[],"tindex":"44942340-236b-11e5-9742-5f08919f6e5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:981","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Array class must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:671","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot use setValue() when the object being set is already in the map\")"},"status":-1},{"failures":[],"tindex":"44944a51-236b-11e5-9742-27602c690552","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:150","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = org.apache.commons.collections4.Bag<?>.uniqueSet().iterator()"},"variableMap":{"other":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:127","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator()"},"status":-2},{"failures":[],"tindex":"44944a52-236b-11e5-9742-e70c12267362","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:366","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n} "},"variableMap":{"current":"current","org.apache.commons.collections4.map.AbstractHashedMap.GETKEY_INVALID":"org.apache.commons.collections4.map.AbstractHashedMap.GETVALUE_INVALID"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:918","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n} "},"status":-2},{"failures":[],"tindex":"44944a53-236b-11e5-9742-b53baff48178","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:671","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"44944a54-236b-11e5-9742-61149f955707","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:377","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-2},{"failures":[116],"tindex":"44944a55-236b-11e5-9742-35aca5ed3c5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:111","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Transformer<? super T, ? extends T> org.apache.commons.collections4.Transformer<? super T, ? extends T> : org.apache.commons.collections4.Transformer<? super T, ? extends T>[]) {\n    T = org.apache.commons.collections4.Transformer<? super T, ? extends T>.transform(T);\n}"},"status":-1},{"failures":[],"tindex":"44944a56-236b-11e5-9742-bff428269338","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:584","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-2},{"failures":[117],"tindex":"44944a57-236b-11e5-9742-9f70a18176b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:264","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"null keys not allowed\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:117","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"44944a58-236b-11e5-9742-a91e9907feae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:685","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"rval":"leftChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"44944a59-236b-11e5-9742-c7c4e3812d0f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":0},{"failures":[],"tindex":"44944a5a-236b-11e5-9742-23a88d7afb81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()"},"status":-2},{"failures":[],"tindex":"4494716b-236b-11e5-9742-95dd01a6d745","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"validForUpdate","removed":"validForUpdate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":"4494716c-236b-11e5-9742-ab8338701d0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:56","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.EqualPredicate<T>(T)"},"status":-2},{"failures":[],"tindex":"4494716d-236b-11e5-9742-d3ae6ad2333d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:95","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag().remove(java.lang.Object, int)"},"status":-2},{"failures":[81,82,83,118,119],"tindex":"4494716e-236b-11e5-9742-b9aafff93b01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:100","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"4494716f-236b-11e5-9742-498e07e555e4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ArrayStack:90","type":"CtThrowImpl","sourcecode":"throw new java.util.EmptyStackException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1627","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"status":-2},{"failures":[],"tindex":"44947170-236b-11e5-9742-a35d8ebd51fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n        java.util.ListIterator<?>.previous();\n    }\n    return ;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    java.util.ListIterator<E>.set(E);\n    return ;\n} "},"status":-2},{"failures":[120,121,122,123,124,125],"tindex":"44947171-236b-11e5-9742-512693bad3e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:592","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[126,127,128,129,130,131,132,133,134,135,136,137],"tindex":"44947172-236b-11e5-9742-8939bc740f94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"44947173-236b-11e5-9742-051d55c1c48e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1375","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"right=\").append(\"null\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1377","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}