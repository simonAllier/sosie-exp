{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":138,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":236,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":198,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":277,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":29,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":175,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":190,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":299,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":28,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":24,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":197,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":295,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":148,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":237,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":41,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":191,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":296,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":82,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":252,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":290,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":36,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":324,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":131,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":61,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":227,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":96,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":304,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":276,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":275,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":152,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":274,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":153,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":267,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":294,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":106,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":270,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":185,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":58,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":234,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":92,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":268,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":114,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":292,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":305,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":249,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":32,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":54,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":300,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":319,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":216,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":194,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":298,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":174,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":188,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":271,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":318,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":205,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":297,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":105,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":250,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":102,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":163,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":164,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":162,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":251,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":193,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":282,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":206,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":285,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":313,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":211,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":147,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":283,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":293,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":100,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":69,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":189,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":266,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":303,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":94,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":230,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":273,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":139,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":272,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":228,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":141,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":259,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":208,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":243,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":310,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":186,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":125,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":307,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":154,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":15,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":14,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":315,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":289,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":284,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":10,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":13,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":12,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":311,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":7,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":23,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":9,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":8,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":325,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":301,"org.apache.commons.collections4.CollectionUtilsTest.isFull":4,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":302,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":38,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":168,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":103,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":286,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":30,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":55,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":229,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":200,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":124,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":218,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":209,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":203,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":202,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":210,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":151,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":2,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":63,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":219,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":64,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":157,"org.apache.commons.collections4.list.TreeListTest.testRemove":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":123,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":89,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":215,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":225,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":224,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":254,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":110,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":27,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":220,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":221,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":222,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":48,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":166,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":179,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":18,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":258,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":1,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":170,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":158,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":232,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":288,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":130,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":278,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":242,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":287,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":207,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":121,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":50,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":323,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":214,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":51,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":35,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":99,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":75,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":246,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":182,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":171,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":314,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":261,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":145,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":281,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":91,"org.apache.commons.collections4.map.LRUMapTest.testLRU":239,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":135,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":247,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":117,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":280,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":195,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSimpleSerialization":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":144,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":47,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":306,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":21,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":217,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":176,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":46,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":137,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":180,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":240,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":101,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":127,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":25,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":49,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":98,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":264,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":213,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":317,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":322,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":233,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":241,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":263,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":309,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":132,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":260},"transformations":[{"failures":[0,1],"tindex":"e9ef51e2-2371-11e5-92e9-9dd5b2b90d58","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1011","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.Flat3Map.EntryIterator<K, java.lang.Object>.nextEntry().getKey()"},"status":-1},{"failures":[],"tindex":"e9ef78f3-2371-11e5-92e9-7b4346fb2c93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:146","type":"CtForEachImpl","sourcecode":"for (final T T : java.util.Collection<T>) {\n    if (T != null) {\n        int += T.hashCode();\n    } \n}"},"status":-2},{"failures":[],"tindex":"e9ef78f4-2371-11e5-92e9-83bb00161363","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:350","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"e9ef78f5-2371-11e5-92e9-87294d5084ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"length","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":"e9ef78f6-2371-11e5-92e9-7712be77093f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:150","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.SwitchTransformer<I, O>.this(true, org.apache.commons.collections4.Predicate<? super I>[], org.apache.commons.collections4.Transformer<? super I, ? extends O>[], org.apache.commons.collections4.Transformer<? super I, ? extends O>)"},"status":-2},{"failures":[],"tindex":"e9efa007-2371-11e5-92e9-a73fdb65b985","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:326","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"variableMap":{"entry":"entry","this":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:190","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformKey(java.util.Map.Entry<? extends J, ? extends U>.getKey()), org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformValue(java.util.Map.Entry<? extends J, ? extends U>.getValue()))"},"status":-2},{"failures":[],"tindex":"e9efa008-2371-11e5-92e9-517379ebc2c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"entry":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:528","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.util.Map.Entry<K, V>.getKey())"},"status":-2},{"failures":[],"tindex":"e9efa009-2371-11e5-92e9-af9732975d93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:126","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset()"},"status":-2},{"failures":[2],"tindex":"e9efa00a-2371-11e5-92e9-7d44f691dc4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2126","type":"CtIfImpl","sourcecode":"if ((K) != null) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)(java.util.Map.Entry<K, V>)));\n    K = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null ? null : org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey();\n} "},"status":-1},{"failures":[3],"tindex":"e9efa00b-2371-11e5-92e9-8d5107f53da7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:100","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().addAll(java.util.Collection<? extends E>)"},"status":-1},{"failures":[],"tindex":"e9efc71c-2371-11e5-92e9-4b5e4282cd9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:387","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.getString(java.util.Map<? super K, ?>, K)"},"status":-2},{"failures":[],"tindex":"e9efc71d-2371-11e5-92e9-3180e9980dfb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key3","i":"hashCode","key":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:268","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"e9efc71e-2371-11e5-92e9-61ff26405dd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:149","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"sm":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1507","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedSortedMap(java.util.SortedMap<K, V>)"},"status":0},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"e9efc71f-2371-11e5-92e9-2b2c1b4ffc5b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:150","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"nextIndex":"lastReturnedIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:369","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"e9efc720-2371-11e5-92e9-a3ce61fdecab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:747","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<K>.remove()"},"status":-2},{"failures":[],"tindex":"e9efee31-2371-11e5-92e9-c5e4a3fe7327","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:685","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"rval":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1168","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"e9efee32-2371-11e5-92e9-8911310c7929","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2157","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"key","obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:64","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsKey(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"e9efee33-2371-11e5-92e9-1bb5820004e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:961","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-2},{"failures":[],"tindex":"e9efee34-2371-11e5-92e9-11b976bdc8f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:117","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"FilterListIterator.add(Object) is not supported.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:467","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\")"},"status":-1},{"failures":[],"tindex":"e9efee35-2371-11e5-92e9-af1c8490647a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:864","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"e9f01546-2371-11e5-92e9-81da0475a185","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:276","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:953","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((\"toIndex = \" + int))"},"status":-2},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"e9f01547-2371-11e5-92e9-711f39e1774a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:154","type":"CtReturnImpl","sourcecode":"return ((this.int) - (this.int)) - 1"},"variableMap":{"startIndex":"hash","index":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl","sourcecode":"return int < 0 ? int * (-1) : int"},"status":-1},{"failures":[],"tindex":"e9f01548-2371-11e5-92e9-d3a485368408","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:123","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , 0)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:125","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.listIterator(0)"},"status":-2},{"failures":[78,79,80,81,82],"tindex":"e9f01549-2371-11e5-92e9-0f2074386531","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:847","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>, null)"},"variableMap":{"maxNode":"this","leftSubTree":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.recalcHeight()"},"status":-1},{"failures":[],"tindex":"e9f0154a-2371-11e5-92e9-71e232bb4c3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:71","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.MapIterator<? extends K, ? extends V>.hasNext()"},"status":-2},{"failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"tindex":"e9f0154b-2371-11e5-92e9-e7360c6fcc8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:531","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"e9f03c5c-2371-11e5-92e9-3d316cae7ba9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1575","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"h","e":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:578","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"e9f03c5d-2371-11e5-92e9-c7e1e2746436","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1207","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"e9f03c5e-2371-11e5-92e9-6d81cd1b7683","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:72","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"e9f03c5f-2371-11e5-92e9-936f2569461a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1348","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"parent=\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:67","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Trie[\")"},"status":0},{"failures":[],"tindex":"e9f03c60-2371-11e5-92e9-4fa85ae85835","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:588","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[89,90,91,97,98,100,101,102,105],"tindex":"e9f03c61-2371-11e5-92e9-4522ecb9fbbb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"e9f03c62-2371-11e5-92e9-ad6fb117c485","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:830","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:510","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"e9f03c63-2371-11e5-92e9-df8ea6758e69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SplitMapUtils:212","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Get must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:518","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"e9f06374-2371-11e5-92e9-3db061a2a38b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:467","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\")"},"status":-1},{"failures":[],"tindex":"e9f06375-2371-11e5-92e9-77185094959b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1024","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"e9f06376-2371-11e5-92e9-056e6577a85d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:247","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"e9f06377-2371-11e5-92e9-99f7a58bfa1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"e9f06378-2371-11e5-92e9-c3e381e35437","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:123","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.(getKey()) == null ? 0 : org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.getKey().hashCode()) ^ (java.lang.Object == null ? 0 : java.lang.Object.hashCode())"},"status":-2},{"failures":[],"tindex":"e9f06379-2371-11e5-92e9-cfa58fca64c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1203","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"e9f0637a-2371-11e5-92e9-934badf7706f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"e9f0637b-2371-11e5-92e9-099c6fcb11d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SplitMapUtils:73","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[180,181,182],"tindex":"e9f08a8c-2371-11e5-92e9-f9b681aed52a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[183],"tindex":"e9f08a8d-2371-11e5-92e9-df129e6e854c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:145","type":"CtReturnImpl","sourcecode":"return (this.int) - (this.int)"},"variableMap":{"startIndex":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:154","type":"CtReturnImpl","sourcecode":"return ((this.int) - (this.int)) - 1"},"status":-1},{"failures":[12,19,21,27,28,32,34],"tindex":"e9f08a8e-2371-11e5-92e9-fd6b66a5bd76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"lastReturnedIndex","lengthInBits":"lastReturnedIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"lastReturnedIndex","otherOffsetInBits":"lastReturnedIndex","otherLengthInBits":"lastReturnedIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:375","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[184,185],"tindex":"e9f08a8f-2371-11e5-92e9-45855f561e16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:529","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-1},{"failures":[],"tindex":"e9f08a90-2371-11e5-92e9-6ba44ccb2db1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:305","type":"CtReturnImpl","sourcecode":"return java.lang.Float.valueOf(java.lang.Number.floatValue())"},"variableMap":{"answer":"answer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:303","type":"CtReturnImpl","sourcecode":"return ((java.lang.Float)(java.lang.Number))"},"status":-2},{"failures":[],"tindex":"e9f08a91-2371-11e5-92e9-5b184dc79cb0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-2},{"failures":[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,0,1,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326],"tindex":"e9f0b1a2-2371-11e5-92e9-d9d4e315dada","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-1},{"failures":[135,137,138,154,158,171,172,175,176,177,178,179],"tindex":"e9f0b1a3-2371-11e5-92e9-d3eb0300fe9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}