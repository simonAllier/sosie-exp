{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":14,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":118,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":119,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":88,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":49,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":117,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":90,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":35,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":28,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":307,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":115,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":190,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToString":220,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":160,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":302,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":282,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":79,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":32,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":89,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":100,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testLastKey":155,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":186,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":148,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetClearChangesMap":167,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":208,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":246,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":64,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":56,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":98,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":103,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":194,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":235,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":299,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":108,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":202,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":212,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMakeMap":176,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":67,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToString":204,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":24,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":61,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":268,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":125,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionSize":203,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":58,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":37,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":120,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":127,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":76,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":112,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":126,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":13,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":87,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":36,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":124,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRetainAll":192,"org.apache.commons.collections4.ListUtilsTest.testLazyList":25,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":145,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":255,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":10,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":300,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":149,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":223,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":276,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":45,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":102,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":146,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueCompatibility":195,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":147,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":257,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":216,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":54,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":69,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":191,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":211,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":82,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":113,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":121,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":261,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":283,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":284,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":151,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":66,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":60,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":70,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":104,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":81,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":111,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":260,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":242,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":136,"org.apache.commons.collections4.map.HashedMapTest.testClone":5,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":254,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":93,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":131,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":105,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":271,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":23,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":134,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":285,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":169,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":94,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":205,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":150,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":114,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":262,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":295,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":92,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":277,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":215,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesClearChangesMap":193,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":154,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":245,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutNullValue":172,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":247,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":297,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":201,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":86,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":43,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":166,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":165,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":296,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":78,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":164,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":39,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":68,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":239,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":225,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":293,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":101,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":132,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":232,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFullMapCompatibility":0,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":263,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":30,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":122,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveAll":185,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":243,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":217,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":304,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":16,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":253,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":19,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":29,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":206,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":9,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":256,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":218,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":48,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":209,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":38,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":8,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":31,"org.apache.commons.collections4.map.LinkedMapTest.testClone":12,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":95,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":50,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":83,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":288,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":123,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":279,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":170,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":305,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":207,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":303,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutNullKey":178,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFullMapCompatibility":1,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":249,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":289,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":15,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":129,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":241,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":27,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIteratorRemove":221,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":250,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":72,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":71,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":188,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":199,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":73,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":275,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":33,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":236,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":77,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":244,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":65,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":140,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":157,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":158,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":159,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":168,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testReset":20,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":229,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":47,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":99,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":210,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":264,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSerializeDeserializeThenCompare":230,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":18,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":251,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":133,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionSize":219,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":26,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":139,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":252,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":62,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":74,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":11,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testFullMapCompatibility":180,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":51,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":3,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":196,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":142,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":177,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":189,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":75,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":228,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":233,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":22,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":231,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":222,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":2,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":182,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":128,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":266,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":281,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":4,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":183,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":310,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":17,"org.apache.commons.collections4.map.LRUMapTest.testClone":7,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":237,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":265,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":21,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":290,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":116,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":308,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":137,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveChangesMap":173,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":135,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":161,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":96,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":272,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRetainAll":162,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":179,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":294,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":85,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":274,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":97,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":291,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":240,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":44,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":110,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":42,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueSerialization":200,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":152,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":138,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveAll":175,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":298,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":46,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":84,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSerializeDeserializeThenCompare":214,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":63,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":259,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":41,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":143,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":130,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":197,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":141,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":273,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":91,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":53,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":6,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":55,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":198,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":40,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":227,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":107,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":174,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":267,"org.apache.commons.collections4.PredicateUtilsTest.testTruePredicate":109,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":181,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIsEmpty":224,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testFirstKey":156,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":106,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":144,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":280,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapHashCode":163,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":269,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":184,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":248,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":59,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":153,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":226,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":270,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":287,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":309,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":286,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":238,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":213,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":57,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":278,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":301,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":80,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":258,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":52,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":306,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetClearChangesMap":171,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":292,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":34},"transformations":[{"failures":[],"tindex":"eb5fd45d-2380-11e5-875a-1d66411c4e70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:87","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedSortedBag<E>"},"variableMap":{"decorated":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:57","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(org.apache.commons.collections4.SortedBag<E> , org.apache.commons.collections4.Transformer<? super E, ? extends E>)"},"status":-2},{"failures":[],"tindex":"eb5ffb6e-2380-11e5-875a-81104976adf1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1812","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.InverseViewMapEntryIterator.createEntry(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1791","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious()"},"status":-2},{"failures":[],"tindex":"eb60227f-2380-11e5-875a-9fba3239e564","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1164","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[0,1,2],"tindex":"eb602280-2380-11e5-875a-2f5d4f306103","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2404","type":"CtLocalVariableImpl","sourcecode":"int int = java.io.ObjectInputStream.readInt()"},"status":-1},{"failures":[],"tindex":"eb602281-2380-11e5-875a-9503c33a558b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:468","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtIfImpl","sourcecode":"if (java.util.Iterator.java.util.Iterator.isAssignableFrom(java.lang.reflect.Method.getReturnType())) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.reflect.Method.invoke(java.lang.Object, ((java.lang.Object[])(null)))));\n    if (java.util.Iterator<?> != null) {\n        return java.util.Iterator<?>;\n    } \n} "},"status":-2},{"failures":[],"tindex":"eb604892-2380-11e5-875a-e5fb22f941bd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:186","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"))"},"variableMap":{"i":"fromIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:950","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((\"fromIndex = \" + int))"},"status":-2},{"failures":[],"tindex":"eb604893-2380-11e5-875a-99f816c34ff8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:255","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"eb604894-2380-11e5-875a-f3f0a5bdd0e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"root":"current","h":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1619","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"eb606fa5-2380-11e5-875a-6daa7d3fe02f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"currentNode","to":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":0},{"failures":[],"tindex":"eb60bdc6-2380-11e5-875a-6bdf7eb18eb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:142","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"variableMap":{"next":"entry","entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:641","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"status":0},{"failures":[],"tindex":"eb60bdc7-2380-11e5-875a-0f8f613835d6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().comparator()"},"status":-2},{"failures":[],"tindex":"eb60bdc8-2380-11e5-875a-3d51ddccd13d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} "},"variableMap":{"lengthInBits":"bitIndex","root":"found","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:908","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , null , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    int -= 2;\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    } else if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n    } else {\n        return null;\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":0},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"eb60e4d9-2380-11e5-875a-638c7b64af4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:870","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.util.Map.Entry<?, ?>.getKey())"},"variableMap":{"parent":"this","entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:326","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-1},{"failures":[],"tindex":"eb610bea-2380-11e5-875a-a73f07f8cef6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:667","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"eb610beb-2380-11e5-875a-b77a34b9cdeb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:304","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"eb610bec-2380-11e5-875a-c9803694f253","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:305","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"eb610bed-2380-11e5-875a-136a5ed9a207","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:112","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()"},"status":-2},{"failures":[],"tindex":"eb610bee-2380-11e5-875a-75bfb3d2a777","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:147","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    java.lang.Object[][int] = new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.MapEntry(((java.util.Map.Entry<K, V>)(java.lang.Object[][int])) , org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>);\n}"},"status":-2},{"failures":[],"tindex":"eb6132ff-2380-11e5-875a-973217392bcb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2146","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<V,K>emptyOrderedMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:64","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().mapIterator()"},"status":-2},{"failures":[],"tindex":"eb613300-2380-11e5-875a-63d0a628c862","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:101","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set<java.util.Map.Entry<K, V>>)"},"status":-2},{"failures":[],"tindex":"eb613301-2380-11e5-875a-dff64dbe6532","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:117","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"FilterListIterator.add(Object) is not supported.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1914","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":0},{"failures":[],"tindex":"eb613302-2380-11e5-875a-939a5a8fb95a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:608","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()"},"status":-2},{"failures":[],"tindex":"eb613303-2380-11e5-875a-8d71584120e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:636","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key4","entry":"entry","key2":"key1","key5":"key5","previous":"entry","hashCode":"hashCode","key3":"key5","key4":"key1","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"eb613304-2380-11e5-875a-ebb8065c3b98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1097","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = this.java.lang.Object"},"status":-2},{"failures":[],"tindex":"eb615a15-2380-11e5-875a-ad460b32cc8d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:392","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":-2},{"failures":[],"tindex":"eb615a16-2380-11e5-875a-eb62d970a532","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:231","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 9)"},"status":0},{"failures":[16,17],"tindex":"eb615a17-2380-11e5-875a-138dd0139142","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"this":"this","dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-1},{"failures":[18,19,20,21,22],"tindex":"eb618128-2380-11e5-875a-abb5c07b7d8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:299","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.add(null)"},"variableMap":{"values":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:148","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(E)"},"status":-1},{"failures":[23,24],"tindex":"eb618129-2380-11e5-875a-d5d6ffc49202","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:81","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasPrevious()"},"status":-1},{"failures":[],"tindex":"eb61812a-2380-11e5-875a-f54450a1f49e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:212","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toString()"},"status":-2},{"failures":[],"tindex":"eb61812b-2380-11e5-875a-49116af4db1f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:507","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[25],"tindex":"eb61812c-2380-11e5-875a-23976f0af55d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.LazyList:126","type":"CtForImpl","sourcecode":"for (int int = int ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null);\n}"},"status":-1},{"failures":[26,27],"tindex":"eb61812d-2380-11e5-875a-bd145990d3f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:109","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = ((java.util.Iterator<? extends E>)(E))"},"status":-1},{"failures":[28],"tindex":"eb61a83e-2380-11e5-875a-aba87a94cf40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:248","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305],"tindex":"eb61a83f-2380-11e5-875a-d327c2ca857d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.EqualPredicate:54","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.nullPredicate()"},"variableMap":{"this":"org.apache.commons.collections4.functors.TruePredicate.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TruePredicate:47","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.Predicate))"},"status":-1},{"failures":[],"tindex":"eb61cf50-2380-11e5-875a-1bb67d16bcb2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1421","type":"CtLocalVariableImpl","sourcecode":"K K = ((K)(java.io.ObjectInputStream.readObject()))"},"variableMap":{"stream":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:253","type":"CtLocalVariableImpl","sourcecode":"final K K = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"eb61cf51-2380-11e5-875a-31604415d1c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:174","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Iterator must not be null\")"},"status":0},{"failures":[306],"tindex":"eb61cf52-2380-11e5-875a-1d2704a8bac4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2279","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int"},"variableMap":{"modCount":"hash2","expectedModCount":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:556","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"eb61cf53-2380-11e5-875a-73447be9ad59","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1964","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()].org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == (this))"},"variableMap":{"leftNode":"obj","parentNode":"obj","dataElement":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:466","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"eb61cf54-2380-11e5-875a-4751cfc8c626","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:83","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")"},"status":-2},{"failures":[],"tindex":"eb61f665-2380-11e5-875a-7d68a56e9ff4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:396","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? org.apache.commons.collections4.map.SingletonMap<K, V>.(getValue()) == null : java.lang.Object.equals(org.apache.commons.collections4.map.SingletonMap<K, V>.getValue())"},"status":-2},{"failures":[],"tindex":"eb61f666-2380-11e5-875a-4fcc3a822af5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1392","type":"CtReturnImpl","sourcecode":"return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false"},"status":-2},{"failures":[307,308],"tindex":"eb61f667-2380-11e5-875a-7548d61018e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"eb61f668-2380-11e5-875a-3187d0f10d16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n} "},"status":-2},{"failures":[309,310],"tindex":"eb61f669-2380-11e5-875a-ab071959cd92","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"variableMap":{"delegateMap":"map","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:202","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)));\n} "},"status":-1},{"failures":[],"tindex":"eb61f66a-2380-11e5-875a-2d12c4a136d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1001","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<K, V>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue());\n}"},"status":0},{"failures":[],"tindex":"eb621d7b-2380-11e5-875a-9f4228089312","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"lengthInBits","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2388","type":"CtIfImpl","sourcecode":"if ((int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"eb621d7c-2380-11e5-875a-83df1643ac6a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:427","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"root":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1207","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":48,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}