{"failureDictionary":{"org.apache.commons.collections4.CollectionUtilsTest.union":30,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":173,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":35,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":38,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":131,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":129,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":146,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":20,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":66,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":97,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":107,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":141,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":70,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":172,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":12,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":89,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":163,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":55,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":16,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":162,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":115,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":154,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":104,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":95,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":101,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":114,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":174,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":65,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":81,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":133,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":7,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":73,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":59,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":167,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":47,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":56,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":74,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":122,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":127,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":33,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":166,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":44,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":94,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":68,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":119,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":165,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":21,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":130,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":171,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":82,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":142,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":140,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":149,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":49,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":41,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":39,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":96,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":147,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":45,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":100,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":116,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":57,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":164,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":22,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":139,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":90,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":24,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":121,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":1,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":10,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":88,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":120,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":151,"org.apache.commons.collections4.CollectionUtilsTest.select":26,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":62,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":111,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":71,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":170,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":19,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":87,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":148,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":103,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":29,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":48,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":110,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":85,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":46,"org.apache.commons.collections4.list.TreeListTest.testListEquals":150,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":67,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":4,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":106,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":92,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":60,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":123,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":3,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":138,"org.apache.commons.collections4.CollectionUtilsTest.intersection":31,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":134,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":32,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":40,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":79,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":25,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":2,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":99,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":137,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":135,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":144,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":113,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":78,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":160,"org.apache.commons.collections4.SetUtilsTest.testHashCode":93,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":155,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":64,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":126,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":161,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":72,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":77,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":152,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":169,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":153,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":53,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":11,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":63,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":112,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":117,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":156,"org.apache.commons.collections4.map.CompositeMapTest.testPut":6,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":28,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":69,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":143,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":132,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":136,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":86,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":109,"org.apache.commons.collections4.map.CompositeMapTest.testGet":5,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":83,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":76,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":51,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":50,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":98,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":14,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":75,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":175,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":124,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":43,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":158,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":58,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":125,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":105,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":157,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":84,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":0,"org.apache.commons.collections4.set.CompositeSetTest.testContains":17,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":128,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":54,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":61,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":18,"org.apache.commons.collections4.list.TreeListTest.testBug35258":145,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":37,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":108,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":9,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":159,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":23,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":8,"org.apache.commons.collections4.ListUtilsTest.testSelect":13,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":42,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":102,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":80,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":168,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":36,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":91},"transformations":[{"failures":[0,1],"tindex":"b8089a20-2377-11e5-8eea-d72df54e2acd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1215","type":"CtReturnImpl","sourcecode":"return ((java.util.List<T>)(java.lang.Iterable<T>)).get(int)"},"variableMap":{"iterable":"iterable","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.lang.Iterable<T>.iterator(), int)"},"status":-1},{"failures":[],"tindex":"b808c131-2377-11e5-8eea-09c3402afbfb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1438","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.MultiValueMap.<K,V>multiValueMap(java.util.Map<K, ? super java.util.Collection<V>>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:122","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.MultiValueMap<K, V>(java.util.Map<K, ? super C> , org.apache.commons.collections4.Factory<C>)"},"status":-2},{"failures":[2,3],"tindex":"b808c132-2377-11e5-8eea-a7b520f9c09f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:464","type":"CtInvocationImpl","sourcecode":"java.util.List<K>.add(int, K)"},"status":-1},{"failures":[4],"tindex":"b808c133-2377-11e5-8eea-c3dc7acae05a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:284","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"b808c134-2377-11e5-8eea-ff7550b70280","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:400","type":"CtAssignmentImpl","sourcecode":"java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet()"},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:374","type":"CtAssignmentImpl","sourcecode":"java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"b808e845-2377-11e5-8eea-bfdc0d8791a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:165","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"before":"link","header":"link","after":"link"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:302","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null"},"status":-2},{"failures":[],"tindex":"b808e846-2377-11e5-8eea-6da712cdff05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:110","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.isEmpty()"},"status":-2},{"failures":[],"tindex":"b808e847-2377-11e5-8eea-dfd382733e14","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"variableMap":{"h":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} "},"status":0},{"failures":[],"tindex":"b808e848-2377-11e5-8eea-ebc1a7680d35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.IfClosure:122","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Closure<? super E>.execute(E)"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"b808e849-2377-11e5-8eea-15ce943a8110","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:90","type":"CtReturnImpl","sourcecode":"return java.lang.Math.min(org.apache.commons.collections4.CollectionUtils.CardinalityHelper<O>.freqA(java.lang.Object), org.apache.commons.collections4.CollectionUtils.CardinalityHelper<O>.freqB(java.lang.Object))"},"variableMap":{"obj":"obj","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.CardinalityHelper<O>.getFreq(java.lang.Object, java.util.Map<O, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"b8090f5a-2377-11e5-8eea-adb0cf9675b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:105","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.collections4.trie.KeyAnalyzer.int;\n} "},"status":0},{"failures":[],"tindex":"b8090f5b-2377-11e5-8eea-819b59db29ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1916","type":"CtReturnImpl","sourcecode":"return K"},"status":-1},{"failures":[37,38,39],"tindex":"b8090f5c-2377-11e5-8eea-899d45f248c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtIfImpl","sourcecode":"if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    return int;\n} "},"variableMap":{"current":"value","n":"i","object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:146","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"b8090f5d-2377-11e5-8eea-9fefbd13d76b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:242","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"variableMap":{"this":"set","collectionRetainAll":"setRetainAll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:257","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"b8090f5e-2377-11e5-8eea-e36db383a815","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl","sourcecode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} "},"status":-1},{"failures":[],"tindex":"b8090f5f-2377-11e5-8eea-f9163e34ba04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:145","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Load factor must be greater than 0\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:911","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String)"},"status":-1},{"failures":[],"tindex":"b8093670-2377-11e5-8eea-81bd6be1bb33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1608","type":"CtLocalVariableImpl","sourcecode":"O O = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1068","type":"CtLocalVariableImpl","sourcecode":"final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I)"},"status":-2},{"failures":[93],"tindex":"b8093671-2377-11e5-8eea-bfe9d30200ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:398","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"variableMap":{"h":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:148","type":"CtOperatorAssignmentImpl","sourcecode":"int += T.hashCode()"},"status":-1},{"failures":[],"tindex":"b8093672-2377-11e5-8eea-21fe94c46fd8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n} "},"status":0},{"failures":[],"tindex":"b8093673-2377-11e5-8eea-cb69bf670b1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:974","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()"},"status":-2},{"failures":[94],"tindex":"b8093674-2377-11e5-8eea-2f35a5b6e24a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerClosure:50","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"status":-1},{"failures":[],"tindex":"b8093675-2377-11e5-8eea-4f427b14e002","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"b8093676-2377-11e5-8eea-1d805f250a9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":0},{"failures":[],"tindex":"b8095d87-2377-11e5-8eea-4fb779197b7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"variableMap":{"h":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 11)"},"status":0},{"failures":[],"tindex":"b8095d88-2377-11e5-8eea-01b1062999ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V)"},"status":0},{"failures":[],"tindex":"b8095d89-2377-11e5-8eea-a379c28ddd5d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.TransformedQueue:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.TransformedQueue<E>.getQueue().peek()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:127","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.TransformedQueue<E>.getQueue().element()"},"status":-2},{"failures":[],"tindex":"b8095d8a-2377-11e5-8eea-793c787902a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1333","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"b8095d8b-2377-11e5-8eea-e182405d237c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"node","currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b809849c-2377-11e5-8eea-9b5de4d9868d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:642","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"b809849d-2377-11e5-8eea-1fdcce9110e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1051","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(org.apache.commons.collections4.list.AbstractLinkedList<E> , (int + (int)) , (int + (int)))"},"status":-2},{"failures":[],"tindex":"b809849e-2377-11e5-8eea-1929a3881e6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:262","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"b809abaf-2377-11e5-8eea-23935d206530","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:322","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int)"},"variableMap":{"entry":"entry","this":"this","hashIndex":"removeIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:320","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)"},"status":-2},{"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107],"tindex":"b809abb0-2377-11e5-8eea-df5aa3c4e322","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"variableMap":{"iterators":"iterators","valueSet":"valueSet","values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-1},{"failures":[],"tindex":"b809abb1-2377-11e5-8eea-1f9ea86bbf9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"status":0},{"failures":[],"tindex":"b809abb2-2377-11e5-8eea-bbe01e144d90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1387","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object))"},"variableMap":{"buf":"buf","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:395","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object))"},"status":0},{"failures":[],"tindex":"b809abb3-2377-11e5-8eea-5dab2d9e6709","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:539","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"b809abb4-2377-11e5-8eea-9ba6539a4595","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:408","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.map.LRUMap<K, V>)(super.clone()))"},"status":-2},{"failures":[],"tindex":"b809abb5-2377-11e5-8eea-750dc9f4a522","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:158","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Closure<T>)(org.apache.commons.collections4.Closure<? super T>))"},"status":-2},{"failures":[],"tindex":"b809abb6-2377-11e5-8eea-f16d2e0bbcbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:994","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++"},"variableMap":{"modCount":"relativePosition"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:579","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"b809abb7-2377-11e5-8eea-df29c2c2fec8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:711","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"b809d2c8-2377-11e5-8eea-35bd48f551e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (java.util.ListIterator<E>.hasNext()) {\n        E = java.util.ListIterator<E>.next();\n    }\n    java.util.ListIterator<E>.previous();\n    return E;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:93","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.next()"},"status":-2},{"failures":[],"tindex":"b809d2c9-2377-11e5-8eea-03e2220f6972","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtIfImpl","sourcecode":"if (java.util.Collection<T> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"status":-2},{"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"tindex":"b809d2ca-2377-11e5-8eea-09e3d34d39d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:188","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size()"},"status":-1},{"failures":[],"tindex":"b809d2cb-2377-11e5-8eea-2d11bfd0d33a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:566","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:197","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.lookupKey(java.lang.Object)"},"status":-2},{"failures":[145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"tindex":"b809d2cc-2377-11e5-8eea-693267371dde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:592","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getRightSubTree()) == null) {\n    return org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeSelf();\n} "},"variableMap":{"this":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:469","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TreeList.AVLNode<E>"},"status":-1},{"failures":[],"tindex":"b809d2cd-2377-11e5-8eea-d323107cb7cc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1298","type":"CtThrowImpl","sourcecode":"throw new java.lang.InternalError()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")"},"status":-2},{"failures":[],"tindex":"b809d2ce-2377-11e5-8eea-1fe8f1e05e8f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1622","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()"},"variableMap":{"current":"prevEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:816","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null"},"status":-2},{"failures":[],"tindex":"b809d2cf-2377-11e5-8eea-cd37bf3f4712","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().removeAll(null);\n}"},"status":-2},{"failures":[],"tindex":"b809f9e0-2377-11e5-8eea-c3521890091a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:127","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.Map<? super K, ?>.get(K)"},"status":-2},{"failures":[],"tindex":"b809f9e1-2377-11e5-8eea-1ba9400fd565","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1908","type":"CtAssignmentImpl","sourcecode":"java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.lowerEntry(K)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}