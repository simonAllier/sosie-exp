{"failureDictionary":{"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":19,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":64,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":73,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":97,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":3,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":82,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":13,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":70,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":7,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":10,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":75,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":81,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":72,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":36,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":37,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":83,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":93,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":77,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":50,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":55,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":102,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":68,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":74,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":100,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":4,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":14,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":29,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":52,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":6,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":48,"org.apache.commons.collections4.CollectionUtilsTest.get1":16,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":31,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":34,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":87,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":95,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":8,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":85,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":84,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":22,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":61,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":66,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":11,"org.apache.commons.collections4.map.LRUMapTest.testLRU":9,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":27,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":51,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":0,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":32,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":17,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":88,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":60,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":1,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":104,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":78,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":49,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":101,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":86,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":46,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":33,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":96,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":43,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":42,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":45,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":44,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":39,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":5,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":41,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":40,"org.apache.commons.collections4.CollectionUtilsTest.isFull":35,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":59,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":2,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":23,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":91,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":54,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":65,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":98,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":67,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":99},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"03b64aa1-2367-11e5-a0c0-ab4fef149200","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:282","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V)"},"status":-1},{"failures":[],"tindex":"03b698c2-2367-11e5-a0c0-c14cd9c166a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1941","type":"CtAssignmentImpl","sourcecode":"boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = true"},"variableMap":{"blackColor":"obj","dataElement":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:346","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"03b698c3-2367-11e5-a0c0-0b5c382bb121","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:765","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"List must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:746","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator setValue() can only be called after next() and before remove()\")"},"status":-1},{"failures":[14,15],"tindex":"03b6bfd4-2367-11e5-a0c0-2981454ff360","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:380","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(java.util.Map<? super I, ? extends O>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.MapTransformer:53","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.MapTransformer<I, O>(java.util.Map<? super I, ? extends O>)"},"status":-1},{"failures":[],"tindex":"03b6bfd5-2367-11e5-a0c0-0d96e37ccccd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:661","type":"CtIfImpl","sourcecode":"if (java.lang.Long == null) {\n    return 0L;\n} "},"variableMap":{"longObject":"longObject"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:804","type":"CtIfImpl","sourcecode":"if (java.lang.Long == null) {\n    return long;\n} "},"status":0},{"failures":[],"tindex":"03b6bfd6-2367-11e5-a0c0-4f24cd8ec846","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"last","parent":"last","left":"last","h":"last","right":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1986","type":"CtIfImpl","sourcecode":"if (K != null) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.ceilingEntry(K);\n} "},"status":-1},{"failures":[16,17,18],"tindex":"03b6e6e7-2367-11e5-a0c0-297885002b20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.DefaultEquator:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.DefaultEquator.org.apache.commons.collections4.functors.DefaultEquator"},"variableMap":{"org.apache.commons.collections4.functors.DefaultEquator.INSTANCE":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"03b6e6e8-2367-11e5-a0c0-ddf15116bcd2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:969","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder().append(\"AVLNode(\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1372","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"right=\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()).append(\" [\")"},"status":0},{"failures":[],"tindex":"03b6e6e9-2367-11e5-a0c0-89c8cd8e1346","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:77","type":"CtReturnImpl","sourcecode":"return java.util.Map.Entry<K, V>.getKey()"},"status":-2},{"failures":[],"tindex":"03b6e6ea-2367-11e5-a0c0-b75d724958e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-2},{"failures":[19],"tindex":"03b70dfb-2367-11e5-a0c0-19199d8b0380","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:281","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"03b70dfc-2367-11e5-a0c0-d3744648f555","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:682","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"03b70dfd-2367-11e5-a0c0-f1ab3d6b564f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"status":-2},{"failures":[],"tindex":"03b70dfe-2367-11e5-a0c0-eb10be6a4e60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:115","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"03b70dff-2367-11e5-a0c0-cd3a077e86db","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:205","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"03b73510-2367-11e5-a0c0-11e67db6a596","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:566","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:880","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"03b73511-2367-11e5-a0c0-1d9144467c71","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"status":-2},{"failures":[],"tindex":"03b73512-2367-11e5-a0c0-d52b96e8eecb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:231","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.TransformedSet.transformingSet(java.util.Set<E>, org.apache.commons.collections4.Transformer<? super E, ? extends E>)"},"status":-2},{"failures":[],"tindex":"03b75c23-2367-11e5-a0c0-ff9740ca515e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2016","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"03b75c24-2367-11e5-a0c0-f9699aef59f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:765","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"03b75c25-2367-11e5-a0c0-8b03d1201be1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:186","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:291","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.getNode(int, false)"},"status":-2},{"failures":[],"tindex":"03b75c26-2367-11e5-a0c0-15743ee20f5a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:255","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[20,21],"tindex":"03b75c27-2367-11e5-a0c0-1353b5ac290f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:864","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-1},{"failures":[],"tindex":"03b78338-2367-11e5-a0c0-97ac6dd26e30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"cursor":"cursor","node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:320","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":0},{"failures":[],"tindex":"03b78339-2367-11e5-a0c0-ef65cfd4fe01","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:251","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size singleton\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:126","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"03b7833a-2367-11e5-a0c0-bfda6127ab16","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:105","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:523","type":"CtThrowImpl","sourcecode":"throw new java.lang.InternalError()"},"status":-2},{"failures":[22],"tindex":"03b7833b-2367-11e5-a0c0-2b9b25c32fec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1139","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<? extends C>.hasMoreElements()) {\n    boolean |= java.util.Collection<C>.add(java.util.Enumeration<? extends C>.nextElement());\n}"},"status":-1},{"failures":[],"tindex":"03b7833c-2367-11e5-a0c0-bf71307044f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:189","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.BidiOrderedMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2146","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<V,K>emptyOrderedMapIterator()"},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32,33],"tindex":"03b7aa4d-2367-11e5-a0c0-1781e933f5ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:323","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        } else {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[34],"tindex":"03b7aa4e-2367-11e5-a0c0-2bace95af724","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:292","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap<K, V>.putAll(java.util.Map.Entry<? extends K, java.lang.Object>.getKey(), ((java.util.Collection<V>)(java.util.Map.Entry<? extends K, java.lang.Object>.getValue())))"},"status":-1},{"failures":[],"tindex":"03b7aa4f-2367-11e5-a0c0-716f9f74d79b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"status":-2},{"failures":[],"tindex":"03b7aa50-2367-11e5-a0c0-6b9e3fd6bac4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:197","type":"CtLocalVariableImpl","sourcecode":"int int = ((int - int) + int) - int"},"variableMap":{"start1":"lengthInBits","x":"lengthInBits","k":"offsetInBits","start2":"offsetInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1121","type":"CtLocalVariableImpl","sourcecode":"final int int = int + int"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,19,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"03b7aa51-2367-11e5-a0c0-85c6f12ff5aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    int = ((int) - (int)) + (int);\n} else if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[20,21,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"03b7d162-2367-11e5-a0c0-0dbbfdd9a3e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl","sourcecode":"int = (int) - (int)"},"variableMap":{"size":"modCount","start":"modCount","end":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:512","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"03b7d163-2367-11e5-a0c0-c1878267061d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:360","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.Values()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:998","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable<I>, org.apache.commons.collections4.Transformer<? super I, ? extends O>, java.util.Collection<O>)"},"status":-2},{"failures":[],"tindex":"03b7d164-2367-11e5-a0c0-11034fa05b12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:147","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = java.util.List<E>"},"status":-2},{"failures":[],"tindex":"03b7d165-2367-11e5-a0c0-8ff5a20afd24","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"root":"left","h":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"03b7d166-2367-11e5-a0c0-1b2c5c423528","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"variableMap":{"currentNode":"replacement","this":"this","y":"replacement","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:975","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"03b7f877-2367-11e5-a0c0-836a22d18364","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:320","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-2},{"failures":[],"tindex":"03b7f878-2367-11e5-a0c0-972cdd213ec3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1552","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"node":"rval","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[89,90,91,92,93,94,95,96,97,98,99],"tindex":"03b7f879-2367-11e5-a0c0-8d8330c1ac3e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:288","type":"CtInvocationImpl","sourcecode":"java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.clear()"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:501","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.size())"},"status":-1},{"failures":[],"tindex":"03b7f87a-2367-11e5-a0c0-755d4f56617c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:128","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Iterator<? extends E>)"},"status":-2},{"failures":[],"tindex":"03b7f87b-2367-11e5-a0c0-c537ee76a7d4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:73","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"List must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:113","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[100],"tindex":"03b7f87c-2367-11e5-a0c0-5f7c2e2920b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<org.apache.commons.collections4.Closure<E>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"status":-1},{"failures":[],"tindex":"03b81f8d-2367-11e5-a0c0-ad999714d0e4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:60","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(java.util.Iterator<? extends E>));\n    return org.apache.commons.collections4.iterators.PushbackIterator<E>;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:65","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.PushbackIterator<E>(java.util.Iterator<? extends E>)"},"status":-2},{"failures":[],"tindex":"03b81f8e-2367-11e5-a0c0-6de7ed89eb30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:205","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? java.lang.Object : ((java.lang.ref.Reference<?>)(java.lang.Object)).get()"},"variableMap":{"key2":"key","this":"this","org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.HARD":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:221","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"03b81f8f-2367-11e5-a0c0-4b2aa48defda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:385","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getNearestEntryForKey(K, int)"},"status":-2},{"failures":[101,102,103,104],"tindex":"03b81f90-2367-11e5-a0c0-c9cf115f7f90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"yFormerRightChild","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":48,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}