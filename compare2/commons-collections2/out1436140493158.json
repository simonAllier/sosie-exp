{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":32,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":40,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":53,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":52,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":30,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":9,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":47,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":8,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":31,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":34,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":1,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":59,"org.apache.commons.collections4.map.LRUMapTest.testLRU":19,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":13,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":67,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":46,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":2,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":62,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":20,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":50,"org.apache.commons.collections4.map.CompositeMapTest.testPut":45,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":14,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":36,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":60,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":66,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":7,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":49,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":64,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":11,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":28,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":61,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":12,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":4,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":29,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":58,"org.apache.commons.collections4.map.LRUMapTest.testClone":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":10,"org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":38,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":33,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":42,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":25,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":55,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":27,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":3},"transformations":[{"failures":[],"tindex":"3af04712-2371-11e5-9e23-415098d30161","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:701","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Predicate must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:188","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((((\"Failed to put: \" + K) + \" -> \") + V) + \", \") + int))"},"status":0},{"failures":[],"tindex":"3af06e23-2371-11e5-9e23-f74d36e16f81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-2},{"failures":[],"tindex":"3af06e24-2371-11e5-9e23-c9456211833c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:218","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.BidiMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:104","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.entrySet())"},"status":-2},{"failures":[0],"tindex":"3af06e25-2371-11e5-9e23-093dd2b47be0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtIfImpl","sourcecode":"if (org.w3c.dom.Node == null) {\n    throw new java.lang.NullPointerException(\"Node must not be null\");\n} "},"variableMap":{"node":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:767","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 3) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[1,2,3,4,5,6],"tindex":"3af06e26-2371-11e5-9e23-57881ebf80e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:73","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.hasNext()"},"status":-1},{"failures":[],"tindex":"3af09537-2371-11e5-9e23-578d983136a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","leftChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"3af13178-2371-11e5-9e23-29e613e06373","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:52","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ChainedClosure<E>(org.apache.commons.collections4.Closure<? super E>[])"},"status":-2},{"failures":[],"tindex":"3af13179-2371-11e5-9e23-2d99456553b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:83","type":"CtIfImpl","sourcecode":"if (((java.util.Set<E>.size()) > 0) || ((java.util.List<E>.size()) > 0)) {\n    throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n} "},"variableMap":{"set":"subSet","list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:333","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.getClass().equals(java.util.HashSet.java.util.HashSet)) {\n    java.util.Set<E> = new java.util.HashSet<E>(java.util.List<E>.size());\n} else {\n    try {\n        java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n    } catch (final java.lang.InstantiationException ie) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    } catch (final java.lang.IllegalAccessException iae) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    }\n}"},"status":-2},{"failures":[],"tindex":"3af1588a-2371-11e5-9e23-a1e850502c43","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"value":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:73","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"3af17f9b-2371-11e5-9e23-199393f7e0a3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:99","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.util.Map.Entry<K, V>>.remove()"},"status":-2},{"failures":[],"tindex":"3af17f9c-2371-11e5-9e23-896888668301","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:299","type":"CtIfImpl","sourcecode":"if (java.lang.Number == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"3af17f9d-2371-11e5-9e23-09c6a21694ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:562","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.list.CursorableLinkedList<E>)(org.apache.commons.collections4.list.AbstractLinkedList<E>)).unregisterCursor(this)"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:212","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)"},"status":-2},{"failures":[],"tindex":"3af17f9e-2371-11e5-9e23-f929a18f5775","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1393","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"variableMap":{"buf":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1361","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"left=\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey())"},"status":0},{"failures":[7,8],"tindex":"3af17f9f-2371-11e5-9e23-97a28c775f3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:204","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[9],"tindex":"3af17fa0-2371-11e5-9e23-4f9cace233a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:222","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"No more elements in the iteration\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SplitMapUtils:139","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"3af17fa1-2371-11e5-9e23-7d84d4c5d80e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:80","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal E[] E[] = ((E[])(java.util.Set<E>.toArray()))"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19],"tindex":"3af17fa2-2371-11e5-9e23-fb0a3bb1ba46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:112","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.this(int, float, false)"},"status":-1},{"failures":[],"tindex":"3af1f4d3-2371-11e5-9e23-07c7907b297f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.BidiMap<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(org.apache.commons.collections4.BidiMap<? extends K, ? extends V>));\n    return org.apache.commons.collections4.BidiMap<K, V>;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:61","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(org.apache.commons.collections4.BidiMap<? extends K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"3af1f4d4-2371-11e5-9e23-b949e31eb31c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:145","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"3af1f4d5-2371-11e5-9e23-e11fd037b10b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:88","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previousIndex()"},"status":-2},{"failures":[20,21,22],"tindex":"3af1f4d6-2371-11e5-9e23-7f75cff6d125","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1808","type":"CtReturnImpl","sourcecode":"return int >= 0"},"variableMap":{"ret":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:89","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag().add(E, int)"},"status":-1},{"failures":[23,24,25],"tindex":"3af21be7-2371-11e5-9e23-fb0d980bbb2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:186","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)"},"status":-1},{"failures":[],"tindex":"3af21be8-2371-11e5-9e23-c78c637f2ae5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:509","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"next","node":"next","previous":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:864","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":0},{"failures":[],"tindex":"3af21be9-2371-11e5-9e23-41ae049944ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:327","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"nCopies":"hash3","size":"hash3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:460","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"3af21bea-2371-11e5-9e23-bb6480048892","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:160","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The array of keys must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:814","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"status":-1},{"failures":[44],"tindex":"3af21beb-2371-11e5-9e23-edfdf4b30251","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            return null;\n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            return null;\n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 0;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                return null;\n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                return null;\n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 0;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[45,46,47],"tindex":"3af21bec-2371-11e5-9e23-2948e7dec19f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:61","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.CompositeMap<K, V>.this(new java.util.Map[]{  }, null)"},"variableMap":{"this":"one"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:85","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.CompositeMap<K, V>.this(new java.util.Map[]{ java.util.Map<K, V> , java.util.Map<K, V> }, org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>)"},"status":-1},{"failures":[48,49,50,51,52,53],"tindex":"3af21bed-2371-11e5-9e23-e580f402d44c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vDown","start1":"d","vDown":"vDown","delta":"start2","end2":"start1","this":"this","i":"start2","end1":"end1","k":"offset","start2":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"3af21bee-2371-11e5-9e23-ef18d87f289e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:739","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"3af242ff-2371-11e5-9e23-298a3fc2e5e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:61","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(org.apache.commons.collections4.BidiMap<? extends K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"3af24300-2371-11e5-9e23-ddec9b5ee9b6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1039","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String)"},"status":-2},{"failures":[],"tindex":"3af24301-2371-11e5-9e23-3fd1e9295221","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:783","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"NodeList must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:83","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"DefaultKeyValue may not contain itself as a key.\")"},"status":-2},{"failures":[],"tindex":"3af24302-2371-11e5-9e23-8f4aec847962","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:883","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null"},"variableMap":{"current":"nodeToInsert"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:497","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"3af24303-2371-11e5-9e23-5d0e6755168a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:161","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>.getSortedMap().subMap(K, K))"},"status":-2},{"failures":[],"tindex":"3af24304-2371-11e5-9e23-55437c56076e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:138","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"entry","entry":"entry","key2":"key3","hashCode":"hashCode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:269","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[54,55,56],"tindex":"3af24305-2371-11e5-9e23-0340e0ccf9d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"3af24306-2371-11e5-9e23-efe77288d48c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"status":-2},{"failures":[9],"tindex":"3af26a17-2371-11e5-9e23-33a1d9122efc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:215","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().clear()"},"status":-1},{"failures":[],"tindex":"3af26a18-2371-11e5-9e23-dfd96d1ccbf1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:355","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.getKey()"},"status":-2},{"failures":[],"tindex":"3af26a19-2371-11e5-9e23-4124f86348a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"status":0},{"failures":[],"tindex":"3af26a1a-2371-11e5-9e23-91902f10ba69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:493","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(java.util.List<E>)"},"variableMap":{"list":"superSubList"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:318","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.ListUtils.unmodifiableList(new org.apache.commons.collections4.list.SetUniqueList<E>(java.util.List<E> , java.util.Set<E>))"},"status":0},{"failures":[],"tindex":"3af26a1b-2371-11e5-9e23-8d6a4ccfc21e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"h","parent":"h","left":"h","h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:359","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>>.set(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-2},{"failures":[],"tindex":"3af26a1c-2371-11e5-9e23-9f24a98d828f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag().getCount(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"3af26a1d-2371-11e5-9e23-79f13d480073","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:109","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":0},{"failures":[57,58,59,60],"tindex":"3af26a1e-2371-11e5-9e23-3fc365aa3284","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"yFormerLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"3af26a1f-2371-11e5-9e23-f5f9f28b1805","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:167","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E>emptyOrderedIterator()"},"status":-2},{"failures":[61,62,63,64,65,66,67,68],"tindex":"3af26a20-2371-11e5-9e23-e9a1ab99b533","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:72","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.nextIndex()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:87","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previousIndex()"},"status":-1},{"failures":[],"tindex":"3af29131-2371-11e5-9e23-71d0ef6e7663","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:599","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.recalcHeight()"},"status":-2},{"failures":[],"tindex":"3af29132-2371-11e5-9e23-414883d54537","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1821","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer().compare(K, K)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":49,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}