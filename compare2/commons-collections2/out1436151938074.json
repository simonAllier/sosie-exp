{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":237,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":161,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":53,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":85,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":51,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":89,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":101,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":255,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":126,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":231,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":76,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":113,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":230,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":86,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":239,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":167,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":29,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":272,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":207,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":225,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":220,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":221,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":45,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":131,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":155,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":68,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":127,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":187,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":259,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":27,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":168,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":31,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":130,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":258,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":118,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":50,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":65,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":256,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":142,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":214,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":199,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":203,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":48,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":238,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":98,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":22,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":39,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":252,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":63,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":90,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":52,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":46,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":271,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":189,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":178,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":5,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":83,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":124,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":223,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":24,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":110,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":128,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":250,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":78,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":200,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":115,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":99,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":162,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":136,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":59,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":116,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":152,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":267,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":201,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":121,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":0,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":170,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":72,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":274,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":156,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":137,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":197,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":14,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":143,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":179,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":209,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":32,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":208,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":13,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":23,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":91,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":25,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":236,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":144,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":169,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":253,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":198,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":270,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":93,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":94,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":6,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":175,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":263,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":56,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":3,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":149,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":183,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":232,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":268,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":219,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":64,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":60,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":262,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":266,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":145,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":204,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":20,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":4,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":242,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":240,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":265,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":100,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":8,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":104,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":193,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":40,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":7,"org.apache.commons.collections4.ClosureUtilsTest.testExceptionClosure":211,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":246,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":163,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":269,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":74,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":114,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":73,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":125,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":147,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":190,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":257,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":212,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":106,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":135,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":248,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator":19,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":210,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":213,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":218,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":217,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":139,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":249,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":146,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":273,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":95,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":206,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":34,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":141,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":194,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":150,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":251,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":226,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":153,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":245,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":30,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":181,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":28,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":228,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":244,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":205,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":202,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":186,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":234,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":227,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":174,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":173,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":275,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":215,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":184,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":15,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":247,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":254,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":119,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":216,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":180,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":172,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":66,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":111},"transformations":[{"failures":[0,1,2,3,4],"tindex":"e0a42c51-238b-11e5-927e-356b1b1b6436","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:977","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 2"},"variableMap":{"modCount":"nextIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:1099","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[],"tindex":"e0a45362-238b-11e5-927e-11939cc968af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.LazyList:130","type":"CtLocalVariableImpl","sourcecode":"final E E = org.apache.commons.collections4.Factory<? extends E>.create()"},"status":-2},{"failures":[5,6],"tindex":"e0a45363-238b-11e5-927e-e34c5daa7e7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator:44","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"e0a45364-238b-11e5-927e-b30f9db20b93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:245","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(E[])"},"variableMap":{"array":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:261","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ArrayIterator<E>(java.lang.Object)"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"e0a47a75-238b-11e5-927e-d186168b683f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1105","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"e0a47a76-238b-11e5-927e-c7512682c991","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":-2},{"failures":[],"tindex":"e0a47a77-238b-11e5-927e-a78eebebf81c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:408","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values()"},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:385","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size())"},"status":-2},{"failures":[],"tindex":"e0a47a78-238b-11e5-927e-8347407bf2b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-2},{"failures":[19,20,21],"tindex":"e0a47a79-238b-11e5-927e-cd1431652f8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:49","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"node must not be null!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:119","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"e0a47a7a-238b-11e5-927e-bbbc8336ab91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:258","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"))"},"status":0},{"failures":[],"tindex":"e0a4a18b-238b-11e5-927e-c7736839595c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:267","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:523","type":"CtLocalVariableImpl","sourcecode":"final V V = V"},"status":-2},{"failures":[],"tindex":"e0a4a18c-238b-11e5-927e-1b14ec54f779","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:698","type":"CtReturnImpl","sourcecode":"return 0.0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:700","type":"CtReturnImpl","sourcecode":"return java.lang.Double.doubleValue()"},"status":0},{"failures":[],"tindex":"e0a4a18d-238b-11e5-927e-4f6e1c939577","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],"tindex":"e0a4a18e-238b-11e5-927e-138b18194b76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"CtReturnImpl","sourcecode":"return (int) < (int)"},"variableMap":{"endIndex":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:209","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-1},{"failures":[],"tindex":"e0a4c89f-238b-11e5-927e-d139a8b796ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:478","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.LazyList.lazyList(java.util.List<E>, org.apache.commons.collections4.Factory<? extends E>)"},"status":-2},{"failures":[],"tindex":"e0a4c8a0-238b-11e5-927e-8bdd2dc918e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1204","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-2},{"failures":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],"tindex":"e0a4c8a1-238b-11e5-927e-19637d4d88b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[208,209,210],"tindex":"e0a4c8a2-238b-11e5-927e-630fa62eda51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"nextIndex","expectedModCount":"nextIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:1050","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException(((\"No element at index \" + (int)) + \".\"));\n} "},"status":-1},{"failures":[],"tindex":"e0a4c8a3-238b-11e5-927e-49fb2eb9669b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1336","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[211],"tindex":"e0a4efb4-238b-11e5-927e-db48ab6ae938","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:131","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Key cannot be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionClosure:65","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionClosure invoked\")"},"status":-1},{"failures":[],"tindex":"e0a4efb5-238b-11e5-927e-a5b3f1238b34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-2},{"failures":[],"tindex":"e0a4efb6-238b-11e5-927e-154eb51bb6fd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:179","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.size()"},"status":-2},{"failures":[212],"tindex":"e0a4efb7-238b-11e5-927e-873c8cdc8808","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:765","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"List must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:55","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\")"},"status":-1},{"failures":[],"tindex":"e0a4efb8-238b-11e5-927e-b3919adc4b25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:738","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getHeight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.getRightSubTree())) - org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getHeight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.getLeftSubTree()))"},"status":0},{"failures":[],"tindex":"e0a4efb9-238b-11e5-927e-6b44554f763f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:65","type":"CtReturnImpl","sourcecode":"return int == (org.apache.commons.collections4.trie.KeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.KeyAnalyzer.EQUAL_BIT_KEY":"index","bitIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:99","type":"CtReturnImpl","sourcecode":"return (this.int) > org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(getStartIndex())"},"status":-2},{"failures":[213,214,215,216,217,218,219,220,221,222],"tindex":"e0a516ca-238b-11e5-927e-1bd19da8108f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"variableMap":{"h":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:430","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"status":-1},{"failures":[],"tindex":"e0a516cb-238b-11e5-927e-8d076a038cfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:373","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V> != null) {\n    for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.Map<K, V>.entrySet()) {\n        final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = java.util.Map.Entry<K, V>;\n        final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n        final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n        java.util.Properties.put(java.lang.Object, java.lang.Object);\n    }\n} "},"status":0},{"failures":[223,224,225,226],"tindex":"e0a516cc-238b-11e5-927e-c7c172d53507","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:164","type":"CtOperatorAssignmentImpl","sourcecode":"int %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int"},"variableMap":{"buckets":"key3","length":"h","hash":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:666","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-1},{"failures":[],"tindex":"e0a516cd-238b-11e5-927e-038038bd0c1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:140","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":0},{"failures":[],"tindex":"e0a516ce-238b-11e5-927e-7579d1c989da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:828","type":"CtLocalVariableImpl","sourcecode":"final E E = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()"},"status":-2},{"failures":[227,228,229,230,231],"tindex":"e0a516cf-238b-11e5-927e-017efdb9b23c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtIfImpl","sourcecode":"if (java.util.List<T> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"variableMap":{"list":"sequence1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:130","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(0, java.util.List<T>.size(), 0, java.util.List<T>.size(), org.apache.commons.collections4.sequence.EditScript<T>)"},"status":-1},{"failures":[232],"tindex":"e0a53de0-238b-11e5-927e-a58032ac1f3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:753","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n} "},"status":-1},{"failures":[],"tindex":"e0a53de1-238b-11e5-927e-4f334a86b14c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"e0a53de2-238b-11e5-927e-292f93eb9bfd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:120","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.put(K, V)"},"status":-2},{"failures":[],"tindex":"e0a53de3-238b-11e5-927e-33ed51c73ae8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1592","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The collections must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:64","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable)"},"status":-2},{"failures":[],"tindex":"e0a53de4-238b-11e5-927e-97d46173539a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:250","type":"CtLocalVariableImpl","sourcecode":"final K K = java.util.Map.Entry<? extends K, ? extends V>.getKey()"},"status":-2},{"failures":[],"tindex":"e0a53de5-238b-11e5-927e-d7ae67961799","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"replacement","this":"this","rval":"replacement","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:975","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[233,234],"tindex":"e0a53de6-238b-11e5-927e-374c4f159b8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"count","listSize":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:614","type":"CtIfImpl","sourcecode":"if (O == null) {\n    for (final java.lang.Object java.lang.Object : java.lang.Iterable<? super O>) {\n        if (java.lang.Object == null) {\n            int++;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.lang.Iterable<? super O>) {\n        if (O.equals(java.lang.Object)) {\n            int++;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"e0a53de7-238b-11e5-927e-778572616263","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:86","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.previous()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:77","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[],"tindex":"e0a53de8-238b-11e5-927e-e168bd32b018","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1084","type":"CtIfImpl","sourcecode":"if ((java.lang.Object) == (org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object)) {\n    return null;\n} "},"variableMap":{"key":"key","org.apache.commons.collections4.map.AbstractHashedMap.NULL":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2058","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"e0a564f9-238b-11e5-927e-df7957b48d22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"variableMap":{"found":"entry","this":"this","bitIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[235],"tindex":"e0a564fa-238b-11e5-927e-553544d3ce30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"coll2":"coll2","coll1":"coll2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"e0a564fb-238b-11e5-927e-bd642435d405","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key4","next":"entry","entry":"entry","key2":"key4","previous":"entry","hashCode":"hashCode","key3":"key3","key4":"key2","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"e0a564fc-238b-11e5-927e-f12e509ab69f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1941","type":"CtAssignmentImpl","sourcecode":"boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = true"},"variableMap":{"blackColor":"blackColor","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1912","type":"CtOperatorAssignmentImpl","sourcecode":"boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] ^= org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"status":0},{"failures":[],"tindex":"e0a564fd-238b-11e5-927e-4bc93448a505","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:124","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:768","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String)"},"status":-1},{"failures":[],"tindex":"e0a564fe-238b-11e5-927e-23c9bc15fcf8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:195","type":"CtLocalVariableImpl","sourcecode":"final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>))"},"status":-2},{"failures":[],"tindex":"e0a564ff-238b-11e5-927e-8b10b219ecd9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"status":-2},{"failures":[],"tindex":"e0a58c10-238b-11e5-927e-8df69e349109","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:86","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsValue(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"e0a58c11-238b-11e5-927e-87c9e59dbd6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:768","type":"CtReturnImpl","sourcecode":"return \"MapIterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2167","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doToString(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275],"tindex":"e0a58c12-238b-11e5-927e-ebb4b959baa3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:439","type":"CtReturnImpl","sourcecode":"return int & (int - 1)"},"variableMap":{"hashCode":"hash","dataSize":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl","sourcecode":"return int < 0 ? int * (-1) : int"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}