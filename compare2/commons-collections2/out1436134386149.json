{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":176,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":51,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":149,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":43,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":34,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":181,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":147,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":77,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":78,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":132,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":23,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":107,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":200,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":203,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":115,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":87,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":84,"org.apache.commons.collections4.functors.EqualPredicateTest.testNullArgumentEqualsNullPredicate":67,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":199,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":94,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":175,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":190,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":106,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":165,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":85,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":148,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":184,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":17,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":64,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":95,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":40,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":140,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":137,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":105,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":0,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":187,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":135,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":155,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":46,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":55,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":54,"org.apache.commons.collections4.list.TreeListTest.testBug35258":25,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":104,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":12,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":39,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":60,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":182,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":125,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":14,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":197,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":2,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":152,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":20,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":158,"org.apache.commons.collections4.list.TreeListTest.testRemove":48,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":173,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":124,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":5,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":90,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":204,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":206,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":121,"org.apache.commons.collections4.ArrayStackTest.testSearch":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":156,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":42,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":114,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":180,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":122,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":10,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":70,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":21,"org.apache.commons.collections4.list.TreeListTest.testListEquals":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":100,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":89,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":172,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":16,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":61,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":92,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":195,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":86,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":136,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":193,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":145,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":177,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":102,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":141,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":65,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":128,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":99,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":189,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":69,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":196,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":18},"transformations":[{"failures":[],"tindex":"02e0a86c-2363-11e5-a25d-d5424177fcd6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:376","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"02e0a86d-2363-11e5-a25d-4de41ad93f89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:275","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(K)"},"status":-2},{"failures":[],"tindex":"02e0cf7e-2363-11e5-a25d-f555edcbc864","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"size","removeIndex":"size","currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:459","type":"CtIfImpl","sourcecode":"if ((T[].int) < int) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n    T[] = T[];\n} "},"status":-2},{"failures":[0,1,2,3],"tindex":"02e0cf7f-2363-11e5-a25d-27224b1031cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:68","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:99","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14],"tindex":"02e0cf80-2363-11e5-a25d-1bc9f21fbdc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"02e0cf81-2363-11e5-a25d-5f5038de1900","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"variableMap":{"lengthInBits":"bitIndex","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"02e0cf82-2363-11e5-a25d-11e2d9598eb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:290","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"variableMap":{"key1":"key1","entry":"next","key2":"key3","hashCode":"hashCode","key3":"key2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:430","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"02e0f693-2363-11e5-a25d-f70460c95eb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1364","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"left=\").append(\"null\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:595","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.Object)"},"status":0},{"failures":[],"tindex":"02e0f694-2363-11e5-a25d-53e80fac4731","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:456","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? java.lang.Object : ((java.lang.ref.Reference<K>)(java.lang.Object)).get()"},"variableMap":{"key2":"otherValue","org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.HARD":"otherValue","keyType":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1159","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.util.Map<?, ?>.get(K)"},"status":0},{"failures":[],"tindex":"02e0f695-2363-11e5-a25d-99909b95a719","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:146","type":"CtReturnImpl","sourcecode":"return ((this.int) - org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(getStartIndex())) - 1"},"status":-2},{"failures":[],"tindex":"02e11da6-2363-11e5-a25d-3713115d6a9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"LRUMap max size must be greater than 0\")"},"status":0},{"failures":[],"tindex":"02e11da7-2363-11e5-a25d-3baec11b2778","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:267","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:990","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"invalid lookup: \" + K))"},"status":0},{"failures":[15,16,17,18,19,20,21,22,23,24],"tindex":"02e11da8-2363-11e5-a25d-854d2c0c3c9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-1},{"failures":[],"tindex":"02e11da9-2363-11e5-a25d-71da4428b56e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:250","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:269","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"02e11daa-2363-11e5-a25d-1dead4e4761f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:153","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TreeList<E>.listIterator(0)"},"status":-1},{"failures":[],"tindex":"02e11dab-2363-11e5-a25d-011a649ebaca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:249","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.setValue(V)"},"status":-2},{"failures":[47,48,49,50,25,51,52,53,26,27,28,29,30,31,32,33,54,55,56,57,58,59,34,35,36,37,38,39,40,41,42,43,44,45,46,60],"tindex":"02e144bc-2363-11e5-a25d-f193e646d87b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:825","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeMax()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:420","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = int < 0 ? org.apache.commons.collections4.list.TreeList.AVLNode<E>.getLeftSubTree() : org.apache.commons.collections4.list.TreeList.AVLNode<E>.getRightSubTree()"},"status":-1},{"failures":[],"tindex":"02e144bd-2363-11e5-a25d-5d6405278289","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1359","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"left=\").append(\"ROOT\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1224","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('{')"},"status":0},{"failures":[61,62,63,64,65,66],"tindex":"02e144be-2363-11e5-a25d-cbea2a88d919","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1507","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"map":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)"},"status":-1},{"failures":[],"tindex":"02e144bf-2363-11e5-a25d-838406752db4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2162","type":"CtIfImpl","sourcecode":"if ((java.util.Map.Entry<K, V> == null) || (!(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer().isPrefix(K, int, int, K)))) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"02e144c0-2363-11e5-a25d-ef3bc0b82fd8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:124","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:239","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Attempting to compare unknown object \" + java.lang.Object))"},"status":-2},{"failures":[],"tindex":"02e144c1-2363-11e5-a25d-49b48391c18e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:201","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(org.apache.commons.collections4.Closure<? super E>[])"},"variableMap":{"closures":"closures"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:307","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(org.apache.commons.collections4.Predicate<? super E>[], org.apache.commons.collections4.Closure<? super E>[], org.apache.commons.collections4.Closure<? super E>)"},"status":-2},{"failures":[],"tindex":"02e16ad2-2363-11e5-a25d-e993c20b381b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:286","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(java.lang.Object, java.lang.Object, java.lang.Object)"},"status":-2},{"failures":[67],"tindex":"02e16ad3-2363-11e5-a25d-7b7f19808d0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:54","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.nullPredicate()"},"status":-1},{"failures":[68],"tindex":"02e16ad4-2363-11e5-a25d-a3ace0015c50","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:406","type":"CtUnaryOperatorImpl","sourcecode":"(this.int)--"},"variableMap":{"size":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:162","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"02e16ad5-2363-11e5-a25d-61104dd94c1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:365","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.queue.CircularFifoQueue<E>.new Iterator(){}.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"02e16ad6-2363-11e5-a25d-f115beb44055","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:73","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.EqualPredicate<T>(T , org.apache.commons.collections4.Equator<T>)"},"status":0},{"failures":[],"tindex":"02e16ad7-2363-11e5-a25d-9d7a673c1880","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:780","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getKey()"},"status":-2},{"failures":[],"tindex":"02e16ad8-2363-11e5-a25d-c3e32ce91b48","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:520","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"02e191e9-2363-11e5-a25d-89fed0771fef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:891","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)"},"status":-2},{"failures":[],"tindex":"02e191ea-2363-11e5-a25d-873aa5212b40","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"next","entry":"entry","key2":"key2","hashCode":"hashCode","key3":"key2","key4":"key3","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"02e191eb-2363-11e5-a25d-71b54d82be06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"current","header":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:793","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n} "},"status":-1},{"failures":[],"tindex":"02e191ec-2363-11e5-a25d-7161abb77b25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1075","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.previous()"},"variableMap":{"next":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:1104","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = null"},"status":-1},{"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"02e191ed-2363-11e5-a25d-195a2d7c9a5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:163","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 16"},"variableMap":{"hash":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:117","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[],"tindex":"02e1b8fe-2363-11e5-a25d-1f082eff090c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:506","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E), null)"},"status":-2},{"failures":[83],"tindex":"02e1b8ff-2363-11e5-a25d-5717a9019a21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"variableMap":{"methodName":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:795","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if ((((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 4) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"02e1b900-2363-11e5-a25d-0f5390e6f22f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:58","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"status":0},{"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"tindex":"02e1b901-2363-11e5-a25d-bfc06d99fa73","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196],"tindex":"02e1e012-2363-11e5-a25d-4d81d9734345","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:154","type":"CtReturnImpl","sourcecode":"return ((this.int) - (this.int)) - 1"},"variableMap":{"startIndex":"total","index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1359","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"02e1e013-2363-11e5-a25d-4111c5c1043f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"newSize","modifications":"newSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateNewCapacity(int))"},"status":0},{"failures":[],"tindex":"02e1e014-2363-11e5-a25d-fd900c6c5359","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().lastKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:74","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().removeValue(java.lang.Object)"},"status":-2},{"failures":[197],"tindex":"02e1e015-2363-11e5-a25d-9bf1a9a87de1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:282","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"02e1e016-2363-11e5-a25d-45df08d0d2ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionPredicate:66","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionPredicate invoked\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:78","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")"},"status":0},{"failures":[],"tindex":"02e1e017-2363-11e5-a25d-23d82d9701b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"02e1e018-2363-11e5-a25d-f34a0530151f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:126","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<?>.hasPrevious()"},"variableMap":{"li":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:73","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.hasNext()"},"status":-2},{"failures":[198,199,200,201,202,203,204],"tindex":"02e1e019-2363-11e5-a25d-771418a63749","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-1},{"failures":[47,53,34,36,42,44,45],"tindex":"02e1e01a-2363-11e5-a25d-45dfb95f74cc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:682","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>.heightRightMinusLeft()) > 0) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.rotateLeft(), null);\n} "},"variableMap":{"left":"right","this":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:687","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>.heightRightMinusLeft()) < 0) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.rotateRight(), null);\n} "},"status":-1},{"failures":[205,206,207],"tindex":"02e2072b-2363-11e5-a25d-d1120fe348a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:977","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\"null\")"},"status":-1},{"failures":[],"tindex":"02e2072c-2363-11e5-a25d-c95ccdf4caeb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:213","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(E[], null)"},"status":0},{"failures":[],"tindex":"02e2072d-2363-11e5-a25d-23d0d60a489f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator:59","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.SortedBidiMap<K, V>)(super.decorated()))"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}