{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":183,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":200,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":96,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":209,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":213,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":155,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":208,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":104,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":176,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":130,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":175,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":184,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":5,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":205,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":23,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":113,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":65,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":103,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":206,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":187,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":169,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":198,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":80,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":210,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":73,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":128,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":117,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":129,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":199,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":190,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":177,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":166,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":97,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":13,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":148,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectHashCodeEqualsContract":16,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":85,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":38,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":167,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":116,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":46,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":88,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":8,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":162,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":106,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":160,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":75,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":157,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":114,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":163,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":56,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":57,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":55,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":173,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":154,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":54,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":6,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":153,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testEqualsNull":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":146,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":149,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":178,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":25,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":48,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":202,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":84,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":62,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":179,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":197,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":141,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":89,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetClearChangesMap":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":122,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":164,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":159,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":181,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":211,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":185,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":30,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":36,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetClearChangesMap":195,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":107,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":189,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":168,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":136,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":118,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":161},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"5288fa2b-235c-11e5-b2b9-472f130bd3ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().first()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:100","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().last()"},"status":-1},{"failures":[],"tindex":"5289213c-235c-11e5-b2b9-4d2f852f87cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:335","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()"},"status":-2},{"failures":[],"tindex":"5289213d-235c-11e5-b2b9-fda53afabada","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:82","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<? super T>"},"status":-2},{"failures":[],"tindex":"5289213e-235c-11e5-b2b9-ab30a61a9efa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:179","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedSet(java.util.Set<E>)"},"status":-2},{"failures":[12],"tindex":"5289213f-235c-11e5-b2b9-e199d2663e34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:692","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"tree inconsistent!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:122","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"52892140-235c-11e5-b2b9-2f9cd3ca4693","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:110","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"52892141-235c-11e5-b2b9-7f01244f8f3f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:118","type":"CtReturnImpl","sourcecode":"return java.util.Comparator<E>.equals(org.apache.commons.collections4.comparators.ReverseComparator<?>.java.util.Comparator<?>)"},"status":-2},{"failures":[13,14,15,16],"tindex":"52894852-235c-11e5-b2b9-2b9b76ffb311","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:110","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"52894853-235c-11e5-b2b9-bb581c71ce30","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:78","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.booleanValue()"},"variableMap":{"result":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:867","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == null ? (java.util.Map.Entry<?, ?>.getKey()) == null : java.lang.Object.equals(java.util.Map.Entry<?, ?>.getKey())) && (java.lang.Object == null ? (java.util.Map.Entry<?, ?>.getValue()) == null : java.lang.Object.equals(java.util.Map.Entry<?, ?>.getValue()))"},"status":-2},{"failures":[],"tindex":"52894854-235c-11e5-b2b9-9ffdc3c683b0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"status":-2},{"failures":[],"tindex":"52894855-235c-11e5-b2b9-e3a1c32acb35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:84","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"52894856-235c-11e5-b2b9-fbb4a357ea85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:720","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"52894857-235c-11e5-b2b9-9f290f208bd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1825","type":"CtReturnImpl","sourcecode":"return int < 0"},"variableMap":{"ret":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:633","type":"CtReturnImpl","sourcecode":"return (int) < (org.apache.commons.collections4.map.Flat3Map<K, V>.int)"},"status":-2},{"failures":[17,18,19,20],"tindex":"52896f68-235c-11e5-b2b9-57a37681b543","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:367","type":"CtReturnImpl","sourcecode":"return java.util.Collection<V>.size()"},"status":-1},{"failures":[],"tindex":"52896f69-235c-11e5-b2b9-49661bd6edbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:556","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.map.SingletonMap<K, V>.(getKey()) == null ? 0 : org.apache.commons.collections4.map.SingletonMap<K, V>.getKey().hashCode()) ^ (org.apache.commons.collections4.map.SingletonMap<K, V>.(getValue()) == null ? 0 : org.apache.commons.collections4.map.SingletonMap<K, V>.getValue().hashCode())"},"status":-2},{"failures":[21],"tindex":"52896f6a-235c-11e5-b2b9-09267f11a523","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"removeLRUEntry","changed":"removeLRUEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:252","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"52896f6b-235c-11e5-b2b9-af02036e5fd0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:905","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this)"},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1290","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = null"},"status":0},{"failures":[],"tindex":"52896f6c-235c-11e5-b2b9-6b301cfac9e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:157","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:209","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.IndexedCollection<K, C>.removeFromIndex(((C)(java.lang.Object)))"},"status":-2},{"failures":[22],"tindex":"52896f6d-235c-11e5-b2b9-9fea60fcd2e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:204","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O>))"},"variableMap":{"transformer":"defaultTransformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:276","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.SwitchTransformer.<I,O>switchTransformer(org.apache.commons.collections4.Predicate<? super I>[], org.apache.commons.collections4.Transformer<? super I, ? extends O>[], org.apache.commons.collections4.Transformer<? super I, ? extends O>)"},"status":-1},{"failures":[23],"tindex":"5289967e-235c-11e5-b2b9-a5f7f9e0560a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"sAbsolutePosition","currentIndex":"relativePosition"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:885","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E> != null) {\n    int += org.apache.commons.collections4.list.TreeList.AVLNode<E>.int;\n} "},"status":-1},{"failures":[],"tindex":"5289967f-235c-11e5-b2b9-230926a29fcf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:579","type":"CtReturnImpl","sourcecode":"return O"},"status":-2},{"failures":[],"tindex":"52899680-235c-11e5-b2b9-edb90fb3b516","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot set value to this map entry\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:950","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((\"fromIndex = \" + int))"},"status":-2},{"failures":[],"tindex":"52899681-235c-11e5-b2b9-8fe685b12e20","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:378","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>"},"variableMap":{"left":"next","prev":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:1059","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.next()"},"status":0},{"failures":[24,25,26,27,28,29,30,31,32,33],"tindex":"52899682-235c-11e5-b2b9-25318ff75763","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"currentNode","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":-1},{"failures":[],"tindex":"528a0bb3-235c-11e5-b2b9-d92b91b05cc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:149","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"528a0bb4-235c-11e5-b2b9-555175217233","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:43","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Map Entry must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:283","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"No value has been returned yet\")"},"status":0},{"failures":[],"tindex":"528a0bb5-235c-11e5-b2b9-cfcfa94c1717","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:190","type":"CtReturnImpl","sourcecode":"return this.int"},"variableMap":{"endIndex":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:464","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"528a0bb6-235c-11e5-b2b9-67f3638f4120","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"status":0},{"failures":[],"tindex":"528a0bb7-235c-11e5-b2b9-9fd279cc9d49","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:572","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"528a0bb8-235c-11e5-b2b9-7ba2f8aa179f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator:55","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.MapIterator<K, V>"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:138","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(org.apache.commons.collections4.MapIterator<K, V>)"},"status":0},{"failures":[],"tindex":"528a0bb9-235c-11e5-b2b9-dd75df8a382c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:349","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InstantiateTransformer.<T>instantiateTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:51","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ClosureTransformer<T>(org.apache.commons.collections4.Closure<? super T>)"},"status":-2},{"failures":[],"tindex":"528a0bba-235c-11e5-b2b9-79ae70c84208","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:375","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[34],"tindex":"528a0bbb-235c-11e5-b2b9-2d77528630dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:204","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O>))"},"variableMap":{"transformer":"defaultTransformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:105","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>))"},"status":-1},{"failures":[35,36,37,38],"tindex":"528a0bbc-235c-11e5-b2b9-9f4a2864212a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:248","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"528a32cd-235c-11e5-b2b9-5ba43fd50ad6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:736","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"variableMap":{"value":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:456","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? java.lang.Object : ((java.lang.ref.Reference<K>)(java.lang.Object)).get()"},"status":-1},{"failures":[],"tindex":"528a32ce-235c-11e5-b2b9-01eaa76c33d9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:129","type":"CtReturnImpl","sourcecode":"return new java.lang.String(char[])"},"variableMap":{"chars":"org.apache.commons.collections4.map.AbstractHashedMap.NULL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object"},"status":-2},{"failures":[],"tindex":"528a32cf-235c-11e5-b2b9-832196c0e062","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:439","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.Node<E>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:137","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"528a32d0-235c-11e5-b2b9-c3ebc13ab5f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:85","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.clear()"},"status":-2},{"failures":[],"tindex":"528a32d1-235c-11e5-b2b9-ff5e61b11d48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:124","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"tindex":"528a59e2-235c-11e5-b2b9-7d001b402210","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:141","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null"},"variableMap":{"next":"node","cachedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:561","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-1},{"failures":[],"tindex":"528a59e3-235c-11e5-b2b9-dbe604f24732","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:106","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":0},{"failures":[],"tindex":"528a59e4-235c-11e5-b2b9-9b1f32d9d008","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2070","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(java.lang.Object)"},"variableMap":{"value":"value2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:416","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object == null ? false : java.lang.Object.equals(java.lang.Object))"},"status":-2},{"failures":[181,182,183,184,185],"tindex":"528a59e5-235c-11e5-b2b9-6d7a7829b88e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"status":-1},{"failures":[186,187,188,189,190,191,192,193,194,195,196],"tindex":"528a59e6-235c-11e5-b2b9-7b46debef89b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:97","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"status":-1},{"failures":[],"tindex":"528a59e7-235c-11e5-b2b9-bfa192e90b3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((V) == null) {\n                return true;\n            } \n        case 2 :\n            if ((V) == null) {\n                return true;\n            } \n        case 1 :\n            if ((V) == null) {\n                return true;\n            } \n    }\n} else {\n    switch (int) {\n        case 3 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n        case 2 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n        case 1 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n    }\n}"},"status":-2},{"failures":[],"tindex":"528a59e8-235c-11e5-b2b9-33a1dd5a5529","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1423","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.util.Map.Entry<?, ?>.getKey())"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-2},{"failures":[],"tindex":"528a59e9-235c-11e5-b2b9-25293002c520","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"size","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size","otherOffsetInBits":"size","otherLengthInBits":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"status":0},{"failures":[],"tindex":"528a80fa-235c-11e5-b2b9-8fdbd16cdd18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2357","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"next":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:555","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[197,198,199,200,201,202,203,204,205,206,207,208,209,46,58,59,210,211,212,213],"tindex":"528a80fb-235c-11e5-b2b9-9145567cc528","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:871","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:262","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"528a80fc-235c-11e5-b2b9-27a057784604","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1361","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"left=\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()).append(\" [\")"},"variableMap":{"left":"entry","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:69","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>).append(\"\\n\")"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}