{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":31,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":179,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":14,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":167,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":67,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":2,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":48,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":77,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":181,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":6,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":112,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorImmutability":169,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":27,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":117,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":68,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":49,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":163,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":9,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":37,"org.apache.commons.collections4.list.TreeListTest.testRemove":177,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":102,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":111,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":155,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":42,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":120,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":131,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":128,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":144,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":39,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":17,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":141,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":38,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":115,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":47,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":92,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":185,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":95,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":189,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":156,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":24,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":183,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":93,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":146,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":45,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":60,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":35,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":142,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":99,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":129,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":12,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":70,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":186,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":164,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":51,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":61,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":75,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":43,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":76,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":162,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":44,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":34,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":134,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":118,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":161,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":182,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":168,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":174,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":11,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":80,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":50,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":53,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":106,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":159,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":143,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":114,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":110,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":29,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":32,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":78,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":101,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":69,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":190,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":56,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":113,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":165,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":152,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":187,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":8,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":108,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAdd":170,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":188,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":46,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":57,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":82,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":166,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":28,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":66,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":151,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":91,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":33,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":136,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":173,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":119,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":150,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":54,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":59,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":71,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":149,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":21,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":18,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":124,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":135,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":13,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":90,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":160,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":104,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":157,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":123,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":148,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":97,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":98,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":122,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":41,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.testThrowingClosure":0,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":140,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":16,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":64,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":158,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":19,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":125,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":172,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":133,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":83,"org.apache.commons.collections4.list.TreeListTest.testBug35258":180,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":4,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":100,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":105,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":176,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":171,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":138,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":87,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":40,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":58,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":153,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":84,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":20,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":154,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":30,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":178,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":81,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":109},"transformations":[{"failures":[],"tindex":"b94da23b-2370-11e5-914a-c9f6accd4053","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:314","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"b94dc94c-2370-11e5-914a-7f7b5bf5e3bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:231","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 9)"},"status":0},{"failures":[],"tindex":"b94dc94d-2370-11e5-914a-8383c5472a48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"status":0},{"failures":[],"tindex":"b94df05e-2370-11e5-914a-c18fc2c43b15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} "},"status":-2},{"failures":[],"tindex":"b94df05f-2370-11e5-914a-934fcc5497a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:382","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : java.lang.Object"},"variableMap":{"key":"object","org.apache.commons.collections4.map.AbstractHashedMap.NULL":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"b94df060-2370-11e5-914a-d9d048f8bb12","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"b94e1771-2370-11e5-914a-810d0b429c23","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:156","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)]"},"status":-2},{"failures":[],"tindex":"b94e1772-2370-11e5-914a-e30b9257ae1e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:96","type":"CtReturnImpl","sourcecode":"return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size","x":"size","i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:100","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[0],"tindex":"b94e1773-2370-11e5-914a-6d14645dd957","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)"},"status":-1},{"failures":[1],"tindex":"b94e3e84-2370-11e5-914a-75262d927d46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1112","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getKey()"},"variableMap":{"this":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2142","type":"CtAssignmentImpl","sourcecode":"K = java.util.Map.Entry<K, V> == null ? null : java.util.Map.Entry<K, V>.getKey()"},"status":-1},{"failures":[],"tindex":"b94e3e85-2370-11e5-914a-532d7c4d7b3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[2,3,4],"tindex":"b94e3e86-2370-11e5-914a-5519b6d29dc6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:701","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:147","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"b94e3e87-2370-11e5-914a-d1041f48939e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1331","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"b94e6598-2370-11e5-914a-191eca114e18","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:50","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"keyAnalyzer\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:127","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\")"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"b94e6599-2370-11e5-914a-9d1478d27dfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1340","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[98,99,100,101,102,103,104,105,106,107],"tindex":"b94e659a-2370-11e5-914a-dfd68dcffb96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1911","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()"},"status":-1},{"failures":[],"tindex":"b94e8cab-2370-11e5-914a-959cd44365b6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, 1)"},"status":-2},{"failures":[],"tindex":"b94e8cac-2370-11e5-914a-d709891e50cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:680","type":"CtReturnImpl","sourcecode":"return 0.0F"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:682","type":"CtReturnImpl","sourcecode":"return java.lang.Float.floatValue()"},"status":0},{"failures":[108],"tindex":"b94e8cad-2370-11e5-914a-279b2b63a8f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:185","type":"CtReturnImpl","sourcecode":"return java.lang.Integer == null"},"variableMap":{"position":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.containsKey(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"b94e8cae-2370-11e5-914a-efb4ba7a3d0d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:231","type":"CtLocalVariableImpl","sourcecode":"final E E = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()"},"status":-2},{"failures":[],"tindex":"b94eb3bf-2370-11e5-914a-cb7264077bbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:343","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EmptyOrderedMapIterator:46","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.org.apache.commons.collections4.OrderedMapIterator))"},"status":-2},{"failures":[],"tindex":"b94eb3c0-2370-11e5-914a-e7874db80833","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"status":-2},{"failures":[],"tindex":"b94eb3c1-2370-11e5-914a-4fc5e98bf3b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:145","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.util.Map.Entry<K, V>> java.util.Set<java.util.Map.Entry<K, V>> = java.util.Map<K, V>.entrySet()"},"status":-2},{"failures":[],"tindex":"b94eb3c2-2370-11e5-914a-2185c4f2a7ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:980","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount()"},"status":-2},{"failures":[],"tindex":"b94eb3c3-2370-11e5-914a-fb52ecc73c70","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtIfImpl","sourcecode":"if (java.util.List<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"variableMap":{"list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:322","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(E)) {\n    java.util.List<E>.add(E);\n} "},"status":0},{"failures":[],"tindex":"b94eb3c4-2370-11e5-914a-2d55e65f1db5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1889","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()"},"status":0},{"failures":[],"tindex":"b94ed9d5-2370-11e5-914a-93d4b85551ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"oldCapacity","newCapacity":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":0},{"failures":[],"tindex":"b94ed9d6-2370-11e5-914a-59d1eca860c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:290","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"variableMap":{"next":"next","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:256","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"b94ed9d7-2370-11e5-914a-c9086a06db1a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:261","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"modified":"slotFilled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:91","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":"b94ed9d8-2370-11e5-914a-1d5d9aa99629","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1146","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"b94ed9d9-2370-11e5-914a-bdf29f560496","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"right","parent":"current","left":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b94f00ea-2370-11e5-914a-e1d7bf4d8652","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getValue()"},"status":0},{"failures":[],"tindex":"b94f00eb-2370-11e5-914a-ad45641d0e09","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"obj","keys":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"b94f00ec-2370-11e5-914a-69bdbdd8c815","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-1},{"failures":[],"tindex":"b94f00ed-2370-11e5-914a-cf19600c7a55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:87","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedSortedBag<E>"},"variableMap":{"decorated":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:57","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(org.apache.commons.collections4.SortedBag<E> , org.apache.commons.collections4.Transformer<? super E, ? extends E>)"},"status":-2},{"failures":[],"tindex":"b94f00ee-2370-11e5-914a-07c2e8f1d9bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:75","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:302","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.SwitchTransformer.<I,O>switchTransformer(java.util.Map<org.apache.commons.collections4.Predicate<I>, org.apache.commons.collections4.Transformer<I, O>>)"},"status":-2},{"failures":[166,23,167,168,47],"tindex":"b94f27ff-2370-11e5-914a-65a7401315ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:245","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"b94f2800-2370-11e5-914a-1184cd62bc3f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:414","type":"CtLocalVariableImpl","sourcecode":"final int int = int - (int)"},"variableMap":{"index":"endIndex2","relativePosition":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:72","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.max(int, int)"},"status":-2},{"failures":[],"tindex":"b94f2801-2370-11e5-914a-9936d631b7cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:952","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.KeySet<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:85","type":"CtReturnImpl","sourcecode":"return java.util.Set<T> == null ? java.util.Collections.<T>emptySet() : java.util.Set<T>"},"status":-2},{"failures":[],"tindex":"b94f2802-2370-11e5-914a-c967a8a7cdf5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:566","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"next":"after","before":"after"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:247","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[169,170],"tindex":"b94f2803-2370-11e5-914a-75f2e2146b3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:102","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported\")"},"status":-1},{"failures":[],"tindex":"b94f2804-2370-11e5-914a-5116f962749e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:153","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1990","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> , org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-2},{"failures":[],"tindex":"b94f2805-2370-11e5-914a-836be8b0be61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"object","keys":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1392","type":"CtReturnImpl","sourcecode":"return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false"},"status":-2},{"failures":[],"tindex":"b94f4f16-2370-11e5-914a-a9097911855b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:186","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:466","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.createNode(E)"},"status":-2},{"failures":[171,172,173,174,175,176],"tindex":"b94f4f17-2370-11e5-914a-39c9e9d5eb38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1021","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1018","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(' ')"},"status":-1},{"failures":[177,178,179,180,181,182,183,184,185],"tindex":"b94f4f18-2370-11e5-914a-3326426e3b37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:588","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TreeList.AVLNode<E>.balance()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:499","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TreeList.AVLNode<E>.insertOnRight(int, E)"},"status":-1},{"failures":[],"tindex":"b94f4f19-2370-11e5-914a-ffe04eb08aea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:675","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.Flat3Map<K, V>.V"},"status":0},{"failures":[],"tindex":"b94f4f1a-2370-11e5-914a-63bb3ebaef92","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":0},{"failures":[],"tindex":"b94f4f1b-2370-11e5-914a-d3889d5374e6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:428","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(E)"},"status":-2},{"failures":[186,187,188,189,190],"tindex":"b94f4f1c-2370-11e5-914a-b1bc5518710f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:144","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - 1"},"variableMap":{"size":"indexOfLargestMobileInteger"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:132","type":"CtLocalVariableImpl","sourcecode":"final int int = int[][int]"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}