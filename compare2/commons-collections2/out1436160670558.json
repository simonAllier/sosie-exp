{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":51,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":311,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":155,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":248,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":275,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":208,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":240,"org.apache.commons.collections4.ListUtilsTest.testHashCode":137,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":140,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":278,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":61,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":274,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":146,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":192,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":164,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":280,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":181,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":163,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":213,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":283,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":156,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":59,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":33,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":260,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":174,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":34,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":13,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":327,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":73,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":44,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":329,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":148,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":106,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":65,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":66,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":147,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":212,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":116,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":117,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":145,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":96,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":330,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":94,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":312,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":320,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":332,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":277,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":253,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":214,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":219,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":227,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":136,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":103,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":257,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":141,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":87,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":2,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":231,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":293,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":154,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":115,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":167,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":325,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":210,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":23,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":77,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":299,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":75,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":180,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":232,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":177,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":195,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":269,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":292,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":69,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":15,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":207,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":60,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":110,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":234,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":304,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":179,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":276,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":302,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":1,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":244,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":104,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":152,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":270,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":263,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":264,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":52,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":161,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":218,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":39,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":49,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":114,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":315,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":153,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":305,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":132,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":135,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":97,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":171,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":288,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":198,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":235,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":331,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":313,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":158,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":335,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":243,"org.apache.commons.collections4.list.TreeListTest.testBug35258":142,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":81,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":191,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":113,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":165,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":160,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":229,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":249,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":285,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":134,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":139,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":74,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":233,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":238,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":129,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":159,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":64,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":309,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":32,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":267,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":70,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":188,"org.apache.commons.collections4.list.TreeListTest.testRemove":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":126,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":119,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":294,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":133,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":56,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":99,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":202,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":291,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":3,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":321,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":120,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":172,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":258,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":196,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":310,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":211,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":250,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":68,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":149,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":182,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":122,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":197,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.PredicateUtilsTest.testExceptionPredicate":138,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":71,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":271,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":301,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":324,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":26,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":203,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":221,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":206,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":28,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":131,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":173,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":189,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":334,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":333,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":272,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":176,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":326,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":175,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":72,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":246,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":109,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":185,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":297,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":62,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":186,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":84,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":193,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":303,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":322,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":24,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":184,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":58,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":314,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":247,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":18,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":170,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":259,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":101,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":48,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":216,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":279,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":157,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":162,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":290,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":127,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":252,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":201,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":223,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":245,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":205,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":57,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":10,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":178,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":268,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":89,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":183,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":50,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":317,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":111,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":306,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":53,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":166,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":100,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":217,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":254,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":41,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":108,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":307,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":251,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":4,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":21,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":9,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":7,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":230,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":239,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":319,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":282,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":45,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":144},"transformations":[{"failures":[],"tindex":"359cdbd8-23a0-11e5-aa66-2d4d56e3c032","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"variableMap":{"found":"predecessor","this":"this","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"359d5109-23a0-11e5-aa66-e38c20cbf90d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1583","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"prior":"ceil"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:915","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"359d510a-23a0-11e5-aa66-d1fc7ff5ae2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:674","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue()"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:991","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey()"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"359d510b-23a0-11e5-aa66-41317ab754af","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.decrementSize()"},"status":-1},{"failures":[],"tindex":"359d781c-23a0-11e5-aa66-13561b0c02e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"hasNext","removed":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:464","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[30,31],"tindex":"359d781d-23a0-11e5-aa66-33b315186c57","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:604","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getLeftSubTree()) == null) {\n    return org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeSelf();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:573","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeSelf();\n} "},"status":-1},{"failures":[],"tindex":"359d781e-23a0-11e5-aa66-f50c139e7d99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1734","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object)"},"status":-2},{"failures":[32,12,33,34,15,17,21],"tindex":"359d9f2f-23a0-11e5-aa66-538da9db2535","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:431","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"current":"current","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"359d9f30-23a0-11e5-aa66-a3e2d2b8f7cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:820","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1566","type":"CtThrowImpl","sourcecode":"throw new java.util.ConcurrentModificationException()"},"status":-2},{"failures":[],"tindex":"359d9f31-23a0-11e5-aa66-0bdd5ca3937c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot set value to this map entry\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:637","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\")"},"status":-2},{"failures":[35,36,37,38,39],"tindex":"359dc642-23a0-11e5-aa66-f78592beef44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"359dc643-23a0-11e5-aa66-1723203f8cba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:386","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"status":-2},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"359dc644-23a0-11e5-aa66-633ee9b6a610","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:852","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:913","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"359ded55-23a0-11e5-aa66-89cb80a6184c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\");\n} "},"status":-2},{"failures":[136],"tindex":"359ded56-23a0-11e5-aa66-d151971ab16c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"Start index must not be less than zero\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[137],"tindex":"359ded57-23a0-11e5-aa66-b790233f0818","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:283","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"359e1468-23a0-11e5-aa66-89488d0ff031","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:190","type":"CtAssignmentImpl","sourcecode":"E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E)"},"status":-2},{"failures":[42,49,55,57,58,60,61,62,64,65,67,70,71,75,76,78,79,80,84,88,90,91,92,97,104,107,108,110,111,112,114,115,121,122,133,134],"tindex":"359e1469-23a0-11e5-aa66-dd97a16c7f4a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"359e3b7a-23a0-11e5-aa66-ef1805be44f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:299","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"status":-2},{"failures":[],"tindex":"359e3b7b-23a0-11e5-aa66-fdde3b40aa10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1636","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setValue(V)"},"status":-2},{"failures":[],"tindex":"359e3b7c-23a0-11e5-aa66-81f341bfada1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:664","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:477","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[138],"tindex":"359e3b7d-23a0-11e5-aa66-5f1e9bdf3ed1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchClosure:91","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionPredicate:66","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionPredicate invoked\")"},"status":-1},{"failures":[139,140,141,142,143,144,145,30,146,147,148,149,31,150,151],"tindex":"359e3b7e-23a0-11e5-aa66-01a1c05c6e07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:421","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E> == null) {\n    return null;\n} "},"variableMap":{"nextNode":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:690","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TreeList.AVLNode<E>.rotateLeft()"},"status":-1},{"failures":[],"tindex":"359e628f-23a0-11e5-aa66-3b888a0fe817","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"status":-2},{"failures":[],"tindex":"359e6290-23a0-11e5-aa66-37e6a3be2d05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:140","type":"CtReturnImpl","sourcecode":"return K == null ? 0 : -1"},"status":0},{"failures":[152,153],"tindex":"359e6291-23a0-11e5-aa66-e36279849ba5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"status":-1},{"failures":[154,155,156,157],"tindex":"359e6292-23a0-11e5-aa66-eb7cbb7e4b51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1121","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"currentIndex":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:370","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"status":-1},{"failures":[],"tindex":"359e6293-23a0-11e5-aa66-f3d8437c98f3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1587","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"359e6294-23a0-11e5-aa66-3168ec5eec04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:441","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.getLastNodeReturned())"},"status":-2},{"failures":[],"tindex":"359e6295-23a0-11e5-aa66-f59f9ab74158","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:668","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"359e89a6-23a0-11e5-aa66-2392c958ab18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"length","index":"length","beyond":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"359e89a7-23a0-11e5-aa66-3fa13858bd8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:393","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263],"tindex":"359e89a8-23a0-11e5-aa66-6f32db03b082","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:82","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previous()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:67","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.next()"},"status":-1},{"failures":[],"tindex":"359e89a9-23a0-11e5-aa66-f3ce1d524802","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"status":-2},{"failures":[],"tindex":"359eb0ba-23a0-11e5-aa66-79666485d92b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:145","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"359eb0bb-23a0-11e5-aa66-d1aa55798740","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"End index must not be greater than the array length\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:336","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\")"},"status":-1},{"failures":[],"tindex":"359eb0bc-23a0-11e5-aa66-7f93978fddfc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:207","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[157],"tindex":"359eb0bd-23a0-11e5-aa66-0518d1259a97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"index","listSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)"},"status":-1},{"failures":[],"tindex":"359eb0be-23a0-11e5-aa66-d7e470670cda","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281],"tindex":"359eb0bf-23a0-11e5-aa66-d3ae0983b5f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"359ed7d0-23a0-11e5-aa66-6fee359f6372","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:550","type":"CtForEachImpl","sourcecode":"for (final K K : this) {\n    java.util.List<K>.add(K);\n}"},"status":-1},{"failures":[],"tindex":"359ed7d1-23a0-11e5-aa66-ade3e8e3cf25","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2045","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"359ed7d2-23a0-11e5-aa66-cfde0037c262","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:91","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset()"},"status":-2},{"failures":[68],"tindex":"359ed7d3-23a0-11e5-aa66-a50509cf46d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\");\n} "},"variableMap":{"result":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:196","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)"},"status":-1},{"failures":[282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"tindex":"359ed7d4-23a0-11e5-aa66-2bc614706579","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:263","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1)"},"status":-1},{"failures":[],"tindex":"359ed7d5-23a0-11e5-aa66-11fc0f66dc28","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"currentNode","to":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"359efee6-23a0-11e5-aa66-2517f2261f31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"variableMap":{"it":"it","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"359efee7-23a0-11e5-aa66-b7630c59f492","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:267","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:688","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>.getValue()"},"status":-2},{"failures":[],"tindex":"359efee8-23a0-11e5-aa66-2762c34cab3c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry:72","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"setValue() is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:92","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The size must be greater than 0\")"},"status":-2},{"failures":[],"tindex":"359efee9-23a0-11e5-aa66-e533d6efd885","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:543","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}