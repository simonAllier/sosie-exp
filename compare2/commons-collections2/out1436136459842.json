{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":233,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":237,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":44,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":60,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":176,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":66,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":81,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":131,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":199,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":80,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":62,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":166,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":31,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":87,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":162,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":2,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":72,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":70,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":53,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":206,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":50,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":16,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":232,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":163,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":24,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":63,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":8,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":38,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":83,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":43,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":65,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":69,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":129,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":116,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":238,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":139,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":197,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":5,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":170,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":226,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":95,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":143,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":157,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":55,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":218,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":40,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":11,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":142,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":219,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":136,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":103,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":171,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":207,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":180,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":203,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":202,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":209,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":1,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":144,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":47,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":124,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":28,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":25,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":51,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":112,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":7,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":39,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":188,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":126,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":115,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":36,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":18,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":10,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":26,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":27,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":30,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":172,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":208,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":228,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":122,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":86,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":85,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":205,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":214,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":212,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":190,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":194,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":145,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":168,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":104,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":181,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":135,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":133,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":160,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":227,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":42,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":231,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":216,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":110,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":167,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":138,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":222,"org.apache.commons.collections4.list.TreeListTest.testBug35258":59,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":102,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":84,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":20,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":223,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":79,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":105,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":41,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":213,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":98,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":119,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":217,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":132,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":118,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":56,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":134,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":94,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":88,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":161,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":225,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":0,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":184,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":201,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":189,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":4,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":178,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":75,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":153,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":21,"org.apache.commons.collections4.list.TreeListTest.testRemove":61,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":179,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":64,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":234,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":146,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":191,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":46,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":101,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":99,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":113,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":78,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":89,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":220,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":164,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":3,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":186,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":200,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":108,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":198,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":169,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":182,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":109,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":148,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":147,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":114,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":100,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":45,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":34,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":152,"org.apache.commons.collections4.ListUtilsTest.testSubtract":82,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":123,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":183,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":221,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":173,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":111,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":154,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":32,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":22,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":230,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":74,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":155,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":90,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":52,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":196,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":93,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":187,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":192,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":9,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":159,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":17,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":6,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":127,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":68,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":211,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":195,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":141,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":229,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":29,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":193,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":92,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":210,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":215,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":165,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":49,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":204,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":48,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":107,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":149,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":54,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":77,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":236,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":67,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":174,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":151,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":76,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":177,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":137,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":175,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":185,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":73,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":15,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":117,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":33,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":130,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":97,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":140,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":12,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":13,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":14,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":106,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":71,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":156,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":121,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":96,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":158,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":58,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":19},"transformations":[{"failures":[],"tindex":"d6e51915-2367-11e5-b07d-2331df9d35f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:281","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[0,1],"tindex":"d6e51916-2367-11e5-b07d-19956b6a9b84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:96","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"d6e54027-2367-11e5-b07d-819c2885ff1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:546","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.(isEqualKey(java.util.Map.Entry<?, ?>.getKey())) && org.apache.commons.collections4.map.SingletonMap<K, V>.(isEqualValue(java.util.Map.Entry<?, ?>.getValue()))"},"status":0},{"failures":[],"tindex":"d6e54028-2367-11e5-b07d-21bfd729814c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:939","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"d6e54029-2367-11e5-b07d-6135751dd643","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:106","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[2,3],"tindex":"d6e5402a-2367-11e5-b07d-9346aa3dbcef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:145","type":"CtInvocationImpl","sourcecode":"java.util.Map<E, ? super V>.clear()"},"status":-1},{"failures":[4],"tindex":"d6e5402b-2367-11e5-b07d-358e4b8e8243","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:169","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"d6e5402c-2367-11e5-b07d-751460899e70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1001","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.IteratorUtils.org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<? extends E>, 10)"},"status":-2},{"failures":[],"tindex":"d6e5402d-2367-11e5-b07d-3db4a155a670","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:153","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"d6e5673e-2367-11e5-b07d-894f10c78920","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1387","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=')"},"variableMap":{"buf":"key","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1387","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object))"},"status":-2},{"failures":[],"tindex":"d6e5673f-2367-11e5-b07d-03ef9ac62e88","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:123","type":"CtReturnImpl","sourcecode":"return null == (java.util.Comparator<O>) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>)"},"status":-2},{"failures":[],"tindex":"d6e56740-2367-11e5-b07d-db36a45f4635","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1054","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(int)"},"variableMap":{"next":"next","parent":"parent","root":"root","nextIndex":"nextIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:1073","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(((int) - 1))"},"status":-2},{"failures":[5,6,7,8,9],"tindex":"d6e56741-2367-11e5-b07d-f91157588d5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-1},{"failures":[],"tindex":"d6e56742-2367-11e5-b07d-59365050b4ab","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1718","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(java.util.Collection<C>)"},"variableMap":{"collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1669","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.ListUtils.retainAll(java.util.Collection<C>, java.util.Collection<?>)"},"status":-2},{"failures":[],"tindex":"d6e58e53-2367-11e5-b07d-d123d7d364e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:386","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"variableMap":{"lastReturnedIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:626","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int"},"status":-2},{"failures":[10,11,12,13,14,15],"tindex":"d6e58e54-2367-11e5-b07d-559ea6a2679b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1019","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(java.lang.Object.getClass().getName())"},"status":-1},{"failures":[],"tindex":"d6e58e55-2367-11e5-b07d-0d2c7f7ea300","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1044","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"siblingNode","currentNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"d6e58e56-2367-11e5-b07d-65792a39d882","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()"},"variableMap":{"this":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"d6e58e57-2367-11e5-b07d-231b105abd61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:499","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.ListOrderedMap<K, V>.keyList()"},"status":-2},{"failures":[],"tindex":"d6e58e58-2367-11e5-b07d-e1af4b993f8e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:84","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().isEmpty()"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25],"tindex":"d6e5b569-2367-11e5-b07d-2f5ad19f4d17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"nextIndexValid"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:533","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n} else if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n} else {\n    boolean = false;\n}"},"status":-1},{"failures":[],"tindex":"d6e5b56a-2367-11e5-b07d-57e35cb7e0ca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1311","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"d6e5b56b-2367-11e5-b07d-41ac41aa34a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"d6e5b56c-2367-11e5-b07d-0dc30b397116","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:470","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:319","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySetIterator<K, V>(java.util.Iterator<java.util.Map.Entry<K, V>> , this)"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35],"tindex":"d6e5b56d-2367-11e5-b07d-1d008c77b9bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:591","type":"CtAssignmentImpl","sourcecode":"int = int = int = 0"},"variableMap":{"hash3":"code","hash2":"code","hash1":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:481","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.util.Map.Entry<K, V>.hashCode()"},"status":-1},{"failures":[36,37],"tindex":"d6e5dc7e-2367-11e5-b07d-4f2756a861eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:75","type":"CtReturnImpl","sourcecode":"return (boolean) && (!(boolean))"},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:235","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"d6e5dc7f-2367-11e5-b07d-eda213a5e66c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"d6e5dc80-2367-11e5-b07d-1174e96125b9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1529","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable<? extends O>, java.lang.Iterable<? extends O>, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true)"},"variableMap":{"a":"b","b":"b","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1569","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable<? extends O>, java.lang.Iterable<? extends O>, java.util.Comparator<? super O>, true)"},"status":-2},{"failures":[50,51,52,53],"tindex":"d6e5dc81-2367-11e5-b07d-cfcc90d9a8e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:460","type":"CtInvocationImpl","sourcecode":"java.util.List<K>.add(int, K)"},"status":-1},{"failures":[],"tindex":"d6e5dc82-2367-11e5-b07d-a753dd52bd13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":-2},{"failures":[],"tindex":"d6e60393-2367-11e5-b07d-31ac8779b33d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:108","type":"CtIfImpl","sourcecode":"if ((java.util.Map.Entry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"entry":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1894","type":"CtIfImpl","sourcecode":"if ((java.util.Map.Entry<K, V> == null) || (((K) != null) && (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inToRange(K, false))))) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[],"tindex":"d6e60394-2367-11e5-b07d-53e764e591cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2152","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:440","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse"},"status":-2},{"failures":[],"tindex":"d6e60395-2367-11e5-b07d-3906d1f74dc6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getValue().hashCode()"},"status":0},{"failures":[],"tindex":"d6e60396-2367-11e5-b07d-f1d3256082e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:69","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"  \")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(',')"},"status":0},{"failures":[],"tindex":"d6e60397-2367-11e5-b07d-65c650fd11c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:425","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K,V>emptyOrderedMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:55","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<K, V>"},"status":-2},{"failures":[],"tindex":"d6e62aa8-2367-11e5-b07d-613d3a03137a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"input":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:129","type":"CtReturnImpl","sourcecode":"return ((O)(java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])))"},"status":-2},{"failures":[54],"tindex":"d6e62aa9-2367-11e5-b07d-6777cc4a531b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:61","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.SortedBidiMap<K, V>"},"status":-1},{"failures":[],"tindex":"d6e62aaa-2367-11e5-b07d-af3ae4ab65c2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()"},"status":-2},{"failures":[],"tindex":"d6e62aab-2367-11e5-b07d-815cc16eac9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:180","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(K, V)"},"status":-2},{"failures":[55,56,57,58,59,60,61,62,63],"tindex":"d6e62aac-2367-11e5-b07d-13a51aaf7ffb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:204","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null)"},"status":-1},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"d6e62aad-2367-11e5-b07d-214046679dee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:331","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.clear(int)"},"status":-1},{"failures":[76,77,78,79,80,81],"tindex":"d6e62aae-2367-11e5-b07d-7111787c36ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"delta","start":"end2","end":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237],"tindex":"d6e62aaf-2367-11e5-b07d-09a078f3fd23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"changed","beforeFirst":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"d6e651c0-2367-11e5-b07d-4b875471cef6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1932","type":"CtReturnImpl","sourcecode":"return !(boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])"},"variableMap":{"blackColor":"key3","dataElement":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:535","type":"CtReturnImpl","sourcecode":"return (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) == 4) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))))"},"status":-2},{"failures":[],"tindex":"d6e651c1-2367-11e5-b07d-b1f8a9151d99","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"d6e651c2-2367-11e5-b07d-59d0223fe65c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1192","type":"CtInvocationImpl","sourcecode":"java.util.Collections.<K,V>emptyMap()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:706","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.ListOrderedMap<K, V>.decorated()"},"status":-1},{"failures":[238],"tindex":"d6e651c3-2367-11e5-b07d-c3c867adc137","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:875","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:136","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The closure array must not be null\")"},"status":-1},{"failures":[],"tindex":"d6e651c4-2367-11e5-b07d-874caa40dd4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:349","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InstantiateTransformer.<T>instantiateTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:164","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(org.apache.commons.collections4.Predicate<? super T>)"},"status":-2},{"failures":[55],"tindex":"d6e651c5-2367-11e5-b07d-7557c405dae4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:862","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>.isEmpty())) {\n    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>.pop();\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>, null);\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.balance();\n}"},"status":-1},{"failures":[],"tindex":"d6e651c6-2367-11e5-b07d-0f62492ec83c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:150","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.(getKey()) == null ? 0 : org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey().hashCode()) ^ (org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.(getValue()) == null ? 0 : org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getValue().hashCode())"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}