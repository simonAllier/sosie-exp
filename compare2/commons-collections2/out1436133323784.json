{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":161,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":156,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":83,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":89,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":106,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":236,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":9,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":91,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":254,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":243,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":114,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":189,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":136,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":203,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":97,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":201,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":22,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":30,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":260,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":94,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":258,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":162,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":99,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":44,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":149,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":132,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":183,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":20,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":0,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":24,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":36,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":58,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":104,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":202,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":211,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":168,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":207,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":37,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":102,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":253,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":232,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":237,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":257,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":167,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":13,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":142,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":107,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":85,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":100,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":67,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":147,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":170,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":75,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":31,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":166,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":65,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":111,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":164,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":16,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":47,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":90,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":215,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":123,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":227,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":32,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":53,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":77,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":150,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":78,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":116,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":242,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":46,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":127,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":49,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":248,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":133,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":205,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":137,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":103,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":128,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":4,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":241,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":244,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":112,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":61,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":196,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":19,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":180,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":171,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":231,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":54,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":186,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":172,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":214,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":154,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":175,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":249,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":146,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":240,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":26,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":125,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":55,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":108,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":218,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":63,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":82,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":193,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":129,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":118,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":177,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":27,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":176,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":197,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":216,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":18,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":217,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":80,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":130,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":185,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":194,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":7,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":71,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":235,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":72,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":109,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":157,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":134,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":28,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":190,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":122,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":152,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":135,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":251,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":105,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":143,"org.apache.commons.collections4.CollectionUtilsTest.reverse":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":138,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":160,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":181,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":173,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":213,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":252,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":209,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":191,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":184,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":210,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":228,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":84,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":117,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":41,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":188,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":238,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":247,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":68,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":165,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":69,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":230,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":50,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":131,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":212,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":101,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":17,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":187,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":206,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":225,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":224,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":223,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":220,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":221,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":222,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":198,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":42,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":48,"org.apache.commons.collections4.list.TreeListTest.testListEquals":169,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":246,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":250,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":234,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":73,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":88,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":96,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":120,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":148,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":34,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testToString":200,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":126,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":145,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":121,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":153,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":179,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":174,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":74,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":239,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":163,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":245,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":124,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":23,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":60,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":115,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":29,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":21,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":51,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":195,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":255,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":81,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":208,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":144,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":261,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":95,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":229,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":233,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":59,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":139,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":178,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":199,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":219,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":57,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":259,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":204,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":25,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":92,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":14},"transformations":[{"failures":[],"tindex":"89ab1019-2360-11e5-a401-d354d7cb3cc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1469","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.KeySet.size()"},"variableMap":{"this":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:286","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(java.lang.Object, java.lang.Object, java.lang.Object)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"89ab372a-2360-11e5-a401-1d131b8f13ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:867","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[8],"tindex":"89ab854b-2360-11e5-a401-25a4b6ef1f91","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:201","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = null"},"variableMap":{"result":"array","size":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1444","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.lang.Object[][int]"},"status":-1},{"failures":[],"tindex":"89abac5c-2360-11e5-a401-7378bdb0d7ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"status":0},{"failures":[9],"tindex":"89abac5d-2360-11e5-a401-a7f87c355143","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:284","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"retval":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1349","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[10],"tindex":"89abac5e-2360-11e5-a401-939a45d02efd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:679","type":"CtAssignmentImpl","sourcecode":"K = org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<K, java.util.Map.Entry<K, V>>.getIterator().next()"},"status":-2},{"failures":[],"tindex":"89abac5f-2360-11e5-a401-8fd34956b449","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:824","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:282","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[11,12],"tindex":"89abd370-2360-11e5-a401-9b64cc89f5ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1216","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            return null;\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"tindex":"89abd371-2360-11e5-a401-f5dd9a7a25a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:67","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"89ac2192-2360-11e5-a401-af6cf2ecf826","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.(indexOf(java.lang.Object)) != (-1)"},"status":-2},{"failures":[],"tindex":"89ac48a3-2360-11e5-a401-3f56b773dd7c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"89ac48a4-2360-11e5-a401-d599723db0fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[161,162,163,164],"tindex":"89ac48a5-2360-11e5-a401-214f814c38ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:677","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"status":-1},{"failures":[],"tindex":"89ac48a6-2360-11e5-a401-fd3acdb4d7ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:67","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:360","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"89ac6fb7-2360-11e5-a401-95df6116f6f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1165","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n    throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n} "},"status":-2},{"failures":[165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],"tindex":"89ac6fb8-2360-11e5-a401-b99b4767e546","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:347","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.this(java.util.Collection<? extends E>.iterator(), 0, ((java.util.Collection<? extends E>.size()) - 1), 0, null, null)"},"status":-1},{"failures":[],"tindex":"89ac6fb9-2360-11e5-a401-b75cb385d816","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:207","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"89ac6fba-2360-11e5-a401-1d224bd82bdf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:271","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"89ac96cb-2360-11e5-a401-955413724e7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()"},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:97","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.set(E)"},"status":-2},{"failures":[],"tindex":"89ac96cc-2360-11e5-a401-9bb4a4012fdd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtIfImpl","sourcecode":"if (java.util.Enumeration<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n} "},"status":0},{"failures":[],"tindex":"89ac96cd-2360-11e5-a401-cf4da6bf8213","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"set() is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1620","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"status":-1},{"failures":[195,196,197,198],"tindex":"89ac96ce-2360-11e5-a401-6f1a5933e7b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:138","type":"CtAssignmentImpl","sourcecode":"E[][int] = ((E)(java.io.ObjectInputStream.readObject()))"},"status":-1},{"failures":[],"tindex":"89ac96cf-2360-11e5-a401-4373bfce6d3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[199],"tindex":"89ac96d0-2360-11e5-a401-9363863e7af9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:178","type":"CtInvocationImpl","sourcecode":"this.java.util.Map<K, V>[][int].clear()"},"variableMap":{"composite":"temp","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:162","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(this.java.util.Map<K, V>[], (int + 1), java.util.Map<K, V>[], int, ((int - int) - 1))"},"status":-1},{"failures":[200],"tindex":"89acbde1-2360-11e5-a401-27cd0830b32c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1378","type":"CtReturnImpl","sourcecode":"return \"{}\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:134","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.(getKey()) + \"=\") + org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.(getValue())"},"status":-1},{"failures":[],"tindex":"89acbde2-2360-11e5-a401-2be8f1319e7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:275","type":"CtLocalVariableImpl","sourcecode":"final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next()"},"status":-2},{"failures":[],"tindex":"89acbde3-2360-11e5-a401-cda16db51394","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:58","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"status":0},{"failures":[201,202,203,204,205,12,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229],"tindex":"89acbde4-2360-11e5-a401-bd6bb9810346","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"89acbde5-2360-11e5-a401-db27a8365bdf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:237","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.start()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:189","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.checkNotStarted()"},"status":0},{"failures":[],"tindex":"89acbde6-2360-11e5-a401-296b4f3ba079","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:125","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"89acbde7-2360-11e5-a401-a1e8669f0d0b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:73","type":"CtIfImpl","sourcecode":"if (T == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Input Object must not be null\");\n} "},"status":-2},{"failures":[230],"tindex":"89ace4f8-2360-11e5-a401-d90684f0ff92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:220","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"89ace4f9-2360-11e5-a401-051cf56c2766","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:695","type":"CtReturnImpl","sourcecode":"return ((((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) == 5) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(4))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(4)))))"},"status":-2},{"failures":[],"tindex":"89ace4fa-2360-11e5-a401-03f7bd8e7fd0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:824","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:105","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.keySet().iterator()"},"status":-2},{"failures":[],"tindex":"89ace4fb-2360-11e5-a401-c73df51fdf1f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:978","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(java.lang.Object)"},"status":-2},{"failures":[231],"tindex":"89ace4fc-2360-11e5-a401-61d4deb34080","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:114","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"keyTransformer cannot be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:117","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"89ace4fd-2360-11e5-a401-97be633db639","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:66","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl","sourcecode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false"},"status":-2},{"failures":[],"tindex":"89ace4fe-2360-11e5-a401-4f457bd89bb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:168","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.ComparatorChain<E>.setComparator(int, java.util.Comparator<E>, false)"},"status":-2},{"failures":[],"tindex":"89ad0c0f-2360-11e5-a401-19c6207ba4bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:213","type":"CtUnaryOperatorImpl","sourcecode":"--int"},"variableMap":{"removeIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1014","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[],"tindex":"89ad0c10-2360-11e5-a401-574a9057efda","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:557","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"next":"after","last":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:264","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"89ad0c11-2360-11e5-a401-0b839d3b76aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:514","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"89ad0c12-2360-11e5-a401-0578b8b0d8c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"modified","changed":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:381","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"89ad0c13-2360-11e5-a401-b5678718e3b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"node":"current","right":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:737","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-2},{"failures":[232,233],"tindex":"89ad0c14-2360-11e5-a401-476d5b2832e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:326","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Map is empty\")"},"status":-1},{"failures":[],"tindex":"89ad0c15-2360-11e5-a401-abc9a15e6b08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:180","type":"CtReturnImpl","sourcecode":"return this.int"},"status":-2},{"failures":[],"tindex":"89ad3326-2360-11e5-a401-cd3491d0ce32","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249],"tindex":"89ad3327-2360-11e5-a401-0d72989b5982","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"canRemove"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"89ad3328-2360-11e5-a401-5f415186e46a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1747","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.createEntrySet();\n} "},"status":-2},{"failures":[250,251,252,253,254,255,256,257,258,259,260,261],"tindex":"89ad3329-2360-11e5-a401-4758dd43bb4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":49,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}