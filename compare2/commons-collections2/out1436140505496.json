{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":64,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":1,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":62,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":8,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":72,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":39,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":66,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":9,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":102,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":31,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":98,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":132,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":115,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":117,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":51,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":116,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":112,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":119,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":85,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":122,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":100,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":11,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":128,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":58,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":50,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":32,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":28,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":78,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":101,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":23,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":126,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":89,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":13,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator":30,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":73,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":109,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":110,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":104,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":86,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":77,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":87,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":2,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":17,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":127,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":4,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":90,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":114,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":61,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":54,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":76,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":19,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":38,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":55,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":59,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":84,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":0,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":42,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":33,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":56,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":36,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":130,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":124,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":106,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":12,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":52},"transformations":[{"failures":[],"tindex":"424bd26a-2371-11e5-a8d6-97aafe36baa4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:378","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>"},"variableMap":{"left":"s","prev":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:884","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>"},"status":0},{"failures":[],"tindex":"424c208b-2371-11e5-a8d6-a11c4c31ece5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:197","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.close()"},"variableMap":{"baos":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:735","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.boolean) {\n    java.lang.Object = null;\n} "},"status":-2},{"failures":[],"tindex":"424c208c-2371-11e5-a8d6-8d19111ae40f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"hit","removeIndex":"hit","currentIndex":"hit"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"424c208d-2371-11e5-a8d6-f7bd0cad723b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.((java.util.List<E>)(decorated()))"},"status":-2},{"failures":[],"tindex":"424c208e-2371-11e5-a8d6-030644267644","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1192","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V> == null ? java.util.Collections.<K,V>emptyMap() : java.util.Map<K, V>"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1248","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedMap(java.util.Map<K, V>)"},"status":0},{"failures":[],"tindex":"424c208f-2371-11e5-a8d6-03f3cc7134b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:397","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"variableMap":{"buf":"buf","hasNext":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":0},{"failures":[],"tindex":"424c47a0-2371-11e5-a8d6-31db49894b72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"c","b":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"424c47a1-2371-11e5-a8d6-e1397b0c3760","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1709","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey()"},"status":-1},{"failures":[],"tindex":"424c47a2-2371-11e5-a8d6-6754718e677b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:624","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getRightSubTree()) == null) {\n    if ((int) > 0) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E>.int += (int) + ((int) > 0 ? 0 : 1);\n    } \n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.max().setRight(null, org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n    return org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n} "},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"424c6eb3-2371-11e5-a8d6-6f5c08c6c4b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 3"},"variableMap":{"hash":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:98","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.util.Set<E>.size()"},"status":-1},{"failures":[25,26],"tindex":"424c6eb4-2371-11e5-a8d6-95b182569984","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[27],"tindex":"424c6eb5-2371-11e5-a8d6-277ff5663742","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:196","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"424c6eb6-2371-11e5-a8d6-c5d248d5037b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"h":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:749","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.containsKey(V)) && ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.get(V)) != (java.util.Map.Entry<K, V>.getKey()))) {\n    throw new java.lang.IllegalArgumentException(\"Cannot use setValue() when the object being set is already in the map\");\n} "},"status":-2},{"failures":[28,29],"tindex":"424c95c7-2371-11e5-a8d6-0749f18d424f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"424c95c8-2371-11e5-a8d6-e54b841c1a1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:640","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"canRemove":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:369","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":"424c95c9-2371-11e5-a8d6-197c549dffc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:826","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.EntrySetIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:128","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<E>"},"status":-2},{"failures":[],"tindex":"424c95ca-2371-11e5-a8d6-f30f4da187ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1786","type":"CtReturnImpl","sourcecode":"return ((K == null) || org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inFromRange(K, false))) && ((K == null) || org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inToRange(K, false)))"},"status":-2},{"failures":[],"tindex":"424cbcdb-2371-11e5-a8d6-5126fa78edae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:415","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[30,31,32],"tindex":"424cbcdc-2371-11e5-a8d6-e913f394fbe2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"424cbcdd-2371-11e5-a8d6-735efa197a46","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:871","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"424cbcde-2371-11e5-a8d6-b938030a4880","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtIfImpl","sourcecode":"if (java.util.Map<E, ? super V> == null) {\n    throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n} "},"status":-2},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,25,66,26,67,68,69,70,71],"tindex":"424ce3ef-2371-11e5-a8d6-35a9547de133","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:572","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"424ce3f0-2371-11e5-a8d6-c368889bcfe6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:920","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map.FlatMapEntry<K, V>.setRemoved(true)"},"status":0},{"failures":[],"tindex":"424ce3f1-2371-11e5-a8d6-8df9eaf4bf7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:123","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , 0)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EmptyListIterator:67","type":"CtReturnImpl","sourcecode":"return ((java.util.ListIterator<E>)(org.apache.commons.collections4.iterators.EmptyListIterator.java.util.ListIterator))"},"status":-2},{"failures":[],"tindex":"424ce3f2-2371-11e5-a8d6-bdf32a418fd5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"skipped"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:93","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.ReplacementsHandler<T>.handleReplacement(int, java.util.List<T>, java.util.List<T>)"},"status":0},{"failures":[],"tindex":"424ce3f3-2371-11e5-a8d6-092ed4e7e137","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 11)"},"variableMap":{"hash":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:234","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"status":-2},{"failures":[],"tindex":"424ce3f4-2371-11e5-a8d6-ef891c9fd15b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:975","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-2},{"failures":[72],"tindex":"424d0b05-2371-11e5-a8d6-13b0bf9e5530","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The list must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SplitMapUtils:193","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"424d0b06-2371-11e5-a8d6-1b57f1201b10","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:141","type":"CtIfImpl","sourcecode":"if ((T[].int) > 0) {\n    java.lang.Object[] = ((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), 0)));\n} "},"status":-2},{"failures":[73,74,75,76],"tindex":"424d0b07-2371-11e5-a8d6-6bfc0b430b9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\");\n} "},"variableMap":{"result":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"424d0b08-2371-11e5-a8d6-7f210f79d3e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:146","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"424d0b09-2371-11e5-a8d6-dd37869354f0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"variableMap":{"currentNode":"newNode","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1296","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"424d321a-2371-11e5-a8d6-5deb6b351bd8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"last","parent":"last","h":"last","predecessor":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:109","type":"CtIfImpl","sourcecode":"if ((java.util.Map.Entry<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"status":0},{"failures":[],"tindex":"424d321b-2371-11e5-a8d6-1f4080d0d4cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:123","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , 0)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:95","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int)"},"status":-2},{"failures":[],"tindex":"424d321c-2371-11e5-a8d6-af0d94b74f44","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:1088","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.(nextIndex()) - 1"},"status":-2},{"failures":[77,78,79,80,81],"tindex":"424d321d-2371-11e5-a8d6-0547fb08845f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:143","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:119","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[0,82,1,2,4,5,6,7,8,9,10,11,13,16,17,18,19,20,21,22,23,24],"tindex":"424d592e-2371-11e5-a8d6-692d789e5e8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:366","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"size":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:441","type":"CtOperatorAssignmentImpl","sourcecode":"int += E == null ? 0 : E.hashCode()"},"status":-1},{"failures":[],"tindex":"424d592f-2371-11e5-a8d6-57c4443f2eb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"readable","changed":"readable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:739","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[83],"tindex":"424d5930-2371-11e5-a8d6-a3df004a90d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"offsetLength","index":"offsetInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:854","type":"CtIfImpl","sourcecode":"if (int > org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(lengthInBits(K))) {\n    throw new java.lang.IllegalArgumentException(((((int + \" + \") + int) + \" > \") + org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(lengthInBits(K))));\n} "},"status":-1},{"failures":[],"tindex":"424d5931-2371-11e5-a8d6-89d9f927c86a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:747","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<K>.remove()"},"status":-2},{"failures":[],"tindex":"424d5932-2371-11e5-a8d6-11eb5f6125d9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:975","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\" = \")"},"variableMap":{"out":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) != (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n    ((java.lang.ref.Reference<?>)(java.lang.Object)).clear();\n} "},"status":-2},{"failures":[],"tindex":"424d5933-2371-11e5-a8d6-8d7bc8233a75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:242","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"variableMap":{"this":"set","collectionRetainAll":"setRetainAll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:257","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":"424d5934-2371-11e5-a8d6-e92b0b09d8d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:250","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:147","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<E>.remove()"},"status":-2},{"failures":[],"tindex":"424d8045-2371-11e5-a8d6-4d2a6ef9cdcb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"variableMap":{"this":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"status":-2},{"failures":[],"tindex":"424d8046-2371-11e5-a8d6-8d13c05587ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:362","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = this.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:303","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]"},"status":-2},{"failures":[],"tindex":"424d8047-2371-11e5-a8d6-5524bc76112b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:180","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-2},{"failures":[84,85,86],"tindex":"424d8048-2371-11e5-a8d6-11c81fe6bd08","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:651","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:261","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"424d8049-2371-11e5-a8d6-e3663cab3928","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:133","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)"},"status":-2},{"failures":[87,88,89],"tindex":"424d804a-2371-11e5-a8d6-13c16f1e11bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:186","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FunctorUtils.<I,O>copy(org.apache.commons.collections4.Transformer<? super I, ? extends O>[])"},"variableMap":{"iTransformers":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:172","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<I, O>[])(org.apache.commons.collections4.Transformer<? super I, ? extends O>[].clone()))"},"status":-1},{"failures":[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,83,121,122,123,124,125,126,127,128,129,130,131,132],"tindex":"424da75b-2371-11e5-a8d6-e7646e9a6526","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:214","type":"CtLocalVariableImpl","sourcecode":"final int int = (int + int) - int"},"variableMap":{"offset":"beginIndex1","delta":"beginIndex1","k":"beginIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:79","type":"CtLocalVariableImpl","sourcecode":"final int int = int + int"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}