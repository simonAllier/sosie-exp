{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":211,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":64,"com.google.gson.functional.StringTest.testStringValueDeserialization":456,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":235,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":424,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":519,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":397,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":289,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":617,"com.google.gson.MixedStreamTest.testWriteLenient":360,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":567,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":598,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":193,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":204,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":84,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":94,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":597,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":429,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":255,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":266,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":241,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":404,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":466,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":579,"com.google.gson.functional.ObjectTest.testSingletonLists":325,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":189,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":267,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":65,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":392,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":373,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":499,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":9,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":478,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":526,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":606,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":4,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":431,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":371,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":451,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":464,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":280,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":258,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":425,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":546,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":349,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":386,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":55,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":545,"com.google.gson.functional.EnumTest.testEnumCaseMapping":254,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":6,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":63,"com.google.gson.functional.JsonTreeTest.testToJsonTree":271,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":385,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":263,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":527,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":117,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":83,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":172,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":368,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":589,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":393,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":517,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":296,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":91,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":305,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":462,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":604,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":39,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":347,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":398,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":334,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":53,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":129,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":609,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":346,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":239,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":203,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":505,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":157,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":437,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":436,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":525,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":31,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":369,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":25,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":441,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":510,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":316,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":340,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":188,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":412,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":422,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":541,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":568,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":105,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":516,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":150,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":493,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":233,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":32,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":574,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":423,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":312,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":339,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":119,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":355,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":601,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":17,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":293,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":548,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":562,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":110,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":77,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":556,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":494,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":379,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":551,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":192,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":449,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":183,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":553,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":128,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":584,"com.google.gson.functional.CollectionTest.testSetDeserialization":476,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":242,"com.google.gson.functional.EnumTest.testEnumSet":248,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":330,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":564,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":415,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":78,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":137,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":217,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":513,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":335,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":76,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":348,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":426,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":555,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":432,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":12,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":50,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":35,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":395,"com.google.gson.functional.MapTest.testHashMapDeserialization":535,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":472,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":522,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":120,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":529,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":99,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":209,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":148,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":383,"com.google.gson.functional.MapTest.testSortedMap":547,"com.google.gson.functional.MapTest.testMapSerialization":222,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":212,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":420,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":447,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":591,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":134,"com.google.gson.functional.MapTest.testSerializeMaps":216,"com.google.gson.functional.MapTest.testComplexKeysSerialization":231,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":563,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":550,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":323,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":307,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":559,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":303,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":484,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":10,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":558,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":261,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":290,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":611,"com.google.gson.functional.MapTest.testStringKeyDeserialization":549,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":593,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":139,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":43,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":234,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":401,"com.google.gson.functional.PrettyPrintingTest.testMap":259,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":284,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":396,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":87,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":169,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":213,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":381,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":3,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":370,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":594,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":69,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":457,"com.google.gson.functional.CollectionTest.testQueueSerialization":88,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":180,"com.google.gson.functional.MapTest.testMapSerializationEmpty":232,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":626,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":416,"com.google.gson.functional.MapTest.testMapOfMapSerialization":221,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":23,"com.google.gson.JavaSerializationTest.testMapIsSerializable":375,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":518,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":474,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":28,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":247,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":145,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities":1,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":66,"com.google.gson.functional.FieldNamingTest.testIdentity":135,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":495,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":122,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":612,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":206,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":270,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":292,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":324,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":387,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":350,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":67,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":126,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":26,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":502,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":524,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":345,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":514,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":181,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":202,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":246,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":533,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":42,"com.google.gson.functional.MapTest.testMapSubclassSerialization":215,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":163,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":469,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":565,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":58,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":286,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":357,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":410,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":445,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":508,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":569,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":380,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":75,"com.google.gson.functional.EnumTest.testEnumSubclass":251,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":29,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":5,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":605,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":13,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":125,"com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType":618,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":428,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":138,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":481,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":388,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":160,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":413,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":503,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":108,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":344,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":588,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":417,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":603,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":24,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":577,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":197,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":596,"com.google.gson.MixedStreamTest.testWriteNulls":358,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":534,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":318,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":572,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":314,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":306,"com.google.gson.CommentsTest.testParseComments":377,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":465,"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":625,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":142,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":326,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":581,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":275,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":427,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":592,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":446,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":68,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":224,"com.google.gson.MixedStreamTest.testReadInvalidState":620,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":238,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":82,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":41,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":199,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":48,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":623,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":16,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":595,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":272,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":20,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":245,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":36,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":186,"com.google.gson.functional.MapTest.testMapDeserialization":540,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":587,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":182,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":264,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":214,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":578,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":115,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":218,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":298,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":295,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":485,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":269,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":557,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":507,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":333,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":341,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":101,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":287,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":109,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":173,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":467,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":106,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":159,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":223,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":260,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":353,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":201,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":384,"com.google.gson.functional.PrimitiveTest.testShortSerialization":40,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":498,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":300,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":430,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities":0,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":57,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":411,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":33,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":175,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":394,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":131,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":250,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":86,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":162,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":537,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":407,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":44,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":98,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":570,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":523,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":583,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":622,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":47,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":440,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":365,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":291,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":342,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":487,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":496,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":59,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":165,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":363,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":434,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":488,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":140,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":414,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":615,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":600,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":253,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":102,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":278,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":92,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":511,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":282,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":497,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":294,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":187,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":299,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":400,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":149,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":177,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":301,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":521,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":113,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":470,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":389,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":435,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":27,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":45,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":256,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":249,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":297,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":532,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":448,"com.google.gson.functional.MapTest.testGeneralMapField":228,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":599,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":311,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":443,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":127,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":283,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":320,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":194,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":226,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":15,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":156,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":166,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":34,"com.google.gson.MixedStreamTest.testReadMixedStreamed":621,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":21,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":512,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":542,"com.google.gson.internal.bind.JsonElementReaderTest.testBooleans":624,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":95,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":351,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":501,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":561,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":418,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":56,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":374,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":554,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":185,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":543,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":279,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":536,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":46,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":143,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":237,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":61,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":408,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":184,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":573,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":123,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":473,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":504,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":582,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":147,"com.google.gson.functional.ObjectTest.testNestedDeserialization":616,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":281,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":338,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":530,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":107,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":54,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":442,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":274,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":458,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":544,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":575,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":74,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":38,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":480,"com.google.gson.JavaSerializationTest.testListIsSerializable":376,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":208,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":571,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":97,"com.google.gson.functional.ObjectTest.testNullSerialization":331,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":104,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":566,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":538,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":14,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":227,"com.google.gson.functional.MapTest.testInterfaceTypeMap":225,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":590,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":285,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":112,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":390,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":161,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":252,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":288,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":483,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":167,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":52,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":402,"com.google.gson.MixedStreamTest.testWriteClosed":362,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":90,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":531,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":327,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":486,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":528,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":79,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":111,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":277,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":273,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":343,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":200,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":116,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":328,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":89,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":453,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":421,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":62,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":482,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":93,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":190,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":490,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":243,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":444,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":19,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":268,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":509,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":308,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":309,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":276,"com.google.gson.functional.CollectionTest.testQueueDeserialization":479,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":22,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":419,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":461,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":210,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":198,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":454,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":219,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":610,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":179,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":158,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":614,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":85,"com.google.gson.functional.MapTest.testRawMapSerialization":230,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":356,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":477,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":520,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":366,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":100,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":336,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":450,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":302,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":352,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":8,"com.google.gson.functional.PrimitiveTest.testByteSerialization":37,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":313,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":354,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":152,"com.google.gson.ObjectTypeAdapterTest.testSerialize":372,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":154,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromRawTypes":378,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":399,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":205,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":319,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":132,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":80,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":459,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":619,"com.google.gson.functional.MapTest.testMapWithQuotes":220,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":170,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":405,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":460,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":136,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":500,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":146,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":130,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":438,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":168,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":240,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":580,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":72,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":613,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":265,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":30,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":176,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":322,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":602,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":195,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":171,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":60,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":178,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":207,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":433,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":11,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":475,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":586,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":73,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":196,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":310,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":103,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":124,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":455,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":164,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":382,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":391,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":468,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":144,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":364,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":607,"com.google.gson.functional.ObjectTest.testNestedSerialization":337,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":257,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":18,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":155,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":463,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":236,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":229,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":49,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":121,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":2,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":361,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":332,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":489,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":439,"com.google.gson.JsonPrimitiveTest.testBoolean":627,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":114,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":560,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":515,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":7,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":403,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":506,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":608,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":452,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":367,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":70,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":317,"com.google.gson.functional.CollectionTest.testSetSerialization":96,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":492,"com.google.gson.functional.StringTest.testStringValueSerialization":71,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":141,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":262,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":151,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":244,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":471,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":576,"com.google.gson.MixedStreamTest.testWriteInvalidState":359,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":585,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":329,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":406,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":321,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":409,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":118,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":174,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":133,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":304,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":491,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":51,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":81,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":191,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":153,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":539,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":315,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":552},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:537","type":"CtFieldReadImpl","sourcecode":"lenient"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362],"tindex":"5b0bdcaa-3f31-11e6-be8f-fbbffbccf205","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":true,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:242","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:430","type":"CtFieldReadImpl","sourcecode":"serializeNulls"},"failures":[363,11,73,107,108,109,113,114,117,126,152,204,205,206,207,208,209,211,213,216,219,229,235,268,269,270,271,276,277,280,294,295,297,298,299,300,301,302,303,317,329,352,353,354,356,357,358,359,360,361,362],"tindex":"5b0d8a5b-3f31-11e6-be8f-adeb2ea9fadb","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":true,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:277","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:126","type":"CtBinaryOperatorImpl","sourcecode":"nearest != null"},"failures":[],"tindex":"5b0d8a5c-3f31-11e6-be8f-355a1cefd5ea","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:140","type":"CtReturnImpl","sourcecode":"return nearest"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:103","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[6,7,9,12,18,21,33,41,44,46,48,49,59,60,61,62,68,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,128,129,130,131,132,133,134,135,136,137,138,140,141,142,147,148,149,150,151,154,155,156,157,158,159,160,364,161,365,366,367,368,369,370,371,162,163,164,171,180,185,192,194,195,200,204,205,207,208,209,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,280,286,289,290,292,293,294,295,297,298,299,301,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,332,335,336,337,339,340,341,342,343,344,345,348,372,373,352,355,356,357,360,361],"tindex":"5b0db16d-3f31-11e6-be8f-93ade070f2f4","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":true,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:79","type":"CtReturnImpl","sourcecode":"return type"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:360","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"5b0db16e-3f31-11e6-be8f-a7ebd20cf113","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:363","type":"CtReturnImpl","sourcecode":"return candidate"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:305","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b0db16f-3f31-11e6-be8f-2d3a6002d7b2","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:308","type":"CtReturnImpl","sourcecode":"return node"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:98","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.ParameterizedType"},"failures":[2,374,375,376,377,3,4,5,6,7,378,379,8,380,9,381,382,383,12,384,385,386,13,387,14,388,389,390,391,392,15,393,394,16,395,396,397,398,399,400,401,17,18,402,403,404,405,406,19,407,20,21,408,409,22,410,411,23,412,24,25,413,414,26,27,415,416,417,28,418,419,420,421,422,423,424,425,29,426,30,427,31,32,428,429,33,430,431,34,432,35,433,434,435,36,37,38,39,40,41,42,436,437,438,43,439,44,440,441,442,45,46,443,47,444,445,446,447,48,448,49,449,450,50,51,52,53,54,55,56,57,58,59,451,452,60,61,453,454,62,455,456,63,64,65,66,67,457,458,68,459,69,460,461,462,70,463,464,71,72,465,73,74,75,76,77,78,466,79,80,81,467,82,468,469,83,84,85,86,87,470,471,472,88,89,90,91,92,473,474,93,475,476,94,95,477,96,97,478,479,99,100,101,480,102,103,104,481,482,105,483,106,484,485,107,108,109,110,111,112,113,114,486,487,115,116,117,118,119,120,121,488,489,122,123,490,124,491,125,126,127,492,128,129,130,131,132,133,134,135,136,493,137,494,495,496,138,139,140,497,141,142,143,498,144,499,145,146,147,148,500,501,149,150,151,154,155,156,157,158,159,502,503,160,162,163,164,504,165,166,167,505,506,507,168,508,169,170,509,171,510,172,173,511,512,174,513,175,514,176,177,178,179,180,515,181,516,182,183,517,184,518,185,186,187,188,519,189,520,521,190,522,191,192,523,193,194,524,195,196,197,198,199,200,525,526,201,202,527,203,528,204,205,206,207,208,209,210,211,212,529,530,213,531,532,533,534,535,536,215,216,537,538,217,539,218,540,219,541,542,543,544,220,221,222,545,546,223,224,547,225,226,227,228,229,230,548,231,232,549,233,550,551,234,235,236,237,238,239,240,241,242,243,244,245,246,247,552,553,554,555,556,248,249,250,251,557,558,252,559,253,254,255,256,257,258,259,260,261,262,263,264,265,266,560,561,267,562,268,269,270,271,272,273,274,275,276,277,563,564,278,565,566,279,280,281,282,283,284,285,286,287,288,567,568,569,570,571,572,573,574,289,575,290,576,291,577,292,293,294,578,579,295,580,296,297,298,581,299,300,301,302,582,303,583,304,305,306,307,584,308,309,310,585,311,312,313,314,315,586,587,316,317,318,588,589,590,319,591,320,592,321,593,322,594,323,595,324,325,596,597,326,598,599,327,600,601,328,602,603,330,604,332,605,333,606,334,335,607,336,337,338,608,339,609,610,611,340,612,341,342,613,343,614,615,616,617,344,345,618,619,348,349,350,351,352,353,354,355,356,620,357,359,360,361,362,621,622],"tindex":"5b0ec1e0-3f31-11e6-be8f-438d5466507d","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":true,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:120","type":"CtReturnImpl","sourcecode":"return ((java.lang.Class<?>)(type))"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:80","type":"CtBinaryOperatorImpl","sourcecode":"defaultConstructor != null"},"failures":[],"tindex":"5b0ee8f1-3f31-11e6-be8f-c77fce338834","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.ConstructorConstructor:81","type":"CtReturnImpl","sourcecode":"return defaultConstructor"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:305","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b0ee8f2-3f31-11e6-be8f-cfbe27319371","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:540","type":"CtReturnImpl","sourcecode":"return node"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:305","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b0ee8f3-3f31-11e6-be8f-3f2b22ddf318","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:308","type":"CtReturnImpl","sourcecode":"return node"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:336","type":"CtBinaryOperatorImpl","sourcecode":"cached != null"},"failures":[3,4,5,6,7,379,8,9,383,14,392,393,16,17,18,20,21,409,22,23,25,28,30,31,32,33,435,38,41,42,43,439,44,45,46,48,49,50,51,52,53,54,55,56,57,59,451,452,61,62,64,66,68,459,72,74,75,76,78,79,80,81,469,84,85,86,87,89,90,92,93,475,94,96,100,483,106,107,108,109,110,112,113,114,487,115,116,117,121,488,122,490,491,126,130,131,132,133,134,135,139,140,146,148,501,149,150,151,154,155,156,157,158,159,502,503,160,162,163,164,170,171,172,512,175,186,188,190,522,192,194,196,198,527,204,208,211,534,536,215,216,218,219,541,543,221,545,546,225,227,228,231,549,233,235,236,237,238,239,240,241,242,243,244,245,246,247,553,554,555,250,251,252,559,253,254,258,259,260,261,262,263,264,265,269,272,274,275,276,277,566,279,280,281,282,283,285,287,567,572,573,292,294,579,297,298,303,304,305,306,307,308,310,315,587,316,318,320,323,325,597,326,328,332,335,336,337,609,340,613,616,348,349,350,351,623,372,352,353,355,356,357,621,622],"tindex":"5b0f1004-3f31-11e6-be8f-d3153d5bf329","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":true,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.Gson:337","type":"CtReturnImpl","sourcecode":"return ((com.google.gson.TypeAdapter<T>)(cached))"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:174","type":"CtBinaryOperatorImpl","sourcecode":"nearest == null"},"failures":[],"tindex":"5b0f1005-3f31-11e6-be8f-55d19fa78195","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:153","type":"CtReturnImpl","sourcecode":"return nearest"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"5b0f3716-3f31-11e6-be8f-8b9404e2a996","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.FieldNamingPolicy:159","type":"CtReturnImpl","sourcecode":"return name"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:336","type":"CtBinaryOperatorImpl","sourcecode":"cached != null"},"failures":[],"tindex":"5b0f3717-3f31-11e6-be8f-393c63408f5b","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:337","type":"CtReturnImpl","sourcecode":"return ((com.google.gson.TypeAdapter<T>)(cached))"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:305","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b0f3718-3f31-11e6-be8f-d9a4111e7f3b","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:553","type":"CtReturnImpl","sourcecode":"return node"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[624,9,170,269,625,626,347,355,627],"tindex":"5b0f3719-3f31-11e6-be8f-edf0e9a0d34a","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":true,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.JsonPrimitive:122","type":"CtReturnImpl","sourcecode":"return ((java.lang.Boolean)(java.lang.Object))"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:325","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.TypeVariable"},"failures":[74,76,79,80,85,87,89,90,92,93,94,96,136,142,151,155,175,180,194,216,220,221,224,230,237,238,239,240,241,242,556,248,249,250,251,253,259,264,318,372,373,354],"tindex":"5b0f371a-3f31-11e6-be8f-e34b16f49acd","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":true,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:329","type":"CtReturnImpl","sourcecode":"return toResolve"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"5b0f5e2b-3f31-11e6-be8f-bb76b1c44b59","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.FieldNamingPolicy:159","type":"CtReturnImpl","sourcecode":"return name"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:430","type":"CtFieldReadImpl","sourcecode":"serializeNulls"},"failures":[363,11,73,107,108,109,113,114,117,126,152,204,205,206,207,208,209,211,213,216,219,229,235,268,269,270,271,276,277,280,294,295,297,298,299,300,301,302,303,317,329,352,353,354,356,357,358,359,360,361,362],"tindex":"5b0f5e2c-3f31-11e6-be8f-931337fdb0a0","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":true,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:277","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:438","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"5b0f5e2d-3f31-11e6-be8f-49266f6a56a7","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:363","type":"CtReturnImpl","sourcecode":"return candidate"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:360","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"5b0f5e2e-3f31-11e6-be8f-fb33f6c36518","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:439","type":"CtReturnImpl","sourcecode":"return candidate"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:80","type":"CtBinaryOperatorImpl","sourcecode":"defaultConstructor != null"},"failures":[380,9,12,434,447,48,448,49,59,451,452,60,61,453,454,62,72,465,74,75,76,77,78,466,79,80,81,467,469,84,85,86,472,90,92,93,94,95,96,105,483,106,107,108,109,110,112,113,114,487,115,116,117,121,488,122,123,124,491,125,127,492,128,129,130,131,132,133,134,135,136,496,140,141,142,148,501,149,150,151,154,155,157,158,159,502,503,160,162,163,164,511,175,180,520,522,192,194,195,208,209,211,212,530,213,531,532,535,215,216,219,541,220,221,224,225,227,228,230,235,237,243,244,245,246,247,249,252,559,253,259,260,261,265,560,561,267,562,268,270,271,280,282,283,285,287,288,567,568,569,570,571,575,291,293,294,578,579,297,298,581,299,301,303,583,305,306,307,584,308,318,320,592,321,324,325,596,597,326,598,599,327,600,601,328,604,332,605,606,335,607,336,337,338,608,339,609,610,611,340,612,613,343,614,615,616,344,345,348,373,354,355,356,357,359,362,621,622],"tindex":"5b0f853f-3f31-11e6-be8f-d5a472690e2d","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":true,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.ConstructorConstructor:81","type":"CtReturnImpl","sourcecode":"return defaultConstructor"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:305","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b0f8540-3f31-11e6-be8f-a74e17768b74","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:540","type":"CtReturnImpl","sourcecode":"return node"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:602","type":"CtUnaryOperatorImpl","sourcecode":"!(lenient)"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362],"tindex":"5b0fac51-3f31-11e6-be8f-e5f5c2bc077c","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":true,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:242","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:297","type":"CtBinaryOperatorImpl","sourcecode":"(value) instanceof java.lang.Number"},"failures":[624,9,170,269,625,626,347,355,627],"tindex":"5b0fac52-3f31-11e6-be8f-d50da0bc9db4","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":true,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.JsonPrimitive:122","type":"CtReturnImpl","sourcecode":"return ((java.lang.Boolean)(java.lang.Object))"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:602","type":"CtUnaryOperatorImpl","sourcecode":"!(lenient)"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362],"tindex":"5b0fd363-3f31-11e6-be8f-c7c841fb9cfb","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":true,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:242","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:360","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[48,49,50,52,53,55,130,201,209,211,212,530,531,236,237,283,285,348],"tindex":"5b0ffa74-3f31-11e6-be8f-db90c4ad5e7d","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":true,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.Gson:439","type":"CtReturnImpl","sourcecode":"return candidate"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:336","type":"CtBinaryOperatorImpl","sourcecode":"cached != null"},"failures":[],"tindex":"5b0ffa75-3f31-11e6-be8f-4116e1837152","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:337","type":"CtReturnImpl","sourcecode":"return ((com.google.gson.TypeAdapter<T>)(cached))"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:537","type":"CtFieldReadImpl","sourcecode":"lenient"},"failures":[],"tindex":"5b0ffa76-3f31-11e6-be8f-b1fef6984e3d","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:333","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:602","type":"CtUnaryOperatorImpl","sourcecode":"!(lenient)"},"failures":[],"tindex":"5b0ffa77-3f31-11e6-be8f-b73e9d3cb681","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:333","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:305","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b0ffa78-3f31-11e6-be8f-6fb079bb5fde","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:540","type":"CtReturnImpl","sourcecode":"return node"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:278","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b0ffa79-3f31-11e6-be8f-153734bccb90","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:509","type":"CtReturnImpl","sourcecode":"return node"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:103","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"5b10218a-3f31-11e6-be8f-ab0b3cbac831","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:79","type":"CtReturnImpl","sourcecode":"return type"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:350","type":"CtBinaryOperatorImpl","sourcecode":"ongoingCall != null"},"failures":[],"tindex":"5b10218b-3f31-11e6-be8f-63ec1f26a3ce","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:351","type":"CtReturnImpl","sourcecode":"return ongoingCall"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:360","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"5b10218c-3f31-11e6-be8f-f593b5393a64","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.Gson:439","type":"CtReturnImpl","sourcecode":"return candidate"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:80","type":"CtBinaryOperatorImpl","sourcecode":"defaultConstructor != null"},"failures":[],"tindex":"5b10218d-3f31-11e6-be8f-c9b1bff63b1a","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.ConstructorConstructor:81","type":"CtReturnImpl","sourcecode":"return defaultConstructor"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:438","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"5b10218e-3f31-11e6-be8f-83f162ba67ed","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:363","type":"CtReturnImpl","sourcecode":"return candidate"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:305","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b10218f-3f31-11e6-be8f-1b47d696bbe7","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:540","type":"CtReturnImpl","sourcecode":"return node"},"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1118","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\n'"},"failures":[],"tindex":"5b102190-3f31-11e6-be8f-dda2f208109e","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1410","type":"CtReturnImpl","sourcecode":"return c"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:336","type":"CtBinaryOperatorImpl","sourcecode":"cached != null"},"failures":[],"tindex":"5b1048a1-3f31-11e6-be8f-cd836a81beb4","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:337","type":"CtReturnImpl","sourcecode":"return ((com.google.gson.TypeAdapter<T>)(cached))"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:370","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"5b1048a2-3f31-11e6-be8f-25bea9f4a6c8","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:389","type":"CtReturnImpl","sourcecode":"return toResolve"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"5b1048a3-3f31-11e6-be8f-c5b4951275e3","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.JsonPrimitive:181","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.lang.Object))"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1422","type":"CtUnaryOperatorImpl","sourcecode":"!(lenient)"},"failures":[],"tindex":"5b1048a4-3f31-11e6-be8f-b3ea9ad007ed","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:242","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:313","type":"CtBinaryOperatorImpl","sourcecode":"(value) == null"},"failures":[],"tindex":"5b1048a5-3f31-11e6-be8f-fb5ae400b74b","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.JsonPrimitive:181","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.lang.Object))"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:278","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b1048a6-3f31-11e6-be8f-2df93e4c6a04","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:522","type":"CtReturnImpl","sourcecode":"return node"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:278","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b106fb7-3f31-11e6-be8f-bd32f2af648e","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:281","type":"CtReturnImpl","sourcecode":"return node"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:278","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b106fb8-3f31-11e6-be8f-65cc75804f22","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:509","type":"CtReturnImpl","sourcecode":"return node"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:122","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"5b106fb9-3f31-11e6-be8f-7bd07f5e3982","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:113","type":"CtReturnImpl","sourcecode":"return type"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:278","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b106fba-3f31-11e6-be8f-5172cae832aa","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:281","type":"CtReturnImpl","sourcecode":"return node"},"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:86","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"5b106fbb-3f31-11e6-be8f-a9a7d3750e0c","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.JsonParser:63","type":"CtReturnImpl","sourcecode":"return element"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:438","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"5b106fbc-3f31-11e6-be8f-937d2b559888","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.Gson:363","type":"CtReturnImpl","sourcecode":"return candidate"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:80","type":"CtBinaryOperatorImpl","sourcecode":"defaultConstructor != null"},"failures":[],"tindex":"5b106fbd-3f31-11e6-be8f-addb321b0eed","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.ConstructorConstructor:81","type":"CtReturnImpl","sourcecode":"return defaultConstructor"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:305","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b1096ce-3f31-11e6-be8f-e7c3f3fe265c","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:540","type":"CtReturnImpl","sourcecode":"return node"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"5b1096cf-3f31-11e6-be8f-71d643d8a90f","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LazilyParsedNumber:67","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:85","type":"CtBinaryOperatorImpl","sourcecode":"defaultImplementation != null"},"failures":[],"tindex":"5b1096d0-3f31-11e6-be8f-cf1b63caca7c","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.ConstructorConstructor:86","type":"CtReturnImpl","sourcecode":"return defaultImplementation"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:350","type":"CtBinaryOperatorImpl","sourcecode":"ongoingCall != null"},"failures":[],"tindex":"5b1096d1-3f31-11e6-be8f-71bcdf5cf660","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:351","type":"CtReturnImpl","sourcecode":"return ongoingCall"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:438","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"5b1096d2-3f31-11e6-be8f-93c57fb09867","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:363","type":"CtReturnImpl","sourcecode":"return candidate"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1422","type":"CtUnaryOperatorImpl","sourcecode":"!(lenient)"},"failures":[],"tindex":"5b1096d3-3f31-11e6-be8f-3d501aff6d5d","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:333","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:278","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b1096d4-3f31-11e6-be8f-c14303ea0554","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:281","type":"CtReturnImpl","sourcecode":"return node"},"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1022","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\n'"},"failures":[],"tindex":"5b10bde5-3f31-11e6-be8f-73add85db11c","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1410","type":"CtReturnImpl","sourcecode":"return c"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:360","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"5b10bde6-3f31-11e6-be8f-05279c5658d7","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:363","type":"CtReturnImpl","sourcecode":"return candidate"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:305","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b10bde7-3f31-11e6-be8f-89bf10ec16f3","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:540","type":"CtReturnImpl","sourcecode":"return node"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1422","type":"CtUnaryOperatorImpl","sourcecode":"!(lenient)"},"failures":[],"tindex":"5b10bde8-3f31-11e6-be8f-513c8c354792","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:333","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:278","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b10bde9-3f31-11e6-be8f-ddb64bcf0013","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:281","type":"CtReturnImpl","sourcecode":"return node"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtInvocationImpl","sourcecode":"toResolve.isInterface()"},"failures":[],"tindex":"5b10bdea-3f31-11e6-be8f-2f2974d85bf7","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:257","type":"CtReturnImpl","sourcecode":"return toResolve"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:430","type":"CtFieldReadImpl","sourcecode":"serializeNulls"},"failures":[],"tindex":"5b10e4fb-3f31-11e6-be8f-8f4416599b48","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:277","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtInvocationImpl","sourcecode":"toResolve.isInterface()"},"failures":[],"tindex":"5b10e4fc-3f31-11e6-be8f-f9ea09ec800b","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:257","type":"CtReturnImpl","sourcecode":"return toResolve"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:131","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.Class<?>"},"failures":[],"tindex":"5b10e4fd-3f31-11e6-be8f-eb37a03f1ccf","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:113","type":"CtReturnImpl","sourcecode":"return type"},"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:86","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"5b10e4fe-3f31-11e6-be8f-8f81a39d8657","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.JsonParser:63","type":"CtReturnImpl","sourcecode":"return element"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:360","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"5b10e4ff-3f31-11e6-be8f-e987abb31ff5","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:439","type":"CtReturnImpl","sourcecode":"return candidate"},"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:85","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"5b10e500-3f31-11e6-be8f-15ddf8898ad7","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:80","type":"CtReturnImpl","sourcecode":"return array"},"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:85","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"5b110c11-3f31-11e6-be8f-0187ed5e02c5","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:80","type":"CtReturnImpl","sourcecode":"return array"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"5b110c12-3f31-11e6-be8f-95bd47138be3","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.FieldNamingPolicy:159","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:132","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"5b110c13-3f31-11e6-be8f-9bde1f940298","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:79","type":"CtReturnImpl","sourcecode":"return type"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:336","type":"CtBinaryOperatorImpl","sourcecode":"cached != null"},"failures":[],"tindex":"5b110c14-3f31-11e6-be8f-f137f4117d9b","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:337","type":"CtReturnImpl","sourcecode":"return ((com.google.gson.TypeAdapter<T>)(cached))"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtInvocationImpl","sourcecode":"toResolve.isInterface()"},"failures":[],"tindex":"5b110c15-3f31-11e6-be8f-1fca93486bad","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:257","type":"CtReturnImpl","sourcecode":"return toResolve"},"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1118","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\n'"},"failures":[],"tindex":"5b113326-3f31-11e6-be8f-59f73fba79cf","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1410","type":"CtReturnImpl","sourcecode":"return c"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:126","type":"CtBinaryOperatorImpl","sourcecode":"nearest != null"},"failures":[],"tindex":"5b113327-3f31-11e6-be8f-515bcbd42ba5","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:140","type":"CtReturnImpl","sourcecode":"return nearest"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:289","type":"CtBinaryOperatorImpl","sourcecode":"(value) == null"},"failures":[],"tindex":"5b113328-3f31-11e6-be8f-5f2dbc154d61","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.JsonPrimitive:181","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.lang.Object))"},"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1113","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\\\'"},"failures":[],"tindex":"5b113329-3f31-11e6-be8f-e3412ff829c4","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1410","type":"CtReturnImpl","sourcecode":"return c"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:336","type":"CtBinaryOperatorImpl","sourcecode":"cached != null"},"failures":[],"tindex":"5b11332a-3f31-11e6-be8f-df11a0d34731","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.Gson:337","type":"CtReturnImpl","sourcecode":"return ((com.google.gson.TypeAdapter<T>)(cached))"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:174","type":"CtBinaryOperatorImpl","sourcecode":"nearest == null"},"failures":[],"tindex":"5b11332b-3f31-11e6-be8f-b9da7c51b9f6","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:153","type":"CtReturnImpl","sourcecode":"return nearest"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"5b11332c-3f31-11e6-be8f-05e88893a541","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LazilyParsedNumber:67","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:139","type":"CtBinaryOperatorImpl","sourcecode":"nearest != null"},"failures":[],"tindex":"5b115a3d-3f31-11e6-be8f-7398ae95fb87","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:153","type":"CtReturnImpl","sourcecode":"return nearest"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:136","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"5b115a3e-3f31-11e6-be8f-d3e4d8b988d4","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:101","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Type"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:174","type":"CtBinaryOperatorImpl","sourcecode":"nearest == null"},"failures":[],"tindex":"5b115a3f-3f31-11e6-be8f-fb1c6a7f2f47","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:153","type":"CtReturnImpl","sourcecode":"return nearest"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:80","type":"CtBinaryOperatorImpl","sourcecode":"defaultConstructor != null"},"failures":[],"tindex":"5b115a40-3f31-11e6-be8f-7f8b6f7f3122","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.ConstructorConstructor:81","type":"CtReturnImpl","sourcecode":"return defaultConstructor"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtInvocationImpl","sourcecode":"toResolve.isInterface()"},"failures":[],"tindex":"5b115a41-3f31-11e6-be8f-0f9800ba7fe0","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:257","type":"CtReturnImpl","sourcecode":"return toResolve"},"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:125","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"5b115a42-3f31-11e6-be8f-e7f21084aef8","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.JsonParser:63","type":"CtReturnImpl","sourcecode":"return element"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:336","type":"CtBinaryOperatorImpl","sourcecode":"cached != null"},"failures":[],"tindex":"5b115a43-3f31-11e6-be8f-0b9e8c4234d6","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:337","type":"CtReturnImpl","sourcecode":"return ((com.google.gson.TypeAdapter<T>)(cached))"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:360","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"5b118154-3f31-11e6-be8f-599887fac353","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:363","type":"CtReturnImpl","sourcecode":"return candidate"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtInvocationImpl","sourcecode":"toResolve.isInterface()"},"failures":[],"tindex":"5b118155-3f31-11e6-be8f-575db081c32c","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:257","type":"CtReturnImpl","sourcecode":"return toResolve"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:278","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"5b118156-3f31-11e6-be8f-ff8d22ebeaef","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:509","type":"CtReturnImpl","sourcecode":"return node"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:438","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"5b118157-3f31-11e6-be8f-a1a4a550ffb3","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:439","type":"CtReturnImpl","sourcecode":"return candidate"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:139","type":"CtBinaryOperatorImpl","sourcecode":"nearest != null"},"failures":[],"tindex":"5b118158-3f31-11e6-be8f-3fb20e2995cf","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:153","type":"CtReturnImpl","sourcecode":"return nearest"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:370","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"5b118159-3f31-11e6-be8f-07e961fbec5c","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:389","type":"CtReturnImpl","sourcecode":"return toResolve"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:350","type":"CtBinaryOperatorImpl","sourcecode":"ongoingCall != null"},"failures":[],"tindex":"5b11815a-3f31-11e6-be8f-d9a5d310f84a","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:351","type":"CtReturnImpl","sourcecode":"return ongoingCall"},"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:106","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"5b11a86b-3f31-11e6-be8f-ffd01105b079","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.JsonParser:63","type":"CtReturnImpl","sourcecode":"return element"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:438","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"5b11a86c-3f31-11e6-be8f-6b8e1d8de21d","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.Gson:363","type":"CtReturnImpl","sourcecode":"return candidate"},"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1015","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\\\'"},"failures":[],"tindex":"5b11a86d-3f31-11e6-be8f-2595c3124b8b","series":0,"name":"checkReturn","type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1369","type":"CtReturnImpl","sourcecode":"return c"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":100,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}