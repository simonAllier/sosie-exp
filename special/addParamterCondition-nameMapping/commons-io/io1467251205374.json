{"failureDictionary":{},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.EndianUtils:482","type":"CtBinaryOperatorImpl","sourcecode":"(-1) == value"},"failures":[],"tindex":"8070da35-3e64-11e6-9422-6b8b263a5ea6","method":{"position":"org.apache.commons.io.EndianUtils:65","type":"CtMethodImpl","sourcecode":"public static int swapInteger(int value) {\n    if ((-1) == value) {\n        {\n            if ((-1) == value) {\n                {\n                    return (((((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16)) + (((value >> 16) & 255) << 8)) + (((value >> 24) & 255) << 0);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:489","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"80712856-3e64-11e6-9422-0daeede982ce","method":{"position":"org.apache.commons.io.IOUtils:1184","type":"CtMethodImpl","sourcecode":"public static java.io.InputStream toInputStream(java.lang.CharSequence input, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        {\n            return org.apache.commons.io.IOUtils.toInputStream(input, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"80714f67-3e64-11e6-9422-f169f6fdf394","method":{"position":"org.apache.commons.io.IOUtils:776","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.io.InputStream input, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.output.StringBuilderWriter org.apache.commons.io.output.StringBuilderWriter = new org.apache.commons.io.output.StringBuilderWriter();\n            org.apache.commons.io.IOUtils.copy(input, sw, encoding);\n            return sw.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.ReaderInputStream:223","type":"CtBinaryOperatorImpl","sourcecode":"b == null"},"failures":[],"tindex":"80714f68-3e64-11e6-9422-15ca74c5e1a4","method":{"position":"org.apache.commons.io.output.NullOutputStream:44","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b, int off, int len) {\n    if (b == null) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"80714f69-3e64-11e6-9422-7f5fd698fb4a","method":{"position":"org.apache.commons.io.IOUtils:245","type":"CtMethodImpl","sourcecode":"public static void closeQuietly(java.io.InputStream input) {\n    if (null != input) {\n        {\n            if (null != input) {\n                {\n                    org.apache.commons.io.IOUtils.closeQuietly(((java.io.Closeable)(input)));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2928","type":"CtBinaryOperatorImpl","sourcecode":"(file.getParent()) == null"},"failures":[],"tindex":"80714f6a-3e64-11e6-9422-0b58b5cdab6d","method":{"position":"org.apache.commons.io.FileUtils:2230","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.util.Collection<?> lines, java.lang.String lineEnding) throws java.io.IOException {\n    if ((file.getParent()) == null) {\n        {\n            org.apache.commons.io.FileUtils.writeLines(file, null, lines, lineEnding, false);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2666","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"8071767b-3e64-11e6-9422-a96d658579f4","method":{"position":"org.apache.commons.io.FileUtils:1876","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.LineIterator lineIterator(java.io.File file) throws java.io.IOException {\n    if (!(file.exists())) {\n        {\n            return org.apache.commons.io.FileUtils.lineIterator(file, null);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1449","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"8071767c-3e64-11e6-9422-c7ecd3521021","method":{"position":"org.apache.commons.io.IOUtils:1411","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.CharSequence data, java.io.Writer output) throws java.io.IOException {\n    if (data != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (data != null) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (data != null) {\n                        org.apache.commons.io.IOUtils.write(data.toString(), output);\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:376","type":"CtInvocationImpl","sourcecode":"entry.isDirectory()"},"failures":[],"tindex":"8071767d-3e64-11e6-9422-d3be695f2621","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:374","type":"CtMethodImpl","sourcecode":"private void doCreate(org.apache.commons.io.monitor.FileEntry entry) {\n    if (entry.isDirectory()) {\n        {\n            for (org.apache.commons.io.monitor.FileAlterationListener org.apache.commons.io.monitor.FileAlterationListener : java.util.List<org.apache.commons.io.monitor.FileAlterationListener>) {\n                if (entry.isDirectory()) {\n                    listener.onDirectoryCreate(entry.getFile());\n                } else {\n                    listener.onFileCreate(entry.getFile());\n                }\n            }\n            org.apache.commons.io.monitor.FileEntry[] org.apache.commons.io.monitor.FileEntry[] = entry.getChildren();\n            for (org.apache.commons.io.monitor.FileEntry org.apache.commons.io.monitor.FileEntry : children) {\n                doCreate(aChildren);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.ThreadMonitor:69","type":"CtBinaryOperatorImpl","sourcecode":"timeout > 0"},"failures":[],"tindex":"8071767e-3e64-11e6-9422-4f736d965290","method":{"position":"org.apache.commons.io.FileSystemUtils:199","type":"CtMethodImpl","sourcecode":"public static long freeSpaceKb(java.lang.String path, long timeout) throws java.io.IOException {\n    if (timeout > 0) {\n        {\n            return org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.freeSpaceOS(path, org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int, true, timeout);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeout":"timeout"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.ReaderInputStream:223","type":"CtBinaryOperatorImpl","sourcecode":"b == null"},"failures":[],"tindex":"80719d8f-3e64-11e6-9422-b3ab0b8f1813","method":{"position":"org.apache.commons.io.output.ThresholdingOutputStream:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b, int off, int len) throws java.io.IOException {\n    if (b == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            checkThreshold(len);\n            getStream().write(b, off, len);\n            long += len;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2367","type":"CtInvocationImpl","sourcecode":"directory.exists()"},"failures":[],"tindex":"80719d90-3e64-11e6-9422-e57a382bd1fd","method":{"position":"org.apache.commons.io.FileUtils:1634","type":"CtMethodImpl","sourcecode":"public static void cleanDirectory(java.io.File directory) throws java.io.IOException {\n    if (directory == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (directory.exists()) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (!(directory.exists())) {\n                        java.lang.String java.lang.String = directory + \" does not exist\";\n                        throw new java.lang.IllegalArgumentException(message);\n                    } \n                    if (!(directory.isDirectory())) {\n                        java.lang.String java.lang.String = directory + \" is not a directory\";\n                        throw new java.lang.IllegalArgumentException(message);\n                    } \n                    java.io.File[] java.io.File[] = directory.listFiles();\n                    if (files == null) {\n                        throw new java.io.IOException((\"Failed to list contents of \" + directory));\n                    } \n                    java.io.IOException java.io.IOException = null;\n                    for (java.io.File java.io.File : files) {\n                        try {\n                            org.apache.commons.io.FileUtils.forceDelete(file);\n                        } catch (java.io.IOException ioe) {\n                            exception = ioe;\n                        }\n                    }\n                    if (null != exception) {\n                        throw exception;\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.DeferredFileOutputStream:119","type":"CtBinaryOperatorImpl","sourcecode":"prefix == null"},"failures":[],"tindex":"80719d91-3e64-11e6-9422-f3d01008cda1","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:306","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String prefix, org.apache.commons.io.IOCase caseSensitivity) {\n    if (prefix == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.PrefixFileFilter(prefix , caseSensitivity);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prefix":"prefix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1076","type":"CtInvocationImpl","sourcecode":"srcFile.isDirectory()"},"failures":[],"tindex":"80719d92-3e64-11e6-9422-6d950c706073","method":{"position":"org.apache.commons.io.FileUtils:1128","type":"CtMethodImpl","sourcecode":"private static void doCopyFile(java.io.File srcFile, java.io.File destFile, boolean preserveFileDate) throws java.io.IOException {\n    if (destFile.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((destFile.exists()) && (destFile.isDirectory())) {\n                throw new java.io.IOException(((\"Destination '\" + destFile) + \"' exists but is a directory\"));\n            } \n            java.io.FileInputStream java.io.FileInputStream = null;\n            java.io.FileOutputStream java.io.FileOutputStream = null;\n            java.nio.channels.FileChannel java.nio.channels.FileChannel = null;\n            java.nio.channels.FileChannel java.nio.channels.FileChannel = null;\n            try {\n                fis = new java.io.FileInputStream(srcFile);\n                fos = new java.io.FileOutputStream(destFile);\n                input = fis.getChannel();\n                output = fos.getChannel();\n                long long = input.size();\n                long long = 0;\n                long long = 0;\n                while (pos < size) {\n                    count = (size - pos) > (org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.long) ? org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.long : size - pos;\n                    pos += output.transferFrom(input, pos, count);\n                }\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(output);\n                org.apache.commons.io.IOUtils.closeQuietly(fos);\n                org.apache.commons.io.IOUtils.closeQuietly(input);\n                org.apache.commons.io.IOUtils.closeQuietly(fis);\n            }\n            if ((srcFile.length()) != (destFile.length())) {\n                throw new java.io.IOException(((((\"Failed to copy full contents from '\" + srcFile) + \"' to '\") + destFile) + \"'\"));\n            } \n            if (preserveFileDate) {\n                destFile.setLastModified(srcFile.lastModified());\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcFile":"destFile"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:295","type":"CtBinaryOperatorImpl","sourcecode":"(file.canRead()) == false"},"failures":[],"tindex":"8071c4a3-3e64-11e6-9422-7dd168ddd8a0","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:75","type":"CtMethodImpl","sourcecode":"public void onFileChange(final java.io.File file) {\n    if ((file.canRead()) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:223","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"8071c4a4-3e64-11e6-9422-c94baeaecea3","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:83","type":"CtMethodImpl","sourcecode":"public void onFileDelete(final java.io.File file) {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        {\n            if (file == null) {\n                {\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.RegexFileFilter:76","type":"CtBinaryOperatorImpl","sourcecode":"(caseSensitivity != null) && (!(caseSensitivity.isCaseSensitive()))"},"failures":[],"tindex":"8071c4a5-3e64-11e6-9422-b97484d956dd","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:354","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String name, org.apache.commons.io.IOCase caseSensitivity) {\n    if ((caseSensitivity != null) && (!(caseSensitivity.isCaseSensitive()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.NameFileFilter(name , caseSensitivity);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"caseSensitivity":"caseSensitivity"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2368","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"8071ebb6-3e64-11e6-9422-c5b437aa8b69","method":{"position":"org.apache.commons.io.DirectoryWalker:350","type":"CtMethodImpl","sourcecode":"private void walk(java.io.File directory, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (!(directory.isDirectory())) {\n        throw new java.io.IOException();\n    } else {\n        {\n            checkIfCancelled(directory, depth, results);\n            if (handleDirectory(directory, depth, results)) {\n                handleDirectoryStart(directory, depth, results);\n                int int = depth + 1;\n                if (((int) < 0) || (childDepth <= (int))) {\n                    checkIfCancelled(directory, depth, results);\n                    java.io.File[] java.io.File[] = (java.io.FileFilter) == null ? directory.listFiles() : directory.listFiles(java.io.FileFilter);\n                    childFiles = filterDirectoryContents(directory, depth, childFiles);\n                    if (childFiles == null) {\n                        handleRestricted(directory, childDepth, results);\n                    } else {\n                        for (java.io.File java.io.File : childFiles) {\n                            if (childFile.isDirectory()) {\n                                walk(childFile, childDepth, results);\n                            } else {\n                                checkIfCancelled(childFile, childDepth, results);\n                                handleFile(childFile, childDepth, results);\n                                checkIfCancelled(childFile, childDepth, results);\n                            }\n                        }\n                    }\n                } \n                handleDirectoryEnd(directory, depth, results);\n            } \n            checkIfCancelled(directory, depth, results);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:430","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"8071ebb7-3e64-11e6-9422-ddf281bb0e91","method":{"position":"org.apache.commons.io.FileUtils:2920","type":"CtMethodImpl","sourcecode":"public static boolean isSymlink(java.io.File file) throws java.io.IOException {\n    if (file.isDirectory()) {\n        {\n            if (file == null) {\n                throw new java.lang.NullPointerException(\"File must not be null\");\n            } \n            if (org.apache.commons.io.FilenameUtils.isSystemWindows()) {\n                return false;\n            } \n            java.io.File java.io.File = null;\n            if ((file.getParent()) == null) {\n                fileInCanonicalDir = file;\n            } else {\n                java.io.File java.io.File = file.getParentFile().getCanonicalFile();\n                fileInCanonicalDir = new java.io.File(canonicalDir , file.getName());\n            }\n            if (fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile())) {\n                return false;\n            } else {\n                return true;\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:161","type":"CtBinaryOperatorImpl","sourcecode":"magicNumber == null"},"failures":[],"tindex":"8071ebb8-3e64-11e6-9422-91226efe24e0","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:678","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String magicNumber, long offset) {\n    if (magicNumber == null) {\n        {\n            return new org.apache.commons.io.filefilter.MagicNumberFileFilter(magicNumber , offset);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"magicNumber":"magicNumber"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.AutoCloseInputStream:76","type":"CtBinaryOperatorImpl","sourcecode":"n == (-1)"},"failures":[],"tindex":"8071ebb9-3e64-11e6-9422-8796675c3b33","method":{"position":"org.apache.commons.io.input.ProxyInputStream:200","type":"CtMethodImpl","sourcecode":"protected void beforeRead(int n) throws java.io.IOException {\n    if (n == (-1)) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:141","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"807212ca-3e64-11e6-9422-4f7e022787a0","method":{"position":"org.apache.commons.io.output.ProxyWriter:154","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr, int st, int len) throws java.io.IOException {\n    if (st == 0) {\n        {\n            try {\n                beforeWrite(len);\n                java.io.Writer.write(chr, st, len);\n                afterWrite(len);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"st"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1711","type":"CtBinaryOperatorImpl","sourcecode":"lineEnding == null"},"failures":[],"tindex":"807212cb-3e64-11e6-9422-43a8f083aee9","method":{"position":"org.apache.commons.io.IOUtils:1706","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.util.Collection<?> lines, java.lang.String lineEnding, java.io.Writer writer) throws java.io.IOException {\n    if (lineEnding == null) {\n        {\n            if (lines == null) {\n                return ;\n            } \n            if (lineEnding == null) {\n                lineEnding = org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.java.lang.String;\n            } \n            for (java.lang.Object java.lang.Object : lines) {\n                if (line != null) {\n                    writer.write(line.toString());\n                } \n                writer.write(lineEnding);\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lineEnding":"lineEnding"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:430","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"807212cc-3e64-11e6-9422-03a20823e8a9","method":{"position":"org.apache.commons.io.FileUtils:2165","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.util.Collection<?> lines, boolean append) throws java.io.IOException {\n    if (file.isDirectory()) {\n        {\n            org.apache.commons.io.FileUtils.writeLines(file, null, lines, null, append);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1168","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"807212cd-3e64-11e6-9422-59a2a48e4c52","method":{"position":"org.apache.commons.io.FilenameUtils:785","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPath(java.lang.String filename) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FilenameUtils.doGetPath(filename, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileSystemUtils:259","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"807239de-3e64-11e6-9422-d39a0e68c995","method":{"position":"org.apache.commons.io.FileCleaningTracker:106","type":"CtMethodImpl","sourcecode":"public void track(java.lang.String path, java.lang.Object marker) {\n    if (path == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            track(path, marker, ((org.apache.commons.io.FileDeleteStrategy)(null)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"path"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1249","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"807239df-3e64-11e6-9422-af766204f887","method":{"position":"org.apache.commons.io.EndianUtils:272","type":"CtMethodImpl","sourcecode":"public static double readSwappedDouble(byte[] data, int offset) {\n    if (data != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Double.longBitsToDouble(org.apache.commons.io.EndianUtils.readSwappedLong(data, offset));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"807239e0-3e64-11e6-9422-23cdbcbd12c0","method":{"position":"org.apache.commons.io.output.LockableFileWriter:339","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr, int st, int end) throws java.io.IOException {\n    if (chr != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (end == 0) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    java.io.Writer.write(chr, st, end);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"end"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"807239e1-3e64-11e6-9422-e1eba063ee72","method":{"position":"org.apache.commons.io.FilenameUtils:973","type":"CtMethodImpl","sourcecode":"public static java.lang.String getBaseName(java.lang.String filename) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FilenameUtils.removeExtension(org.apache.commons.io.FilenameUtils.getName(filename));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1656","type":"CtBinaryOperatorImpl","sourcecode":"lines == null"},"failures":[],"tindex":"807239e2-3e64-11e6-9422-df0804da0736","method":{"position":"org.apache.commons.io.FileUtils:2247","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.util.Collection<?> lines, java.lang.String lineEnding, boolean append) throws java.io.IOException {\n    if (lines == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeLines(file, null, lines, lineEnding, append);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lines":"lines"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1561","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"807239e3-3e64-11e6-9422-4fbbd3d21d16","method":{"position":"org.apache.commons.io.FileUtils:2077","type":"CtMethodImpl","sourcecode":"public static void writeByteArrayToFile(java.io.File file, byte[] data) throws java.io.IOException {\n    if (file == null) {\n        {\n            org.apache.commons.io.FileUtils.writeByteArrayToFile(file, data, false);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:134","type":"CtBinaryOperatorImpl","sourcecode":"chr != null"},"failures":[],"tindex":"807239e4-3e64-11e6-9422-c5f7dc71aae3","method":{"position":"org.apache.commons.io.output.NullWriter:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr) {\n    if (chr != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chr":"chr"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.LockableFileWriter:183","type":"CtBinaryOperatorImpl","sourcecode":"(file.getParentFile()) != null"},"failures":[],"tindex":"807260f5-3e64-11e6-9422-4d6277586eea","method":{"position":"org.apache.commons.io.FileUtils:1747","type":"CtMethodImpl","sourcecode":"public static java.lang.String readFileToString(java.io.File file) throws java.io.IOException {\n    if ((file.getParentFile()) != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.FileUtils.readFileToString(file, java.nio.charset.Charset.defaultCharset());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileSystemUtils:259","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"807260f6-3e64-11e6-9422-517c28e36a75","method":{"position":"org.apache.commons.io.FilenameUtils:566","type":"CtMethodImpl","sourcecode":"public static java.lang.String separatorsToWindows(java.lang.String path) {\n    if (path == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((path == null) || ((path.indexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char)) == (-1))) {\n                return path;\n            } \n            return path.replace(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"path"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:623","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"807260f7-3e64-11e6-9422-e188c80fea2e","method":{"position":"org.apache.commons.io.FilenameUtils:894","type":"CtMethodImpl","sourcecode":"public static java.lang.String getFullPathNoEndSeparator(java.lang.String filename) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.io.FilenameUtils.doGetFullPath(filename, false);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2513","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(file))"},"failures":[],"tindex":"807260f8-3e64-11e6-9422-bb175a1ea571","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:83","type":"CtMethodImpl","sourcecode":"public void onFileDelete(final java.io.File file) {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        {\n            if (file == null) {\n                {\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileCleaningTracker:121","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"807260f9-3e64-11e6-9422-33b617a0babb","method":{"position":"org.apache.commons.io.FileSystemUtils:287","type":"CtMethodImpl","sourcecode":"long freeSpaceWindows(java.lang.String path, long timeout) throws java.io.IOException {\n    if (path == null) {\n        {\n            path = org.apache.commons.io.FilenameUtils.normalize(path, false);\n            if (((path.length()) > 0) && ((path.charAt(0)) != '\"')) {\n                path = (\"\\\"\" + path) + \"\\\"\";\n            } \n            java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"cmd.exe\" , \"/C\" , \"dir /a /-c \" + path };\n            java.util.List<java.lang.String> java.util.List<java.lang.String> = performCommand(cmdAttribs, java.lang.Integer.java.lang.Integer.int, timeout);\n            for (int int = (lines.size()) - 1 ; i >= 0 ; i--) {\n                java.lang.String java.lang.String = lines.get(i);\n                if ((line.length()) > 0) {\n                    return parseDir(line, path);\n                } \n            }\n            throw new java.io.IOException((((\"Command line 'dir /-c' did not return any info \" + \"for path '\") + path) + \"'\"));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"path"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"8072880a-3e64-11e6-9422-7587f7c54b62","method":{"position":"org.apache.commons.io.input.Tailer:236","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.input.Tailer create(java.io.File file, org.apache.commons.io.input.TailerListener listener, long delayMillis, boolean end, int bufSize) {\n    if (bufSize == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.input.Tailer org.apache.commons.io.input.Tailer = new org.apache.commons.io.input.Tailer(file , listener , delayMillis , end , bufSize);\n            java.lang.Thread java.lang.Thread = new java.lang.Thread(tailer);\n            thread.setDaemon(true);\n            thread.start();\n            return tailer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"bufSize"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.TaggedIOException:94","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.TaggedIOException.isTaggedWith(throwable, tag)"},"failures":[],"tindex":"8072880b-3e64-11e6-9422-b9018229aa82","method":{"position":"org.apache.commons.io.TaggedIOException:92","type":"CtMethodImpl","sourcecode":"public static void throwCauseIfTaggedWith(java.lang.Throwable throwable, java.lang.Object tag) throws java.io.IOException {\n    if (org.apache.commons.io.TaggedIOException.isTaggedWith(throwable, tag)) {\n        {\n            if (org.apache.commons.io.TaggedIOException.isTaggedWith(throwable, tag)) {\n                throw ((org.apache.commons.io.TaggedIOException)(throwable)).getCause();\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable","tag":"tag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:348","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"8072880c-3e64-11e6-9422-8d04d9c85421","method":{"position":"org.apache.commons.io.FilenameUtils:894","type":"CtMethodImpl","sourcecode":"public static java.lang.String getFullPathNoEndSeparator(java.lang.String filename) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.io.FilenameUtils.doGetFullPath(filename, false);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.EndianUtils:482","type":"CtBinaryOperatorImpl","sourcecode":"(-1) == value"},"failures":[],"tindex":"8072880d-3e64-11e6-9422-07bda57bbf52","method":{"position":"org.apache.commons.io.EndianUtils:239","type":"CtMethodImpl","sourcecode":"public static void writeSwappedFloat(byte[] data, int offset, float value) {\n    if ((-1) == offset) {\n        {\n            org.apache.commons.io.EndianUtils.writeSwappedInteger(data, offset, java.lang.Float.floatToIntBits(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"offset"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1538","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.delete())"},"failures":[],"tindex":"8072880e-3e64-11e6-9422-69be3c7c6fc5","method":{"position":"org.apache.commons.io.FileUtils:2502","type":"CtMethodImpl","sourcecode":"public static java.math.BigInteger sizeOfDirectoryAsBigInteger(java.io.File directory) {\n    if (!(directory.delete())) {\n        {\n            org.apache.commons.io.FileUtils.checkDirectory(directory);\n            final java.io.File[] java.io.File[] = directory.listFiles();\n            if (files == null) {\n                return java.math.BigInteger.java.math.BigInteger.java.math.BigInteger;\n            } \n            java.math.BigInteger java.math.BigInteger = java.math.BigInteger.java.math.BigInteger.java.math.BigInteger;\n            for (final java.io.File java.io.File : files) {\n                try {\n                    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n                        size = size.add(java.math.BigInteger.valueOf(org.apache.commons.io.FileUtils.sizeOf(file)));\n                    } \n                } catch (java.io.IOException ioe) {\n                }\n            }\n            return size;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:443","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"8072880f-3e64-11e6-9422-5b02d93d3423","method":{"position":"org.apache.commons.io.FileUtils:2149","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.util.Collection<?> lines) throws java.io.IOException {\n    if (!(file.exists())) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeLines(file, null, lines, null, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:449","type":"CtBinaryOperatorImpl","sourcecode":"filters == null"},"failures":[],"tindex":"8072af20-3e64-11e6-9422-3f0aae42457b","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:435","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter... filters) {\n    if (filters == null) {\n        {\n            return new org.apache.commons.io.filefilter.OrFileFilter(org.apache.commons.io.filefilter.FileFilterUtils.toList(filters));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filters":"filters"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"8072af21-3e64-11e6-9422-7b92de055a38","method":{"position":"org.apache.commons.io.IOUtils:245","type":"CtMethodImpl","sourcecode":"public static void closeQuietly(java.io.InputStream input) {\n    if (null != input) {\n        {\n            if (null != input) {\n                {\n                    org.apache.commons.io.IOUtils.closeQuietly(((java.io.Closeable)(input)));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1489","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"8072af22-3e64-11e6-9422-595288c29caf","method":{"position":"org.apache.commons.io.IOUtils:1411","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.CharSequence data, java.io.Writer output) throws java.io.IOException {\n    if (data != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (data != null) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (data != null) {\n                        org.apache.commons.io.IOUtils.write(data.toString(), output);\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1116","type":"CtBinaryOperatorImpl","sourcecode":"(filename1 == null) || (filename2 == null)"},"failures":[],"tindex":"8072af23-3e64-11e6-9422-bd797711edb3","method":{"position":"org.apache.commons.io.FilenameUtils:1112","type":"CtMethodImpl","sourcecode":"public static boolean equals(java.lang.String filename1, java.lang.String filename2, boolean normalized, org.apache.commons.io.IOCase caseSensitivity) {\n    if ((filename1 == null) || (filename2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((filename1 == null) || (filename2 == null)) {\n                return (filename1 == null) && (filename2 == null);\n            } \n            if (normalized) {\n                filename1 = org.apache.commons.io.FilenameUtils.normalize(filename1);\n                filename2 = org.apache.commons.io.FilenameUtils.normalize(filename2);\n                if ((filename1 == null) || (filename2 == null)) {\n                    throw new java.lang.NullPointerException(\"Error normalizing one or both of the file names\");\n                } \n            } \n            if (caseSensitivity == null) {\n                caseSensitivity = org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase;\n            } \n            return caseSensitivity.checkEquals(filename1, filename2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename2":"filename2","filename1":"filename1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:192","type":"CtBinaryOperatorImpl","sourcecode":"directory == null"},"failures":[],"tindex":"8072af24-3e64-11e6-9422-5dec88feb8ac","method":{"position":"org.apache.commons.io.FileUtils:1634","type":"CtMethodImpl","sourcecode":"public static void cleanDirectory(java.io.File directory) throws java.io.IOException {\n    if (directory == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (directory.exists()) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (!(directory.exists())) {\n                        java.lang.String java.lang.String = directory + \" does not exist\";\n                        throw new java.lang.IllegalArgumentException(message);\n                    } \n                    if (!(directory.isDirectory())) {\n                        java.lang.String java.lang.String = directory + \" is not a directory\";\n                        throw new java.lang.IllegalArgumentException(message);\n                    } \n                    java.io.File[] java.io.File[] = directory.listFiles();\n                    if (files == null) {\n                        throw new java.io.IOException((\"Failed to list contents of \" + directory));\n                    } \n                    java.io.IOException java.io.IOException = null;\n                    for (java.io.File java.io.File : files) {\n                        try {\n                            org.apache.commons.io.FileUtils.forceDelete(file);\n                        } catch (java.io.IOException ioe) {\n                            exception = ioe;\n                        }\n                    }\n                    if (null != exception) {\n                        throw exception;\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2513","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(file))"},"failures":[],"tindex":"8072af25-3e64-11e6-9422-4d1ae4a5262c","method":{"position":"org.apache.commons.io.FileUtils:2620","type":"CtMethodImpl","sourcecode":"public static boolean isFileOlder(java.io.File file, java.io.File reference) {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (reference == null) {\n                throw new java.lang.IllegalArgumentException(\"No specified reference file\");\n            } \n            if (!(reference.exists())) {\n                throw new java.lang.IllegalArgumentException(((\"The reference file '\" + reference) + \"' doesn't exist\"));\n            } \n            return org.apache.commons.io.FileUtils.isFileOlder(file, reference.lastModified());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1122","type":"CtBinaryOperatorImpl","sourcecode":"(filename1 == null) || (filename2 == null)"},"failures":[],"tindex":"8072d636-3e64-11e6-9422-813ecaf2b153","method":{"position":"org.apache.commons.io.FilenameUtils:1080","type":"CtMethodImpl","sourcecode":"public static boolean equalsNormalized(java.lang.String filename1, java.lang.String filename2) {\n    if ((filename1 == null) || (filename1 == null)) {\n        {\n            return org.apache.commons.io.FilenameUtils.equals(filename1, filename2, true, org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename2":"filename1","filename1":"filename1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1193","type":"CtBinaryOperatorImpl","sourcecode":"(srcDir.exists()) && ((srcDir.isDirectory()) == false)"},"failures":[],"tindex":"8072d637-3e64-11e6-9422-bd1cf8a2e3f9","method":{"position":"org.apache.commons.io.FileUtils:1229","type":"CtMethodImpl","sourcecode":"public static void copyDirectory(java.io.File srcDir, java.io.File destDir) throws java.io.IOException {\n    if ((srcDir.exists()) && ((srcDir.isDirectory()) == false)) {\n        {\n            org.apache.commons.io.FileUtils.copyDirectory(srcDir, destDir, true);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcDir":"srcDir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2921","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"8072d638-3e64-11e6-9422-375d3fe73599","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:394","type":"CtMethodImpl","sourcecode":"private void doMatch(org.apache.commons.io.monitor.FileEntry entry, java.io.File file) {\n    if (file == null) {\n        {\n            if (entry.refresh(file)) {\n                for (org.apache.commons.io.monitor.FileAlterationListener org.apache.commons.io.monitor.FileAlterationListener : java.util.List<org.apache.commons.io.monitor.FileAlterationListener>) {\n                    if (entry.isDirectory()) {\n                        listener.onDirectoryChange(file);\n                    } else {\n                        listener.onFileChange(file);\n                    }\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"8072d639-3e64-11e6-9422-8db5259088d7","method":{"position":"org.apache.commons.io.IOUtils:1905","type":"CtMethodImpl","sourcecode":"public static void copy(java.io.InputStream input, java.io.Writer output, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (null != input) {\n        {\n            java.io.InputStreamReader java.io.InputStreamReader = new java.io.InputStreamReader(input , org.apache.commons.io.Charsets.toCharset(encoding));\n            org.apache.commons.io.IOUtils.copy(in, output);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2596","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"8072d63a-3e64-11e6-9422-690b60a100f8","method":{"position":"org.apache.commons.io.FileCleaner:57","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static void track(java.io.File file, java.lang.Object marker) {\n    if (file == null) {\n        {\n            org.apache.commons.io.FileCleaner.org.apache.commons.io.FileCleaner.org.apache.commons.io.FileCleaningTracker.track(file, marker);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:949","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"8072d63b-3e64-11e6-9422-0da07185d8be","method":{"position":"org.apache.commons.io.FilenameUtils:1233","type":"CtMethodImpl","sourcecode":"public static boolean wildcardMatch(java.lang.String filename, java.lang.String wildcardMatcher) {\n    if (filename == null) {\n        {\n            return org.apache.commons.io.FilenameUtils.wildcardMatch(filename, wildcardMatcher, org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:2448","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[],"tindex":"8072d63c-3e64-11e6-9422-a3126cad8984","method":{"position":"org.apache.commons.io.output.StringBuilderWriter:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] value, int offset, int length) {\n    if (length < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value != null) {\n                java.lang.StringBuilder.append(value, offset, length);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.DirectoryWalker:330","type":"CtBinaryOperatorImpl","sourcecode":"startDirectory == null"},"failures":[],"tindex":"8072fd4d-3e64-11e6-9422-691b29f37d35","method":{"position":"org.apache.commons.io.DirectoryWalker:453","type":"CtMethodImpl","sourcecode":"protected void handleCancelled(java.io.File startDirectory, java.util.Collection<T> results, org.apache.commons.io.DirectoryWalker.CancelException cancel) throws java.io.IOException {\n    if (startDirectory == null) {\n        {\n            throw cancel;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startDirectory":"startDirectory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:489","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"8072fd4e-3e64-11e6-9422-5302f7c1d9f9","method":{"position":"org.apache.commons.io.IOUtils:1164","type":"CtMethodImpl","sourcecode":"public static java.io.InputStream toInputStream(java.lang.CharSequence input, java.nio.charset.Charset encoding) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.IOUtils.toInputStream(input.toString(), encoding);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2596","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"8072fd4f-3e64-11e6-9422-8d26dcf7c0d5","method":{"position":"org.apache.commons.io.FileUtils:2185","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.lang.String encoding, java.util.Collection<?> lines, java.lang.String lineEnding) throws java.io.IOException {\n    if (file == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeLines(file, encoding, lines, lineEnding, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2337","type":"CtBinaryOperatorImpl","sourcecode":"files == null"},"failures":[],"tindex":"8072fd50-3e64-11e6-9422-5583bd9bb362","method":{"position":"org.apache.commons.io.comparator.AbstractFileComparator:43","type":"CtMethodImpl","sourcecode":"public java.io.File[] sort(java.io.File... files) {\n    if (files == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (files != null) {\n                java.util.Arrays.sort(files, org.apache.commons.io.comparator.AbstractFileComparator.this);\n            } \n            return files;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"files":"files"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"8072fd51-3e64-11e6-9422-61c2f94f9873","method":{"position":"org.apache.commons.io.output.NullWriter:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence csq, int start, int end) {\n    if (csq != null) {\n        {\n            if (end == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.io.output.NullWriter.this;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"end"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:824","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"80732462-3e64-11e6-9422-41885acbcbf9","method":{"position":"org.apache.commons.io.FilenameUtils:812","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPathNoEndSeparator(java.lang.String filename) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FilenameUtils.doGetPath(filename, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:430","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"80732463-3e64-11e6-9422-012378889f54","method":{"position":"org.apache.commons.io.FileUtils:2135","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.lang.String encoding, java.util.Collection<?> lines, boolean append) throws java.io.IOException {\n    if (file.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeLines(file, encoding, lines, null, append);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2663","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"80732464-3e64-11e6-9422-ef56c8b59c40","method":{"position":"org.apache.commons.io.FileUtils:2292","type":"CtMethodImpl","sourcecode":"public static void forceDeleteOnExit(java.io.File file) throws java.io.IOException {\n    if (file == null) {\n        {\n            if (file.isDirectory()) {\n                org.apache.commons.io.FileUtils.deleteDirectoryOnExit(file);\n            } else {\n                file.deleteOnExit();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1371","type":"CtBinaryOperatorImpl","sourcecode":"((text.indexOf('?')) == (-1)) && ((text.indexOf('*')) == (-1))"},"failures":[],"tindex":"80732465-3e64-11e6-9422-d9de6fb4e11e","method":{"position":"org.apache.commons.io.FilenameUtils:1367","type":"CtMethodImpl","sourcecode":"static java.lang.String[] splitOnTokens(java.lang.String text) {\n    if (((text.indexOf('?')) == (-1)) && ((text.indexOf('*')) == (-1))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((text.indexOf('?')) == (-1)) && ((text.indexOf('*')) == (-1))) {\n                return new java.lang.String[]{ text };\n            } \n            char[] char[] = text.toCharArray();\n            java.util.ArrayList<java.lang.String> java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (((array[i]) == '?') || ((array[i]) == '*')) {\n                    if ((buffer.length()) != 0) {\n                        list.add(buffer.toString());\n                        buffer.setLength(0);\n                    } \n                    if ((array[i]) == '?') {\n                        list.add(\"?\");\n                    } else if ((list.isEmpty()) || ((i > 0) && ((list.get(((list.size()) - 1)).equals(\"*\")) == false))) {\n                        list.add(\"*\");\n                    } \n                } else {\n                    buffer.append(array[i]);\n                }\n            }\n            if ((buffer.length()) != 0) {\n                list.add(buffer.toString());\n            } \n            return list.toArray(new java.lang.String[list.size()]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"text":"text"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"80732466-3e64-11e6-9422-3f1edd556458","method":{"position":"org.apache.commons.io.IOUtils:2095","type":"CtMethodImpl","sourcecode":"public static void copy(java.io.Reader input, java.io.OutputStream output) throws java.io.IOException {\n    if (null != output) {\n        {\n            org.apache.commons.io.IOUtils.copy(input, output, java.nio.charset.Charset.defaultCharset());\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.LineIterator:175","type":"CtBinaryOperatorImpl","sourcecode":"iterator != null"},"failures":[],"tindex":"80732467-3e64-11e6-9422-874a15534ca9","method":{"position":"org.apache.commons.io.LineIterator:174","type":"CtMethodImpl","sourcecode":"public static void closeQuietly(org.apache.commons.io.LineIterator iterator) {\n    if (iterator != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator != null) {\n                iterator.close();\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1489","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"80734b78-3e64-11e6-9422-57009d5e0cef","method":{"position":"org.apache.commons.io.IOUtils:1488","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.String data, java.io.Writer output) throws java.io.IOException {\n    if (data != null) {\n        {\n            if (data != null) {\n                output.write(data);\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:134","type":"CtBinaryOperatorImpl","sourcecode":"chr != null"},"failures":[],"tindex":"80734b79-3e64-11e6-9422-05a8f2109f73","method":{"position":"org.apache.commons.io.output.LockableFileWriter:339","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr, int st, int end) throws java.io.IOException {\n    if (chr != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (end == 0) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    java.io.Writer.write(chr, st, end);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chr":"chr"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:580","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"80734b7a-3e64-11e6-9422-796f5782049f","method":{"position":"org.apache.commons.io.FileSystemUtils:141","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static long freeSpace(java.lang.String path) throws java.io.IOException {\n    if (path == null) {\n        {\n            return org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.freeSpaceOS(path, org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int, false, (-1));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"path"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"80734b7b-3e64-11e6-9422-2914e7408e34","method":{"position":"org.apache.commons.io.IOUtils:2557","type":"CtMethodImpl","sourcecode":"public static void readFully(java.io.InputStream input, byte[] buffer) throws java.io.IOException {\n    if (null != input) {\n        {\n            org.apache.commons.io.IOUtils.readFully(input, buffer, 0, buffer.int);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:109","type":"CtBinaryOperatorImpl","sourcecode":"(dir != null) && (new java.io.File(dir , name).isDirectory())"},"failures":[],"tindex":"80734b7c-3e64-11e6-9422-7133581c60f4","method":{"position":"org.apache.commons.io.filefilter.TrueFileFilter:67","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File dir, java.lang.String name) {\n    if ((dir != null) && (new java.io.File(dir , name).isDirectory())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name","dir":"dir"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CharSequenceInputStream:114","type":"CtBinaryOperatorImpl","sourcecode":"b == null"},"failures":[],"tindex":"80734b7d-3e64-11e6-9422-4b6a7f91f48e","method":{"position":"org.apache.commons.io.input.ReaderInputStream:260","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] b) throws java.io.IOException {\n    if (b == null) {\n        {\n            return read(b, 0, b.int);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NameFileFilter:69","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"80734b7e-3e64-11e6-9422-e11242bd0b78","method":{"position":"org.apache.commons.io.monitor.FileEntry:189","type":"CtMethodImpl","sourcecode":"public void setName(java.lang.String name) {\n    if (name == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.monitor.FileEntry.this.java.lang.String = name;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2449","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"8073728f-3e64-11e6-9422-fbaa811ab09c","method":{"position":"org.apache.commons.io.FileCleaningTracker:90","type":"CtMethodImpl","sourcecode":"public void track(java.io.File file, java.lang.Object marker, org.apache.commons.io.FileDeleteStrategy deleteStrategy) {\n    if (!(file.exists())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (marker.isDirectory()) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (file == null) {\n                        throw new java.lang.NullPointerException(\"The file must not be null\");\n                    } \n                    addTracker(file.getPath(), marker, deleteStrategy);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"marker"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1565","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"80737290-3e64-11e6-9422-1d5aa785a7a1","method":{"position":"org.apache.commons.io.filefilter.OrFileFilter:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(final java.io.File file, final java.lang.String name) {\n    if (file.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter : java.util.List<org.apache.commons.io.filefilter.IOFileFilter>) {\n                if (fileFilter.accept(file, name)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"80737291-3e64-11e6-9422-d57af369cfe1","method":{"position":"org.apache.commons.io.EndianUtils:154","type":"CtMethodImpl","sourcecode":"public static void writeSwappedInteger(byte[] data, int offset, int value) {\n    if (data != null) {\n        {\n            data[(offset + 0)] = ((byte)((value >> 0) & 255));\n            data[(offset + 1)] = ((byte)((value >> 8) & 255));\n            data[(offset + 2)] = ((byte)((value >> 16) & 255));\n            data[(offset + 3)] = ((byte)((value >> 24) & 255));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CountingInputStream:71","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"80737292-3e64-11e6-9422-2dbe60e79106","method":{"position":"org.apache.commons.io.input.ProxyReader:243","type":"CtMethodImpl","sourcecode":"protected void afterRead(int n) throws java.io.IOException {\n    if (n != (-1)) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"80737293-3e64-11e6-9422-fb00602f5cd4","method":{"position":"org.apache.commons.io.output.LockableFileWriter:361","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str, int st, int end) throws java.io.IOException {\n    if (str != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.Writer.write(str, st, end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.EndianUtils:482","type":"CtBinaryOperatorImpl","sourcecode":"(-1) == value"},"failures":[],"tindex":"80737294-3e64-11e6-9422-c7609aa5f25b","method":{"position":"org.apache.commons.io.EndianUtils:65","type":"CtMethodImpl","sourcecode":"public static int swapInteger(int value) {\n    if ((-1) == value) {\n        {\n            if ((-1) == value) {\n                {\n                    return (((((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16)) + (((value >> 16) & 255) << 8)) + (((value >> 24) & 255) << 0);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:96","type":"CtBinaryOperatorImpl","sourcecode":"csq != null"},"failures":[],"tindex":"807399a5-3e64-11e6-9422-05576d00c37d","method":{"position":"org.apache.commons.io.output.NullWriter:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence csq, int start, int end) {\n    if (csq != null) {\n        {\n            if (end == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.io.output.NullWriter.this;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"csq":"csq"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:107","type":"CtBinaryOperatorImpl","sourcecode":"observer != null"},"failures":[],"tindex":"807399a6-3e64-11e6-9422-85dd7ec5a123","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:91","type":"CtMethodImpl","sourcecode":"public void onStop(final org.apache.commons.io.monitor.FileAlterationObserver observer) {\n    if (observer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"observer":"observer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:134","type":"CtBinaryOperatorImpl","sourcecode":"chr != null"},"failures":[],"tindex":"807399a7-3e64-11e6-9422-c73ae8906d12","method":{"position":"org.apache.commons.io.input.ProxyReader:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] chr) throws java.io.IOException {\n    if (chr != null) {\n        {\n            try {\n                beforeRead((chr != null ? chr.int : 0));\n                int int = java.io.Reader.read(chr);\n                afterRead(n);\n                return n;\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n                return -1;\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chr":"chr"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.BOMInputStream:336","type":"CtBinaryOperatorImpl","sourcecode":"b >= 0"},"failures":[],"tindex":"807399a8-3e64-11e6-9422-27154d3da225","method":{"position":"org.apache.commons.io.output.WriterOutputStream:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int b) throws java.io.IOException {\n    if (b >= 0) {\n        {\n            write(new byte[]{ ((byte)(b)) }, 0, 1);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1026","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"807399a9-3e64-11e6-9422-897752eb2820","method":{"position":"org.apache.commons.io.FilenameUtils:688","type":"CtMethodImpl","sourcecode":"public static int indexOfLastSeparator(java.lang.String filename) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filename == null) {\n                return -1;\n            } \n            int int = filename.lastIndexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char);\n            int int = filename.lastIndexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char);\n            return java.lang.Math.max(lastUnixPos, lastWindowsPos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2513","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(file))"},"failures":[],"tindex":"807435ea-3e64-11e6-9422-db4dbcb90404","method":{"position":"org.apache.commons.io.filefilter.CanReadFileFilter:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return file.canRead();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.DirectoryWalker:330","type":"CtBinaryOperatorImpl","sourcecode":"startDirectory == null"},"failures":[],"tindex":"80745cfb-3e64-11e6-9422-5d7b521dc034","method":{"position":"org.apache.commons.io.DirectoryWalker:469","type":"CtMethodImpl","sourcecode":"protected void handleStart(java.io.File startDirectory, java.util.Collection<T> results) throws java.io.IOException {\n    if (startDirectory == null) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startDirectory":"startDirectory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:493","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"80745cfc-3e64-11e6-9422-b573cfd42a46","method":{"position":"org.apache.commons.io.input.XmlStreamReader:399","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] buf, int offset, int len) throws java.io.IOException {\n    if (len == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return java.io.Reader.read(buf, offset, len);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"len"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileSystemUtils:259","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"8074840d-3e64-11e6-9422-05a69f8308ac","method":{"position":"org.apache.commons.io.FileCleaner:104","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static void track(java.lang.String path, java.lang.Object marker, org.apache.commons.io.FileDeleteStrategy deleteStrategy) {\n    if (marker == null) {\n        {\n            org.apache.commons.io.FileCleaner.org.apache.commons.io.FileCleaner.org.apache.commons.io.FileCleaningTracker.track(path, marker, deleteStrategy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"marker"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileDeleteStrategy:72","type":"CtBinaryOperatorImpl","sourcecode":"(fileToDelete == null) || ((fileToDelete.exists()) == false)"},"failures":[],"tindex":"8074840e-3e64-11e6-9422-47254df460aa","method":{"position":"org.apache.commons.io.FileDeleteStrategy:92","type":"CtMethodImpl","sourcecode":"public void delete(java.io.File fileToDelete) throws java.io.IOException {\n    if ((fileToDelete == null) || ((fileToDelete.exists()) == false)) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((fileToDelete.exists()) && ((doDelete(fileToDelete)) == false)) {\n                throw new java.io.IOException((\"Deletion failed: \" + fileToDelete));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fileToDelete":"fileToDelete"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.ThreadMonitor:84","type":"CtBinaryOperatorImpl","sourcecode":"thread != null"},"failures":[],"tindex":"8074ab1f-3e64-11e6-9422-7b8ddf302769","method":{"position":"org.apache.commons.io.ThreadMonitor:67","type":"CtMethodImpl","sourcecode":"public static java.lang.Thread start(java.lang.Thread thread, long timeout) {\n    if (thread != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Thread java.lang.Thread = null;\n            if (timeout > 0) {\n                org.apache.commons.io.ThreadMonitor org.apache.commons.io.ThreadMonitor = new org.apache.commons.io.ThreadMonitor(thread , timeout);\n                monitor = new java.lang.Thread(timout , org.apache.commons.io.ThreadMonitor.org.apache.commons.io.ThreadMonitor.java.lang.Class.getSimpleName());\n                monitor.setDaemon(true);\n                monitor.start();\n            } \n            return monitor;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"thread":"thread"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.SwappedDataInputStream:142","type":"CtBinaryOperatorImpl","sourcecode":"(-1) == count"},"failures":[],"tindex":"8074ab20-3e64-11e6-9422-5b59466e87d0","method":{"position":"org.apache.commons.io.output.ThresholdingOutputStream:219","type":"CtMethodImpl","sourcecode":"protected void checkThreshold(int count) throws java.io.IOException {\n    if ((-1) == count) {\n        {\n            if ((!(boolean)) && (((long) + count) > (int))) {\n                boolean = true;\n                thresholdReached();\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"8074ab21-3e64-11e6-9422-f557ebc1bd29","method":{"position":"org.apache.commons.io.IOUtils:2536","type":"CtMethodImpl","sourcecode":"public static void readFully(java.io.InputStream input, byte[] buffer, int offset, int length) throws java.io.IOException {\n    if (null != input) {\n        {\n            int int = org.apache.commons.io.IOUtils.read(input, buffer, offset, length);\n            if (actual != length) {\n                throw new java.io.EOFException((((\"Length to read: \" + length) + \" actual: \") + actual));\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2666","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"8074ab22-3e64-11e6-9422-e7f21078af9d","method":{"position":"org.apache.commons.io.FileCleaningTracker:90","type":"CtMethodImpl","sourcecode":"public void track(java.io.File file, java.lang.Object marker, org.apache.commons.io.FileDeleteStrategy deleteStrategy) {\n    if (!(file.exists())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (marker.isDirectory()) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (file == null) {\n                        throw new java.lang.NullPointerException(\"The file must not be null\");\n                    } \n                    addTracker(file.getPath(), marker, deleteStrategy);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:212","type":"CtBinaryOperatorImpl","sourcecode":"offset < 0"},"failures":[],"tindex":"8074ab23-3e64-11e6-9422-4f7f7276138b","method":{"position":"org.apache.commons.io.EndianUtils:200","type":"CtMethodImpl","sourcecode":"public static void writeSwappedLong(byte[] data, int offset, long value) {\n    if (value < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            data[(offset + 0)] = ((byte)((value >> 0) & 255));\n            data[(offset + 1)] = ((byte)((value >> 8) & 255));\n            data[(offset + 2)] = ((byte)((value >> 16) & 255));\n            data[(offset + 3)] = ((byte)((value >> 24) & 255));\n            data[(offset + 4)] = ((byte)((value >> 32) & 255));\n            data[(offset + 5)] = ((byte)((value >> 40) & 255));\n            data[(offset + 6)] = ((byte)((value >> 48) & 255));\n            data[(offset + 7)] = ((byte)((value >> 56) & 255));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offset":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"8074d234-3e64-11e6-9422-3d955fdc5de0","method":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:288","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr, int st, int end) throws java.io.IOException {\n    if (end == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.Writer.write(chr, st, end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"end"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"8074d235-3e64-11e6-9422-87fd1e3b9419","method":{"position":"org.apache.commons.io.IOUtils:1767","type":"CtMethodImpl","sourcecode":"public static long copyLarge(java.io.InputStream input, java.io.OutputStream output) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.IOUtils.copyLarge(input, output, new byte[org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"8074d236-3e64-11e6-9422-bb966dcdab11","method":{"position":"org.apache.commons.io.EndianUtils:311","type":"CtMethodImpl","sourcecode":"public static int readSwappedUnsignedShort(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            return ((value1 & 255) << 0) + ((value2 & 255) << 8);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2402","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[],"tindex":"8074d237-3e64-11e6-9422-ef726f65ceab","method":{"position":"org.apache.commons.io.input.NullInputStream:226","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] bytes, int offset, int length) throws java.io.IOException {\n    if (length < 0) {\n        {\n            if (boolean) {\n                throw new java.io.IOException(\"Read after end of file\");\n            } \n            if ((long) == (long)) {\n                return doEndOfFile();\n            } \n            long += length;\n            int int = length;\n            if ((long) > (long)) {\n                returnLength = length - ((int)(((long) - (long))));\n                long = long;\n            } \n            processBytes(bytes, offset, returnLength);\n            return returnLength;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:824","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"8074d238-3e64-11e6-9422-a713989d140f","method":{"position":"org.apache.commons.io.FilenameUtils:948","type":"CtMethodImpl","sourcecode":"public static java.lang.String getName(java.lang.String filename) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filename == null) {\n                return null;\n            } \n            int int = org.apache.commons.io.FilenameUtils.indexOfLastSeparator(filename);\n            return filename.substring((index + 1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"commons-io","transformationCount":100,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}