{"failureDictionary":{},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:996","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"47f90eb8-2ebd-11e6-89d1-0bf7421f18cc","method":{"position":"org.apache.commons.io.FilenameUtils:823","type":"CtMethodImpl","sourcecode":"private static java.lang.String doGetPath(java.lang.String filename, int separatorAdd) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (filename == null) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if (filename == null) {\n                                return null;\n                            } \n                            int int = org.apache.commons.io.FilenameUtils.getPrefixLength(filename);\n                            if (prefix < 0) {\n                                return null;\n                            } \n                            int int = org.apache.commons.io.FilenameUtils.indexOfLastSeparator(filename);\n                            int int = index + separatorAdd;\n                            if (((prefix >= (filename.length())) || (index < 0)) || (prefix >= endIndex)) {\n                                return \"\";\n                            } \n                            return filename.substring(prefix, endIndex);\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1565","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"47f9d209-2ebd-11e6-89d1-c5bdcacb1027","method":{"position":"org.apache.commons.io.comparator.DirectoryFileComparator:72","type":"CtMethodImpl","sourcecode":"private int getType(java.io.File file) {\n    if (file.isDirectory()) {\n        {\n            if (file.isDirectory()) {\n                return 1;\n            } else {\n                return 2;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.BoundedInputStream:172","type":"CtFieldReadImpl","sourcecode":"propagateClose"},"failures":[],"tindex":"47f9d20a-2ebd-11e6-89d1-7123fa0da144","method":{"position":"org.apache.commons.io.input.BoundedInputStream:227","type":"CtMethodImpl","sourcecode":"public void setPropagateClose(boolean propagateClose) {\n    if (propagateClose) {\n        {\n            org.apache.commons.io.input.BoundedInputStream.this.boolean = propagateClose;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"propagateClose":"propagateClose"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:685","type":"CtBinaryOperatorImpl","sourcecode":"extensions == null"},"failures":[],"tindex":"47f9f91b-2ebd-11e6-89d1-b9f9a8b86181","method":{"position":"org.apache.commons.io.FileUtils:663","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] toSuffixes(java.lang.String[] extensions) {\n    if (extensions == null) {\n        {\n            if (extensions == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.lang.String[] java.lang.String[] = new java.lang.String[extensions.int];\n                    for (int int = 0 ; i < (extensions.int) ; i++) {\n                        suffixes[i] = \".\" + (extensions[i]);\n                    }\n                    return suffixes;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"extensions":"extensions"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.LineIterator:175","type":"CtBinaryOperatorImpl","sourcecode":"iterator != null"},"failures":[],"tindex":"47f9f91c-2ebd-11e6-89d1-73c6191663f7","method":{"position":"org.apache.commons.io.LineIterator:174","type":"CtMethodImpl","sourcecode":"public static void closeQuietly(org.apache.commons.io.LineIterator iterator) {\n    if (iterator != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator != null) {\n                iterator.close();\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileSystemUtils:380","type":"CtBinaryOperatorImpl","sourcecode":"(path.length()) == 0"},"failures":[],"tindex":"47fa202d-2ebd-11e6-89d1-89590dc574d4","method":{"position":"org.apache.commons.io.FileSystemUtils:435","type":"CtMethodImpl","sourcecode":"long parseBytes(java.lang.String freeSpace, java.lang.String path) throws java.io.IOException {\n    if ((freeSpace.length()) == 0) {\n        {\n            try {\n                long long = java.lang.Long.parseLong(freeSpace);\n                if (bytes < 0) {\n                    throw new java.io.IOException((((((\"Command line '\" + (org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.java.lang.String)) + \"' did not find free space in response \") + \"for path '\") + path) + \"'- check path is valid\"));\n                } \n                return bytes;\n            } catch (java.lang.NumberFormatException ex) {\n                throw new org.apache.commons.io.IOExceptionWithCause((((((\"Command line '\" + (org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.java.lang.String)) + \"' did not return numeric data as expected \") + \"for path '\") + path) + \"'- check path is valid\") , ex);\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"freeSpace"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:656","type":"CtBinaryOperatorImpl","sourcecode":"httpContentType != null"},"failures":[],"tindex":"47fa473e-2ebd-11e6-89d1-fdc6fdd7638f","method":{"position":"org.apache.commons.io.input.XmlStreamReader:654","type":"CtMethodImpl","sourcecode":"static java.lang.String getContentTypeMime(java.lang.String httpContentType) {\n    if (httpContentType != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String = null;\n            if (httpContentType != null) {\n                int int = httpContentType.indexOf(\";\");\n                if (i >= 0) {\n                    mime = httpContentType.substring(0, i);\n                } else {\n                    mime = httpContentType;\n                }\n                mime = mime.trim();\n            } \n            return mime;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"httpContentType":"httpContentType"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2444","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"47fa473f-2ebd-11e6-89d1-8767a24da95a","method":{"position":"org.apache.commons.io.filefilter.CanReadFileFilter:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (!(file.exists())) {\n        {\n            return file.canRead();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:89","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"47fa6e50-2ebd-11e6-89d1-f30231147ff9","method":{"position":"org.apache.commons.io.FileUtils:1111","type":"CtMethodImpl","sourcecode":"public static long copyFile(java.io.File input, java.io.OutputStream output) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (null != output) {\n                {\n                    final java.io.FileInputStream java.io.FileInputStream = new java.io.FileInputStream(input);\n                    try {\n                        return org.apache.commons.io.IOUtils.copyLarge(fis, output);\n                    } finally {\n                        fis.close();\n                    }\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:96","type":"CtBinaryOperatorImpl","sourcecode":"csq != null"},"failures":[],"tindex":"47fa9561-2ebd-11e6-89d1-356a400ad4fd","method":{"position":"org.apache.commons.io.output.NullWriter:75","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence csq) {\n    if (csq != null) {\n        {\n            return org.apache.commons.io.output.NullWriter.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"csq":"csq"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.comparator.AbstractFileComparator:61","type":"CtBinaryOperatorImpl","sourcecode":"files != null"},"failures":[],"tindex":"47fa9562-2ebd-11e6-89d1-65c575689ac7","method":{"position":"org.apache.commons.io.comparator.AbstractFileComparator:60","type":"CtMethodImpl","sourcecode":"public java.util.List<java.io.File> sort(java.util.List<java.io.File> files) {\n    if (files != null) {\n        {\n            if (files != null) {\n                java.util.Collections.sort(files, org.apache.commons.io.comparator.AbstractFileComparator.this);\n            } \n            return files;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"files":"files"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:906","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"47fabc73-2ebd-11e6-89d1-63fd66b4d821","method":{"position":"org.apache.commons.io.FilenameUtils:995","type":"CtMethodImpl","sourcecode":"public static java.lang.String getExtension(java.lang.String filename) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filename == null) {\n                return null;\n            } \n            int int = org.apache.commons.io.FilenameUtils.indexOfExtension(filename);\n            if (index == (-1)) {\n                return \"\";\n            } else {\n                return filename.substring((index + 1));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:348","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"47fabc74-2ebd-11e6-89d1-1d2b1610a379","method":{"position":"org.apache.commons.io.FilenameUtils:894","type":"CtMethodImpl","sourcecode":"public static java.lang.String getFullPathNoEndSeparator(java.lang.String filename) {\n    if (filename == null) {\n        {\n            return org.apache.commons.io.FilenameUtils.doGetFullPath(filename, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:443","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"47fae385-2ebd-11e6-89d1-b1e92ddbe4df","method":{"position":"org.apache.commons.io.FileUtils:1733","type":"CtMethodImpl","sourcecode":"public static java.lang.String readFileToString(java.io.File file, java.lang.String encoding) throws java.io.IOException {\n    if (!(file.exists())) {\n        {\n            return org.apache.commons.io.FileUtils.readFileToString(file, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOCase:147","type":"CtBinaryOperatorImpl","sourcecode":"(str1 == null) || (str2 == null)"},"failures":[],"tindex":"47fae386-2ebd-11e6-89d1-c3506639ecc7","method":{"position":"org.apache.commons.io.IOCase:146","type":"CtMethodImpl","sourcecode":"public int checkCompareTo(java.lang.String str1, java.lang.String str2) {\n    if ((str2 == null) || (str2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((str1 == null) || (str2 == null)) {\n                throw new java.lang.NullPointerException(\"The strings must not be null\");\n            } \n            return boolean ? str1.compareTo(str2) : str1.compareToIgnoreCase(str2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"str2","str2":"str2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1449","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"47fb0a97-2ebd-11e6-89d1-45462022e3a5","method":{"position":"org.apache.commons.io.FileUtils:2043","type":"CtMethodImpl","sourcecode":"public static void write(java.io.File file, java.lang.CharSequence data, java.nio.charset.Charset encoding, boolean append) throws java.io.IOException {\n    if (data != null) {\n        {\n            java.lang.String java.lang.String = data == null ? null : data.toString();\n            org.apache.commons.io.FileUtils.writeStringToFile(file, str, encoding, append);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"47fb31a8-2ebd-11e6-89d1-0db0b5642b2c","method":{"position":"org.apache.commons.io.IOUtils:1550","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.String data, java.io.OutputStream output, java.lang.String encoding) throws java.io.IOException {\n    if (data == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (null != output) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    org.apache.commons.io.IOUtils.write(data, output, org.apache.commons.io.Charsets.toCharset(encoding));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"47fb31a9-2ebd-11e6-89d1-b30a102b67d7","method":{"position":"org.apache.commons.io.IOCase:182","type":"CtMethodImpl","sourcecode":"public boolean checkStartsWith(java.lang.String str, java.lang.String start) {\n    if (str != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return str.regionMatches((!(boolean)), 0, start, 0, start.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1196","type":"CtBinaryOperatorImpl","sourcecode":"destDir == null"},"failures":[],"tindex":"47fb58ba-2ebd-11e6-89d1-6f38a0fd3f9f","method":{"position":"org.apache.commons.io.FileUtils:1005","type":"CtMethodImpl","sourcecode":"public static void copyFileToDirectory(java.io.File srcFile, java.io.File destDir, boolean preserveFileDate) throws java.io.IOException {\n    if (destDir == null) {\n        {\n            if (destDir == null) {\n                throw new java.lang.NullPointerException(\"Destination must not be null\");\n            } \n            if ((destDir.exists()) && ((destDir.isDirectory()) == false)) {\n                throw new java.lang.IllegalArgumentException(((\"Destination '\" + destDir) + \"' is not a directory\"));\n            } \n            java.io.File java.io.File = new java.io.File(destDir , srcFile.getName());\n            org.apache.commons.io.FileUtils.copyFile(srcFile, destFile, preserveFileDate);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"destDir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"47fb58bb-2ebd-11e6-89d1-af7d773f8b5e","method":{"position":"org.apache.commons.io.IOUtils:1843","type":"CtMethodImpl","sourcecode":"public static long copyLarge(java.io.InputStream input, java.io.OutputStream output, final long inputOffset, final long length, byte[] buffer) throws java.io.IOException {\n    if (null != output) {\n        {\n            if (inputOffset > 0) {\n                org.apache.commons.io.IOUtils.skipFully(input, inputOffset);\n            } \n            if (length == 0) {\n                return 0;\n            } \n            final int int = buffer.int;\n            int int = bufferLength;\n            if ((length > 0) && (length < bufferLength)) {\n                bytesToRead = ((int)(length));\n            } \n            int int;\n            long long = 0;\n            while ((bytesToRead > 0) && ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int) != (read = input.read(buffer, 0, bytesToRead)))) {\n                output.write(buffer, 0, read);\n                totalRead += read;\n                if (length > 0) {\n                    bytesToRead = ((int)(java.lang.Math.min((length - totalRead), bufferLength)));\n                } \n            }\n            return totalRead;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.LockableFileWriter:186","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"47fb7fcc-2ebd-11e6-89d1-af8798fde448","method":{"position":"org.apache.commons.io.FileUtils:1747","type":"CtMethodImpl","sourcecode":"public static java.lang.String readFileToString(java.io.File file) throws java.io.IOException {\n    if (file.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.FileUtils.readFileToString(file, java.nio.charset.Charset.defaultCharset());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:492","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"47fb7fcd-2ebd-11e6-89d1-dd24d3b73a84","method":{"position":"org.apache.commons.io.IOUtils:1550","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.String data, java.io.OutputStream output, java.lang.String encoding) throws java.io.IOException {\n    if (data == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (null != output) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    org.apache.commons.io.IOUtils.write(data, output, org.apache.commons.io.Charsets.toCharset(encoding));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"data"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:492","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"47fba6de-2ebd-11e6-89d1-55df7cf28573","method":{"position":"org.apache.commons.io.IOUtils:1210","type":"CtMethodImpl","sourcecode":"public static java.io.InputStream toInputStream(java.lang.String input, java.nio.charset.Charset encoding) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new java.io.ByteArrayInputStream(input.getBytes(org.apache.commons.io.Charsets.toCharset(encoding)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2663","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"47fba6df-2ebd-11e6-89d1-a573e54eb012","method":{"position":"org.apache.commons.io.FileUtils:1925","type":"CtMethodImpl","sourcecode":"public static void writeStringToFile(java.io.File file, java.lang.String data, java.nio.charset.Charset encoding, boolean append) throws java.io.IOException {\n    if (file == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.OutputStream java.io.OutputStream = null;\n            try {\n                out = org.apache.commons.io.FileUtils.openOutputStream(file, append);\n                org.apache.commons.io.IOUtils.write(data, out, encoding);\n                out.close();\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(out);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"47fbcdf0-2ebd-11e6-89d1-61fbe31865e1","method":{"position":"org.apache.commons.io.IOUtils:1525","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.String data, java.io.OutputStream output, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (null != output) {\n        {\n            if (data != null) {\n                output.write(data.getBytes(org.apache.commons.io.Charsets.toCharset(encoding)));\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"47fbcdf1-2ebd-11e6-89d1-b387fa90bab5","method":{"position":"org.apache.commons.io.FileUtils:1111","type":"CtMethodImpl","sourcecode":"public static long copyFile(java.io.File input, java.io.OutputStream output) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (null != output) {\n                {\n                    final java.io.FileInputStream java.io.FileInputStream = new java.io.FileInputStream(input);\n                    try {\n                        return org.apache.commons.io.IOUtils.copyLarge(fis, output);\n                    } finally {\n                        fis.close();\n                    }\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"47fbf502-2ebd-11e6-89d1-290d5f0872c8","method":{"position":"org.apache.commons.io.IOUtils:1932","type":"CtMethodImpl","sourcecode":"public static void copy(java.io.InputStream input, java.io.Writer output, java.lang.String encoding) throws java.io.IOException {\n    if (null != input) {\n        {\n            org.apache.commons.io.IOUtils.copy(input, output, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileDeleteStrategy:72","type":"CtBinaryOperatorImpl","sourcecode":"(fileToDelete == null) || ((fileToDelete.exists()) == false)"},"failures":[],"tindex":"47fbf503-2ebd-11e6-89d1-d17077654f1d","method":{"position":"org.apache.commons.io.FileDeleteStrategy:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean doDelete(java.io.File fileToDelete) throws java.io.IOException {\n    if ((fileToDelete == null) || ((fileToDelete.exists()) == false)) {\n        {\n            org.apache.commons.io.FileUtils.forceDelete(fileToDelete);\n            return true;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fileToDelete":"fileToDelete"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2368","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"47fc1c14-2ebd-11e6-89d1-2f4c205acf70","method":{"position":"org.apache.commons.io.DirectoryWalker:547","type":"CtMethodImpl","sourcecode":"protected void handleRestricted(java.io.File directory, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (!(directory.isDirectory())) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:2448","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[],"tindex":"47fc1c15-2ebd-11e6-89d1-415bc23eba24","method":{"position":"org.apache.commons.io.output.StringBuilderWriter:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] value, int offset, int length) {\n    if (length < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value != null) {\n                java.lang.StringBuilder.append(value, offset, length);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.AutoCloseInputStream:76","type":"CtBinaryOperatorImpl","sourcecode":"n == (-1)"},"failures":[],"tindex":"47fc1c16-2ebd-11e6-89d1-85a86f7ecee2","method":{"position":"org.apache.commons.io.output.ProxyWriter:259","type":"CtMethodImpl","sourcecode":"protected void afterWrite(int n) throws java.io.IOException {\n    if (n == (-1)) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (n == (-1)) {\n                throw new java.io.IOException();\n            } else {\n                {\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.EOFException","condition":{"position":"org.apache.commons.io.input.SwappedDataInputStream:142","type":"CtBinaryOperatorImpl","sourcecode":"(-1) == count"},"failures":[],"tindex":"47fc4327-2ebd-11e6-89d1-fdd5fba69153","method":{"position":"org.apache.commons.io.input.SwappedDataInputStream:244","type":"CtMethodImpl","sourcecode":"public int skipBytes(int count) throws java.io.EOFException, java.io.IOException {\n    if ((-1) == count) {\n        {\n            return ((int)(java.io.InputStream.skip(count)));\n        }\n    } else {\n        throw new java.io.EOFException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.LineIterator:71","type":"CtBinaryOperatorImpl","sourcecode":"reader instanceof java.io.BufferedReader"},"failures":[],"tindex":"47fc4328-2ebd-11e6-89d1-0390ae6af84b","method":{"position":"org.apache.commons.io.IOUtils:1067","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.LineIterator lineIterator(java.io.Reader reader) {\n    if (reader instanceof java.io.BufferedReader) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.LineIterator(reader);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reader":"reader"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:348","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"47fc4329-2ebd-11e6-89d1-c30e3f232508","method":{"position":"org.apache.commons.io.FilenameUtils:287","type":"CtMethodImpl","sourcecode":"public static java.lang.String normalizeNoEndSeparator(java.lang.String filename) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filename == null) {\n                {\n                    return org.apache.commons.io.FilenameUtils.doNormalize(filename, org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, false);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:253","type":"CtBinaryOperatorImpl","sourcecode":"listener != null"},"failures":[],"tindex":"47fc432a-2ebd-11e6-89d1-8562c3811672","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:252","type":"CtMethodImpl","sourcecode":"public void removeListener(final org.apache.commons.io.monitor.FileAlterationListener listener) {\n    if (listener != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (listener != null) {\n                while (java.util.List<org.apache.commons.io.monitor.FileAlterationListener>.remove(listener)) {\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"listener":"listener"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"47fc6a3b-2ebd-11e6-89d1-1fd858a75e8d","method":{"position":"org.apache.commons.io.EndianUtils:328","type":"CtMethodImpl","sourcecode":"public static void writeSwappedInteger(java.io.OutputStream output, int value) throws java.io.IOException {\n    if (null != output) {\n        {\n            output.write(((byte)((value >> 0) & 255)));\n            output.write(((byte)((value >> 8) & 255)));\n            output.write(((byte)((value >> 16) & 255)));\n            output.write(((byte)((value >> 24) & 255)));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:750","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"47fc6a3c-2ebd-11e6-89d1-ebefb857445b","method":{"position":"org.apache.commons.io.FilenameUtils:823","type":"CtMethodImpl","sourcecode":"private static java.lang.String doGetPath(java.lang.String filename, int separatorAdd) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (filename == null) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if (filename == null) {\n                                return null;\n                            } \n                            int int = org.apache.commons.io.FilenameUtils.getPrefixLength(filename);\n                            if (prefix < 0) {\n                                return null;\n                            } \n                            int int = org.apache.commons.io.FilenameUtils.indexOfLastSeparator(filename);\n                            int int = index + separatorAdd;\n                            if (((prefix >= (filename.length())) || (index < 0)) || (prefix >= endIndex)) {\n                                return \"\";\n                            } \n                            return filename.substring(prefix, endIndex);\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2513","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(file))"},"failures":[],"tindex":"47fc914d-2ebd-11e6-89d1-d9379fdb8ced","method":{"position":"org.apache.commons.io.FileUtils:1961","type":"CtMethodImpl","sourcecode":"public static void writeStringToFile(java.io.File file, java.lang.String data) throws java.io.IOException {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeStringToFile(file, data, java.nio.charset.Charset.defaultCharset(), false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"47fc914e-2ebd-11e6-89d1-2f87ecbbbf50","method":{"position":"org.apache.commons.io.EndianUtils:409","type":"CtMethodImpl","sourcecode":"public static long readSwappedLong(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            byte[] byte[] = new byte[8];\n            for (int int = 0 ; i < 8 ; i++) {\n                bytes[i] = ((byte)(org.apache.commons.io.EndianUtils.read(input)));\n            }\n            return org.apache.commons.io.EndianUtils.readSwappedLong(bytes, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileSystemUtils:289","type":"CtBinaryOperatorImpl","sourcecode":"((path.length()) > 0) && ((path.charAt(0)) != '\"')"},"failures":[],"tindex":"47fc914f-2ebd-11e6-89d1-5bd8f31acfd0","method":{"position":"org.apache.commons.io.FileCleaner:104","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static void track(java.lang.String path, java.lang.Object marker, org.apache.commons.io.FileDeleteStrategy deleteStrategy) {\n    if (((marker.length()) > 0) && ((path.charAt(0)) != '\"')) {\n        {\n            org.apache.commons.io.FileCleaner.org.apache.commons.io.FileCleaner.org.apache.commons.io.FileCleaningTracker.track(path, marker, deleteStrategy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"marker"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.BOMInputStream:336","type":"CtBinaryOperatorImpl","sourcecode":"b >= 0"},"failures":[],"tindex":"47fc9150-2ebd-11e6-89d1-f902c938a35b","method":{"position":"org.apache.commons.io.output.BrokenOutputStream:61","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int b) throws java.io.IOException {\n    if (b >= 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            throw java.io.IOException;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFileFilter:189","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[],"tindex":"47fcb861-2ebd-11e6-89d1-15d413f98480","method":{"position":"org.apache.commons.io.input.ReversedLinesFileReader:329","type":"CtMethodImpl","sourcecode":"private int getNewLineMatchByteCount(byte[] data, int i) {\n    if (i > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (i > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (byte[] byte[] : byte[][]) {\n                        boolean boolean = true;\n                        for (int int = (newLineSequence.int) - 1 ; j >= 0 ; j--) {\n                            int int = (i + j) - ((newLineSequence.int) - 1);\n                            match &= (k >= 0) && ((data[k]) == (newLineSequence[j]));\n                        }\n                        if (match) {\n                            return newLineSequence.int;\n                        } \n                    }\n                    return 0;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:89","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"47fcb862-2ebd-11e6-89d1-bdd470722fd6","method":{"position":"org.apache.commons.io.EndianUtils:283","type":"CtMethodImpl","sourcecode":"public static void writeSwappedShort(java.io.OutputStream output, short value) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            output.write(((byte)((value >> 0) & 255)));\n            output.write(((byte)((value >> 8) & 255)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:206","type":"CtBinaryOperatorImpl","sourcecode":"magicNumber == null"},"failures":[],"tindex":"47fcb863-2ebd-11e6-89d1-d5455e6734c0","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:697","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[] magicNumber) {\n    if (magicNumber == null) {\n        {\n            return new org.apache.commons.io.filefilter.MagicNumberFileFilter(magicNumber);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"magicNumber":"magicNumber"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2331","type":"CtBinaryOperatorImpl","sourcecode":"n < 0"},"failures":[],"tindex":"47fcdf74-2ebd-11e6-89d1-9b75205d1aeb","method":{"position":"org.apache.commons.io.input.CharSequenceInputStream:165","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) throws java.io.IOException {\n    if (n < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (n < 0) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    int int = 0;\n                    while ((n > 0) && (org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.CharBuffer.hasRemaining())) {\n                        org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.CharBuffer.get();\n                        n--;\n                        skipped++;\n                    }\n                    return skipped;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1371","type":"CtBinaryOperatorImpl","sourcecode":"((text.indexOf('?')) == (-1)) && ((text.indexOf('*')) == (-1))"},"failures":[],"tindex":"47fcdf75-2ebd-11e6-89d1-0ba5cb656bb2","method":{"position":"org.apache.commons.io.FilenameUtils:1367","type":"CtMethodImpl","sourcecode":"static java.lang.String[] splitOnTokens(java.lang.String text) {\n    if (((text.indexOf('?')) == (-1)) && ((text.indexOf('*')) == (-1))) {\n        {\n            if (((text.indexOf('?')) == (-1)) && ((text.indexOf('*')) == (-1))) {\n                return new java.lang.String[]{ text };\n            } \n            char[] char[] = text.toCharArray();\n            java.util.ArrayList<java.lang.String> java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (((array[i]) == '?') || ((array[i]) == '*')) {\n                    if ((buffer.length()) != 0) {\n                        list.add(buffer.toString());\n                        buffer.setLength(0);\n                    } \n                    if ((array[i]) == '?') {\n                        list.add(\"?\");\n                    } else if ((list.isEmpty()) || ((i > 0) && ((list.get(((list.size()) - 1)).equals(\"*\")) == false))) {\n                        list.add(\"*\");\n                    } \n                } else {\n                    buffer.append(array[i]);\n                }\n            }\n            if ((buffer.length()) != 0) {\n                list.add(buffer.toString());\n            } \n            return list.toArray(new java.lang.String[list.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"text":"text"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.SuffixFileFilter:73","type":"CtBinaryOperatorImpl","sourcecode":"suffix == null"},"failures":[],"tindex":"47fd0686-2ebd-11e6-89d1-b9d144ea6954","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:330","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter suffixFileFilter(java.lang.String suffix, org.apache.commons.io.IOCase caseSensitivity) {\n    if (suffix == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.SuffixFileFilter(suffix , caseSensitivity);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suffix":"suffix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.BOMInputStream:336","type":"CtBinaryOperatorImpl","sourcecode":"b >= 0"},"failures":[],"tindex":"47fd0687-2ebd-11e6-89d1-b1c7ed94a6e1","method":{"position":"org.apache.commons.io.output.TeeOutputStream:74","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(int b) throws java.io.IOException {\n    if (b >= 0) {\n        {\n            super.write(b);\n            org.apache.commons.io.output.TeeOutputStream.this.java.io.OutputStream.write(b);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"(srcFile.length()) != (destFile.length())"},"failures":[],"tindex":"47fd0688-2ebd-11e6-89d1-85aabbe06dfb","method":{"position":"org.apache.commons.io.FileUtils:1128","type":"CtMethodImpl","sourcecode":"private static void doCopyFile(java.io.File srcFile, java.io.File destFile, boolean preserveFileDate) throws java.io.IOException {\n    if ((destFile.length()) != (destFile.length())) {\n        {\n            if ((destFile.exists()) && (destFile.isDirectory())) {\n                throw new java.io.IOException(((\"Destination '\" + destFile) + \"' exists but is a directory\"));\n            } \n            java.io.FileInputStream java.io.FileInputStream = null;\n            java.io.FileOutputStream java.io.FileOutputStream = null;\n            java.nio.channels.FileChannel java.nio.channels.FileChannel = null;\n            java.nio.channels.FileChannel java.nio.channels.FileChannel = null;\n            try {\n                fis = new java.io.FileInputStream(srcFile);\n                fos = new java.io.FileOutputStream(destFile);\n                input = fis.getChannel();\n                output = fos.getChannel();\n                long long = input.size();\n                long long = 0;\n                long long = 0;\n                while (pos < size) {\n                    count = (size - pos) > (org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.long) ? org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.long : size - pos;\n                    pos += output.transferFrom(input, pos, count);\n                }\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(output);\n                org.apache.commons.io.IOUtils.closeQuietly(fos);\n                org.apache.commons.io.IOUtils.closeQuietly(input);\n                org.apache.commons.io.IOUtils.closeQuietly(fis);\n            }\n            if ((srcFile.length()) != (destFile.length())) {\n                throw new java.io.IOException(((((\"Failed to copy full contents from '\" + srcFile) + \"' to '\") + destFile) + \"'\"));\n            } \n            if (preserveFileDate) {\n                destFile.setLastModified(srcFile.lastModified());\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destFile":"destFile","srcFile":"destFile"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1249","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"47fd2d99-2ebd-11e6-89d1-a3b48744f0e4","method":{"position":"org.apache.commons.io.HexDump:71","type":"CtMethodImpl","sourcecode":"public static void dump(byte[] data, long offset, java.io.OutputStream stream, int index) throws java.io.IOException, java.lang.ArrayIndexOutOfBoundsException, java.lang.IllegalArgumentException {\n    if (data != null) {\n        {\n            if ((index < 0) || (index >= (data.int))) {\n                throw new java.lang.ArrayIndexOutOfBoundsException((((\"illegal index: \" + index) + \" into array of length \") + (data.int)));\n            } \n            if (stream == null) {\n                throw new java.lang.IllegalArgumentException(\"cannot write to nullstream\");\n            } \n            long long = offset + index;\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(74);\n            for (int int = index ; j < (data.int) ; j += 16) {\n                int int = (data.int) - j;\n                if (chars_read > 16) {\n                    chars_read = 16;\n                } \n                org.apache.commons.io.HexDump.dump(buffer, display_offset).append(' ');\n                for (int int = 0 ; k < 16 ; k++) {\n                    if (k < chars_read) {\n                        org.apache.commons.io.HexDump.dump(buffer, data[(k + j)]);\n                    } else {\n                        buffer.append(\"  \");\n                    }\n                    buffer.append(' ');\n                }\n                for (int int = 0 ; k < chars_read ; k++) {\n                    if (((data[(k + j)]) >= ' ') && ((data[(k + j)]) < 127)) {\n                        buffer.append(((char)(data[(k + j)])));\n                    } else {\n                        buffer.append('.');\n                    }\n                }\n                buffer.append(org.apache.commons.io.HexDump.org.apache.commons.io.HexDump.java.lang.String);\n                stream.write(buffer.toString().getBytes());\n                stream.flush();\n                buffer.setLength(0);\n                display_offset += chars_read;\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2278","type":"CtBinaryOperatorImpl","sourcecode":"toSkip < 0"},"failures":[],"tindex":"47fd54aa-2ebd-11e6-89d1-ddfcd50f831e","method":{"position":"org.apache.commons.io.IOUtils:2316","type":"CtMethodImpl","sourcecode":"public static long skip(java.io.Reader input, long toSkip) throws java.io.IOException {\n    if (toSkip < 0) {\n        {\n            if (toSkip < 0) {\n                throw new java.lang.IllegalArgumentException((\"Skip count must be non-negative, actual: \" + toSkip));\n            } \n            if ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[]) == null) {\n                org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[] = new char[org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int];\n            } \n            long long = toSkip;\n            while (remain > 0) {\n                long long = input.read(org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[], 0, ((int)(java.lang.Math.min(remain, org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int))));\n                if (n < 0) {\n                    break;\n                } \n                remain -= n;\n            }\n            return toSkip - remain;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toSkip":"toSkip"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1425","type":"CtInvocationImpl","sourcecode":"srcFile.isDirectory()"},"failures":[],"tindex":"47fd54ab-2ebd-11e6-89d1-853d8ab6555e","method":{"position":"org.apache.commons.io.FileUtils:976","type":"CtMethodImpl","sourcecode":"public static void copyFileToDirectory(java.io.File srcFile, java.io.File destDir) throws java.io.IOException {\n    if (srcFile.isDirectory()) {\n        {\n            org.apache.commons.io.FileUtils.copyFileToDirectory(srcFile, destDir, true);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcFile":"srcFile"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:109","type":"CtBinaryOperatorImpl","sourcecode":"(dir != null) && (new java.io.File(dir , name).isDirectory())"},"failures":[],"tindex":"47fd7bbc-2ebd-11e6-89d1-2167828362a7","method":{"position":"org.apache.commons.io.filefilter.NameFileFilter:161","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File dir, java.lang.String name) {\n    if ((dir != null) && (new java.io.File(dir , name).isDirectory())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (java.lang.String java.lang.String : java.lang.String[]) {\n                if (org.apache.commons.io.IOCase.checkEquals(name, name2)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name","dir":"dir"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:580","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"47fd7bbd-2ebd-11e6-89d1-338d61763967","method":{"position":"org.apache.commons.io.FilenameUtils:566","type":"CtMethodImpl","sourcecode":"public static java.lang.String separatorsToWindows(java.lang.String path) {\n    if (path == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((path == null) || ((path.indexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char)) == (-1))) {\n                return path;\n            } \n            return path.replace(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"path"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NameFileFilter:69","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"47fd7bbe-2ebd-11e6-89d1-9fc9a1517199","method":{"position":"org.apache.commons.io.filefilter.DelegateFileFilter:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File dir, java.lang.String name) {\n    if (name == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.io.FilenameFilter) != null) {\n                return java.io.FilenameFilter.accept(dir, name);\n            } else {\n                return super.accept(dir, name);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1122","type":"CtBinaryOperatorImpl","sourcecode":"(filename1 == null) || (filename2 == null)"},"failures":[],"tindex":"47fda2cf-2ebd-11e6-89d1-157380ca4f1d","method":{"position":"org.apache.commons.io.FilenameUtils:1049","type":"CtMethodImpl","sourcecode":"public static boolean equals(java.lang.String filename1, java.lang.String filename2) {\n    if ((filename1 == null) || (filename2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FilenameUtils.equals(filename1, filename2, false, org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename2":"filename2","filename1":"filename1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1146","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"47fda2d0-2ebd-11e6-89d1-5be50e6a9976","method":{"position":"org.apache.commons.io.FilenameUtils:823","type":"CtMethodImpl","sourcecode":"private static java.lang.String doGetPath(java.lang.String filename, int separatorAdd) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (filename == null) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if (filename == null) {\n                                return null;\n                            } \n                            int int = org.apache.commons.io.FilenameUtils.getPrefixLength(filename);\n                            if (prefix < 0) {\n                                return null;\n                            } \n                            int int = org.apache.commons.io.FilenameUtils.indexOfLastSeparator(filename);\n                            int int = index + separatorAdd;\n                            if (((prefix >= (filename.length())) || (index < 0)) || (prefix >= endIndex)) {\n                                return \"\";\n                            } \n                            return filename.substring(prefix, endIndex);\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:449","type":"CtBinaryOperatorImpl","sourcecode":"filters == null"},"failures":[],"tindex":"47fda2d1-2ebd-11e6-89d1-ada68e11318c","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:435","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter... filters) {\n    if (filters == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.OrFileFilter(org.apache.commons.io.filefilter.FileFilterUtils.toList(filters));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filters":"filters"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:161","type":"CtBinaryOperatorImpl","sourcecode":"magicNumber == null"},"failures":[],"tindex":"47fda2d2-2ebd-11e6-89d1-09cd0282eef3","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:657","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String magicNumber) {\n    if (magicNumber == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.MagicNumberFileFilter(magicNumber);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"magicNumber":"magicNumber"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1146","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"47fdc9e3-2ebd-11e6-89d1-df22249bee14","method":{"position":"org.apache.commons.io.FilenameUtils:287","type":"CtMethodImpl","sourcecode":"public static java.lang.String normalizeNoEndSeparator(java.lang.String filename) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filename == null) {\n                {\n                    return org.apache.commons.io.FilenameUtils.doNormalize(filename, org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, false);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.ReaderInputStream:223","type":"CtBinaryOperatorImpl","sourcecode":"b == null"},"failures":[],"tindex":"47fdc9e4-2ebd-11e6-89d1-3d04fe412088","method":{"position":"org.apache.commons.io.output.NullOutputStream:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b) throws java.io.IOException {\n    if (b == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2056","type":"CtBinaryOperatorImpl","sourcecode":"length == 0"},"failures":[],"tindex":"47fdc9e5-2ebd-11e6-89d1-bde5a9db5a4e","method":{"position":"org.apache.commons.io.input.CountingInputStream:57","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized long skip(final long length) throws java.io.IOException {\n    if (length == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            final long long = super.skip(length);\n            org.apache.commons.io.input.CountingInputStream.this.long += skip;\n            return skip;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"47fdc9e6-2ebd-11e6-89d1-b579cd536b2a","method":{"position":"org.apache.commons.io.output.LockableFileWriter:361","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str, int st, int end) throws java.io.IOException {\n    if (st == 0) {\n        {\n            java.io.Writer.write(str, st, end);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"st"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2308","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.exists())"},"failures":[],"tindex":"47fdf0f7-2ebd-11e6-89d1-1b7221798aa6","method":{"position":"org.apache.commons.io.FileUtils:708","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<java.io.File> iterateFiles(java.io.File directory, java.lang.String[] extensions, boolean recursive) {\n    if (!(directory.exists())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FileUtils.listFiles(directory, extensions, recursive).iterator();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:292","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"47fdf0f8-2ebd-11e6-89d1-e99f974df655","method":{"position":"org.apache.commons.io.DirectoryWalker:434","type":"CtMethodImpl","sourcecode":"protected boolean handleIsCancelled(java.io.File file, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (file.isDirectory()) {\n        {\n            return false;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1526","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"47fdf0f9-2ebd-11e6-89d1-73a31b1763fd","method":{"position":"org.apache.commons.io.IOUtils:1488","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.String data, java.io.Writer output) throws java.io.IOException {\n    if (data != null) {\n        {\n            if (data != null) {\n                output.write(data);\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2448","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[],"tindex":"47fdf0fa-2ebd-11e6-89d1-a72a7c917528","method":{"position":"org.apache.commons.io.input.NullReader:209","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] chars, int offset, int length) throws java.io.IOException {\n    if (length < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (boolean) {\n                throw new java.io.IOException(\"Read after end of file\");\n            } \n            if ((long) == (long)) {\n                return doEndOfFile();\n            } \n            long += length;\n            int int = length;\n            if ((long) > (long)) {\n                returnLength = length - ((int)(((long) - (long))));\n                long = long;\n            } \n            processChars(chars, offset, returnLength);\n            return returnLength;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.TeeInputStream:145","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"47fe180b-2ebd-11e6-89d1-3378c999df5f","method":{"position":"org.apache.commons.io.input.ProxyInputStream:200","type":"CtMethodImpl","sourcecode":"protected void beforeRead(int n) throws java.io.IOException {\n    if (n != (-1)) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"47fe180c-2ebd-11e6-89d1-b19d0e62b797","method":{"position":"org.apache.commons.io.EndianUtils:272","type":"CtMethodImpl","sourcecode":"public static double readSwappedDouble(byte[] data, int offset) {\n    if (data != null) {\n        {\n            return java.lang.Double.longBitsToDouble(org.apache.commons.io.EndianUtils.readSwappedLong(data, offset));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:740","type":"CtBinaryOperatorImpl","sourcecode":"(file1.isDirectory()) || (file2.isDirectory())"},"failures":[],"tindex":"47fe180d-2ebd-11e6-89d1-45ea434159d2","method":{"position":"org.apache.commons.io.comparator.DefaultFileComparator:63","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if ((file2.isDirectory()) || (file2.isDirectory())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return file1.compareTo(file2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file2":"file2","file1":"file2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:72","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"47fe180e-2ebd-11e6-89d1-9f6c85d265d8","method":{"position":"org.apache.commons.io.IOUtils:2157","type":"CtMethodImpl","sourcecode":"public static void copy(java.io.Reader input, java.io.OutputStream output, java.lang.String encoding) throws java.io.IOException {\n    if (null != output) {\n        {\n            org.apache.commons.io.IOUtils.copy(input, output, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2411","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"47fe180f-2ebd-11e6-89d1-759d02ceb969","method":{"position":"org.apache.commons.io.FileUtils:2662","type":"CtMethodImpl","sourcecode":"public static boolean isFileOlder(java.io.File file, long timeMillis) {\n    if (!(file.exists())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (file == null) {\n                throw new java.lang.IllegalArgumentException(\"No specified file\");\n            } \n            if (!(file.exists())) {\n                return false;\n            } \n            return (file.lastModified()) < timeMillis;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:685","type":"CtBinaryOperatorImpl","sourcecode":"extensions == null"},"failures":[],"tindex":"47fe3f20-2ebd-11e6-89d1-ebd327a1c0f2","method":{"position":"org.apache.commons.io.FileUtils:663","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] toSuffixes(java.lang.String[] extensions) {\n    if (extensions == null) {\n        {\n            if (extensions == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.lang.String[] java.lang.String[] = new java.lang.String[extensions.int];\n                    for (int int = 0 ; i < (extensions.int) ; i++) {\n                        suffixes[i] = \".\" + (extensions[i]);\n                    }\n                    return suffixes;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"extensions":"extensions"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:924","type":"CtBinaryOperatorImpl","sourcecode":"(url.getProtocol().equals(\"file\")) == false"},"failures":[],"tindex":"47fe3f21-2ebd-11e6-89d1-89c10cbf98c5","method":{"position":"org.apache.commons.io.IOUtils:878","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.net.URL url) throws java.io.IOException {\n    if ((url.getProtocol().equals(\"file\")) == false) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.IOUtils.toString(url, java.nio.charset.Charset.defaultCharset());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"url":"url"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.AutoCloseInputStream:76","type":"CtBinaryOperatorImpl","sourcecode":"n == (-1)"},"failures":[],"tindex":"47fe3f22-2ebd-11e6-89d1-d5f719ce457d","method":{"position":"org.apache.commons.io.output.ProxyWriter:259","type":"CtMethodImpl","sourcecode":"protected void afterWrite(int n) throws java.io.IOException {\n    if (n == (-1)) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (n == (-1)) {\n                throw new java.io.IOException();\n            } else {\n                {\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1489","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"47fe6633-2ebd-11e6-89d1-b7891f48253c","method":{"position":"org.apache.commons.io.IOUtils:1395","type":"CtMethodImpl","sourcecode":"public static void write(char[] data, java.io.OutputStream output, java.lang.String encoding) throws java.io.IOException {\n    if (encoding != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.IOUtils.write(data, output, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"encoding"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"47fe6634-2ebd-11e6-89d1-758edd027439","method":{"position":"org.apache.commons.io.output.ProxyWriter:74","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence csq, int start, int end) throws java.io.IOException {\n    if (end == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                beforeWrite((end - start));\n                java.io.Writer.append(csq, start, end);\n                afterWrite((end - start));\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n            return org.apache.commons.io.output.ProxyWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"end"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1565","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"47fe6635-2ebd-11e6-89d1-9b0ab77c0c56","method":{"position":"org.apache.commons.io.FileCleaningTracker:90","type":"CtMethodImpl","sourcecode":"public void track(java.io.File file, java.lang.Object marker, org.apache.commons.io.FileDeleteStrategy deleteStrategy) {\n    if (file.isDirectory()) {\n        {\n            if (file == null) {\n                throw new java.lang.NullPointerException(\"The file must not be null\");\n            } \n            addTracker(file.getPath(), marker, deleteStrategy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.ThreadMonitor:69","type":"CtBinaryOperatorImpl","sourcecode":"timeout > 0"},"failures":[],"tindex":"47fe6636-2ebd-11e6-89d1-072e4bd8ca83","method":{"position":"org.apache.commons.io.FileSystemUtils:233","type":"CtMethodImpl","sourcecode":"public static long freeSpaceKb(long timeout) throws java.io.IOException {\n    if (timeout > 0) {\n        {\n            return org.apache.commons.io.FileSystemUtils.freeSpaceKb(new java.io.File(\".\").getAbsolutePath(), timeout);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeout":"timeout"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:134","type":"CtBinaryOperatorImpl","sourcecode":"chr != null"},"failures":[],"tindex":"47fe6637-2ebd-11e6-89d1-c1f6ecd3118a","method":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:288","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr, int st, int end) throws java.io.IOException {\n    if (chr != null) {\n        {\n            java.io.Writer.write(chr, st, end);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chr":"chr"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CharSequenceReader:140","type":"CtBinaryOperatorImpl","sourcecode":"n < 0"},"failures":[],"tindex":"47fe8d48-2ebd-11e6-89d1-97a84e7c5364","method":{"position":"org.apache.commons.io.input.CharSequenceInputStream:165","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) throws java.io.IOException {\n    if (n < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (n < 0) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    int int = 0;\n                    while ((n > 0) && (org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.CharBuffer.hasRemaining())) {\n                        org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.CharBuffer.get();\n                        n--;\n                        skipped++;\n                    }\n                    return skipped;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:493","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"47fe8d49-2ebd-11e6-89d1-8d03924ba050","method":{"position":"org.apache.commons.io.input.ProxyInputStream:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] bts, int off, int len) throws java.io.IOException {\n    if (len == 0) {\n        {\n            try {\n                beforeRead(len);\n                int int = java.io.InputStream.read(bts, off, len);\n                afterRead(n);\n                return n;\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n                return -1;\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"len"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.comparator.SizeFileComparator:110","type":"CtInvocationImpl","sourcecode":"file1.isDirectory()"},"failures":[],"tindex":"47fe8d4a-2ebd-11e6-89d1-3bd3adbf2a29","method":{"position":"org.apache.commons.io.comparator.ReverseComparator:54","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if (file2.isDirectory()) {\n        {\n            return java.util.Comparator<java.io.File>.compare(file2, file1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file1":"file2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.OrFileFilter:150","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[],"tindex":"47feb45b-2ebd-11e6-89d1-097d3044f843","method":{"position":"org.apache.commons.io.input.ReversedLinesFileReader:329","type":"CtMethodImpl","sourcecode":"private int getNewLineMatchByteCount(byte[] data, int i) {\n    if (i > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (i > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (byte[] byte[] : byte[][]) {\n                        boolean boolean = true;\n                        for (int int = (newLineSequence.int) - 1 ; j >= 0 ; j--) {\n                            int int = (i + j) - ((newLineSequence.int) - 1);\n                            match &= (k >= 0) && ((data[k]) == (newLineSequence[j]));\n                        }\n                        if (match) {\n                            return newLineSequence.int;\n                        } \n                    }\n                    return 0;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:949","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"47feb45c-2ebd-11e6-89d1-0d6e1f0b16fe","method":{"position":"org.apache.commons.io.FilenameUtils:749","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPrefix(java.lang.String filename) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filename == null) {\n                return null;\n            } \n            int int = org.apache.commons.io.FilenameUtils.getPrefixLength(filename);\n            if (len < 0) {\n                return null;\n            } \n            if (len > (filename.length())) {\n                return filename + (org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char);\n            } \n            return filename.substring(0, len);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"47feb45d-2ebd-11e6-89d1-495b51d08d8c","method":{"position":"org.apache.commons.io.output.NullWriter:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr, int st, int end) {\n    if (end == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"end"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:2402","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[],"tindex":"47feb45e-2ebd-11e6-89d1-1b92f91aaf5d","method":{"position":"org.apache.commons.io.input.CharSequenceReader:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] array, int offset, int length) {\n    if (offset < 0) {\n        {\n            if ((int) >= (java.lang.CharSequence.length())) {\n                return -1;\n            } \n            if (array == null) {\n                throw new java.lang.NullPointerException(\"Character array is missing\");\n            } \n            if (((length < 0) || (offset < 0)) || ((offset + length) > (array.int))) {\n                throw new java.lang.IndexOutOfBoundsException((((((\"Array Size=\" + (array.int)) + \", offset=\") + offset) + \", length=\") + length));\n            } \n            int int = 0;\n            for (int int = 0 ; i < length ; i++) {\n                int int = read();\n                if (c == (-1)) {\n                    return count;\n                } \n                array[(offset + i)] = ((char)(c));\n                count++;\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"offset"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:96","type":"CtBinaryOperatorImpl","sourcecode":"observer != null"},"failures":[],"tindex":"47fedb6f-2ebd-11e6-89d1-2de33d2319bd","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:35","type":"CtMethodImpl","sourcecode":"public void onStart(final org.apache.commons.io.monitor.FileAlterationObserver observer) {\n    if (observer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"observer":"observer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:109","type":"CtBinaryOperatorImpl","sourcecode":"(dir != null) && (new java.io.File(dir , name).isDirectory())"},"failures":[],"tindex":"47fedb70-2ebd-11e6-89d1-2dab58e8b3e7","method":{"position":"org.apache.commons.io.filefilter.FalseFileFilter:68","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File dir, java.lang.String name) {\n    if ((dir != null) && (new java.io.File(dir , name).isDirectory())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name","dir":"dir"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:356","type":"CtBinaryOperatorImpl","sourcecode":"(file.canWrite()) == false"},"failures":[],"tindex":"47fedb71-2ebd-11e6-89d1-bf75b029d349","method":{"position":"org.apache.commons.io.monitor.FileEntry:93","type":"CtMethodImpl","sourcecode":"public boolean refresh(java.io.File file) {\n    if ((file.canWrite()) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = boolean;\n            long long = long;\n            boolean boolean = boolean;\n            long long = long;\n            java.lang.String = file.getName();\n            boolean = file.exists();\n            boolean = boolean ? file.isDirectory() : false;\n            long = boolean ? file.lastModified() : 0;\n            long = (boolean) && (!(boolean)) ? file.length() : 0;\n            return ((((boolean) != origExists) || ((long) != origLastModified)) || ((boolean) != origDirectory)) || ((long) != origLength);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"47ff0282-2ebd-11e6-89d1-2f51012ff2fb","method":{"position":"org.apache.commons.io.EndianUtils:344","type":"CtMethodImpl","sourcecode":"public static int readSwappedInteger(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            return ((((value1 & 255) << 0) + ((value2 & 255) << 8)) + ((value3 & 255) << 16)) + ((value4 & 255) << 24);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.EmptyFileFilter:77","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"47ff0283-2ebd-11e6-89d1-c7408edc0f99","method":{"position":"org.apache.commons.io.FileUtils:2014","type":"CtMethodImpl","sourcecode":"public static void write(java.io.File file, java.lang.CharSequence data, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (file.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.write(file, data, encoding, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:239","type":"CtBinaryOperatorImpl","sourcecode":"((file != null) && (file.isFile())) && (file.canRead())"},"failures":[],"tindex":"47ff0284-2ebd-11e6-89d1-c5244a23f0f4","method":{"position":"org.apache.commons.io.filefilter.AgeFileFilter:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (((file != null) && (file.isFile())) && (file.canRead())) {\n        {\n            boolean boolean = org.apache.commons.io.FileUtils.isFileNewer(file, long);\n            return boolean ? !newer : newer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2596","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"47ff0285-2ebd-11e6-89d1-75aa0eb7a0f1","method":{"position":"org.apache.commons.io.filefilter.TrueFileFilter:56","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File file) {\n    if (file == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:493","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"47ff2996-2ebd-11e6-89d1-a5f95394efa0","method":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b, int off, int len) {\n    if (len == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((((off < 0) || (off > (b.int))) || (len < 0)) || ((off + len) > (b.int))) || ((off + len) < 0)) {\n                throw new java.lang.IndexOutOfBoundsException();\n            } else if (len == 0) {\n                return ;\n            } \n            synchronized(org.apache.commons.io.output.ByteArrayOutputStream.this) {\n                int int = (int) + len;\n                int int = len;\n                int int = (int) - (int);\n                while (remaining > 0) {\n                    int int = java.lang.Math.min(remaining, ((byte[].int) - inBufferPos));\n                    java.lang.System.arraycopy(b, ((off + len) - remaining), byte[], inBufferPos, part);\n                    remaining -= part;\n                    if (remaining > 0) {\n                        needNewBuffer(newcount);\n                        inBufferPos = 0;\n                    } \n                }\n                int = newcount;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"len"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2921","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"47ff2997-2ebd-11e6-89d1-6d8b54fd7590","method":{"position":"org.apache.commons.io.FileUtils:2292","type":"CtMethodImpl","sourcecode":"public static void forceDeleteOnExit(java.io.File file) throws java.io.IOException {\n    if (file == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (file.isDirectory()) {\n                org.apache.commons.io.FileUtils.deleteDirectoryOnExit(file);\n            } else {\n                file.deleteOnExit();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.TeeInputStream:145","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"47ff2998-2ebd-11e6-89d1-a1619a660ce7","method":{"position":"org.apache.commons.io.input.ProxyReader:243","type":"CtMethodImpl","sourcecode":"protected void afterRead(int n) throws java.io.IOException {\n    if (n != (-1)) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"47ff50a9-2ebd-11e6-89d1-6700da6e71ed","method":{"position":"org.apache.commons.io.filefilter.WildcardFilter:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file == null) {\n        {\n            if (file.isDirectory()) {\n                return false;\n            } \n            for (java.lang.String java.lang.String : java.lang.String[]) {\n                if (org.apache.commons.io.FilenameUtils.wildcardMatch(file.getName(), wildcard)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1617","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"47ff50aa-2ebd-11e6-89d1-c907478d65eb","method":{"position":"org.apache.commons.io.IOUtils:1590","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static void write(java.lang.StringBuffer data, java.io.OutputStream output) throws java.io.IOException {\n    if (data != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.IOUtils.write(data, output, ((java.lang.String)(null)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:711","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"47ff50ab-2ebd-11e6-89d1-39a6aff31dbd","method":{"position":"org.apache.commons.io.FilenameUtils:1277","type":"CtMethodImpl","sourcecode":"public static boolean wildcardMatch(java.lang.String filename, java.lang.String wildcardMatcher, org.apache.commons.io.IOCase caseSensitivity) {\n    if (wildcardMatcher == null) {\n        {\n            if ((filename == null) && (wildcardMatcher == null)) {\n                return true;\n            } \n            if ((filename == null) || (wildcardMatcher == null)) {\n                return false;\n            } \n            if (caseSensitivity == null) {\n                caseSensitivity = org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase;\n            } \n            java.lang.String[] java.lang.String[] = org.apache.commons.io.FilenameUtils.splitOnTokens(wildcardMatcher);\n            boolean boolean = false;\n            int int = 0;\n            int int = 0;\n            java.util.Stack<int[]> java.util.Stack<int[]> = new java.util.Stack<int[]>();\n            do {\n                if ((backtrack.size()) > 0) {\n                    int[] int[] = backtrack.pop();\n                    wcsIdx = array[0];\n                    textIdx = array[1];\n                    anyChars = true;\n                } \n                while (wcsIdx < (wcs.int)) {\n                    if (wcs[wcsIdx].equals(\"?\")) {\n                        textIdx++;\n                        if (textIdx > (filename.length())) {\n                            break;\n                        } \n                        anyChars = false;\n                    } else if (wcs[wcsIdx].equals(\"*\")) {\n                        anyChars = true;\n                        if (wcsIdx == ((wcs.int) - 1)) {\n                            textIdx = filename.length();\n                        } \n                    } else {\n                        if (anyChars) {\n                            textIdx = caseSensitivity.checkIndexOf(filename, textIdx, wcs[wcsIdx]);\n                            if (textIdx == (-1)) {\n                                break;\n                            } \n                            int int = caseSensitivity.checkIndexOf(filename, (textIdx + 1), wcs[wcsIdx]);\n                            if (repeat >= 0) {\n                                backtrack.push(new int[]{ wcsIdx , repeat });\n                            } \n                        } else {\n                            if (!(caseSensitivity.checkRegionMatches(filename, textIdx, wcs[wcsIdx]))) {\n                                break;\n                            } \n                        }\n                        textIdx += wcs[wcsIdx].length();\n                        anyChars = false;\n                    }\n                    wcsIdx++;\n                }\n                if ((wcsIdx == (wcs.int)) && (textIdx == (filename.length()))) {\n                    return true;\n                } \n            } while ((backtrack.size()) > 0 );\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"wildcardMatcher"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"commons-io","transformationCount":100,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}