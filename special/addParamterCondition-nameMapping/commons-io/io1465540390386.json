{"failureDictionary":{},"transformations":[{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"3343c580-2ed5-11e6-adf5-238c380402d1","method":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:310","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str, int st, int end) throws java.io.IOException {\n    if (st == 0) {\n        {\n            java.io.Writer.write(str, st, end);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"st"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:291","type":"CtInvocationImpl","sourcecode":"file.exists()"},"failures":[],"tindex":"3344afe1-2ed5-11e6-adf5-c117dfc01097","method":{"position":"org.apache.commons.io.FileUtils:2643","type":"CtMethodImpl","sourcecode":"public static boolean isFileOlder(java.io.File file, java.util.Date date) {\n    if (file.exists()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"No specified date\");\n            } \n            return org.apache.commons.io.FileUtils.isFileOlder(file, date.getTime());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:489","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"3344afe2-2ed5-11e6-adf5-c1ff837274f8","method":{"position":"org.apache.commons.io.IOUtils:865","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.net.URI uri, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        {\n            return org.apache.commons.io.IOUtils.toString(uri, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.BOMInputStream:336","type":"CtBinaryOperatorImpl","sourcecode":"b >= 0"},"failures":[],"tindex":"3344d6f3-2ed5-11e6-adf5-a15b61b55b94","method":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:166","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(int b) {\n    if (b >= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (int) - (int);\n            if (inBufferPos == (byte[].int)) {\n                needNewBuffer(((int) + 1));\n                inBufferPos = 0;\n            } \n            byte[][inBufferPos] = ((byte)(b));\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:489","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"3344d6f4-2ed5-11e6-adf5-1bf1fbb13d35","method":{"position":"org.apache.commons.io.IOUtils:1164","type":"CtMethodImpl","sourcecode":"public static java.io.InputStream toInputStream(java.lang.CharSequence input, java.nio.charset.Charset encoding) {\n    if (input == null) {\n        {\n            return org.apache.commons.io.IOUtils.toInputStream(input.toString(), encoding);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:270","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"3345e865-2ed5-11e6-adf5-37972e8cdcfc","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:211","type":"CtMethodImpl","sourcecode":"public static java.util.Set<java.io.File> filterSet(org.apache.commons.io.filefilter.IOFileFilter filter, java.io.File... files) {\n    if (filter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.io.File[] java.io.File[] = org.apache.commons.io.filefilter.FileFilterUtils.filter(filter, files);\n            return new java.util.HashSet<java.io.File>(java.util.Arrays.asList(acceptedFiles));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"3345e866-2ed5-11e6-adf5-29ee2c339c8b","method":{"position":"org.apache.commons.io.IOUtils:2277","type":"CtMethodImpl","sourcecode":"public static long skip(java.io.InputStream input, long toSkip) throws java.io.IOException {\n    if (null != input) {\n        {\n            if (null != input) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (toSkip < 0) {\n                        throw new java.lang.IllegalArgumentException((\"Skip count must be non-negative, actual: \" + toSkip));\n                    } \n                    if ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.byte[]) == null) {\n                        org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.byte[] = new byte[org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int];\n                    } \n                    long long = toSkip;\n                    while (remain > 0) {\n                        long long = input.read(org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.byte[], 0, ((int)(java.lang.Math.min(remain, org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int))));\n                        if (n < 0) {\n                            break;\n                        } \n                        remain -= n;\n                    }\n                    return toSkip - remain;\n                }\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:72","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"33460f77-2ed5-11e6-adf5-e70132508019","method":{"position":"org.apache.commons.io.EndianUtils:328","type":"CtMethodImpl","sourcecode":"public static void writeSwappedInteger(java.io.OutputStream output, int value) throws java.io.IOException {\n    if (null != output) {\n        {\n            if (null != output) {\n                {\n                    output.write(((byte)((value >> 0) & 255)));\n                    output.write(((byte)((value >> 8) & 255)));\n                    output.write(((byte)((value >> 16) & 255)));\n                    output.write(((byte)((value >> 24) & 255)));\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:72","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"33460f78-2ed5-11e6-adf5-93c35598b347","method":{"position":"org.apache.commons.io.IOUtils:1654","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.util.Collection<?> lines, java.lang.String lineEnding, java.io.OutputStream output, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (null != output) {\n        {\n            if (lines == null) {\n                return ;\n            } \n            if (lineEnding == null) {\n                lineEnding = org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.java.lang.String;\n            } \n            java.nio.charset.Charset java.nio.charset.Charset = org.apache.commons.io.Charsets.toCharset(encoding);\n            for (java.lang.Object java.lang.Object : lines) {\n                if (line != null) {\n                    output.write(line.toString().getBytes(cs));\n                } \n                output.write(lineEnding.getBytes(cs));\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileSystemUtils:259","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"33463689-2ed5-11e6-adf5-0b0ad5ef65a8","method":{"position":"org.apache.commons.io.FileCleaningTracker:120","type":"CtMethodImpl","sourcecode":"public void track(java.lang.String path, java.lang.Object marker, org.apache.commons.io.FileDeleteStrategy deleteStrategy) {\n    if (marker == null) {\n        {\n            if (path == null) {\n                throw new java.lang.NullPointerException(\"The path must not be null\");\n            } \n            addTracker(path, marker, deleteStrategy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"marker"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.StringBuilderWriter:123","type":"CtBinaryOperatorImpl","sourcecode":"value != null"},"failures":[],"tindex":"3346368a-2ed5-11e6-adf5-c52226e7d3fa","method":{"position":"org.apache.commons.io.output.StringBuilderWriter:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence value) {\n    if (value != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.lang.StringBuilder.append(value);\n                    return org.apache.commons.io.output.StringBuilderWriter.this;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.comparator.AbstractFileComparator:44","type":"CtBinaryOperatorImpl","sourcecode":"files != null"},"failures":[],"tindex":"33465d9b-2ed5-11e6-adf5-d3639a32f2f3","method":{"position":"org.apache.commons.io.FileUtils:944","type":"CtMethodImpl","sourcecode":"public static java.net.URL[] toURLs(java.io.File[] files) throws java.io.IOException {\n    if (files != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.net.URL[] java.net.URL[] = new java.net.URL[files.int];\n            for (int int = 0 ; i < (urls.int) ; i++) {\n                urls[i] = files[i].toURI().toURL();\n            }\n            return urls;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"files":"files"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"33465d9c-2ed5-11e6-adf5-6325eec7fa71","method":{"position":"org.apache.commons.io.output.LockableFileWriter:361","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str, int st, int end) throws java.io.IOException {\n    if (end == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.Writer.write(str, st, end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"end"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1122","type":"CtBinaryOperatorImpl","sourcecode":"(filename1 == null) || (filename2 == null)"},"failures":[],"tindex":"33465d9d-2ed5-11e6-adf5-cb51ac4d5c8a","method":{"position":"org.apache.commons.io.FilenameUtils:1080","type":"CtMethodImpl","sourcecode":"public static boolean equalsNormalized(java.lang.String filename1, java.lang.String filename2) {\n    if ((filename2 == null) || (filename1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((filename2 == null) || (filename2 == null)) {\n                {\n                    return org.apache.commons.io.FilenameUtils.equals(filename1, filename2, true, org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename2":"filename2","filename1":"filename2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:802","type":"CtInvocationImpl","sourcecode":"file1.getCanonicalFile().equals(file2.getCanonicalFile())"},"failures":[],"tindex":"334684ae-2ed5-11e6-adf5-4bc05c007dc4","method":{"position":"org.apache.commons.io.comparator.NameFileComparator:101","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if (file2.getCanonicalFile().equals(file1.getCanonicalFile())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.IOCase.checkCompareTo(file1.getName(), file2.getName());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file2":"file1","file1":"file2"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:627","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"334684af-2ed5-11e6-adf5-ab9022f14ba2","method":{"position":"org.apache.commons.io.input.CharSequenceInputStream:113","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] b, int off, int len) throws java.io.IOException {\n    if (off == 0) {\n        {\n            if (b == null) {\n                throw new java.lang.NullPointerException(\"Byte array is null\");\n            } \n            if ((len < 0) || ((off + len) > (b.int))) {\n                throw new java.lang.IndexOutOfBoundsException((((((\"Array Size=\" + (b.int)) + \", offset=\") + off) + \", length=\") + len));\n            } \n            if (len == 0) {\n                return 0;\n            } \n            if ((!(org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.ByteBuffer.hasRemaining())) && (!(org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.CharBuffer.hasRemaining()))) {\n                return -1;\n            } \n            int int = 0;\n            while (len > 0) {\n                if (org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.ByteBuffer.hasRemaining()) {\n                    int int = java.lang.Math.min(org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.ByteBuffer.remaining(), len);\n                    org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.ByteBuffer.get(b, off, chunk);\n                    off += chunk;\n                    len -= chunk;\n                    bytesRead += chunk;\n                } else {\n                    fillBuffer();\n                    if ((!(org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.ByteBuffer.hasRemaining())) && (!(org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.CharBuffer.hasRemaining()))) {\n                        break;\n                    } \n                }\n            }\n            return (bytesRead == 0) && (!(org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.CharBuffer.hasRemaining())) ? -1 : bytesRead;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"off"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1329","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"3346abc0-2ed5-11e6-adf5-313d9efb9904","method":{"position":"org.apache.commons.io.IOUtils:1328","type":"CtMethodImpl","sourcecode":"public static void write(char[] data, java.io.Writer output) throws java.io.IOException {\n    if (data != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (data != null) {\n                output.write(data);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileCleaningTracker:91","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"3346abc1-2ed5-11e6-adf5-5ff7cf491302","method":{"position":"org.apache.commons.io.FileUtils:325","type":"CtMethodImpl","sourcecode":"public static java.io.FileOutputStream openOutputStream(java.io.File file) throws java.io.IOException {\n    if (file == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.FileUtils.openOutputStream(file, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:109","type":"CtBinaryOperatorImpl","sourcecode":"(dir != null) && (new java.io.File(dir , name).isDirectory())"},"failures":[],"tindex":"3346abc2-2ed5-11e6-adf5-c172c44608fb","method":{"position":"org.apache.commons.io.filefilter.RegexFileFilter:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File dir, java.lang.String name) {\n    if ((dir != null) && (new java.io.File(dir , name).isDirectory())) {\n        {\n            return java.util.regex.Pattern.matcher(name).matches();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name","dir":"dir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileDeleteStrategy:72","type":"CtBinaryOperatorImpl","sourcecode":"(fileToDelete == null) || ((fileToDelete.exists()) == false)"},"failures":[],"tindex":"3347e443-2ed5-11e6-adf5-d7e2fa7977f4","method":{"position":"org.apache.commons.io.FileDeleteStrategy:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean doDelete(java.io.File fileToDelete) throws java.io.IOException {\n    if ((fileToDelete == null) || ((fileToDelete.exists()) == false)) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.forceDelete(fileToDelete);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fileToDelete":"fileToDelete"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"3347e444-2ed5-11e6-adf5-616d07e1197d","method":{"position":"org.apache.commons.io.output.NullWriter:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence csq, int start, int end) {\n    if (start == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.output.NullWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"start"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1613","type":"CtBinaryOperatorImpl","sourcecode":"child == null"},"failures":[],"tindex":"33480b55-2ed5-11e6-adf5-f33bef4cac91","method":{"position":"org.apache.commons.io.FileUtils:1602","type":"CtMethodImpl","sourcecode":"public static boolean directoryContains(final java.io.File directory, final java.io.File child) throws java.io.IOException {\n    if (directory == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (directory == null) {\n                throw new java.lang.IllegalArgumentException(\"Directory must not be null\");\n            } \n            if (!(directory.isDirectory())) {\n                throw new java.lang.IllegalArgumentException((\"Not a directory: \" + directory));\n            } \n            if (child == null) {\n                return false;\n            } \n            if ((!(directory.exists())) || (!(child.exists()))) {\n                return false;\n            } \n            java.lang.String java.lang.String = directory.getCanonicalPath();\n            java.lang.String java.lang.String = child.getCanonicalPath();\n            return org.apache.commons.io.FilenameUtils.directoryContains(canonicalParent, canonicalChild);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"child":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:580","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"33480b56-2ed5-11e6-adf5-f569cf4d6a95","method":{"position":"org.apache.commons.io.FileCleaningTracker:106","type":"CtMethodImpl","sourcecode":"public void track(java.lang.String path, java.lang.Object marker) {\n    if (marker == null) {\n        {\n            track(path, marker, ((org.apache.commons.io.FileDeleteStrategy)(null)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"marker"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:164","type":"CtBinaryOperatorImpl","sourcecode":"conn instanceof java.net.HttpURLConnection"},"failures":[],"tindex":"33480b57-2ed5-11e6-adf5-e55ccdd5d884","method":{"position":"org.apache.commons.io.IOUtils:163","type":"CtMethodImpl","sourcecode":"public static void close(java.net.URLConnection conn) {\n    if (conn instanceof java.net.HttpURLConnection) {\n        {\n            if (conn instanceof java.net.HttpURLConnection) {\n                ((java.net.HttpURLConnection)(conn)).disconnect();\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"conn":"conn"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:790","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"33480b58-2ed5-11e6-adf5-676f4cffddae","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:503","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FileFilter filter) {\n    if (filter == null) {\n        {\n            return new org.apache.commons.io.filefilter.DelegateFileFilter(filter);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:130","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"33483269-2ed5-11e6-adf5-2fc7bbfd5369","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:394","type":"CtMethodImpl","sourcecode":"private void doMatch(org.apache.commons.io.monitor.FileEntry entry, java.io.File file) {\n    if (file.isDirectory()) {\n        {\n            if (entry.refresh(file)) {\n                for (org.apache.commons.io.monitor.FileAlterationListener org.apache.commons.io.monitor.FileAlterationListener : java.util.List<org.apache.commons.io.monitor.FileAlterationListener>) {\n                    if (entry.isDirectory()) {\n                        listener.onDirectoryChange(file);\n                    } else {\n                        listener.onFileChange(file);\n                    }\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"fileFilter == null"},"failures":[],"tindex":"3348326a-2ed5-11e6-adf5-75495953b07d","method":{"position":"org.apache.commons.io.FileUtils:558","type":"CtMethodImpl","sourcecode":"private static org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter fileFilter) {\n    if (fileFilter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.filefilter.FileFilterUtils.and(fileFilter, org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.IOFileFilter));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fileFilter":"fileFilter"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:72","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"3348f5bb-2ed5-11e6-adf5-e141353a10aa","method":{"position":"org.apache.commons.io.IOUtils:1525","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.String data, java.io.OutputStream output, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (null != output) {\n        {\n            if (data != null) {\n                output.write(data.getBytes(org.apache.commons.io.Charsets.toCharset(encoding)));\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:164","type":"CtBinaryOperatorImpl","sourcecode":"(magicNumber.length()) == 0"},"failures":[],"tindex":"3348f5bc-2ed5-11e6-adf5-077406b60530","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:657","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String magicNumber) {\n    if ((magicNumber.length()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.MagicNumberFileFilter(magicNumber);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"magicNumber":"magicNumber"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1861","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[],"tindex":"3348f5bd-2ed5-11e6-adf5-c78c81c4008a","method":{"position":"org.apache.commons.io.IOUtils:1818","type":"CtMethodImpl","sourcecode":"public static long copyLarge(java.io.InputStream input, java.io.OutputStream output, long inputOffset, long length) throws java.io.IOException {\n    if (length > 0) {\n        {\n            return org.apache.commons.io.IOUtils.copyLarge(input, output, inputOffset, length, new byte[org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int]);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:96","type":"CtBinaryOperatorImpl","sourcecode":"csq != null"},"failures":[],"tindex":"3348f5be-2ed5-11e6-adf5-7bec8677287f","method":{"position":"org.apache.commons.io.output.ProxyWriter:74","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence csq, int start, int end) throws java.io.IOException {\n    if (csq != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                beforeWrite((end - start));\n                java.io.Writer.append(csq, start, end);\n                afterWrite((end - start));\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n            return org.apache.commons.io.output.ProxyWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"csq":"csq"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:348","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"33491ccf-2ed5-11e6-adf5-6d932455dc9d","method":{"position":"org.apache.commons.io.FilenameUtils:240","type":"CtMethodImpl","sourcecode":"public static java.lang.String normalize(java.lang.String filename, boolean unixSeparator) {\n    if (filename == null) {\n        {\n            char char = unixSeparator ? org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char : org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char;\n            return org.apache.commons.io.FilenameUtils.doNormalize(filename, separator, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:134","type":"CtBinaryOperatorImpl","sourcecode":"chr != null"},"failures":[],"tindex":"33491cd0-2ed5-11e6-adf5-4bdbb230813d","method":{"position":"org.apache.commons.io.input.ProxyReader:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] chr, int st, int len) throws java.io.IOException {\n    if (chr != null) {\n        {\n            try {\n                beforeRead(len);\n                int int = java.io.Reader.read(chr, st, len);\n                afterRead(n);\n                return n;\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n                return -1;\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chr":"chr"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1122","type":"CtBinaryOperatorImpl","sourcecode":"(filename1 == null) || (filename2 == null)"},"failures":[],"tindex":"334943e1-2ed5-11e6-adf5-49dcfed49b94","method":{"position":"org.apache.commons.io.FilenameUtils:1080","type":"CtMethodImpl","sourcecode":"public static boolean equalsNormalized(java.lang.String filename1, java.lang.String filename2) {\n    if ((filename2 == null) || (filename1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((filename2 == null) || (filename2 == null)) {\n                {\n                    return org.apache.commons.io.FilenameUtils.equals(filename1, filename2, true, org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename2":"filename1","filename1":"filename2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2833","type":"CtUnaryOperatorImpl","sourcecode":"!(srcFile.delete())"},"failures":[],"tindex":"334943e2-2ed5-11e6-adf5-39ef1e747825","method":{"position":"org.apache.commons.io.FileUtils:1037","type":"CtMethodImpl","sourcecode":"public static void copyFile(java.io.File srcFile, java.io.File destFile) throws java.io.IOException {\n    if (!(srcFile.delete())) {\n        {\n            org.apache.commons.io.FileUtils.copyFile(srcFile, destFile, true);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcFile":"srcFile"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.comparator.AbstractFileComparator:61","type":"CtBinaryOperatorImpl","sourcecode":"files != null"},"failures":[],"tindex":"334943e3-2ed5-11e6-adf5-b31ef1a07e9b","method":{"position":"org.apache.commons.io.comparator.AbstractFileComparator:60","type":"CtMethodImpl","sourcecode":"public java.util.List<java.io.File> sort(java.util.List<java.io.File> files) {\n    if (files != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (files != null) {\n                java.util.Collections.sort(files, org.apache.commons.io.comparator.AbstractFileComparator.this);\n            } \n            return files;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"files":"files"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.TeeInputStream:128","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"334943e4-2ed5-11e6-adf5-e39a7979aebd","method":{"position":"org.apache.commons.io.output.ProxyWriter:259","type":"CtMethodImpl","sourcecode":"protected void afterWrite(int n) throws java.io.IOException {\n    if (n != (-1)) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1565","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"33496af5-2ed5-11e6-adf5-bd44ebbe57c3","method":{"position":"org.apache.commons.io.FileUtils:2620","type":"CtMethodImpl","sourcecode":"public static boolean isFileOlder(java.io.File file, java.io.File reference) {\n    if (file.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (reference == null) {\n                throw new java.lang.IllegalArgumentException(\"No specified reference file\");\n            } \n            if (!(reference.exists())) {\n                throw new java.lang.IllegalArgumentException(((\"The reference file '\" + reference) + \"' doesn't exist\"));\n            } \n            return org.apache.commons.io.FileUtils.isFileOlder(file, reference.lastModified());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1009","type":"CtBinaryOperatorImpl","sourcecode":"(destDir.exists()) && ((destDir.isDirectory()) == false)"},"failures":[],"tindex":"33496af6-2ed5-11e6-adf5-ab89c5264480","method":{"position":"org.apache.commons.io.FileUtils:2854","type":"CtMethodImpl","sourcecode":"public static void moveFileToDirectory(java.io.File srcFile, java.io.File destDir, boolean createDestDir) throws java.io.IOException {\n    if (srcFile.isDirectory()) {\n        {\n            if ((srcFile.exists()) && ((destDir.isDirectory()) == false)) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (srcFile == null) {\n                        throw new java.lang.NullPointerException(\"Source must not be null\");\n                    } \n                    if (destDir == null) {\n                        throw new java.lang.NullPointerException(\"Destination directory must not be null\");\n                    } \n                    if ((!(destDir.exists())) && createDestDir) {\n                        destDir.mkdirs();\n                    } \n                    if (!(destDir.exists())) {\n                        throw new java.io.FileNotFoundException(((((\"Destination directory '\" + destDir) + \"' does not exist [createDestDir=\") + createDestDir) + \"]\"));\n                    } \n                    if (!(destDir.isDirectory())) {\n                        throw new java.io.IOException(((\"Destination '\" + destDir) + \"' is not a directory\"));\n                    } \n                    org.apache.commons.io.FileUtils.moveFile(srcFile, new java.io.File(destDir , srcFile.getName()));\n                }\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"srcFile"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NameFileFilter:69","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"33496af7-2ed5-11e6-adf5-eb58127740a6","method":{"position":"org.apache.commons.io.monitor.FileEntry:189","type":"CtMethodImpl","sourcecode":"public void setName(java.lang.String name) {\n    if (name == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.monitor.FileEntry.this.java.lang.String = name;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:740","type":"CtBinaryOperatorImpl","sourcecode":"(file1.isDirectory()) || (file2.isDirectory())"},"failures":[],"tindex":"33496af8-2ed5-11e6-adf5-e930bf36b906","method":{"position":"org.apache.commons.io.comparator.SizeFileComparator:108","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if ((file2.isDirectory()) || (file1.isDirectory())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            long long = 0;\n            if (file1.isDirectory()) {\n                size1 = (boolean) && (file1.exists()) ? org.apache.commons.io.FileUtils.sizeOfDirectory(file1) : 0;\n            } else {\n                size1 = file1.length();\n            }\n            long long = 0;\n            if (file2.isDirectory()) {\n                size2 = (boolean) && (file2.exists()) ? org.apache.commons.io.FileUtils.sizeOfDirectory(file2) : 0;\n            } else {\n                size2 = file2.length();\n            }\n            long long = size1 - size2;\n            if (result < 0) {\n                return -1;\n            } else if (result > 0) {\n                return 1;\n            } else {\n                return 0;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file2":"file1","file1":"file2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:790","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"33499209-2ed5-11e6-adf5-a7a35abdb438","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:76","type":"CtMethodImpl","sourcecode":"public static java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter filter, java.io.File... files) {\n    if (filter == null) {\n        {\n            if (filter == null) {\n                throw new java.lang.IllegalArgumentException(\"file filter is null\");\n            } \n            if (files == null) {\n                return new java.io.File[0];\n            } \n            java.util.List<java.io.File> java.util.List<java.io.File> = new java.util.ArrayList<java.io.File>();\n            for (java.io.File java.io.File : files) {\n                if (file == null) {\n                    throw new java.lang.IllegalArgumentException(\"file array contains null\");\n                } \n                if (filter.accept(file)) {\n                    acceptedFiles.add(file);\n                } \n            }\n            return acceptedFiles.toArray(new java.io.File[acceptedFiles.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"3349920a-2ed5-11e6-adf5-47a87c581b0f","method":{"position":"org.apache.commons.io.EndianUtils:426","type":"CtMethodImpl","sourcecode":"public static void writeSwappedFloat(java.io.OutputStream output, float value) throws java.io.IOException {\n    if (null != output) {\n        {\n            org.apache.commons.io.EndianUtils.writeSwappedInteger(output, java.lang.Float.floatToIntBits(value));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NameFileFilter:69","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"3349920b-2ed5-11e6-adf5-c9ba2772abce","method":{"position":"org.apache.commons.io.filefilter.AbstractFileFilter:50","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File dir, java.lang.String name) {\n    if (name == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return accept(new java.io.File(dir , name));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1249","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"3349b91c-2ed5-11e6-adf5-3bb26698eaef","method":{"position":"org.apache.commons.io.IOUtils:1247","type":"CtMethodImpl","sourcecode":"public static void write(byte[] data, java.io.OutputStream output) throws java.io.IOException {\n    if (data != null) {\n        {\n            if (data != null) {\n                output.write(data);\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:96","type":"CtBinaryOperatorImpl","sourcecode":"observer != null"},"failures":[],"tindex":"3349b91d-2ed5-11e6-adf5-235ef3fb8ac1","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:35","type":"CtMethodImpl","sourcecode":"public void onStart(final org.apache.commons.io.monitor.FileAlterationObserver observer) {\n    if (observer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"observer":"observer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NameFileFilter:69","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"334a073e-2ed5-11e6-adf5-756aade7d446","method":{"position":"org.apache.commons.io.IOCase:80","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.IOCase forName(java.lang.String name) {\n    if (name == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.java.lang.String.equals(name)) {\n                return org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase;\n            } \n            if (org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.java.lang.String.equals(name)) {\n                return org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase;\n            } \n            if (org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.java.lang.String.equals(name)) {\n                return org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase;\n            } \n            throw new java.lang.IllegalArgumentException((\"Invalid IOCase name: \" + name));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.DelegateFileFilter:46","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"334a2e4f-2ed5-11e6-adf5-6bfdcc463262","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:515","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FilenameFilter filter) {\n    if (filter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.DelegateFileFilter(filter);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"334a2e50-2ed5-11e6-adf5-73b98355e0c0","method":{"position":"org.apache.commons.io.IOUtils:1101","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.LineIterator lineIterator(java.io.InputStream input, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (null != input) {\n        {\n            return new org.apache.commons.io.LineIterator(new java.io.InputStreamReader(input , org.apache.commons.io.Charsets.toCharset(encoding)));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1425","type":"CtInvocationImpl","sourcecode":"srcFile.isDirectory()"},"failures":[],"tindex":"334a2e51-2ed5-11e6-adf5-9f064e7fafdf","method":{"position":"org.apache.commons.io.FileUtils:2854","type":"CtMethodImpl","sourcecode":"public static void moveFileToDirectory(java.io.File srcFile, java.io.File destDir, boolean createDestDir) throws java.io.IOException {\n    if (srcFile.isDirectory()) {\n        {\n            if ((srcFile.exists()) && ((destDir.isDirectory()) == false)) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (srcFile == null) {\n                        throw new java.lang.NullPointerException(\"Source must not be null\");\n                    } \n                    if (destDir == null) {\n                        throw new java.lang.NullPointerException(\"Destination directory must not be null\");\n                    } \n                    if ((!(destDir.exists())) && createDestDir) {\n                        destDir.mkdirs();\n                    } \n                    if (!(destDir.exists())) {\n                        throw new java.io.FileNotFoundException(((((\"Destination directory '\" + destDir) + \"' does not exist [createDestDir=\") + createDestDir) + \"]\"));\n                    } \n                    if (!(destDir.isDirectory())) {\n                        throw new java.io.IOException(((\"Destination '\" + destDir) + \"' is not a directory\"));\n                    } \n                    org.apache.commons.io.FileUtils.moveFile(srcFile, new java.io.File(destDir , srcFile.getName()));\n                }\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcFile":"srcFile"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1570","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"334a5562-2ed5-11e6-adf5-69ab947385de","method":{"position":"org.apache.commons.io.IOUtils:1616","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static void write(java.lang.StringBuffer data, java.io.OutputStream output, java.lang.String encoding) throws java.io.IOException {\n    if (encoding != null) {\n        {\n            if (data != null) {\n                {\n                    if (data != null) {\n                        output.write(data.toString().getBytes(org.apache.commons.io.Charsets.toCharset(encoding)));\n                    } \n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:72","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"334a7c73-2ed5-11e6-adf5-01d584f2bf3f","method":{"position":"org.apache.commons.io.CopyUtils:134","type":"CtMethodImpl","sourcecode":"public static void copy(byte[] input, java.io.OutputStream output) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            output.write(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2663","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"334aa384-2ed5-11e6-adf5-b3cdddee6e93","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:83","type":"CtMethodImpl","sourcecode":"public void onFileDelete(final java.io.File file) {\n    if (file == null) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:493","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"334aca95-2ed5-11e6-adf5-cff88e95cfde","method":{"position":"org.apache.commons.io.input.ProxyInputStream:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] bts, int off, int len) throws java.io.IOException {\n    if (off == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                beforeRead(len);\n                int int = java.io.InputStream.read(bts, off, len);\n                afterRead(n);\n                return n;\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"off"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"334aca96-2ed5-11e6-adf5-294a3e0c6ab7","method":{"position":"org.apache.commons.io.output.NullWriter:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str) {\n    if (str != null) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1425","type":"CtInvocationImpl","sourcecode":"srcFile.isDirectory()"},"failures":[],"tindex":"334aca97-2ed5-11e6-adf5-9532af0bd432","method":{"position":"org.apache.commons.io.FileUtils:1128","type":"CtMethodImpl","sourcecode":"private static void doCopyFile(java.io.File srcFile, java.io.File destFile, boolean preserveFileDate) throws java.io.IOException {\n    if (destFile.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((destFile.exists()) && (destFile.isDirectory())) {\n                throw new java.io.IOException(((\"Destination '\" + destFile) + \"' exists but is a directory\"));\n            } \n            java.io.FileInputStream java.io.FileInputStream = null;\n            java.io.FileOutputStream java.io.FileOutputStream = null;\n            java.nio.channels.FileChannel java.nio.channels.FileChannel = null;\n            java.nio.channels.FileChannel java.nio.channels.FileChannel = null;\n            try {\n                fis = new java.io.FileInputStream(srcFile);\n                fos = new java.io.FileOutputStream(destFile);\n                input = fis.getChannel();\n                output = fos.getChannel();\n                long long = input.size();\n                long long = 0;\n                long long = 0;\n                while (pos < size) {\n                    count = (size - pos) > (org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.long) ? org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.long : size - pos;\n                    pos += output.transferFrom(input, pos, count);\n                }\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(output);\n                org.apache.commons.io.IOUtils.closeQuietly(fos);\n                org.apache.commons.io.IOUtils.closeQuietly(input);\n                org.apache.commons.io.IOUtils.closeQuietly(fis);\n            }\n            if ((srcFile.length()) != (destFile.length())) {\n                throw new java.io.IOException(((((\"Failed to copy full contents from '\" + srcFile) + \"' to '\") + destFile) + \"'\"));\n            } \n            if (preserveFileDate) {\n                destFile.setLastModified(srcFile.lastModified());\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcFile":"destFile"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2337","type":"CtBinaryOperatorImpl","sourcecode":"files == null"},"failures":[],"tindex":"334af1a8-2ed5-11e6-adf5-dd64f87d2503","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:324","type":"CtMethodImpl","sourcecode":"private void checkAndNotify(org.apache.commons.io.monitor.FileEntry parent, org.apache.commons.io.monitor.FileEntry[] previous, java.io.File[] files) {\n    if (files == null) {\n        {\n            int int = 0;\n            org.apache.commons.io.monitor.FileEntry[] org.apache.commons.io.monitor.FileEntry[] = (files.int) > 0 ? new org.apache.commons.io.monitor.FileEntry[files.int] : org.apache.commons.io.monitor.FileEntry.org.apache.commons.io.monitor.FileEntry.org.apache.commons.io.monitor.FileEntry[];\n            for (org.apache.commons.io.monitor.FileEntry org.apache.commons.io.monitor.FileEntry : previous) {\n                while ((c < (files.int)) && ((java.util.Comparator<java.io.File>.compare(entry.getFile(), files[c])) > 0)) {\n                    current[c] = createFileEntry(parent, files[c]);\n                    doCreate(current[c]);\n                    c++;\n                }\n                if ((c < (files.int)) && ((java.util.Comparator<java.io.File>.compare(entry.getFile(), files[c])) == 0)) {\n                    doMatch(entry, files[c]);\n                    checkAndNotify(entry, entry.getChildren(), listFiles(files[c]));\n                    current[c] = entry;\n                    c++;\n                } else {\n                    checkAndNotify(entry, entry.getChildren(), org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.java.io.File[]);\n                    doDelete(entry);\n                }\n            }\n            for ( ; c < (files.int) ; c++) {\n                current[c] = createFileEntry(parent, files[c]);\n                doCreate(current[c]);\n            }\n            parent.setChildren(current);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"files":"files"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"334af1a9-2ed5-11e6-adf5-f10290afeb8a","method":{"position":"org.apache.commons.io.IOUtils:985","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> readLines(java.io.InputStream input, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.InputStreamReader java.io.InputStreamReader = new java.io.InputStreamReader(input , org.apache.commons.io.Charsets.toCharset(encoding));\n            return org.apache.commons.io.IOUtils.readLines(reader);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:492","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"334b18ba-2ed5-11e6-adf5-ff5e3c4c364d","method":{"position":"org.apache.commons.io.FileUtils:1805","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> readLines(java.io.File file, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.FileUtils.readLines(file, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:482","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"334b8deb-2ed5-11e6-adf5-af001700c066","method":{"position":"org.apache.commons.io.filefilter.DirectoryFileFilter:69","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file.isDirectory()) {\n        {\n            return file.isDirectory();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.DirectoryWalker:330","type":"CtBinaryOperatorImpl","sourcecode":"startDirectory == null"},"failures":[],"tindex":"334bb4fc-2ed5-11e6-adf5-a7040dd52830","method":{"position":"org.apache.commons.io.DirectoryWalker:469","type":"CtMethodImpl","sourcecode":"protected void handleStart(java.io.File startDirectory, java.util.Collection<T> results) throws java.io.IOException {\n    if (startDirectory == null) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startDirectory":"startDirectory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:489","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"334bb4fd-2ed5-11e6-adf5-33d6da423491","method":{"position":"org.apache.commons.io.IOUtils:722","type":"CtMethodImpl","sourcecode":"public static char[] toCharArray(java.io.InputStream is, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.IOUtils.toCharArray(is, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:634","type":"CtBinaryOperatorImpl","sourcecode":"len == 1"},"failures":[],"tindex":"334bb4fe-2ed5-11e6-adf5-1d5359b09f0f","method":{"position":"org.apache.commons.io.input.BOMInputStream:331","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] buf, int off, int len) throws java.io.IOException {\n    if (off == 1) {\n        {\n            int int = 0;\n            int int = 0;\n            while ((len > 0) && (b >= 0)) {\n                b = readFirstBytes();\n                if (b >= 0) {\n                    buf[(off++)] = ((byte)(b & 255));\n                    len--;\n                    firstCount++;\n                } \n            }\n            int int = java.io.InputStream.read(buf, off, len);\n            return secondCount < 0 ? firstCount > 0 ? firstCount : -1 : firstCount + secondCount;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"off"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2513","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(file))"},"failures":[],"tindex":"334bb4ff-2ed5-11e6-adf5-330ca4810ae7","method":{"position":"org.apache.commons.io.FileUtils:2247","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.util.Collection<?> lines, java.lang.String lineEnding, boolean append) throws java.io.IOException {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeLines(file, null, lines, lineEnding, append);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"334c0320-2ed5-11e6-adf5-519bb6cbfc0f","method":{"position":"org.apache.commons.io.EndianUtils:239","type":"CtMethodImpl","sourcecode":"public static void writeSwappedFloat(byte[] data, int offset, float value) {\n    if (data != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.EndianUtils.writeSwappedInteger(data, offset, java.lang.Float.floatToIntBits(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"334c0321-2ed5-11e6-adf5-a76f9c6fda35","method":{"position":"org.apache.commons.io.EndianUtils:328","type":"CtMethodImpl","sourcecode":"public static void writeSwappedInteger(java.io.OutputStream output, int value) throws java.io.IOException {\n    if (null != output) {\n        {\n            if (null != output) {\n                {\n                    output.write(((byte)((value >> 0) & 255)));\n                    output.write(((byte)((value >> 8) & 255)));\n                    output.write(((byte)((value >> 16) & 255)));\n                    output.write(((byte)((value >> 24) & 255)));\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"334c0322-2ed5-11e6-adf5-e37f7ed14de0","method":{"position":"org.apache.commons.io.IOUtils:2557","type":"CtMethodImpl","sourcecode":"public static void readFully(java.io.InputStream input, byte[] buffer) throws java.io.IOException {\n    if (null != input) {\n        {\n            org.apache.commons.io.IOUtils.readFully(input, buffer, 0, buffer.int);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2478","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(file))"},"failures":[],"tindex":"334c0323-2ed5-11e6-adf5-ad63b48d65ff","method":{"position":"org.apache.commons.io.FileUtils:1925","type":"CtMethodImpl","sourcecode":"public static void writeStringToFile(java.io.File file, java.lang.String data, java.nio.charset.Charset encoding, boolean append) throws java.io.IOException {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.OutputStream java.io.OutputStream = null;\n            try {\n                out = org.apache.commons.io.FileUtils.openOutputStream(file, append);\n                org.apache.commons.io.IOUtils.write(data, out, encoding);\n                out.close();\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(out);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"334c2a34-2ed5-11e6-adf5-8ba1899b994a","method":{"position":"org.apache.commons.io.EndianUtils:183","type":"CtMethodImpl","sourcecode":"public static long readSwappedUnsignedInteger(byte[] data, int offset) {\n    if (data != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            long long = ((((data[(offset + 0)]) & 255) << 0) + (((data[(offset + 1)]) & 255) << 8)) + (((data[(offset + 2)]) & 255) << 16);\n            long long = (data[(offset + 3)]) & 255;\n            return (high << 24) + (4294967295L & low);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:489","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"334c2a35-2ed5-11e6-adf5-8b1bb9367f5d","method":{"position":"org.apache.commons.io.IOUtils:1311","type":"CtMethodImpl","sourcecode":"public static void write(byte[] data, java.io.Writer output, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        {\n            org.apache.commons.io.IOUtils.write(data, output, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"334c2a36-2ed5-11e6-adf5-5133b15afdeb","method":{"position":"org.apache.commons.io.IOUtils:2277","type":"CtMethodImpl","sourcecode":"public static long skip(java.io.InputStream input, long toSkip) throws java.io.IOException {\n    if (null != input) {\n        {\n            if (null != input) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (toSkip < 0) {\n                        throw new java.lang.IllegalArgumentException((\"Skip count must be non-negative, actual: \" + toSkip));\n                    } \n                    if ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.byte[]) == null) {\n                        org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.byte[] = new byte[org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int];\n                    } \n                    long long = toSkip;\n                    while (remain > 0) {\n                        long long = input.read(org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.byte[], 0, ((int)(java.lang.Math.min(remain, org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int))));\n                        if (n < 0) {\n                            break;\n                        } \n                        remain -= n;\n                    }\n                    return toSkip - remain;\n                }\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2534","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"334c5147-2ed5-11e6-adf5-cfd81c06b7e9","method":{"position":"org.apache.commons.io.DirectoryWalker:547","type":"CtMethodImpl","sourcecode":"protected void handleRestricted(java.io.File directory, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (!(directory.isDirectory())) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:89","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"334c5148-2ed5-11e6-adf5-df3f477094ab","method":{"position":"org.apache.commons.io.EndianUtils:283","type":"CtMethodImpl","sourcecode":"public static void writeSwappedShort(java.io.OutputStream output, short value) throws java.io.IOException {\n    if (null != output) {\n        {\n            if (null != output) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    output.write(((byte)((value >> 0) & 255)));\n                    output.write(((byte)((value >> 8) & 255)));\n                }\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.CountingInputStream:71","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"334c5149-2ed5-11e6-adf5-ff87ebdf559a","method":{"position":"org.apache.commons.io.input.CountingInputStream:70","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected synchronized void afterRead(int n) {\n    if (n != (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (n != (-1)) {\n                org.apache.commons.io.input.CountingInputStream.this.long += n;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.ReaderInputStream:223","type":"CtBinaryOperatorImpl","sourcecode":"b == null"},"failures":[],"tindex":"334c785a-2ed5-11e6-adf5-f5fbaf2c0837","method":{"position":"org.apache.commons.io.input.ReaderInputStream:260","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] b) throws java.io.IOException {\n    if (b == null) {\n        {\n            return read(b, 0, b.int);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1284","type":"CtBinaryOperatorImpl","sourcecode":"caseSensitivity == null"},"failures":[],"tindex":"334c785b-2ed5-11e6-adf5-3339d603f042","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:354","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String name, org.apache.commons.io.IOCase caseSensitivity) {\n    if (caseSensitivity == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.NameFileFilter(name , caseSensitivity);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"caseSensitivity":"caseSensitivity"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2893","type":"CtBinaryOperatorImpl","sourcecode":"destDir == null"},"failures":[],"tindex":"334c785c-2ed5-11e6-adf5-a37c4405dbf8","method":{"position":"org.apache.commons.io.FileUtils:1189","type":"CtMethodImpl","sourcecode":"public static void copyDirectoryToDirectory(java.io.File srcDir, java.io.File destDir) throws java.io.IOException {\n    if (destDir == null) {\n        {\n            if (srcDir == null) {\n                throw new java.lang.NullPointerException(\"Source must not be null\");\n            } \n            if ((srcDir.exists()) && ((srcDir.isDirectory()) == false)) {\n                throw new java.lang.IllegalArgumentException(((\"Source '\" + destDir) + \"' is not a directory\"));\n            } \n            if (destDir == null) {\n                throw new java.lang.NullPointerException(\"Destination must not be null\");\n            } \n            if ((destDir.exists()) && ((destDir.isDirectory()) == false)) {\n                throw new java.lang.IllegalArgumentException(((\"Destination '\" + destDir) + \"' is not a directory\"));\n            } \n            org.apache.commons.io.FileUtils.copyDirectory(srcDir, new java.io.File(destDir , srcDir.getName()), true);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"destDir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1609","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"334c9f6d-2ed5-11e6-adf5-57010fa54650","method":{"position":"org.apache.commons.io.FileUtils:626","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<java.io.File> iterateFiles(java.io.File directory, org.apache.commons.io.filefilter.IOFileFilter fileFilter, org.apache.commons.io.filefilter.IOFileFilter dirFilter) {\n    if (!(directory.isDirectory())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FileUtils.listFiles(directory, fileFilter, dirFilter).iterator();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.LineIterator:96","type":"CtBinaryOperatorImpl","sourcecode":"line == null"},"failures":[],"tindex":"334cc67e-2ed5-11e6-adf5-31e964f3f41c","method":{"position":"org.apache.commons.io.FileSystemUtils:323","type":"CtMethodImpl","sourcecode":"long parseDir(java.lang.String line, java.lang.String path) throws java.io.IOException {\n    if (line == null) {\n        {\n            int int = 0;\n            int int = 0;\n            int int = (line.length()) - 1;\n            innerLoop1 : while (j >= 0) {\n                char char = line.charAt(j);\n                if (java.lang.Character.isDigit(c)) {\n                    bytesEnd = j + 1;\n                    break innerLoop1;\n                } \n                j--;\n            }\n            innerLoop2 : while (j >= 0) {\n                char char = line.charAt(j);\n                if (((!(java.lang.Character.isDigit(c))) && (c != ',')) && (c != '.')) {\n                    bytesStart = j + 1;\n                    break innerLoop2;\n                } \n                j--;\n            }\n            if (j < 0) {\n                throw new java.io.IOException((((\"Command line 'dir /-c' did not return valid info \" + \"for path '\") + path) + \"'\"));\n            } \n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(line.substring(bytesStart, bytesEnd));\n            for (int int = 0 ; k < (buf.length()) ; k++) {\n                if (((buf.charAt(k)) == ',') || ((buf.charAt(k)) == '.')) {\n                    buf.deleteCharAt((k--));\n                } \n            }\n            return parseBytes(buf.toString(), path);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"line":"line"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2355","type":"CtBinaryOperatorImpl","sourcecode":"toSkip < 0"},"failures":[],"tindex":"334d89cf-2ed5-11e6-adf5-e9af4ab0300a","method":{"position":"org.apache.commons.io.IOUtils:2316","type":"CtMethodImpl","sourcecode":"public static long skip(java.io.Reader input, long toSkip) throws java.io.IOException {\n    if (toSkip < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (toSkip < 0) {\n                throw new java.lang.IllegalArgumentException((\"Skip count must be non-negative, actual: \" + toSkip));\n            } \n            if ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[]) == null) {\n                org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[] = new char[org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int];\n            } \n            long long = toSkip;\n            while (remain > 0) {\n                long long = input.read(org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[], 0, ((int)(java.lang.Math.min(remain, org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int))));\n                if (n < 0) {\n                    break;\n                } \n                remain -= n;\n            }\n            return toSkip - remain;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toSkip":"toSkip"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:89","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"334d89d0-2ed5-11e6-adf5-095baaecfe9a","method":{"position":"org.apache.commons.io.EndianUtils:283","type":"CtMethodImpl","sourcecode":"public static void writeSwappedShort(java.io.OutputStream output, short value) throws java.io.IOException {\n    if (null != output) {\n        {\n            if (null != output) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    output.write(((byte)((value >> 0) & 255)));\n                    output.write(((byte)((value >> 8) & 255)));\n                }\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.XmlStreamWriter:190","type":"CtBinaryOperatorImpl","sourcecode":"(encoding) != null"},"failures":[],"tindex":"334d89d1-2ed5-11e6-adf5-c961e7378dd6","method":{"position":"org.apache.commons.io.IOUtils:916","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.net.URL url, java.lang.String encoding) throws java.io.IOException {\n    if (encoding != null) {\n        {\n            return org.apache.commons.io.IOUtils.toString(url, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileSystemUtils:343","type":"CtBinaryOperatorImpl","sourcecode":"((!(java.lang.Character.isDigit(c))) && (c != ',')) && (c != '.')"},"failures":[],"tindex":"334db0e2-2ed5-11e6-adf5-cbb0196ddde6","method":{"position":"org.apache.commons.io.output.ProxyWriter:53","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(char c) throws java.io.IOException {\n    if (((!(java.lang.Character.isDigit(c))) && (c != ',')) && (c != '.')) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                beforeWrite(1);\n                java.io.Writer.append(c);\n                afterWrite(1);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n            return org.apache.commons.io.output.ProxyWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"334db0e3-2ed5-11e6-adf5-1f9a0d43bb56","method":{"position":"org.apache.commons.io.output.ProxyWriter:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str) throws java.io.IOException {\n    if (str != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                int int = 0;\n                if (str != null) {\n                    len = str.length();\n                } \n                beforeWrite(len);\n                java.io.Writer.write(str);\n                afterWrite(len);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:85","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"334db0e4-2ed5-11e6-adf5-29c66e5f4d0f","method":{"position":"org.apache.commons.io.filefilter.FileFileFilter:58","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file == null) {\n        {\n            return file.isFile();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"334dd7f5-2ed5-11e6-adf5-91ab34c8d8d5","method":{"position":"org.apache.commons.io.IOUtils:245","type":"CtMethodImpl","sourcecode":"public static void closeQuietly(java.io.InputStream input) {\n    if (null != input) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.IOUtils.closeQuietly(((java.io.Closeable)(input)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:489","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"334dd7f6-2ed5-11e6-adf5-470f60338d87","method":{"position":"org.apache.commons.io.FileUtils:2043","type":"CtMethodImpl","sourcecode":"public static void write(java.io.File file, java.lang.CharSequence data, java.nio.charset.Charset encoding, boolean append) throws java.io.IOException {\n    if (data == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.lang.String java.lang.String = data == null ? null : data.toString();\n            org.apache.commons.io.FileUtils.writeStringToFile(file, str, encoding, append);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"data"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1845","type":"CtBinaryOperatorImpl","sourcecode":"inputOffset > 0"},"failures":[],"tindex":"334dd7f7-2ed5-11e6-adf5-356de5a42600","method":{"position":"org.apache.commons.io.IOUtils:2051","type":"CtMethodImpl","sourcecode":"public static long copyLarge(java.io.Reader input, java.io.Writer output, final long inputOffset, final long length, char[] buffer) throws java.io.IOException {\n    if (inputOffset > 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (inputOffset > 0) {\n                org.apache.commons.io.IOUtils.skipFully(input, inputOffset);\n            } \n            if (length == 0) {\n                return 0;\n            } \n            int int = buffer.int;\n            if ((length > 0) && (length < (buffer.int))) {\n                bytesToRead = ((int)(length));\n            } \n            int int;\n            long long = 0;\n            while ((bytesToRead > 0) && ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int) != (read = input.read(buffer, 0, bytesToRead)))) {\n                output.write(buffer, 0, read);\n                totalRead += read;\n                if (length > 0) {\n                    bytesToRead = ((int)(java.lang.Math.min((length - totalRead), buffer.int)));\n                } \n            }\n            return totalRead;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputOffset":"inputOffset"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:413","type":"CtInvocationImpl","sourcecode":"entry.isDirectory()"},"failures":[],"tindex":"334dd7f8-2ed5-11e6-adf5-b3c0a584db68","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:374","type":"CtMethodImpl","sourcecode":"private void doCreate(org.apache.commons.io.monitor.FileEntry entry) {\n    if (entry.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (org.apache.commons.io.monitor.FileAlterationListener org.apache.commons.io.monitor.FileAlterationListener : java.util.List<org.apache.commons.io.monitor.FileAlterationListener>) {\n                if (entry.isDirectory()) {\n                    listener.onDirectoryCreate(entry.getFile());\n                } else {\n                    listener.onFileCreate(entry.getFile());\n                }\n            }\n            org.apache.commons.io.monitor.FileEntry[] org.apache.commons.io.monitor.FileEntry[] = entry.getChildren();\n            for (org.apache.commons.io.monitor.FileEntry org.apache.commons.io.monitor.FileEntry : children) {\n                doCreate(aChildren);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:356","type":"CtBinaryOperatorImpl","sourcecode":"(file.canWrite()) == false"},"failures":[],"tindex":"334dff09-2ed5-11e6-adf5-4b70e765742b","method":{"position":"org.apache.commons.io.FileUtils:1975","type":"CtMethodImpl","sourcecode":"public static void writeStringToFile(java.io.File file, java.lang.String data, boolean append) throws java.io.IOException {\n    if ((file.canWrite()) == false) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeStringToFile(file, data, java.nio.charset.Charset.defaultCharset(), append);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"334e4d2a-2ed5-11e6-adf5-cd35d669ac2f","method":{"position":"org.apache.commons.io.IOUtils:758","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.IOUtils.toString(input, java.nio.charset.Charset.defaultCharset());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1249","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"334e4d2b-2ed5-11e6-adf5-9faec539c0b4","method":{"position":"org.apache.commons.io.EndianUtils:142","type":"CtMethodImpl","sourcecode":"public static int readSwappedUnsignedShort(byte[] data, int offset) {\n    if (data != null) {\n        {\n            return (((data[(offset + 0)]) & 255) << 0) + (((data[(offset + 1)]) & 255) << 8);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"(file1.length()) != (file2.length())"},"failures":[],"tindex":"334e4d2c-2ed5-11e6-adf5-ddb8ac3b1d71","method":{"position":"org.apache.commons.io.FileUtils:729","type":"CtMethodImpl","sourcecode":"public static boolean contentEquals(java.io.File file1, java.io.File file2) throws java.io.IOException {\n    if ((file2.length()) != (file2.length())) {\n        throw new java.io.IOException();\n    } else {\n        {\n            boolean boolean = file1.exists();\n            if (file1Exists != (file2.exists())) {\n                return false;\n            } \n            if (!file1Exists) {\n                return true;\n            } \n            if ((file1.isDirectory()) || (file2.isDirectory())) {\n                throw new java.io.IOException(\"Can't compare directories, only files\");\n            } \n            if ((file1.length()) != (file2.length())) {\n                return false;\n            } \n            if (file1.getCanonicalFile().equals(file2.getCanonicalFile())) {\n                return true;\n            } \n            java.io.InputStream java.io.InputStream = null;\n            java.io.InputStream java.io.InputStream = null;\n            try {\n                input1 = new java.io.FileInputStream(file1);\n                input2 = new java.io.FileInputStream(file2);\n                return org.apache.commons.io.IOUtils.contentEquals(input1, input2);\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(input1);\n                org.apache.commons.io.IOUtils.closeQuietly(input2);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file2":"file2","file1":"file2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.SwappedDataInputStream:142","type":"CtBinaryOperatorImpl","sourcecode":"(-1) == count"},"failures":[],"tindex":"334e743d-2ed5-11e6-adf5-dd1b9a80155e","method":{"position":"org.apache.commons.io.output.ThresholdingOutputStream:219","type":"CtMethodImpl","sourcecode":"protected void checkThreshold(int count) throws java.io.IOException {\n    if ((-1) == count) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((!(boolean)) && (((long) + count) > (int))) {\n                boolean = true;\n                thresholdReached();\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1449","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"334e743e-2ed5-11e6-adf5-0f043d025f6e","method":{"position":"org.apache.commons.io.IOUtils:1430","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.CharSequence data, java.io.OutputStream output) throws java.io.IOException {\n    if (data != null) {\n        {\n            org.apache.commons.io.IOUtils.write(data, output, java.nio.charset.Charset.defaultCharset());\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1526","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"334e743f-2ed5-11e6-adf5-75582d1da252","method":{"position":"org.apache.commons.io.IOUtils:1616","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static void write(java.lang.StringBuffer data, java.io.OutputStream output, java.lang.String encoding) throws java.io.IOException {\n    if (encoding != null) {\n        {\n            if (data != null) {\n                {\n                    if (data != null) {\n                        output.write(data.toString().getBytes(org.apache.commons.io.Charsets.toCharset(encoding)));\n                    } \n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"encoding"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.StringBuilderWriter:123","type":"CtBinaryOperatorImpl","sourcecode":"value != null"},"failures":[],"tindex":"334e7440-2ed5-11e6-adf5-5d3255718279","method":{"position":"org.apache.commons.io.output.StringBuilderWriter:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence value) {\n    if (value != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.lang.StringBuilder.append(value);\n                    return org.apache.commons.io.output.StringBuilderWriter.this;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2868","type":"CtUnaryOperatorImpl","sourcecode":"!(destDir.isDirectory())"},"failures":[],"tindex":"334e9b51-2ed5-11e6-adf5-c34d342bff63","method":{"position":"org.apache.commons.io.FileUtils:976","type":"CtMethodImpl","sourcecode":"public static void copyFileToDirectory(java.io.File srcFile, java.io.File destDir) throws java.io.IOException {\n    if (!(destDir.isDirectory())) {\n        {\n            org.apache.commons.io.FileUtils.copyFileToDirectory(srcFile, destDir, true);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"destDir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:107","type":"CtBinaryOperatorImpl","sourcecode":"observer != null"},"failures":[],"tindex":"334e9b52-2ed5-11e6-adf5-459cabd54a4e","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:91","type":"CtMethodImpl","sourcecode":"public void onStop(final org.apache.commons.io.monitor.FileAlterationObserver observer) {\n    if (observer != null) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"observer":"observer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:161","type":"CtBinaryOperatorImpl","sourcecode":"magicNumber == null"},"failures":[],"tindex":"334e9b53-2ed5-11e6-adf5-0bffefc1d992","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:678","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String magicNumber, long offset) {\n    if (magicNumber == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.MagicNumberFileFilter(magicNumber , offset);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"magicNumber":"magicNumber"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"commons-io","transformationCount":100,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}