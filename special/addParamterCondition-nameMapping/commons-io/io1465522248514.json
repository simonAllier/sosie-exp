{"failureDictionary":{},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1565","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f5dc4439-2eaa-11e6-9038-9985288a1adb","method":{"position":"org.apache.commons.io.comparator.DirectoryFileComparator:72","type":"CtMethodImpl","sourcecode":"private int getType(java.io.File file) {\n    if (file.isDirectory()) {\n        {\n            if (file.isDirectory()) {\n                return 1;\n            } else {\n                return 2;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.comparator.AbstractFileComparator:61","type":"CtBinaryOperatorImpl","sourcecode":"files != null"},"failures":[],"tindex":"f5dd078a-2eaa-11e6-9038-934509964efe","method":{"position":"org.apache.commons.io.FileUtils:462","type":"CtMethodImpl","sourcecode":"public static java.io.File[] convertFileCollectionToFileArray(java.util.Collection<java.io.File> files) {\n    if (files != null) {\n        {\n            return files.toArray(new java.io.File[files.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"files":"files"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2269","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f5dd078b-2eaa-11e6-9038-bbf3f2878e91","method":{"position":"org.apache.commons.io.filefilter.PrefixFileFilter:149","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String = file.getName();\n            for (java.lang.String java.lang.String : org.apache.commons.io.filefilter.PrefixFileFilter.this.java.lang.String[]) {\n                if (org.apache.commons.io.IOCase.checkStartsWith(name, prefix)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2293","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f5dd2e9c-2eaa-11e6-9038-976f6da02baa","method":{"position":"org.apache.commons.io.filefilter.WildcardFileFilter:167","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String = file.getName();\n            for (java.lang.String java.lang.String : java.lang.String[]) {\n                if (org.apache.commons.io.FilenameUtils.wildcardMatch(name, wildcard, org.apache.commons.io.IOCase)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:924","type":"CtBinaryOperatorImpl","sourcecode":"(url.getProtocol().equals(\"file\")) == false"},"failures":[],"tindex":"f5dd55ad-2eaa-11e6-9038-d3042158acff","method":{"position":"org.apache.commons.io.IOUtils:916","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.net.URL url, java.lang.String encoding) throws java.io.IOException {\n    if ((url.getProtocol().equals(\"file\")) == false) {\n        {\n            return org.apache.commons.io.IOUtils.toString(url, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"url":"url"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileSystemUtils:380","type":"CtBinaryOperatorImpl","sourcecode":"(path.length()) == 0"},"failures":[],"tindex":"f5dd55ae-2eaa-11e6-9038-c729bb48124d","method":{"position":"org.apache.commons.io.FileSystemUtils:258","type":"CtMethodImpl","sourcecode":"long freeSpaceOS(java.lang.String path, int os, boolean kb, long timeout) throws java.io.IOException {\n    if ((path.length()) == 0) {\n        {\n            if (path == null) {\n                throw new java.lang.IllegalArgumentException(\"Path must not be empty\");\n            } \n            switch (os) {\n                case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                    return kb ? (freeSpaceWindows(path, timeout)) / (org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.long) : freeSpaceWindows(path, timeout);\n                case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                    return freeSpaceUnix(path, kb, false, timeout);\n                case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                    return freeSpaceUnix(path, kb, true, timeout);\n                case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                    throw new java.lang.IllegalStateException(\"Unsupported operating system\");\n                default :\n                    throw new java.lang.IllegalStateException(\"Exception caught when determining operating system\");\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"path"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:273","type":"CtBinaryOperatorImpl","sourcecode":"files != null"},"failures":[],"tindex":"f5dd7cbf-2eaa-11e6-9038-55ce6f61ef8e","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:242","type":"CtMethodImpl","sourcecode":"public static java.util.Set<java.io.File> filterSet(org.apache.commons.io.filefilter.IOFileFilter filter, java.lang.Iterable<java.io.File> files) {\n    if (files != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.filefilter.FileFilterUtils.filter(filter, files, new java.util.HashSet<java.io.File>());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"files":"files"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:623","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"f5dda3d0-2eaa-11e6-9038-35db6ad95615","method":{"position":"org.apache.commons.io.FilenameUtils:334","type":"CtMethodImpl","sourcecode":"public static java.lang.String normalizeNoEndSeparator(java.lang.String filename, boolean unixSeparator) {\n    if (filename == null) {\n        {\n            char char = unixSeparator ? org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char : org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char;\n            return org.apache.commons.io.FilenameUtils.doNormalize(filename, separator, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:580","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"f5dda3d1-2eaa-11e6-9038-4d076c7cf719","method":{"position":"org.apache.commons.io.FileSystemUtils:323","type":"CtMethodImpl","sourcecode":"long parseDir(java.lang.String line, java.lang.String path) throws java.io.IOException {\n    if (path == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = 0;\n            int int = 0;\n            int int = (line.length()) - 1;\n            innerLoop1 : while (j >= 0) {\n                char char = line.charAt(j);\n                if (java.lang.Character.isDigit(c)) {\n                    bytesEnd = j + 1;\n                    break innerLoop1;\n                } \n                j--;\n            }\n            innerLoop2 : while (j >= 0) {\n                char char = line.charAt(j);\n                if (((!(java.lang.Character.isDigit(c))) && (c != ',')) && (c != '.')) {\n                    bytesStart = j + 1;\n                    break innerLoop2;\n                } \n                j--;\n            }\n            if (j < 0) {\n                throw new java.io.IOException((((\"Command line 'dir /-c' did not return valid info \" + \"for path '\") + path) + \"'\"));\n            } \n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(line.substring(bytesStart, bytesEnd));\n            for (int int = 0 ; k < (buf.length()) ; k++) {\n                if (((buf.charAt(k)) == ',') || ((buf.charAt(k)) == '.')) {\n                    buf.deleteCharAt((k--));\n                } \n            }\n            return parseBytes(buf.toString(), path);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"path"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1129","type":"CtBinaryOperatorImpl","sourcecode":"(destFile.exists()) && (destFile.isDirectory())"},"failures":[],"tindex":"f5ddcae2-2eaa-11e6-9038-951c19bd7bfa","method":{"position":"org.apache.commons.io.FileUtils:1037","type":"CtMethodImpl","sourcecode":"public static void copyFile(java.io.File srcFile, java.io.File destFile) throws java.io.IOException {\n    if ((srcFile.exists()) && (destFile.isDirectory())) {\n        {\n            org.apache.commons.io.FileUtils.copyFile(srcFile, destFile, true);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destFile":"srcFile"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:292","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f5ddf1f3-2eaa-11e6-9038-7b2d942b0647","method":{"position":"org.apache.commons.io.FileUtils:1975","type":"CtMethodImpl","sourcecode":"public static void writeStringToFile(java.io.File file, java.lang.String data, boolean append) throws java.io.IOException {\n    if (file.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeStringToFile(file, data, java.nio.charset.Charset.defaultCharset(), append);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.EmptyFileFilter:77","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f5ddf1f4-2eaa-11e6-9038-951a4da3fff6","method":{"position":"org.apache.commons.io.FileUtils:2043","type":"CtMethodImpl","sourcecode":"public static void write(java.io.File file, java.lang.CharSequence data, java.nio.charset.Charset encoding, boolean append) throws java.io.IOException {\n    if (file.isDirectory()) {\n        {\n            java.lang.String java.lang.String = data == null ? null : data.toString();\n            org.apache.commons.io.FileUtils.writeStringToFile(file, str, encoding, append);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2708","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f5de1905-2eaa-11e6-9038-87af279bf59e","method":{"position":"org.apache.commons.io.FileUtils:290","type":"CtMethodImpl","sourcecode":"public static java.io.FileInputStream openInputStream(java.io.File file) throws java.io.IOException {\n    if (file.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (file.exists()) {\n                if (file.isDirectory()) {\n                    throw new java.io.IOException(((\"File '\" + file) + \"' exists but is a directory\"));\n                } \n                if ((file.canRead()) == false) {\n                    throw new java.io.IOException(((\"File '\" + file) + \"' cannot be read\"));\n                } \n            } else {\n                throw new java.io.FileNotFoundException(((\"File '\" + file) + \"' does not exist\"));\n            }\n            return new java.io.FileInputStream(file);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"url != null"},"failures":[],"tindex":"f5de1906-2eaa-11e6-9038-3302d1b0f94a","method":{"position":"org.apache.commons.io.IOUtils:632","type":"CtMethodImpl","sourcecode":"public static byte[] toByteArray(java.net.URL url) throws java.io.IOException {\n    if (url != null) {\n        {\n            java.net.URLConnection java.net.URLConnection = url.openConnection();\n            try {\n                return org.apache.commons.io.IOUtils.toByteArray(conn);\n            } finally {\n                org.apache.commons.io.IOUtils.close(conn);\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"url":"url"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:164","type":"CtBinaryOperatorImpl","sourcecode":"conn instanceof java.net.HttpURLConnection"},"failures":[],"tindex":"f5de4017-2eaa-11e6-9038-114da190dd95","method":{"position":"org.apache.commons.io.IOUtils:163","type":"CtMethodImpl","sourcecode":"public static void close(java.net.URLConnection conn) {\n    if (conn instanceof java.net.HttpURLConnection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (conn instanceof java.net.HttpURLConnection) {\n                {\n                    if (conn instanceof java.net.HttpURLConnection) {\n                        ((java.net.HttpURLConnection)(conn)).disconnect();\n                    } \n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"conn":"conn"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2411","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"f5de4018-2eaa-11e6-9038-fbfca1af3108","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:75","type":"CtMethodImpl","sourcecode":"public void onFileChange(final java.io.File file) {\n    if (!(file.exists())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2449","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f5de6729-2eaa-11e6-9038-f3e76d02cef4","method":{"position":"org.apache.commons.io.FileUtils:2230","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.util.Collection<?> lines, java.lang.String lineEnding) throws java.io.IOException {\n    if (file.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeLines(file, null, lines, lineEnding, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:841","type":"CtBinaryOperatorImpl","sourcecode":"(url == null) || (!(\"file\".equalsIgnoreCase(url.getProtocol())))"},"failures":[],"tindex":"f5de672a-2eaa-11e6-9038-b1efe579cb17","method":{"position":"org.apache.commons.io.IOUtils:878","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.net.URL url) throws java.io.IOException {\n    if ((url == null) || (!(\"file\".equalsIgnoreCase(url.getProtocol())))) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.IOUtils.toString(url, java.nio.charset.Charset.defaultCharset());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"url":"url"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.LockableFileWriter:186","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f5de8e3b-2eaa-11e6-9038-c90413339005","method":{"position":"org.apache.commons.io.filefilter.AndFileFilter:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(final java.io.File file, final java.lang.String name) {\n    if (file.isDirectory()) {\n        {\n            if (org.apache.commons.io.filefilter.AndFileFilter.this.java.util.List<org.apache.commons.io.filefilter.IOFileFilter>.isEmpty()) {\n                return false;\n            } \n            for (org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter : java.util.List<org.apache.commons.io.filefilter.IOFileFilter>) {\n                if (!(fileFilter.accept(file, name))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:449","type":"CtBinaryOperatorImpl","sourcecode":"filters == null"},"failures":[],"tindex":"f5de8e3c-2eaa-11e6-9038-c9a6528fa6e5","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:448","type":"CtMethodImpl","sourcecode":"public static java.util.List<org.apache.commons.io.filefilter.IOFileFilter> toList(org.apache.commons.io.filefilter.IOFileFilter... filters) {\n    if (filters == null) {\n        {\n            if (filters == null) {\n                throw new java.lang.IllegalArgumentException(\"The filters must not be null\");\n            } \n            java.util.List<org.apache.commons.io.filefilter.IOFileFilter> java.util.List<org.apache.commons.io.filefilter.IOFileFilter> = new java.util.ArrayList<org.apache.commons.io.filefilter.IOFileFilter>(filters.int);\n            for (int int = 0 ; i < (filters.int) ; i++) {\n                if ((filters[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The filter[\" + i) + \"] is null\"));\n                } \n                list.add(filters[i]);\n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filters":"filters"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:600","type":"CtInvocationImpl","sourcecode":"directory.isDirectory()"},"failures":[],"tindex":"f5deb54d-2eaa-11e6-9038-9701853a235e","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:51","type":"CtMethodImpl","sourcecode":"public void onDirectoryChange(final java.io.File directory) {\n    if (directory.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileDeleteStrategy:72","type":"CtBinaryOperatorImpl","sourcecode":"(fileToDelete == null) || ((fileToDelete.exists()) == false)"},"failures":[],"tindex":"f5deb54e-2eaa-11e6-9038-f91cb55fcb1e","method":{"position":"org.apache.commons.io.FileDeleteStrategy:114","type":"CtMethodImpl","sourcecode":"protected boolean doDelete(java.io.File fileToDelete) throws java.io.IOException {\n    if ((fileToDelete == null) || ((fileToDelete.exists()) == false)) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((fileToDelete == null) || ((fileToDelete.exists()) == false)) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    return fileToDelete.delete();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fileToDelete":"fileToDelete"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"f5dedc5f-2eaa-11e6-9038-4b4528aee439","method":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str) throws java.io.IOException {\n    if (str != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.Writer.write(str);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:707","type":"CtBinaryOperatorImpl","sourcecode":"guessedEnc != null"},"failures":[],"tindex":"f5dedc60-2eaa-11e6-9038-d33b0b84ebfb","method":{"position":"org.apache.commons.io.input.XmlStreamReader:704","type":"CtMethodImpl","sourcecode":"private static java.lang.String getXmlProlog(java.io.InputStream is, java.lang.String guessedEnc) throws java.io.IOException {\n    if (guessedEnc != null) {\n        {\n            java.lang.String java.lang.String = null;\n            if (guessedEnc != null) {\n                byte[] byte[] = new byte[org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.int];\n                is.mark(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.int);\n                int int = 0;\n                int int = org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.int;\n                int int = is.read(bytes, offset, max);\n                int int = -1;\n                java.lang.String java.lang.String = null;\n                while (((c != (-1)) && (firstGT == (-1))) && (offset < (org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.int))) {\n                    offset += c;\n                    max -= c;\n                    c = is.read(bytes, offset, max);\n                    xmlProlog = new java.lang.String(bytes , 0 , offset , guessedEnc);\n                    firstGT = xmlProlog.indexOf('>');\n                }\n                if (firstGT == (-1)) {\n                    if (c == (-1)) {\n                        throw new java.io.IOException(\"Unexpected end of XML stream\");\n                    } else {\n                        throw new java.io.IOException(((\"XML prolog or ROOT element not found on first \" + offset) + \" bytes\"));\n                    }\n                } \n                int int = offset;\n                if (bytesRead > 0) {\n                    is.reset();\n                    java.io.BufferedReader java.io.BufferedReader = new java.io.BufferedReader(new java.io.StringReader(xmlProlog.substring(0, (firstGT + 1))));\n                    java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer();\n                    java.lang.String java.lang.String = bReader.readLine();\n                    while (line != null) {\n                        prolog.append(line);\n                        line = bReader.readLine();\n                    }\n                    java.util.regex.Matcher java.util.regex.Matcher = org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.util.regex.Pattern.matcher(prolog);\n                    if (m.find()) {\n                        encoding = m.group(1).toUpperCase();\n                        encoding = encoding.substring(1, ((encoding.length()) - 1));\n                    } \n                } \n            } \n            return encoding;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"guessedEnc":"guessedEnc"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:164","type":"CtBinaryOperatorImpl","sourcecode":"conn instanceof java.net.HttpURLConnection"},"failures":[],"tindex":"f5df2a81-2eaa-11e6-9038-871a2990f00a","method":{"position":"org.apache.commons.io.IOUtils:163","type":"CtMethodImpl","sourcecode":"public static void close(java.net.URLConnection conn) {\n    if (conn instanceof java.net.HttpURLConnection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (conn instanceof java.net.HttpURLConnection) {\n                {\n                    if (conn instanceof java.net.HttpURLConnection) {\n                        ((java.net.HttpURLConnection)(conn)).disconnect();\n                    } \n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"conn":"conn"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2273","type":"CtUnaryOperatorImpl","sourcecode":"!(file.delete())"},"failures":[],"tindex":"f5df2a82-2eaa-11e6-9038-f58db7e0aa56","method":{"position":"org.apache.commons.io.FileUtils:2165","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.util.Collection<?> lines, boolean append) throws java.io.IOException {\n    if (!(file.delete())) {\n        {\n            org.apache.commons.io.FileUtils.writeLines(file, null, lines, null, append);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1425","type":"CtInvocationImpl","sourcecode":"srcFile.isDirectory()"},"failures":[],"tindex":"f5df2a83-2eaa-11e6-9038-6141b00dcb15","method":{"position":"org.apache.commons.io.FileUtils:2811","type":"CtMethodImpl","sourcecode":"public static void moveFile(java.io.File srcFile, java.io.File destFile) throws java.io.IOException {\n    if (destFile.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (srcFile == null) {\n                throw new java.lang.NullPointerException(\"Source must not be null\");\n            } \n            if (destFile == null) {\n                throw new java.lang.NullPointerException(\"Destination must not be null\");\n            } \n            if (!(srcFile.exists())) {\n                throw new java.io.FileNotFoundException(((\"Source '\" + srcFile) + \"' does not exist\"));\n            } \n            if (srcFile.isDirectory()) {\n                throw new java.io.IOException(((\"Source '\" + srcFile) + \"' is a directory\"));\n            } \n            if (destFile.exists()) {\n                throw new org.apache.commons.io.FileExistsException(((\"Destination '\" + destFile) + \"' already exists\"));\n            } \n            if (destFile.isDirectory()) {\n                throw new java.io.IOException(((\"Destination '\" + destFile) + \"' is a directory\"));\n            } \n            boolean boolean = srcFile.renameTo(destFile);\n            if (!rename) {\n                org.apache.commons.io.FileUtils.copyFile(srcFile, destFile);\n                if (!(srcFile.delete())) {\n                    org.apache.commons.io.FileUtils.deleteQuietly(destFile);\n                    throw new java.io.IOException(((((\"Failed to delete original file '\" + srcFile) + \"' after copy to '\") + destFile) + \"'\"));\n                } \n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcFile":"destFile"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:96","type":"CtBinaryOperatorImpl","sourcecode":"observer != null"},"failures":[],"tindex":"f5df5194-2eaa-11e6-9038-cde25f0781d2","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:91","type":"CtMethodImpl","sourcecode":"public void onStop(final org.apache.commons.io.monitor.FileAlterationObserver observer) {\n    if (observer != null) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"observer":"observer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2416","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f5df5195-2eaa-11e6-9038-4365fbbcff7a","method":{"position":"org.apache.commons.io.filefilter.PrefixFileFilter:167","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file, java.lang.String name) {\n    if (file.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (java.lang.String java.lang.String : java.lang.String[]) {\n                if (org.apache.commons.io.IOCase.checkStartsWith(name, prefix)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CountingInputStream:71","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"f5df5196-2eaa-11e6-9038-1148031e55a2","method":{"position":"org.apache.commons.io.output.ProxyOutputStream:136","type":"CtMethodImpl","sourcecode":"protected void beforeWrite(int n) throws java.io.IOException {\n    if (n != (-1)) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.StringBuilderWriter:123","type":"CtBinaryOperatorImpl","sourcecode":"value != null"},"failures":[],"tindex":"f5df78a7-2eaa-11e6-9038-4de42b4cf382","method":{"position":"org.apache.commons.io.output.StringBuilderWriter:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String value) {\n    if (value != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value != null) {\n                java.lang.StringBuilder.append(value);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1635","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.exists())"},"failures":[],"tindex":"f5df78a8-2eaa-11e6-9038-63d6706b4686","method":{"position":"org.apache.commons.io.FileUtils:543","type":"CtMethodImpl","sourcecode":"private static void validateListFilesParameters(java.io.File directory, org.apache.commons.io.filefilter.IOFileFilter fileFilter) {\n    if (!(directory.exists())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(directory.isDirectory())) {\n                throw new java.lang.IllegalArgumentException(\"Parameter 'directory' is not a directory\");\n            } \n            if (fileFilter == null) {\n                throw new java.lang.NullPointerException(\"Parameter 'fileFilter' is null\");\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.Tailer:349","type":"CtBinaryOperatorImpl","sourcecode":"reader == null"},"failures":[],"tindex":"f5df78a9-2eaa-11e6-9038-bb0abe1d1b18","method":{"position":"org.apache.commons.io.input.Tailer:448","type":"CtMethodImpl","sourcecode":"private long readLines(java.io.RandomAccessFile reader) throws java.io.IOException {\n    if (reader == null) {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            long long = reader.getFilePointer();\n            long long = pos;\n            int int;\n            boolean boolean = false;\n            while ((boolean) && ((num = reader.read(byte[])) != (-1))) {\n                for (int int = 0 ; i < num ; i++) {\n                    byte byte = byte[][i];\n                    switch (ch) {\n                        case '\\n' :\n                            seenCR = false;\n                            org.apache.commons.io.input.TailerListener.handle(sb.toString());\n                            sb.setLength(0);\n                            rePos = (pos + i) + 1;\n                            break;\n                        case '\\r' :\n                            if (seenCR) {\n                                sb.append('\\r');\n                            } \n                            seenCR = true;\n                            break;\n                        default :\n                            if (seenCR) {\n                                seenCR = false;\n                                org.apache.commons.io.input.TailerListener.handle(sb.toString());\n                                sb.setLength(0);\n                                rePos = (pos + i) + 1;\n                            } \n                            sb.append(((char)(ch)));\n                    }\n                }\n                pos = reader.getFilePointer();\n            }\n            reader.seek(rePos);\n            return rePos;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reader":"reader"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.CharSequenceReader:104","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"f5df9fba-2eaa-11e6-9038-f9b13f19a8dc","method":{"position":"org.apache.commons.io.input.CharSequenceReader:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] array, int offset, int length) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) >= (java.lang.CharSequence.length())) {\n                return -1;\n            } \n            if (array == null) {\n                throw new java.lang.NullPointerException(\"Character array is missing\");\n            } \n            if (((length < 0) || (offset < 0)) || ((offset + length) > (array.int))) {\n                throw new java.lang.IndexOutOfBoundsException((((((\"Array Size=\" + (array.int)) + \", offset=\") + offset) + \", length=\") + length));\n            } \n            int int = 0;\n            for (int int = 0 ; i < length ; i++) {\n                int int = read();\n                if (c == (-1)) {\n                    return count;\n                } \n                array[(offset + i)] = ((char)(c));\n                count++;\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:239","type":"CtBinaryOperatorImpl","sourcecode":"((file != null) && (file.isFile())) && (file.canRead())"},"failures":[],"tindex":"f5dfc6cb-2eaa-11e6-9038-936ff677811c","method":{"position":"org.apache.commons.io.input.Tailer:273","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.input.Tailer create(java.io.File file, org.apache.commons.io.input.TailerListener listener, long delayMillis, boolean end) {\n    if (((file != null) && (file.isFile())) && (file.canRead())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.input.Tailer.create(file, listener, delayMillis, end, org.apache.commons.io.input.Tailer.org.apache.commons.io.input.Tailer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1249","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"f5dfc6cc-2eaa-11e6-9038-85654235ba05","method":{"position":"org.apache.commons.io.EndianUtils:272","type":"CtMethodImpl","sourcecode":"public static double readSwappedDouble(byte[] data, int offset) {\n    if (data != null) {\n        {\n            if (data != null) {\n                {\n                    return java.lang.Double.longBitsToDouble(org.apache.commons.io.EndianUtils.readSwappedLong(data, offset));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileDeleteStrategy:72","type":"CtBinaryOperatorImpl","sourcecode":"(fileToDelete == null) || ((fileToDelete.exists()) == false)"},"failures":[],"tindex":"f5dfeddd-2eaa-11e6-9038-e59e8b391b41","method":{"position":"org.apache.commons.io.FileDeleteStrategy:114","type":"CtMethodImpl","sourcecode":"protected boolean doDelete(java.io.File fileToDelete) throws java.io.IOException {\n    if ((fileToDelete == null) || ((fileToDelete.exists()) == false)) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((fileToDelete == null) || ((fileToDelete.exists()) == false)) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    return fileToDelete.delete();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fileToDelete":"fileToDelete"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:797","type":"CtBinaryOperatorImpl","sourcecode":"(file1.isDirectory()) || (file2.isDirectory())"},"failures":[],"tindex":"f5dfedde-2eaa-11e6-9038-774fc8332647","method":{"position":"org.apache.commons.io.comparator.CompositeFileComparator:91","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if ((file1.isDirectory()) || (file2.isDirectory())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (java.util.Comparator<java.io.File> java.util.Comparator<java.io.File> : java.util.Comparator<java.io.File>[]) {\n                result = delegate.compare(file1, file2);\n                if (result != 0) {\n                    break;\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file2":"file2","file1":"file1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1635","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.exists())"},"failures":[],"tindex":"f5dfeddf-2eaa-11e6-9038-0bf2dcc49609","method":{"position":"org.apache.commons.io.DirectoryWalker:561","type":"CtMethodImpl","sourcecode":"protected void handleDirectoryEnd(java.io.File directory, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (!(directory.exists())) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:291","type":"CtInvocationImpl","sourcecode":"file.exists()"},"failures":[],"tindex":"f5dfede0-2eaa-11e6-9038-33042b9ec077","method":{"position":"org.apache.commons.io.FileUtils:2920","type":"CtMethodImpl","sourcecode":"public static boolean isSymlink(java.io.File file) throws java.io.IOException {\n    if (file.exists()) {\n        {\n            if (file == null) {\n                throw new java.lang.NullPointerException(\"File must not be null\");\n            } \n            if (org.apache.commons.io.FilenameUtils.isSystemWindows()) {\n                return false;\n            } \n            java.io.File java.io.File = null;\n            if ((file.getParent()) == null) {\n                fileInCanonicalDir = file;\n            } else {\n                java.io.File java.io.File = file.getParentFile().getCanonicalFile();\n                fileInCanonicalDir = new java.io.File(canonicalDir , file.getName());\n            }\n            if (fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile())) {\n                return false;\n            } else {\n                return true;\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2513","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(file))"},"failures":[],"tindex":"f5e014f1-2eaa-11e6-9038-95300ff7028d","method":{"position":"org.apache.commons.io.FileUtils:325","type":"CtMethodImpl","sourcecode":"public static java.io.FileOutputStream openOutputStream(java.io.File file) throws java.io.IOException {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.FileUtils.openOutputStream(file, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2818","type":"CtUnaryOperatorImpl","sourcecode":"!(srcFile.exists())"},"failures":[],"tindex":"f5e014f2-2eaa-11e6-9038-c16edfbfee87","method":{"position":"org.apache.commons.io.FileUtils:2854","type":"CtMethodImpl","sourcecode":"public static void moveFileToDirectory(java.io.File srcFile, java.io.File destDir, boolean createDestDir) throws java.io.IOException {\n    if (!(srcFile.exists())) {\n        {\n            if (srcFile == null) {\n                throw new java.lang.NullPointerException(\"Source must not be null\");\n            } \n            if (destDir == null) {\n                throw new java.lang.NullPointerException(\"Destination directory must not be null\");\n            } \n            if ((!(destDir.exists())) && createDestDir) {\n                destDir.mkdirs();\n            } \n            if (!(destDir.exists())) {\n                throw new java.io.FileNotFoundException(((((\"Destination directory '\" + destDir) + \"' does not exist [createDestDir=\") + createDestDir) + \"]\"));\n            } \n            if (!(destDir.isDirectory())) {\n                throw new java.io.IOException(((\"Destination '\" + destDir) + \"' is not a directory\"));\n            } \n            org.apache.commons.io.FileUtils.moveFile(srcFile, new java.io.File(destDir , srcFile.getName()));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcFile":"srcFile"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"f5e014f3-2eaa-11e6-9038-0fff43ace192","method":{"position":"org.apache.commons.io.EndianUtils:409","type":"CtMethodImpl","sourcecode":"public static long readSwappedLong(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            byte[] byte[] = new byte[8];\n            for (int int = 0 ; i < 8 ; i++) {\n                bytes[i] = ((byte)(org.apache.commons.io.EndianUtils.read(input)));\n            }\n            return org.apache.commons.io.EndianUtils.readSwappedLong(bytes, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"f5e03c04-2eaa-11e6-9038-33520c9a0598","method":{"position":"org.apache.commons.io.IOUtils:758","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.IOUtils.toString(input, java.nio.charset.Charset.defaultCharset());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"f5e03c05-2eaa-11e6-9038-abc9e5b85c4c","method":{"position":"org.apache.commons.io.output.NullWriter:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence csq, int start, int end) {\n    if (end == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.output.NullWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"end"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2292","type":"CtBinaryOperatorImpl","sourcecode":"n < 0"},"failures":[],"tindex":"f5e03c06-2eaa-11e6-9038-170e7f313230","method":{"position":"org.apache.commons.io.input.CharSequenceInputStream:165","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) throws java.io.IOException {\n    if (n < 0) {\n        {\n            int int = 0;\n            while ((n > 0) && (org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.CharBuffer.hasRemaining())) {\n                org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.CharBuffer.get();\n                n--;\n                skipped++;\n            }\n            return skipped;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"url != null"},"failures":[],"tindex":"f5e06317-2eaa-11e6-9038-99b105ecd620","method":{"position":"org.apache.commons.io.IOUtils:893","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.net.URL url, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (url != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.InputStream java.io.InputStream = url.openStream();\n            try {\n                return org.apache.commons.io.IOUtils.toString(inputStream, encoding);\n            } finally {\n                inputStream.close();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"url":"url"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"f5e06318-2eaa-11e6-9038-6b1136b8bd5e","method":{"position":"org.apache.commons.io.EndianUtils:142","type":"CtMethodImpl","sourcecode":"public static int readSwappedUnsignedShort(byte[] data, int offset) {\n    if (data != null) {\n        {\n            return (((data[(offset + 0)]) & 255) << 0) + (((data[(offset + 1)]) & 255) << 8);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:109","type":"CtBinaryOperatorImpl","sourcecode":"(dir != null) && (new java.io.File(dir , name).isDirectory())"},"failures":[],"tindex":"f5e06319-2eaa-11e6-9038-d384ec37b330","method":{"position":"org.apache.commons.io.filefilter.AbstractFileFilter:50","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File dir, java.lang.String name) {\n    if ((dir != null) && (new java.io.File(dir , name).isDirectory())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return accept(new java.io.File(dir , name));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name","dir":"dir"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2411","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"f5e08a2a-2eaa-11e6-9038-45a2c38a1e49","method":{"position":"org.apache.commons.io.FileUtils:1760","type":"CtMethodImpl","sourcecode":"public static byte[] readFileToByteArray(java.io.File file) throws java.io.IOException {\n    if (!(file.exists())) {\n        {\n            java.io.InputStream java.io.InputStream = null;\n            try {\n                in = org.apache.commons.io.FileUtils.openInputStream(file);\n                return org.apache.commons.io.IOUtils.toByteArray(in, file.length());\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(in);\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:89","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"f5e08a2b-2eaa-11e6-9038-791ccb482ede","method":{"position":"org.apache.commons.io.IOUtils:2123","type":"CtMethodImpl","sourcecode":"public static void copy(java.io.Reader input, java.io.OutputStream output, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.OutputStreamWriter java.io.OutputStreamWriter = new java.io.OutputStreamWriter(output , org.apache.commons.io.Charsets.toCharset(encoding));\n            org.apache.commons.io.IOUtils.copy(input, out);\n            out.flush();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:107","type":"CtBinaryOperatorImpl","sourcecode":"observer != null"},"failures":[],"tindex":"f5e08a2c-2eaa-11e6-9038-59713017c946","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:35","type":"CtMethodImpl","sourcecode":"public void onStart(final org.apache.commons.io.monitor.FileAlterationObserver observer) {\n    if (observer != null) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"observer":"observer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"f5e08a2d-2eaa-11e6-9038-5b13c390aaee","method":{"position":"org.apache.commons.io.EndianUtils:465","type":"CtMethodImpl","sourcecode":"public static double readSwappedDouble(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return java.lang.Double.longBitsToDouble(org.apache.commons.io.EndianUtils.readSwappedLong(input));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.TeeInputStream:145","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"f5e0b13e-2eaa-11e6-9038-d31391f9c0a6","method":{"position":"org.apache.commons.io.output.ProxyWriter:242","type":"CtMethodImpl","sourcecode":"protected void beforeWrite(int n) throws java.io.IOException {\n    if (n != (-1)) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2478","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(file))"},"failures":[],"tindex":"f5e0b13f-2eaa-11e6-9038-8fb92ee157bc","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:394","type":"CtMethodImpl","sourcecode":"private void doMatch(org.apache.commons.io.monitor.FileEntry entry, java.io.File file) {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (entry.refresh(file)) {\n                for (org.apache.commons.io.monitor.FileAlterationListener org.apache.commons.io.monitor.FileAlterationListener : java.util.List<org.apache.commons.io.monitor.FileAlterationListener>) {\n                    if (entry.isDirectory()) {\n                        listener.onDirectoryChange(file);\n                    } else {\n                        listener.onFileChange(file);\n                    }\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:741","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"f5e0b140-2eaa-11e6-9038-47cac7b71cc7","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:757","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter filter) {\n    if (filter == null) {\n        {\n            if (filter == null) {\n                return org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.IOFileFilter;\n            } else {\n                return org.apache.commons.io.filefilter.FileFilterUtils.and(filter, org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.IOFileFilter);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"f5e0d851-2eaa-11e6-9038-4f61cf43b407","method":{"position":"org.apache.commons.io.input.DemuxInputStream:39","type":"CtMethodImpl","sourcecode":"public java.io.InputStream bindStream(java.io.InputStream input) {\n    if (null != input) {\n        {\n            java.io.InputStream java.io.InputStream = java.lang.InheritableThreadLocal<java.io.InputStream>.get();\n            java.lang.InheritableThreadLocal<java.io.InputStream>.set(input);\n            return oldValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.DirectoryWalker:330","type":"CtBinaryOperatorImpl","sourcecode":"startDirectory == null"},"failures":[],"tindex":"f5e0d852-2eaa-11e6-9038-3f402daaac55","method":{"position":"org.apache.commons.io.DirectoryWalker:469","type":"CtMethodImpl","sourcecode":"protected void handleStart(java.io.File startDirectory, java.util.Collection<T> results) throws java.io.IOException {\n    if (startDirectory == null) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startDirectory":"startDirectory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileSystemUtils:259","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"f5e0d853-2eaa-11e6-9038-330bafedb0dd","method":{"position":"org.apache.commons.io.FileSystemUtils:199","type":"CtMethodImpl","sourcecode":"public static long freeSpaceKb(java.lang.String path, long timeout) throws java.io.IOException {\n    if (path == null) {\n        {\n            return org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.freeSpaceOS(path, org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int, true, timeout);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"path"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2416","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f5e0d854-2eaa-11e6-9038-410e80030013","method":{"position":"org.apache.commons.io.filefilter.HiddenFileFilter:73","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file.isDirectory()) {\n        {\n            return file.isHidden();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CharSequenceInputStream:114","type":"CtBinaryOperatorImpl","sourcecode":"b == null"},"failures":[],"tindex":"f5e0ff65-2eaa-11e6-9038-91eefb235053","method":{"position":"org.apache.commons.io.output.ThresholdingOutputStream:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b) throws java.io.IOException {\n    if (b == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            checkThreshold(b.int);\n            getStream().write(b);\n            long += b.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"f5e0ff66-2eaa-11e6-9038-952c9a8274e1","method":{"position":"org.apache.commons.io.EndianUtils:272","type":"CtMethodImpl","sourcecode":"public static double readSwappedDouble(byte[] data, int offset) {\n    if (data != null) {\n        {\n            if (data != null) {\n                {\n                    return java.lang.Double.longBitsToDouble(org.apache.commons.io.EndianUtils.readSwappedLong(data, offset));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:72","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"f5e0ff67-2eaa-11e6-9038-131ca1ac7500","method":{"position":"org.apache.commons.io.IOUtils:1550","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.String data, java.io.OutputStream output, java.lang.String encoding) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.IOUtils.write(data, output, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.ReaderInputStream:231","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"f5e0ff68-2eaa-11e6-9038-93847de2f004","method":{"position":"org.apache.commons.io.input.ProxyInputStream:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] bts, int off, int len) throws java.io.IOException {\n    if (len == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                beforeRead(len);\n                int int = java.io.InputStream.read(bts, off, len);\n                afterRead(n);\n                return n;\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"len"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1168","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"f5e12679-2eaa-11e6-9038-890e594f95a6","method":{"position":"org.apache.commons.io.FilenameUtils:973","type":"CtMethodImpl","sourcecode":"public static java.lang.String getBaseName(java.lang.String filename) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FilenameUtils.removeExtension(org.apache.commons.io.FilenameUtils.getName(filename));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2513","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(file))"},"failures":[],"tindex":"f5e1267a-2eaa-11e6-9038-6fca89da459f","method":{"position":"org.apache.commons.io.FileUtils:1853","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.LineIterator lineIterator(java.io.File file, java.lang.String encoding) throws java.io.IOException {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        {\n            java.io.InputStream java.io.InputStream = null;\n            try {\n                in = org.apache.commons.io.FileUtils.openInputStream(file);\n                return org.apache.commons.io.IOUtils.lineIterator(in, encoding);\n            } catch (java.io.IOException ex) {\n                org.apache.commons.io.IOUtils.closeQuietly(in);\n                throw ex;\n            } catch (java.lang.RuntimeException ex) {\n                org.apache.commons.io.IOUtils.closeQuietly(in);\n                throw ex;\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:482","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f5e1267b-2eaa-11e6-9038-f58383afcd0a","method":{"position":"org.apache.commons.io.filefilter.NotFileFilter:54","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.io.filefilter.IOFileFilter.accept(file));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2449","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f5e14d8c-2eaa-11e6-9038-ab0b777f5643","method":{"position":"org.apache.commons.io.filefilter.AndFileFilter:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(final java.io.File file) {\n    if (file.isDirectory()) {\n        {\n            if (org.apache.commons.io.filefilter.AndFileFilter.this.java.util.List<org.apache.commons.io.filefilter.IOFileFilter>.isEmpty()) {\n                return false;\n            } \n            for (org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter : java.util.List<org.apache.commons.io.filefilter.IOFileFilter>) {\n                if (!(fileFilter.accept(file))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2478","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(file))"},"failures":[],"tindex":"f5e14d8d-2eaa-11e6-9038-d7addb10bda8","method":{"position":"org.apache.commons.io.FileUtils:2707","type":"CtMethodImpl","sourcecode":"public static java.util.zip.Checksum checksum(java.io.File file, java.util.zip.Checksum checksum) throws java.io.IOException {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        {\n            if (file.isDirectory()) {\n                throw new java.lang.IllegalArgumentException(\"Checksums can't be computed on directories\");\n            } \n            java.io.InputStream java.io.InputStream = null;\n            try {\n                in = new java.util.zip.CheckedInputStream(new java.io.FileInputStream(file) , checksum);\n                org.apache.commons.io.IOUtils.copy(in, new org.apache.commons.io.output.NullOutputStream());\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(in);\n            }\n            return checksum;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2855","type":"CtBinaryOperatorImpl","sourcecode":"srcFile == null"},"failures":[],"tindex":"f5e14d8e-2eaa-11e6-9038-7d03a554ecd0","method":{"position":"org.apache.commons.io.FileUtils:1128","type":"CtMethodImpl","sourcecode":"private static void doCopyFile(java.io.File srcFile, java.io.File destFile, boolean preserveFileDate) throws java.io.IOException {\n    if (destFile == null) {\n        {\n            if ((destFile.exists()) && (destFile.isDirectory())) {\n                throw new java.io.IOException(((\"Destination '\" + destFile) + \"' exists but is a directory\"));\n            } \n            java.io.FileInputStream java.io.FileInputStream = null;\n            java.io.FileOutputStream java.io.FileOutputStream = null;\n            java.nio.channels.FileChannel java.nio.channels.FileChannel = null;\n            java.nio.channels.FileChannel java.nio.channels.FileChannel = null;\n            try {\n                fis = new java.io.FileInputStream(srcFile);\n                fos = new java.io.FileOutputStream(destFile);\n                input = fis.getChannel();\n                output = fos.getChannel();\n                long long = input.size();\n                long long = 0;\n                long long = 0;\n                while (pos < size) {\n                    count = (size - pos) > (org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.long) ? org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.long : size - pos;\n                    pos += output.transferFrom(input, pos, count);\n                }\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(output);\n                org.apache.commons.io.IOUtils.closeQuietly(fos);\n                org.apache.commons.io.IOUtils.closeQuietly(input);\n                org.apache.commons.io.IOUtils.closeQuietly(fis);\n            }\n            if ((srcFile.length()) != (destFile.length())) {\n                throw new java.io.IOException(((((\"Failed to copy full contents from '\" + srcFile) + \"' to '\") + destFile) + \"'\"));\n            } \n            if (preserveFileDate) {\n                destFile.setLastModified(srcFile.lastModified());\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcFile":"destFile"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.LineIterator:175","type":"CtBinaryOperatorImpl","sourcecode":"iterator != null"},"failures":[],"tindex":"f5e1749f-2eaa-11e6-9038-3788c8cc7638","method":{"position":"org.apache.commons.io.LineIterator:174","type":"CtMethodImpl","sourcecode":"public static void closeQuietly(org.apache.commons.io.LineIterator iterator) {\n    if (iterator != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator != null) {\n                iterator.close();\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:96","type":"CtBinaryOperatorImpl","sourcecode":"observer != null"},"failures":[],"tindex":"f5e174a0-2eaa-11e6-9038-bd57c6198fd1","method":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:95","type":"CtMethodImpl","sourcecode":"public void addObserver(final org.apache.commons.io.monitor.FileAlterationObserver observer) {\n    if (observer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (observer != null) {\n                java.util.List<org.apache.commons.io.monitor.FileAlterationObserver>.add(observer);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"observer":"observer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"f5e174a1-2eaa-11e6-9038-ad8b5853d8ea","method":{"position":"org.apache.commons.io.EndianUtils:168","type":"CtMethodImpl","sourcecode":"public static int readSwappedInteger(byte[] data, int offset) {\n    if (data != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (((((data[(offset + 0)]) & 255) << 0) + (((data[(offset + 1)]) & 255) << 8)) + (((data[(offset + 2)]) & 255) << 16)) + (((data[(offset + 3)]) & 255) << 24);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1635","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.exists())"},"failures":[],"tindex":"f5e19bb2-2eaa-11e6-9038-d5dace990609","method":{"position":"org.apache.commons.io.DirectoryWalker:503","type":"CtMethodImpl","sourcecode":"protected void handleDirectoryStart(java.io.File directory, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (!(directory.exists())) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"f5e19bb3-2eaa-11e6-9038-353607ec0137","method":{"position":"org.apache.commons.io.IOUtils:2557","type":"CtMethodImpl","sourcecode":"public static void readFully(java.io.InputStream input, byte[] buffer) throws java.io.IOException {\n    if (null != input) {\n        {\n            org.apache.commons.io.IOUtils.readFully(input, buffer, 0, buffer.int);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2531","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.exists())"},"failures":[],"tindex":"f5e19bb4-2eaa-11e6-9038-5b3930128b62","method":{"position":"org.apache.commons.io.FileUtils:708","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<java.io.File> iterateFiles(java.io.File directory, java.lang.String[] extensions, boolean recursive) {\n    if (!(directory.exists())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FileUtils.listFiles(directory, extensions, recursive).iterator();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2182","type":"CtUnaryOperatorImpl","sourcecode":"!(input2 instanceof java.io.BufferedInputStream)"},"failures":[],"tindex":"f5e19bb5-2eaa-11e6-9038-35880cdb9ac0","method":{"position":"org.apache.commons.io.IOUtils:2177","type":"CtMethodImpl","sourcecode":"public static boolean contentEquals(java.io.InputStream input1, java.io.InputStream input2) throws java.io.IOException {\n    if (!(input2 instanceof java.io.BufferedInputStream)) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (!(input1 instanceof java.io.BufferedInputStream)) {\n                input1 = new java.io.BufferedInputStream(input1);\n            } \n            if (!(input2 instanceof java.io.BufferedInputStream)) {\n                input2 = new java.io.BufferedInputStream(input2);\n            } \n            int int = input1.read();\n            while ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int) != ch) {\n                int int = input2.read();\n                if (ch != ch2) {\n                    return false;\n                } \n                ch = input1.read();\n            }\n            int int = input2.read();\n            return ch2 == (org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input2":"input2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"f5e1c2c6-2eaa-11e6-9038-97debb165598","method":{"position":"org.apache.commons.io.IOCase:217","type":"CtMethodImpl","sourcecode":"public int checkIndexOf(java.lang.String str, int strStartIndex, java.lang.String search) {\n    if (str != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (search != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    int int = (str.length()) - (search.length());\n                    if (endIndex >= strStartIndex) {\n                        for (int int = strStartIndex ; i <= endIndex ; i++) {\n                            if (checkRegionMatches(str, i, search)) {\n                                return i;\n                            } \n                        }\n                    } \n                    return -1;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"search"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"f5e1c2c7-2eaa-11e6-9038-ede4339dc561","method":{"position":"org.apache.commons.io.IOCase:217","type":"CtMethodImpl","sourcecode":"public int checkIndexOf(java.lang.String str, int strStartIndex, java.lang.String search) {\n    if (str != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (search != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    int int = (str.length()) - (search.length());\n                    if (endIndex >= strStartIndex) {\n                        for (int int = strStartIndex ; i <= endIndex ; i++) {\n                            if (checkRegionMatches(str, i, search)) {\n                                return i;\n                            } \n                        }\n                    } \n                    return -1;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1127","type":"CtBinaryOperatorImpl","sourcecode":"caseSensitivity == null"},"failures":[],"tindex":"f5e1c2c8-2eaa-11e6-9038-a1688f7117d6","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:354","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String name, org.apache.commons.io.IOCase caseSensitivity) {\n    if (caseSensitivity == null) {\n        {\n            return new org.apache.commons.io.filefilter.NameFileFilter(name , caseSensitivity);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"caseSensitivity":"caseSensitivity"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:459","type":"CtVariableReadImpl","sourcecode":"lenient"},"failures":[],"tindex":"f5e1e9d9-2eaa-11e6-9038-4bde7d1cf434","method":{"position":"org.apache.commons.io.input.XmlStreamReader:423","type":"CtMethodImpl","sourcecode":"private java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream bom, org.apache.commons.io.input.BOMInputStream pis, boolean lenient) throws java.io.IOException {\n    if (lenient) {\n        {\n            java.lang.String java.lang.String = bom.getBOMCharsetName();\n            java.lang.String java.lang.String = pis.getBOMCharsetName();\n            java.lang.String java.lang.String = org.apache.commons.io.input.XmlStreamReader.getXmlProlog(pis, xmlGuessEnc);\n            try {\n                return calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc);\n            } catch (org.apache.commons.io.input.XmlStreamReaderException ex) {\n                if (lenient) {\n                    return doLenientDetection(null, ex);\n                } else {\n                    throw ex;\n                }\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lenient":"lenient"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1249","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"f5e1e9da-2eaa-11e6-9038-1fa4c0f41ce9","method":{"position":"org.apache.commons.io.EndianUtils:154","type":"CtMethodImpl","sourcecode":"public static void writeSwappedInteger(byte[] data, int offset, int value) {\n    if (data != null) {\n        {\n            data[(offset + 0)] = ((byte)((value >> 0) & 255));\n            data[(offset + 1)] = ((byte)((value >> 8) & 255));\n            data[(offset + 2)] = ((byte)((value >> 16) & 255));\n            data[(offset + 3)] = ((byte)((value >> 24) & 255));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOCase:165","type":"CtBinaryOperatorImpl","sourcecode":"(str1 == null) || (str2 == null)"},"failures":[],"tindex":"f5e1e9db-2eaa-11e6-9038-0770b8e53d80","method":{"position":"org.apache.commons.io.IOCase:146","type":"CtMethodImpl","sourcecode":"public int checkCompareTo(java.lang.String str1, java.lang.String str2) {\n    if ((str1 == null) || (str2 == null)) {\n        {\n            if ((str1 == null) || (str2 == null)) {\n                throw new java.lang.NullPointerException(\"The strings must not be null\");\n            } \n            return boolean ? str1.compareTo(str2) : str1.compareToIgnoreCase(str2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"str1","str2":"str2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1369","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"f5e1e9dc-2eaa-11e6-9038-f9ccdc8a47a1","method":{"position":"org.apache.commons.io.IOUtils:1348","type":"CtMethodImpl","sourcecode":"public static void write(char[] data, java.io.OutputStream output) throws java.io.IOException {\n    if (data != null) {\n        {\n            org.apache.commons.io.IOUtils.write(data, output, java.nio.charset.Charset.defaultCharset());\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:239","type":"CtBinaryOperatorImpl","sourcecode":"((file != null) && (file.isFile())) && (file.canRead())"},"failures":[],"tindex":"f5e210ed-2eaa-11e6-9038-3fffca0658a2","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:83","type":"CtMethodImpl","sourcecode":"public void onFileDelete(final java.io.File file) {\n    if (((file != null) && (file.isFile())) && (file.canRead())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:790","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"f5e210ee-2eaa-11e6-9038-5d88f933eaa5","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:774","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter filter) {\n    if (filter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filter == null) {\n                return org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.IOFileFilter;\n            } \n            return new org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.IOFileFilter , filter);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:80","type":"CtBinaryOperatorImpl","sourcecode":"files == null"},"failures":[],"tindex":"f5e210ef-2eaa-11e6-9038-fbda2a1064a1","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:324","type":"CtMethodImpl","sourcecode":"private void checkAndNotify(org.apache.commons.io.monitor.FileEntry parent, org.apache.commons.io.monitor.FileEntry[] previous, java.io.File[] files) {\n    if (files == null) {\n        {\n            int int = 0;\n            org.apache.commons.io.monitor.FileEntry[] org.apache.commons.io.monitor.FileEntry[] = (files.int) > 0 ? new org.apache.commons.io.monitor.FileEntry[files.int] : org.apache.commons.io.monitor.FileEntry.org.apache.commons.io.monitor.FileEntry.org.apache.commons.io.monitor.FileEntry[];\n            for (org.apache.commons.io.monitor.FileEntry org.apache.commons.io.monitor.FileEntry : previous) {\n                while ((c < (files.int)) && ((java.util.Comparator<java.io.File>.compare(entry.getFile(), files[c])) > 0)) {\n                    current[c] = createFileEntry(parent, files[c]);\n                    doCreate(current[c]);\n                    c++;\n                }\n                if ((c < (files.int)) && ((java.util.Comparator<java.io.File>.compare(entry.getFile(), files[c])) == 0)) {\n                    doMatch(entry, files[c]);\n                    checkAndNotify(entry, entry.getChildren(), listFiles(files[c]));\n                    current[c] = entry;\n                    c++;\n                } else {\n                    checkAndNotify(entry, entry.getChildren(), org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.java.io.File[]);\n                    doDelete(entry);\n                }\n            }\n            for ( ; c < (files.int) ; c++) {\n                current[c] = createFileEntry(parent, files[c]);\n                doCreate(current[c]);\n            }\n            parent.setChildren(current);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"files":"files"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CharSequenceInputStream:121","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"f5e23800-2eaa-11e6-9038-7d63a02250cb","method":{"position":"org.apache.commons.io.output.WriterOutputStream:209","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b, int off, int len) throws java.io.IOException {\n    if (off == 0) {\n        {\n            while (len > 0) {\n                int int = java.lang.Math.min(len, java.nio.ByteBuffer.remaining());\n                java.nio.ByteBuffer.put(b, off, c);\n                processInput(false);\n                len -= c;\n                off += c;\n            }\n            if (boolean) {\n                flushOutput();\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"off"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CharSequenceReader:140","type":"CtBinaryOperatorImpl","sourcecode":"n < 0"},"failures":[],"tindex":"f5e23801-2eaa-11e6-9038-c986847c48b0","method":{"position":"org.apache.commons.io.input.BoundedInputStream:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) throws java.io.IOException {\n    if (n < 0) {\n        {\n            long long = (long) >= 0 ? java.lang.Math.min(n, ((long) - (long))) : n;\n            long long = java.io.InputStream.skip(toSkip);\n            long += skippedBytes;\n            return skippedBytes;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2534","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"f5e23802-2eaa-11e6-9038-8db5062ce165","method":{"position":"org.apache.commons.io.FileUtils:2366","type":"CtMethodImpl","sourcecode":"public static void forceMkdir(java.io.File directory) throws java.io.IOException {\n    if (!(directory.isDirectory())) {\n        {\n            if (directory.exists()) {\n                if (!(directory.isDirectory())) {\n                    java.lang.String java.lang.String = ((\"File \" + directory) + \" exists and is \") + \"not a directory. Unable to create directory.\";\n                    throw new java.io.IOException(message);\n                } \n            } else {\n                if (!(directory.mkdirs())) {\n                    if (!(directory.isDirectory())) {\n                        java.lang.String java.lang.String = \"Unable to create directory \" + directory;\n                        throw new java.io.IOException(message);\n                    } \n                } \n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2308","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.exists())"},"failures":[],"tindex":"f5e25f13-2eaa-11e6-9038-b3d24d5d030f","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:43","type":"CtMethodImpl","sourcecode":"public void onDirectoryCreate(final java.io.File directory) {\n    if (!(directory.exists())) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2273","type":"CtUnaryOperatorImpl","sourcecode":"!(file.delete())"},"failures":[],"tindex":"f5e25f14-2eaa-11e6-9038-8d70534ff0cf","method":{"position":"org.apache.commons.io.filefilter.NotFileFilter:66","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file, java.lang.String name) {\n    if (!(file.delete())) {\n        {\n            return !(org.apache.commons.io.filefilter.IOFileFilter.accept(file, name));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"f5e25f15-2eaa-11e6-9038-9b2978758c70","method":{"position":"org.apache.commons.io.FileUtils:2077","type":"CtMethodImpl","sourcecode":"public static void writeByteArrayToFile(java.io.File file, byte[] data) throws java.io.IOException {\n    if (data != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeByteArrayToFile(file, data, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2784","type":"CtBinaryOperatorImpl","sourcecode":"(!(destDir.exists())) && createDestDir"},"failures":[],"tindex":"f5e25f16-2eaa-11e6-9038-138a88e72322","method":{"position":"org.apache.commons.io.FileUtils:2777","type":"CtMethodImpl","sourcecode":"public static void moveDirectoryToDirectory(java.io.File src, java.io.File destDir, boolean createDestDir) throws java.io.IOException {\n    if ((!(src.exists())) && createDestDir) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (src == null) {\n                throw new java.lang.NullPointerException(\"Source must not be null\");\n            } \n            if (destDir == null) {\n                throw new java.lang.NullPointerException(\"Destination directory must not be null\");\n            } \n            if ((!(destDir.exists())) && createDestDir) {\n                destDir.mkdirs();\n            } \n            if (!(destDir.exists())) {\n                throw new java.io.FileNotFoundException(((((\"Destination directory '\" + destDir) + \"' does not exist [createDestDir=\") + createDestDir) + \"]\"));\n            } \n            if (!(destDir.isDirectory())) {\n                throw new java.io.IOException(((\"Destination '\" + destDir) + \"' is not a directory\"));\n            } \n            org.apache.commons.io.FileUtils.moveDirectory(src, new java.io.File(destDir , src.getName()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"createDestDir":"createDestDir","destDir":"src"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.AutoCloseInputStream:76","type":"CtBinaryOperatorImpl","sourcecode":"n == (-1)"},"failures":[],"tindex":"f5e28627-2eaa-11e6-9038-1594e4dbcf5b","method":{"position":"org.apache.commons.io.input.ProxyReader:243","type":"CtMethodImpl","sourcecode":"protected void afterRead(int n) throws java.io.IOException {\n    if (n == (-1)) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:949","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"f5e28628-2eaa-11e6-9038-313cf7c18832","method":{"position":"org.apache.commons.io.FilenameUtils:1145","type":"CtMethodImpl","sourcecode":"public static boolean isExtension(java.lang.String filename, java.lang.String extension) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                return false;\n            } \n            if ((extension == null) || ((extension.length()) == 0)) {\n                return (org.apache.commons.io.FilenameUtils.indexOfExtension(filename)) == (-1);\n            } \n            java.lang.String java.lang.String = org.apache.commons.io.FilenameUtils.getExtension(filename);\n            return fileExt.equals(extension);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1561","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"f5e28629-2eaa-11e6-9038-a50fa3166251","method":{"position":"org.apache.commons.io.monitor.FileEntry:93","type":"CtMethodImpl","sourcecode":"public boolean refresh(java.io.File file) {\n    if (file == null) {\n        {\n            boolean boolean = boolean;\n            long long = long;\n            boolean boolean = boolean;\n            long long = long;\n            java.lang.String = file.getName();\n            boolean = file.exists();\n            boolean = boolean ? file.isDirectory() : false;\n            long = boolean ? file.lastModified() : 0;\n            long = (boolean) && (!(boolean)) ? file.length() : 0;\n            return ((((boolean) != origExists) || ((long) != origLastModified)) || ((boolean) != origDirectory)) || ((long) != origLength);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"f5e2ad3a-2eaa-11e6-9038-151e1e2a78d5","method":{"position":"org.apache.commons.io.output.LockableFileWriter:349","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str) throws java.io.IOException {\n    if (str != null) {\n        {\n            java.io.Writer.write(str);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.TaggedIOException:94","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.TaggedIOException.isTaggedWith(throwable, tag)"},"failures":[],"tindex":"f5e2ad3b-2eaa-11e6-9038-4fa456ab32a2","method":{"position":"org.apache.commons.io.TaggedIOException:92","type":"CtMethodImpl","sourcecode":"public static void throwCauseIfTaggedWith(java.lang.Throwable throwable, java.lang.Object tag) throws java.io.IOException {\n    if (org.apache.commons.io.TaggedIOException.isTaggedWith(tag, tag)) {\n        {\n            if (org.apache.commons.io.TaggedIOException.isTaggedWith(throwable, tag)) {\n                throw ((org.apache.commons.io.TaggedIOException)(throwable)).getCause();\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"tag","tag":"tag"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2293","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f5e2ad3c-2eaa-11e6-9038-d51f1ae6b8ce","method":{"position":"org.apache.commons.io.FileUtils:1805","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> readLines(java.io.File file, java.lang.String encoding) throws java.io.IOException {\n    if (file.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.FileUtils.readLines(file, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"commons-io","transformationCount":100,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}