{"failureDictionary":{},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1565","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"d5931a22-2ebe-11e6-adbc-ffb1f85892b9","method":{"position":"org.apache.commons.io.FileCleaner:57","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static void track(java.io.File file, java.lang.Object marker) {\n    if (file.isDirectory()) {\n        {\n            org.apache.commons.io.FileCleaner.org.apache.commons.io.FileCleaner.org.apache.commons.io.FileCleaningTracker.track(file, marker);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:134","type":"CtBinaryOperatorImpl","sourcecode":"chr != null"},"failures":[],"tindex":"d593dd73-2ebe-11e6-adbc-81a3143b7656","method":{"position":"org.apache.commons.io.output.ProxyWriter:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr) throws java.io.IOException {\n    if (chr != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (chr != null) {\n                {\n                    try {\n                        int int = 0;\n                        if (chr != null) {\n                            len = chr.int;\n                        } \n                        beforeWrite(len);\n                        java.io.Writer.write(chr);\n                        afterWrite(len);\n                    } catch (java.io.IOException e) {\n                        handleIOException(e);\n                    }\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chr":"chr"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"d593dd74-2ebe-11e6-adbc-8db8868da1ba","method":{"position":"org.apache.commons.io.EndianUtils:344","type":"CtMethodImpl","sourcecode":"public static int readSwappedInteger(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        {\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            return ((((value1 & 255) << 0) + ((value2 & 255) << 8)) + ((value3 & 255) << 16)) + ((value4 & 255) << 24);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:949","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"d5940485-2ebe-11e6-adbc-078acbd72363","method":{"position":"org.apache.commons.io.FilenameUtils:905","type":"CtMethodImpl","sourcecode":"private static java.lang.String doGetFullPath(java.lang.String filename, boolean includeSeparator) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (filename == null) {\n                        return null;\n                    } \n                    int int = org.apache.commons.io.FilenameUtils.getPrefixLength(filename);\n                    if (prefix < 0) {\n                        return null;\n                    } \n                    if (prefix >= (filename.length())) {\n                        if (includeSeparator) {\n                            return org.apache.commons.io.FilenameUtils.getPrefix(filename);\n                        } else {\n                            return filename;\n                        }\n                    } \n                    int int = org.apache.commons.io.FilenameUtils.indexOfLastSeparator(filename);\n                    if (index < 0) {\n                        return filename.substring(0, prefix);\n                    } \n                    int int = index + (includeSeparator ? 1 : 0);\n                    if (end == 0) {\n                        end++;\n                    } \n                    return filename.substring(0, end);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:134","type":"CtBinaryOperatorImpl","sourcecode":"chr != null"},"failures":[],"tindex":"d5942b96-2ebe-11e6-adbc-d12bcceb57b3","method":{"position":"org.apache.commons.io.input.ProxyReader:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] chr, int st, int len) throws java.io.IOException {\n    if (chr != null) {\n        {\n            try {\n                beforeRead(len);\n                int int = java.io.Reader.read(chr, st, len);\n                afterRead(n);\n                return n;\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n                return -1;\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chr":"chr"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:740","type":"CtBinaryOperatorImpl","sourcecode":"(file1.isDirectory()) || (file2.isDirectory())"},"failures":[],"tindex":"d5942b97-2ebe-11e6-adbc-2b74276b9d5c","method":{"position":"org.apache.commons.io.FileUtils:729","type":"CtMethodImpl","sourcecode":"public static boolean contentEquals(java.io.File file1, java.io.File file2) throws java.io.IOException {\n    if ((file1.isDirectory()) || (file1.isDirectory())) {\n        {\n            boolean boolean = file1.exists();\n            if (file1Exists != (file2.exists())) {\n                return false;\n            } \n            if (!file1Exists) {\n                return true;\n            } \n            if ((file1.isDirectory()) || (file2.isDirectory())) {\n                throw new java.io.IOException(\"Can't compare directories, only files\");\n            } \n            if ((file1.length()) != (file2.length())) {\n                return false;\n            } \n            if (file1.getCanonicalFile().equals(file2.getCanonicalFile())) {\n                return true;\n            } \n            java.io.InputStream java.io.InputStream = null;\n            java.io.InputStream java.io.InputStream = null;\n            try {\n                input1 = new java.io.FileInputStream(file1);\n                input2 = new java.io.FileInputStream(file2);\n                return org.apache.commons.io.IOUtils.contentEquals(input1, input2);\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(input1);\n                org.apache.commons.io.IOUtils.closeQuietly(input2);\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file2":"file1","file1":"file1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:130","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"d59452a8-2ebe-11e6-adbc-2d0a887af958","method":{"position":"org.apache.commons.io.FileUtils:2165","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.util.Collection<?> lines, boolean append) throws java.io.IOException {\n    if (file.isDirectory()) {\n        {\n            org.apache.commons.io.FileUtils.writeLines(file, null, lines, null, append);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"d59479b9-2ebe-11e6-adbc-ad81779d8b38","method":{"position":"org.apache.commons.io.output.StringBuilderWriter:96","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence value, int start, int end) {\n    if ((-1) == start) {\n        {\n            if (start == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.lang.StringBuilder.append(value, start, end);\n                    return org.apache.commons.io.output.StringBuilderWriter.this;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CharSequenceInputStream:114","type":"CtBinaryOperatorImpl","sourcecode":"b == null"},"failures":[],"tindex":"d594a0ca-2ebe-11e6-adbc-716158f07373","method":{"position":"org.apache.commons.io.input.ReaderInputStream:260","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] b) throws java.io.IOException {\n    if (b == null) {\n        {\n            return read(b, 0, b.int);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1146","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"d594a0cb-2ebe-11e6-adbc-51abdc8117dd","method":{"position":"org.apache.commons.io.FilenameUtils:749","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPrefix(java.lang.String filename) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filename == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (filename == null) {\n                        return null;\n                    } \n                    int int = org.apache.commons.io.FilenameUtils.getPrefixLength(filename);\n                    if (len < 0) {\n                        return null;\n                    } \n                    if (len > (filename.length())) {\n                        return filename + (org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char);\n                    } \n                    return filename.substring(0, len);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.XmlStreamWriter:140","type":"CtBinaryOperatorImpl","sourcecode":"(writer) != null"},"failures":[],"tindex":"d594c7dc-2ebe-11e6-adbc-a514cdee0fe9","method":{"position":"org.apache.commons.io.IOUtils:1706","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.util.Collection<?> lines, java.lang.String lineEnding, java.io.Writer writer) throws java.io.IOException {\n    if (writer != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (lines == null) {\n                return ;\n            } \n            if (lineEnding == null) {\n                lineEnding = org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.java.lang.String;\n            } \n            for (java.lang.Object java.lang.Object : lines) {\n                if (line != null) {\n                    writer.write(line.toString());\n                } \n                writer.write(lineEnding);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"writer":"writer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:134","type":"CtBinaryOperatorImpl","sourcecode":"chr != null"},"failures":[],"tindex":"d594eeed-2ebe-11e6-adbc-9fae8bbf3baf","method":{"position":"org.apache.commons.io.output.ProxyWriter:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr) throws java.io.IOException {\n    if (chr != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (chr != null) {\n                {\n                    try {\n                        int int = 0;\n                        if (chr != null) {\n                            len = chr.int;\n                        } \n                        beforeWrite(len);\n                        java.io.Writer.write(chr);\n                        afterWrite(len);\n                    } catch (java.io.IOException e) {\n                        handleIOException(e);\n                    }\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chr":"chr"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"fileFilter == null"},"failures":[],"tindex":"d594eeee-2ebe-11e6-adbc-7dfaee4f0b53","method":{"position":"org.apache.commons.io.FileUtils:626","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<java.io.File> iterateFiles(java.io.File directory, org.apache.commons.io.filefilter.IOFileFilter fileFilter, org.apache.commons.io.filefilter.IOFileFilter dirFilter) {\n    if (dirFilter == null) {\n        {\n            return org.apache.commons.io.FileUtils.listFiles(directory, fileFilter, dirFilter).iterator();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fileFilter":"dirFilter"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:348","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"d59515ff-2ebe-11e6-adbc-db98590805cf","method":{"position":"org.apache.commons.io.FilenameUtils:973","type":"CtMethodImpl","sourcecode":"public static java.lang.String getBaseName(java.lang.String filename) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FilenameUtils.removeExtension(org.apache.commons.io.FilenameUtils.getName(filename));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:352","type":"CtInvocationImpl","sourcecode":"file.exists()"},"failures":[],"tindex":"d5951600-2ebe-11e6-adbc-ab0c07d5848e","method":{"position":"org.apache.commons.io.filefilter.CanWriteFileFilter:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file.exists()) {\n        {\n            return file.canWrite();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:750","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"d5953c11-2ebe-11e6-adbc-61b1985a072b","method":{"position":"org.apache.commons.io.FilenameUtils:749","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPrefix(java.lang.String filename) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filename == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (filename == null) {\n                        return null;\n                    } \n                    int int = org.apache.commons.io.FilenameUtils.getPrefixLength(filename);\n                    if (len < 0) {\n                        return null;\n                    } \n                    if (len > (filename.length())) {\n                        return filename + (org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char);\n                    } \n                    return filename.substring(0, len);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:223","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"d5953c12-2ebe-11e6-adbc-f9592c303667","method":{"position":"org.apache.commons.io.FileCleaningTracker:76","type":"CtMethodImpl","sourcecode":"public void track(java.io.File file, java.lang.Object marker) {\n    if (file == null) {\n        {\n            track(file, marker, ((org.apache.commons.io.FileDeleteStrategy)(null)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.DelegateFileFilter:46","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"d5956323-2ebe-11e6-adbc-296e22c8d60f","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:515","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FilenameFilter filter) {\n    if (filter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filter == null) {\n                {\n                    return new org.apache.commons.io.filefilter.DelegateFileFilter(filter);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1861","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[],"tindex":"d5956324-2ebe-11e6-adbc-d158891df28f","method":{"position":"org.apache.commons.io.monitor.FileEntry:227","type":"CtMethodImpl","sourcecode":"public void setLength(long length) {\n    if (length > 0) {\n        {\n            if (length == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (length > 0) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            org.apache.commons.io.monitor.FileEntry.this.long = length;\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1640","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"d5958a35-2ebe-11e6-adbc-455c696f48ea","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:51","type":"CtMethodImpl","sourcecode":"public void onDirectoryChange(final java.io.File directory) {\n    if (!(directory.isDirectory())) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1361","type":"CtBinaryOperatorImpl","sourcecode":"srcDir == null"},"failures":[],"tindex":"d5958a36-2ebe-11e6-adbc-8ba910bb5dfb","method":{"position":"org.apache.commons.io.FileUtils:2734","type":"CtMethodImpl","sourcecode":"public static void moveDirectory(java.io.File srcDir, java.io.File destDir) throws java.io.IOException {\n    if (srcDir == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (srcDir == null) {\n                throw new java.lang.NullPointerException(\"Source must not be null\");\n            } \n            if (destDir == null) {\n                throw new java.lang.NullPointerException(\"Destination must not be null\");\n            } \n            if (!(srcDir.exists())) {\n                throw new java.io.FileNotFoundException(((\"Source '\" + srcDir) + \"' does not exist\"));\n            } \n            if (!(srcDir.isDirectory())) {\n                throw new java.io.IOException(((\"Source '\" + srcDir) + \"' is not a directory\"));\n            } \n            if (destDir.exists()) {\n                throw new org.apache.commons.io.FileExistsException(((\"Destination '\" + destDir) + \"' already exists\"));\n            } \n            boolean boolean = srcDir.renameTo(destDir);\n            if (!rename) {\n                if (destDir.getCanonicalPath().startsWith(srcDir.getCanonicalPath())) {\n                    throw new java.io.IOException((((\"Cannot move directory: \" + srcDir) + \" to a subdirectory of itself: \") + destDir));\n                } \n                org.apache.commons.io.FileUtils.copyDirectory(srcDir, destDir);\n                org.apache.commons.io.FileUtils.deleteDirectory(srcDir);\n                if (srcDir.exists()) {\n                    throw new java.io.IOException(((((\"Failed to delete original directory '\" + srcDir) + \"' after copy to '\") + destDir) + \"'\"));\n                } \n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcDir":"srcDir"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1565","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"d595b147-2ebe-11e6-adbc-976db73dbf72","method":{"position":"org.apache.commons.io.FileUtils:2028","type":"CtMethodImpl","sourcecode":"public static void write(java.io.File file, java.lang.CharSequence data, java.lang.String encoding) throws java.io.IOException {\n    if (file.isDirectory()) {\n        {\n            org.apache.commons.io.FileUtils.write(file, data, encoding, false);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:356","type":"CtBinaryOperatorImpl","sourcecode":"(file.canWrite()) == false"},"failures":[],"tindex":"d595d858-2ebe-11e6-adbc-df18d0f1bdef","method":{"position":"org.apache.commons.io.filefilter.FalseFileFilter:57","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File file) {\n    if ((file.canWrite()) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1284","type":"CtBinaryOperatorImpl","sourcecode":"caseSensitivity == null"},"failures":[],"tindex":"d595d859-2ebe-11e6-adbc-a5fdaefb1a39","method":{"position":"org.apache.commons.io.FilenameUtils:1112","type":"CtMethodImpl","sourcecode":"public static boolean equals(java.lang.String filename1, java.lang.String filename2, boolean normalized, org.apache.commons.io.IOCase caseSensitivity) {\n    if (caseSensitivity == null) {\n        {\n            if ((filename1 == null) || (filename2 == null)) {\n                return (filename1 == null) && (filename2 == null);\n            } \n            if (normalized) {\n                filename1 = org.apache.commons.io.FilenameUtils.normalize(filename1);\n                filename2 = org.apache.commons.io.FilenameUtils.normalize(filename2);\n                if ((filename1 == null) || (filename2 == null)) {\n                    throw new java.lang.NullPointerException(\"Error normalizing one or both of the file names\");\n                } \n            } \n            if (caseSensitivity == null) {\n                caseSensitivity = org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase;\n            } \n            return caseSensitivity.checkEquals(filename1, filename2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"caseSensitivity":"caseSensitivity"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.AndFileFilter:134","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.filefilter.AndFileFilter.this.fileFilters.isEmpty()"},"failures":[],"tindex":"d595ff6a-2ebe-11e6-adbc-e191c48a5ae3","method":{"position":"org.apache.commons.io.filefilter.OrFileFilter:107","type":"CtMethodImpl","sourcecode":"public void setFileFilters(final java.util.List<org.apache.commons.io.filefilter.IOFileFilter> fileFilters) {\n    if (fileFilters.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.filefilter.OrFileFilter.this.java.util.List<org.apache.commons.io.filefilter.IOFileFilter>.clear();\n            org.apache.commons.io.filefilter.OrFileFilter.this.java.util.List<org.apache.commons.io.filefilter.IOFileFilter>.addAll(fileFilters);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fileFilters":"fileFilters"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.comparator.DirectoryFileComparator:73","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"d595ff6b-2ebe-11e6-adbc-b11f9484d442","method":{"position":"org.apache.commons.io.FileUtils:1961","type":"CtMethodImpl","sourcecode":"public static void writeStringToFile(java.io.File file, java.lang.String data) throws java.io.IOException {\n    if (file.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeStringToFile(file, data, java.nio.charset.Charset.defaultCharset(), false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.ReversedLinesFileReader:115","type":"CtBinaryOperatorImpl","sourcecode":"charset == (java.nio.charset.Charset.forName(\"UTF-16\"))"},"failures":[],"tindex":"d596267c-2ebe-11e6-adbc-d353a23160f2","method":{"position":"org.apache.commons.io.Charsets:66","type":"CtMethodImpl","sourcecode":"public static java.nio.charset.Charset toCharset(java.nio.charset.Charset charset) {\n    if (charset == (java.nio.charset.Charset.forName(\"UTF-16\"))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return charset == null ? java.nio.charset.Charset.defaultCharset() : charset;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"charset":"charset"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:478","type":"CtBinaryOperatorImpl","sourcecode":"(httpContentType != null) && (httpContentType.startsWith(\"text/html\"))"},"failures":[],"tindex":"d596267d-2ebe-11e6-adbc-451632950f96","method":{"position":"org.apache.commons.io.input.XmlStreamReader:678","type":"CtMethodImpl","sourcecode":"static java.lang.String getContentTypeEncoding(java.lang.String httpContentType) {\n    if ((httpContentType != null) && (httpContentType.startsWith(\"text/html\"))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String = null;\n            if (httpContentType != null) {\n                int int = httpContentType.indexOf(\";\");\n                if (i > (-1)) {\n                    java.lang.String java.lang.String = httpContentType.substring((i + 1));\n                    java.util.regex.Matcher java.util.regex.Matcher = org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.util.regex.Pattern.matcher(postMime);\n                    encoding = m.find() ? m.group(1) : null;\n                    encoding = encoding != null ? encoding.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale) : null;\n                } \n            } \n            return encoding;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"httpContentType":"httpContentType"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.XmlStreamWriter:190","type":"CtBinaryOperatorImpl","sourcecode":"(encoding) != null"},"failures":[],"tindex":"d596267e-2ebe-11e6-adbc-0de60745884d","method":{"position":"org.apache.commons.io.CopyUtils:259","type":"CtMethodImpl","sourcecode":"public static void copy(java.io.InputStream input, java.io.Writer output, java.lang.String encoding) throws java.io.IOException {\n    if (encoding != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.InputStreamReader java.io.InputStreamReader = new java.io.InputStreamReader(input , encoding);\n            org.apache.commons.io.CopyUtils.copy(in, output);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.TaggedIOException:94","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.TaggedIOException.isTaggedWith(throwable, tag)"},"failures":[],"tindex":"d5964d8f-2ebe-11e6-adbc-8baaeece6e5c","method":{"position":"org.apache.commons.io.TaggedIOException:64","type":"CtMethodImpl","sourcecode":"public static boolean isTaggedWith(java.lang.Throwable throwable, java.lang.Object tag) {\n    if (org.apache.commons.io.TaggedIOException.isTaggedWith(throwable, tag)) {\n        {\n            return ((tag != null) && (throwable instanceof org.apache.commons.io.TaggedIOException)) && (tag.equals(((org.apache.commons.io.TaggedIOException)(throwable)).java.io.Serializable));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable","tag":"tag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:270","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"d5964d90-2ebe-11e6-adbc-894926af26fb","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:515","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FilenameFilter filter) {\n    if (filter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filter == null) {\n                {\n                    return new org.apache.commons.io.filefilter.DelegateFileFilter(filter);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2273","type":"CtUnaryOperatorImpl","sourcecode":"!(file.delete())"},"failures":[],"tindex":"d59674a1-2ebe-11e6-adbc-6b16373ff090","method":{"position":"org.apache.commons.io.FileUtils:2247","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.util.Collection<?> lines, java.lang.String lineEnding, boolean append) throws java.io.IOException {\n    if (!(file.delete())) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeLines(file, null, lines, lineEnding, append);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"d59674a2-2ebe-11e6-adbc-e1489c833575","method":{"position":"org.apache.commons.io.output.LockableFileWriter:349","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str) throws java.io.IOException {\n    if (str != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (str != null) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    java.io.Writer.write(str);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NameFileFilter:69","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"d59674a3-2ebe-11e6-adbc-fbf66aaa5e3c","method":{"position":"org.apache.commons.io.filefilter.TrueFileFilter:67","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File dir, java.lang.String name) {\n    if (name == null) {\n        {\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"d59674a4-2ebe-11e6-adbc-5385db6a661e","method":{"position":"org.apache.commons.io.output.LockableFileWriter:349","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str) throws java.io.IOException {\n    if (str != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (str != null) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    java.io.Writer.write(str);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:492","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"d5969bb5-2ebe-11e6-adbc-475df89e65af","method":{"position":"org.apache.commons.io.IOUtils:1550","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.String data, java.io.OutputStream output, java.lang.String encoding) throws java.io.IOException {\n    if (data == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.IOUtils.write(data, output, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"data"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2708","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"d5969bb6-2ebe-11e6-adbc-cb7de24beb72","method":{"position":"org.apache.commons.io.filefilter.PrefixFileFilter:167","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file, java.lang.String name) {\n    if (!(file.exists())) {\n        {\n            if (file.isDirectory()) {\n                {\n                    for (java.lang.String java.lang.String : java.lang.String[]) {\n                        if (org.apache.commons.io.IOCase.checkStartsWith(name, prefix)) {\n                            return true;\n                        } \n                    }\n                    return false;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2317","type":"CtBinaryOperatorImpl","sourcecode":"toSkip < 0"},"failures":[],"tindex":"d5969bb7-2ebe-11e6-adbc-f5f7c8108f57","method":{"position":"org.apache.commons.io.IOUtils:2379","type":"CtMethodImpl","sourcecode":"public static void skipFully(java.io.Reader input, long toSkip) throws java.io.IOException {\n    if (toSkip < 0) {\n        {\n            long long = org.apache.commons.io.IOUtils.skip(input, toSkip);\n            if (skipped != toSkip) {\n                throw new java.io.EOFException((((\"Chars to skip: \" + toSkip) + \" actual: \") + skipped));\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toSkip":"toSkip"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"d596c2c8-2ebe-11e6-adbc-3bc31c683d57","method":{"position":"org.apache.commons.io.IOUtils:2095","type":"CtMethodImpl","sourcecode":"public static void copy(java.io.Reader input, java.io.OutputStream output) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.IOUtils.copy(input, output, java.nio.charset.Charset.defaultCharset());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.AndFileFilter:76","type":"CtBinaryOperatorImpl","sourcecode":"(filter1 == null) || (filter2 == null)"},"failures":[],"tindex":"d596c2c9-2ebe-11e6-adbc-f32c2add5d58","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:405","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static org.apache.commons.io.filefilter.IOFileFilter orFileFilter(org.apache.commons.io.filefilter.IOFileFilter filter1, org.apache.commons.io.filefilter.IOFileFilter filter2) {\n    if ((filter2 == null) || (filter2 == null)) {\n        {\n            return new org.apache.commons.io.filefilter.OrFileFilter(filter1 , filter2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter1":"filter2","filter2":"filter2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:627","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"d596c2ca-2ebe-11e6-adbc-4d375fdad852","method":{"position":"org.apache.commons.io.input.XmlStreamReader:399","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] buf, int offset, int len) throws java.io.IOException {\n    if (offset == 0) {\n        {\n            return java.io.Reader.read(buf, offset, len);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"offset"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.TeeInputStream:128","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"d596c2cb-2ebe-11e6-adbc-4ff594620435","method":{"position":"org.apache.commons.io.output.ProxyWriter:242","type":"CtMethodImpl","sourcecode":"protected void beforeWrite(int n) throws java.io.IOException {\n    if (n != (-1)) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2402","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[],"tindex":"d596c2cc-2ebe-11e6-adbc-cf74b61f8116","method":{"position":"org.apache.commons.io.IOUtils:2495","type":"CtMethodImpl","sourcecode":"public static void readFully(java.io.Reader input, char[] buffer, int offset, int length) throws java.io.IOException {\n    if (length < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = org.apache.commons.io.IOUtils.read(input, buffer, offset, length);\n            if (actual != length) {\n                throw new java.io.EOFException((((\"Length to read: \" + length) + \" actual: \") + actual));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:482","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"d596e9dd-2ebe-11e6-adbc-0d3b5ee2fc0e","method":{"position":"org.apache.commons.io.FileUtils:2553","type":"CtMethodImpl","sourcecode":"public static boolean isFileNewer(java.io.File file, java.io.File reference) {\n    if (reference.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (reference == null) {\n                throw new java.lang.IllegalArgumentException(\"No specified reference file\");\n            } \n            if (!(reference.exists())) {\n                throw new java.lang.IllegalArgumentException(((\"The reference file '\" + reference) + \"' doesn't exist\"));\n            } \n            return org.apache.commons.io.FileUtils.isFileNewer(file, reference.lastModified());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"reference"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.DirectoryWalker:330","type":"CtBinaryOperatorImpl","sourcecode":"startDirectory == null"},"failures":[],"tindex":"d596e9de-2ebe-11e6-adbc-63a3026064b1","method":{"position":"org.apache.commons.io.DirectoryWalker:329","type":"CtMethodImpl","sourcecode":"protected final void walk(java.io.File startDirectory, java.util.Collection<T> results) throws java.io.IOException {\n    if (startDirectory == null) {\n        {\n            if (startDirectory == null) {\n                throw new java.lang.NullPointerException(\"Start Directory is null\");\n            } \n            try {\n                handleStart(startDirectory, results);\n                walk(startDirectory, 0, results);\n                handleEnd(results);\n            } catch (org.apache.commons.io.DirectoryWalker.CancelException cancel) {\n                handleCancelled(startDirectory, results, cancel);\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startDirectory":"startDirectory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1434","type":"CtVariableReadImpl","sourcecode":"preserveFileDate"},"failures":[],"tindex":"d596e9df-2ebe-11e6-adbc-fdfc4efc8c0b","method":{"position":"org.apache.commons.io.FileUtils:1259","type":"CtMethodImpl","sourcecode":"public static void copyDirectory(java.io.File srcDir, java.io.File destDir, boolean preserveFileDate) throws java.io.IOException {\n    if (preserveFileDate) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.copyDirectory(srcDir, destDir, null, preserveFileDate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"preserveFileDate":"preserveFileDate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileSystemUtils:259","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"d59710f0-2ebe-11e6-adbc-9d69719f3fee","method":{"position":"org.apache.commons.io.FileSystemUtils:199","type":"CtMethodImpl","sourcecode":"public static long freeSpaceKb(java.lang.String path, long timeout) throws java.io.IOException {\n    if (path == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.freeSpaceOS(path, org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int, true, timeout);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"path"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2858","type":"CtBinaryOperatorImpl","sourcecode":"destDir == null"},"failures":[],"tindex":"d59710f1-2ebe-11e6-adbc-3f0473f8cb91","method":{"position":"org.apache.commons.io.FileUtils:2777","type":"CtMethodImpl","sourcecode":"public static void moveDirectoryToDirectory(java.io.File src, java.io.File destDir, boolean createDestDir) throws java.io.IOException {\n    if (destDir == null) {\n        {\n            if (src == null) {\n                throw new java.lang.NullPointerException(\"Source must not be null\");\n            } \n            if (destDir == null) {\n                throw new java.lang.NullPointerException(\"Destination directory must not be null\");\n            } \n            if ((!(destDir.exists())) && createDestDir) {\n                destDir.mkdirs();\n            } \n            if (!(destDir.exists())) {\n                throw new java.io.FileNotFoundException(((((\"Destination directory '\" + destDir) + \"' does not exist [createDestDir=\") + createDestDir) + \"]\"));\n            } \n            if (!(destDir.isDirectory())) {\n                throw new java.io.IOException(((\"Destination '\" + destDir) + \"' is not a directory\"));\n            } \n            org.apache.commons.io.FileUtils.moveDirectory(src, new java.io.File(destDir , src.getName()));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"destDir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"d59710f2-2ebe-11e6-adbc-330bd227c950","method":{"position":"org.apache.commons.io.output.NullWriter:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str, int st, int end) {\n    if (end == 0) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"end"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:489","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"d5973803-2ebe-11e6-adbc-6b8d5a8b5f08","method":{"position":"org.apache.commons.io.IOUtils:1138","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.LineIterator lineIterator(java.io.InputStream input, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        {\n            if (encoding == null) {\n                {\n                    return org.apache.commons.io.IOUtils.lineIterator(input, org.apache.commons.io.Charsets.toCharset(encoding));\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2292","type":"CtBinaryOperatorImpl","sourcecode":"n < 0"},"failures":[],"tindex":"d5973804-2ebe-11e6-adbc-e14933575463","method":{"position":"org.apache.commons.io.input.BoundedInputStream:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) throws java.io.IOException {\n    if (n < 0) {\n        {\n            long long = (long) >= 0 ? java.lang.Math.min(n, ((long) - (long))) : n;\n            long long = java.io.InputStream.skip(toSkip);\n            long += skippedBytes;\n            return skippedBytes;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:130","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"d5973805-2ebe-11e6-adbc-6775fae5d675","method":{"position":"org.apache.commons.io.filefilter.DirectoryFileFilter:69","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file.isDirectory()) {\n        {\n            return file.isDirectory();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:580","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"d5973806-2ebe-11e6-adbc-296ecda6f04f","method":{"position":"org.apache.commons.io.FileCleaningTracker:120","type":"CtMethodImpl","sourcecode":"public void track(java.lang.String path, java.lang.Object marker, org.apache.commons.io.FileDeleteStrategy deleteStrategy) {\n    if (path == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (path == null) {\n                throw new java.lang.NullPointerException(\"The path must not be null\");\n            } \n            addTracker(path, marker, deleteStrategy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"path"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1635","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.exists())"},"failures":[],"tindex":"d5975f17-2ebe-11e6-adbc-8d71184ccc64","method":{"position":"org.apache.commons.io.FileUtils:591","type":"CtMethodImpl","sourcecode":"public static java.util.Collection<java.io.File> listFilesAndDirs(java.io.File directory, org.apache.commons.io.filefilter.IOFileFilter fileFilter, org.apache.commons.io.filefilter.IOFileFilter dirFilter) {\n    if (!(directory.exists())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.validateListFilesParameters(directory, fileFilter);\n            org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(fileFilter);\n            org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(dirFilter);\n            java.util.Collection<java.io.File> java.util.Collection<java.io.File> = new java.util.LinkedList<java.io.File>();\n            if (directory.isDirectory()) {\n                files.add(directory);\n            } \n            org.apache.commons.io.FileUtils.innerListFiles(files, directory, org.apache.commons.io.filefilter.FileFilterUtils.or(effFileFilter, effDirFilter), true);\n            return files;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1848","type":"CtBinaryOperatorImpl","sourcecode":"length == 0"},"failures":[],"tindex":"d5975f18-2ebe-11e6-adbc-6903c7378c68","method":{"position":"org.apache.commons.io.monitor.FileEntry:227","type":"CtMethodImpl","sourcecode":"public void setLength(long length) {\n    if (length > 0) {\n        {\n            if (length == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (length > 0) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            org.apache.commons.io.monitor.FileEntry.this.long = length;\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"d5975f19-2ebe-11e6-adbc-c90dca011e33","method":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:288","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr, int st, int end) throws java.io.IOException {\n    if (st == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.Writer.write(chr, st, end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"st"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"d597862a-2ebe-11e6-adbc-1f29ae42076b","method":{"position":"org.apache.commons.io.IOUtils:1267","type":"CtMethodImpl","sourcecode":"public static void write(byte[] data, java.io.Writer output) throws java.io.IOException {\n    if (data != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.IOUtils.write(data, output, java.nio.charset.Charset.defaultCharset());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:2068","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[],"tindex":"d597862b-2ebe-11e6-adbc-479e02f08c09","method":{"position":"org.apache.commons.io.monitor.FileEntry:227","type":"CtMethodImpl","sourcecode":"public void setLength(long length) {\n    if (length > 0) {\n        {\n            if (length == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (length > 0) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            org.apache.commons.io.monitor.FileEntry.this.long = length;\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:89","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"d597862c-2ebe-11e6-adbc-81d9bc29846f","method":{"position":"org.apache.commons.io.EndianUtils:452","type":"CtMethodImpl","sourcecode":"public static void writeSwappedDouble(java.io.OutputStream output, double value) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.EndianUtils.writeSwappedLong(output, java.lang.Double.doubleToLongBits(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:353","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"d597ad3d-2ebe-11e6-adbc-31624d67044d","method":{"position":"org.apache.commons.io.filefilter.NotFileFilter:66","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file, java.lang.String name) {\n    if (file.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.io.filefilter.IOFileFilter.accept(file, name));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileDeleteStrategy:72","type":"CtBinaryOperatorImpl","sourcecode":"(fileToDelete == null) || ((fileToDelete.exists()) == false)"},"failures":[],"tindex":"d597ad3e-2ebe-11e6-adbc-4d04da6b1a81","method":{"position":"org.apache.commons.io.FileDeleteStrategy:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean doDelete(java.io.File fileToDelete) throws java.io.IOException {\n    if ((fileToDelete == null) || ((fileToDelete.exists()) == false)) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.forceDelete(fileToDelete);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fileToDelete":"fileToDelete"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.SwappedDataInputStream:142","type":"CtBinaryOperatorImpl","sourcecode":"(-1) == count"},"failures":[],"tindex":"d597ad3f-2ebe-11e6-adbc-f14d12b3c7fe","method":{"position":"org.apache.commons.io.output.ThresholdingOutputStream:219","type":"CtMethodImpl","sourcecode":"protected void checkThreshold(int count) throws java.io.IOException {\n    if ((-1) == count) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((!(boolean)) && (((long) + count) > (int))) {\n                boolean = true;\n                thresholdReached();\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:72","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"d597ad40-2ebe-11e6-adbc-9f5d887c79ed","method":{"position":"org.apache.commons.io.CopyUtils:280","type":"CtMethodImpl","sourcecode":"public static void copy(java.io.Reader input, java.io.OutputStream output) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.OutputStreamWriter java.io.OutputStreamWriter = new java.io.OutputStreamWriter(output);\n            org.apache.commons.io.CopyUtils.copy(input, out);\n            out.flush();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"d597d451-2ebe-11e6-adbc-f3a7dc6be24c","method":{"position":"org.apache.commons.io.output.ProxyWriter:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str) throws java.io.IOException {\n    if (str != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                int int = 0;\n                if (str != null) {\n                    len = str.length();\n                } \n                beforeWrite(len);\n                java.io.Writer.write(str);\n                afterWrite(len);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:711","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"d597d452-2ebe-11e6-adbc-f589466019a6","method":{"position":"org.apache.commons.io.FilenameUtils:688","type":"CtMethodImpl","sourcecode":"public static int indexOfLastSeparator(java.lang.String filename) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                return -1;\n            } \n            int int = filename.lastIndexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char);\n            int int = filename.lastIndexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char);\n            return java.lang.Math.max(lastUnixPos, lastWindowsPos);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:134","type":"CtBinaryOperatorImpl","sourcecode":"chr != null"},"failures":[],"tindex":"d597d453-2ebe-11e6-adbc-4dfa7ed5876d","method":{"position":"org.apache.commons.io.output.LockableFileWriter:327","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr) throws java.io.IOException {\n    if (chr != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.Writer.write(chr);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chr":"chr"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"d597d454-2ebe-11e6-adbc-b3bf39f7dcad","method":{"position":"org.apache.commons.io.input.TeeInputStream:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] bts, int st, int end) throws java.io.IOException {\n    if (end == 0) {\n        {\n            int int = super.read(bts, st, end);\n            if (n != (-1)) {\n                java.io.OutputStream.write(bts, st, n);\n            } \n            return n;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"end"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileCleaningTracker:91","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"d597fb65-2ebe-11e6-adbc-dd4be4a3d547","method":{"position":"org.apache.commons.io.FileUtils:1676","type":"CtMethodImpl","sourcecode":"public static boolean waitFor(java.io.File file, int seconds) {\n    if (file == null) {\n        {\n            int int = 0;\n            int int = 0;\n            while (!(file.exists())) {\n                if ((tick++) >= 10) {\n                    tick = 0;\n                    if ((timeout++) > seconds) {\n                        return false;\n                    } \n                } \n                try {\n                    java.lang.Thread.sleep(100);\n                } catch (java.lang.InterruptedException ignore) {\n                } catch (java.lang.Exception ex) {\n                    break;\n                }\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.EndianUtils:482","type":"CtBinaryOperatorImpl","sourcecode":"(-1) == value"},"failures":[],"tindex":"d597fb66-2ebe-11e6-adbc-332b27e9c1a3","method":{"position":"org.apache.commons.io.output.StringBuilderWriter:96","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence value, int start, int end) {\n    if ((-1) == start) {\n        {\n            if (start == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.lang.StringBuilder.append(value, start, end);\n                    return org.apache.commons.io.output.StringBuilderWriter.this;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"start"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"d597fb67-2ebe-11e6-adbc-e56dfb5f9277","method":{"position":"org.apache.commons.io.IOUtils:2277","type":"CtMethodImpl","sourcecode":"public static long skip(java.io.InputStream input, long toSkip) throws java.io.IOException {\n    if (null != input) {\n        {\n            if (toSkip < 0) {\n                throw new java.lang.IllegalArgumentException((\"Skip count must be non-negative, actual: \" + toSkip));\n            } \n            if ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.byte[]) == null) {\n                org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.byte[] = new byte[org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int];\n            } \n            long long = toSkip;\n            while (remain > 0) {\n                long long = input.read(org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.byte[], 0, ((int)(java.lang.Math.min(remain, org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int))));\n                if (n < 0) {\n                    break;\n                } \n                remain -= n;\n            }\n            return toSkip - remain;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2402","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[],"tindex":"d5982278-2ebe-11e6-adbc-01bac989e1ee","method":{"position":"org.apache.commons.io.IOUtils:2447","type":"CtMethodImpl","sourcecode":"public static int read(java.io.InputStream input, byte[] buffer, int offset, int length) throws java.io.IOException {\n    if (offset < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (length < 0) {\n                throw new java.lang.IllegalArgumentException((\"Length must not be negative: \" + length));\n            } \n            int int = length;\n            while (remaining > 0) {\n                int int = length - remaining;\n                int int = input.read(buffer, (offset + location), remaining);\n                if ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int) == count) {\n                    break;\n                } \n                remaining -= count;\n            }\n            return length - remaining;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"offset"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileDeleteStrategy:72","type":"CtBinaryOperatorImpl","sourcecode":"(fileToDelete == null) || ((fileToDelete.exists()) == false)"},"failures":[],"tindex":"d5982279-2ebe-11e6-adbc-1bc81e9eb883","method":{"position":"org.apache.commons.io.FileDeleteStrategy:92","type":"CtMethodImpl","sourcecode":"public void delete(java.io.File fileToDelete) throws java.io.IOException {\n    if ((fileToDelete == null) || ((fileToDelete.exists()) == false)) {\n        {\n            if ((fileToDelete.exists()) && ((doDelete(fileToDelete)) == false)) {\n                throw new java.io.IOException((\"Deletion failed: \" + fileToDelete));\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fileToDelete":"fileToDelete"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2278","type":"CtBinaryOperatorImpl","sourcecode":"toSkip < 0"},"failures":[],"tindex":"d598227a-2ebe-11e6-adbc-b9b545312ad1","method":{"position":"org.apache.commons.io.IOUtils:2316","type":"CtMethodImpl","sourcecode":"public static long skip(java.io.Reader input, long toSkip) throws java.io.IOException {\n    if (toSkip < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (toSkip < 0) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (toSkip < 0) {\n                        {\n                            if (toSkip < 0) {\n                                throw new java.lang.IllegalArgumentException((\"Skip count must be non-negative, actual: \" + toSkip));\n                            } \n                            if ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[]) == null) {\n                                org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[] = new char[org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int];\n                            } \n                            long long = toSkip;\n                            while (remain > 0) {\n                                long long = input.read(org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[], 0, ((int)(java.lang.Math.min(remain, org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int))));\n                                if (n < 0) {\n                                    break;\n                                } \n                                remain -= n;\n                            }\n                            return toSkip - remain;\n                        }\n                    } else {\n                        throw new java.io.IOException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toSkip":"toSkip"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.ReaderInputStream:223","type":"CtBinaryOperatorImpl","sourcecode":"b == null"},"failures":[],"tindex":"d598498b-2ebe-11e6-adbc-61bed522008a","method":{"position":"org.apache.commons.io.output.WriterOutputStream:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b) throws java.io.IOException {\n    if (b == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            write(b, 0, b.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2921","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"d598498c-2ebe-11e6-adbc-57163df2ceb3","method":{"position":"org.apache.commons.io.FileUtils:2135","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.lang.String encoding, java.util.Collection<?> lines, boolean append) throws java.io.IOException {\n    if (file == null) {\n        {\n            org.apache.commons.io.FileUtils.writeLines(file, encoding, lines, null, append);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2331","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"d598498d-2ebe-11e6-adbc-a1a529c7bc6b","method":{"position":"org.apache.commons.io.FileUtils:2467","type":"CtMethodImpl","sourcecode":"public static long sizeOfDirectory(java.io.File directory) {\n    if (!(directory.isDirectory())) {\n        {\n            org.apache.commons.io.FileUtils.checkDirectory(directory);\n            final java.io.File[] java.io.File[] = directory.listFiles();\n            if (files == null) {\n                return 0L;\n            } \n            long long = 0;\n            for (final java.io.File java.io.File : files) {\n                try {\n                    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n                        size += org.apache.commons.io.FileUtils.sizeOf(file);\n                        if (size < 0) {\n                            break;\n                        } \n                    } \n                } catch (java.io.IOException ioe) {\n                }\n            }\n            return size;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2478","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(file))"},"failures":[],"tindex":"d598709e-2ebe-11e6-adbc-1d0c2a941b06","method":{"position":"org.apache.commons.io.filefilter.FileFileFilter:58","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        {\n            return file.isFile();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1249","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"d598709f-2ebe-11e6-adbc-9f41bb347525","method":{"position":"org.apache.commons.io.EndianUtils:250","type":"CtMethodImpl","sourcecode":"public static float readSwappedFloat(byte[] data, int offset) {\n    if (data != null) {\n        {\n            return java.lang.Float.intBitsToFloat(org.apache.commons.io.EndianUtils.readSwappedInteger(data, offset));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:107","type":"CtBinaryOperatorImpl","sourcecode":"observer != null"},"failures":[],"tindex":"d59870a0-2ebe-11e6-adbc-7914a10b05fd","method":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:106","type":"CtMethodImpl","sourcecode":"public void removeObserver(final org.apache.commons.io.monitor.FileAlterationObserver observer) {\n    if (observer != null) {\n        {\n            if (observer != null) {\n                while (java.util.List<org.apache.commons.io.monitor.FileAlterationObserver>.remove(observer)) {\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"observer":"observer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2317","type":"CtBinaryOperatorImpl","sourcecode":"toSkip < 0"},"failures":[],"tindex":"d59870a1-2ebe-11e6-adbc-0f282b5a20d6","method":{"position":"org.apache.commons.io.IOUtils:2316","type":"CtMethodImpl","sourcecode":"public static long skip(java.io.Reader input, long toSkip) throws java.io.IOException {\n    if (toSkip < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (toSkip < 0) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (toSkip < 0) {\n                        {\n                            if (toSkip < 0) {\n                                throw new java.lang.IllegalArgumentException((\"Skip count must be non-negative, actual: \" + toSkip));\n                            } \n                            if ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[]) == null) {\n                                org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[] = new char[org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int];\n                            } \n                            long long = toSkip;\n                            while (remain > 0) {\n                                long long = input.read(org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[], 0, ((int)(java.lang.Math.min(remain, org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int))));\n                                if (n < 0) {\n                                    break;\n                                } \n                                remain -= n;\n                            }\n                            return toSkip - remain;\n                        }\n                    } else {\n                        throw new java.io.IOException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toSkip":"toSkip"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2921","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"d59897b2-2ebe-11e6-adbc-6b6618d10136","method":{"position":"org.apache.commons.io.FileUtils:2062","type":"CtMethodImpl","sourcecode":"public static void write(java.io.File file, java.lang.CharSequence data, java.lang.String encoding, boolean append) throws java.io.IOException {\n    if (file == null) {\n        {\n            org.apache.commons.io.FileUtils.write(file, data, org.apache.commons.io.Charsets.toCharset(encoding), append);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CharSequenceReader:140","type":"CtBinaryOperatorImpl","sourcecode":"n < 0"},"failures":[],"tindex":"d59897b3-2ebe-11e6-adbc-efe736bc7ff5","method":{"position":"org.apache.commons.io.input.BrokenInputStream:84","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) throws java.io.IOException {\n    if (n < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            throw java.io.IOException;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2317","type":"CtBinaryOperatorImpl","sourcecode":"toSkip < 0"},"failures":[],"tindex":"d59897b4-2ebe-11e6-adbc-3d399388d8bf","method":{"position":"org.apache.commons.io.IOUtils:2316","type":"CtMethodImpl","sourcecode":"public static long skip(java.io.Reader input, long toSkip) throws java.io.IOException {\n    if (toSkip < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (toSkip < 0) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (toSkip < 0) {\n                        {\n                            if (toSkip < 0) {\n                                throw new java.lang.IllegalArgumentException((\"Skip count must be non-negative, actual: \" + toSkip));\n                            } \n                            if ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[]) == null) {\n                                org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[] = new char[org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int];\n                            } \n                            long long = toSkip;\n                            while (remain > 0) {\n                                long long = input.read(org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[], 0, ((int)(java.lang.Math.min(remain, org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int))));\n                                if (n < 0) {\n                                    break;\n                                } \n                                remain -= n;\n                            }\n                            return toSkip - remain;\n                        }\n                    } else {\n                        throw new java.io.IOException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toSkip":"toSkip"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:489","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"d598bec5-2ebe-11e6-adbc-179dc832940e","method":{"position":"org.apache.commons.io.IOUtils:1138","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.LineIterator lineIterator(java.io.InputStream input, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        {\n            if (encoding == null) {\n                {\n                    return org.apache.commons.io.IOUtils.lineIterator(input, org.apache.commons.io.Charsets.toCharset(encoding));\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2444","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"d598bec6-2ebe-11e6-adbc-97202bdcfc00","method":{"position":"org.apache.commons.io.filefilter.PrefixFileFilter:167","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file, java.lang.String name) {\n    if (!(file.exists())) {\n        {\n            if (file.isDirectory()) {\n                {\n                    for (java.lang.String java.lang.String : java.lang.String[]) {\n                        if (org.apache.commons.io.IOCase.checkStartsWith(name, prefix)) {\n                            return true;\n                        } \n                    }\n                    return false;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:775","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"d598bec7-2ebe-11e6-adbc-79a132bb0792","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:774","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter filter) {\n    if (filter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filter == null) {\n                return org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.IOFileFilter;\n            } \n            return new org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.IOFileFilter , filter);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:482","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"d598bec8-2ebe-11e6-adbc-413047437df0","method":{"position":"org.apache.commons.io.input.Tailer:311","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.input.Tailer create(java.io.File file, org.apache.commons.io.input.TailerListener listener) {\n    if (file.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.input.Tailer.create(file, listener, org.apache.commons.io.input.Tailer.org.apache.commons.io.input.Tailer.int, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2444","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"d598e5d9-2ebe-11e6-adbc-2975ff8be5ad","method":{"position":"org.apache.commons.io.FileCleaner:73","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static void track(java.io.File file, java.lang.Object marker, org.apache.commons.io.FileDeleteStrategy deleteStrategy) {\n    if (!(marker.exists())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.FileCleaner.org.apache.commons.io.FileCleaner.org.apache.commons.io.FileCleaningTracker.track(file, marker, deleteStrategy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"marker"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.StringBuilderWriter:123","type":"CtBinaryOperatorImpl","sourcecode":"value != null"},"failures":[],"tindex":"d598e5da-2ebe-11e6-adbc-a11de4f9b70f","method":{"position":"org.apache.commons.io.output.StringBuilderWriter:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence value) {\n    if (value != null) {\n        {\n            java.lang.StringBuilder.append(value);\n            return org.apache.commons.io.output.StringBuilderWriter.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:72","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"d598e5db-2ebe-11e6-adbc-f13ca4dd78ba","method":{"position":"org.apache.commons.io.IOUtils:1507","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.String data, java.io.OutputStream output) throws java.io.IOException {\n    if (null != output) {\n        {\n            org.apache.commons.io.IOUtils.write(data, output, java.nio.charset.Charset.defaultCharset());\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2350","type":"CtBinaryOperatorImpl","sourcecode":"null != exception"},"failures":[],"tindex":"d5990cec-2ebe-11e6-adbc-7706662d235d","method":{"position":"org.apache.commons.io.output.TaggedOutputStream:87","type":"CtMethodImpl","sourcecode":"public boolean isCauseOf(java.lang.Exception exception) {\n    if (null != exception) {\n        {\n            return org.apache.commons.io.TaggedIOException.isTaggedWith(exception, java.io.Serializable);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"exception":"exception"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:996","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"d5990ced-2ebe-11e6-adbc-8fd81655a0ba","method":{"position":"org.apache.commons.io.FilenameUtils:1025","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeExtension(java.lang.String filename) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                return null;\n            } \n            int int = org.apache.commons.io.FilenameUtils.indexOfExtension(filename);\n            if (index == (-1)) {\n                return filename;\n            } else {\n                return filename.substring(0, index);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileSystemUtils:259","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"d5990cee-2ebe-11e6-adbc-07c17cb2124e","method":{"position":"org.apache.commons.io.FileSystemUtils:170","type":"CtMethodImpl","sourcecode":"public static long freeSpaceKb(java.lang.String path) throws java.io.IOException {\n    if (path == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.FileSystemUtils.freeSpaceKb(path, (-1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"path"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:492","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"d5990cef-2ebe-11e6-adbc-4748b10d995d","method":{"position":"org.apache.commons.io.IOUtils:1525","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.String data, java.io.OutputStream output, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (data == null) {\n        {\n            if (data != null) {\n                output.write(data.getBytes(org.apache.commons.io.Charsets.toCharset(encoding)));\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"data"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:802","type":"CtInvocationImpl","sourcecode":"file1.getCanonicalFile().equals(file2.getCanonicalFile())"},"failures":[],"tindex":"d5990cf0-2ebe-11e6-adbc-e9b488babed7","method":{"position":"org.apache.commons.io.comparator.PathFileComparator:102","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if (file1.getCanonicalFile().equals(file2.getCanonicalFile())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.IOCase.checkCompareTo(file1.getPath(), file2.getPath());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file2":"file2","file1":"file1"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:134","type":"CtBinaryOperatorImpl","sourcecode":"chr != null"},"failures":[],"tindex":"d5993401-2ebe-11e6-adbc-971a21db3624","method":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:276","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr) throws java.io.IOException {\n    if (chr != null) {\n        {\n            java.io.Writer.write(chr);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chr":"chr"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:600","type":"CtInvocationImpl","sourcecode":"directory.isDirectory()"},"failures":[],"tindex":"d5993402-2ebe-11e6-adbc-93241819d1a0","method":{"position":"org.apache.commons.io.FileUtils:2307","type":"CtMethodImpl","sourcecode":"private static void deleteDirectoryOnExit(java.io.File directory) throws java.io.IOException {\n    if (directory.isDirectory()) {\n        {\n            if (!(directory.exists())) {\n                return ;\n            } \n            directory.deleteOnExit();\n            if (!(org.apache.commons.io.FileUtils.isSymlink(directory))) {\n                org.apache.commons.io.FileUtils.cleanDirectoryOnExit(directory);\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:291","type":"CtInvocationImpl","sourcecode":"file.exists()"},"failures":[],"tindex":"d5993403-2ebe-11e6-adbc-05828b98dbf0","method":{"position":"org.apache.commons.io.FileUtils:2205","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.lang.String encoding, java.util.Collection<?> lines, java.lang.String lineEnding, boolean append) throws java.io.IOException {\n    if (file.exists()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.FileOutputStream java.io.FileOutputStream = null;\n            try {\n                out = org.apache.commons.io.FileUtils.openOutputStream(file, append);\n                final java.io.BufferedOutputStream java.io.BufferedOutputStream = new java.io.BufferedOutputStream(out);\n                org.apache.commons.io.IOUtils.writeLines(lines, lineEnding, buffer, encoding);\n                buffer.flush();\n                out.close();\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(out);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1534","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(directory))"},"failures":[],"tindex":"d5995b14-2ebe-11e6-adbc-a3e6af48840f","method":{"position":"org.apache.commons.io.DirectoryWalker:561","type":"CtMethodImpl","sourcecode":"protected void handleDirectoryEnd(java.io.File directory, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(directory))) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:348","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"d5995b15-2ebe-11e6-adbc-b1c492817a59","method":{"position":"org.apache.commons.io.FilenameUtils:905","type":"CtMethodImpl","sourcecode":"private static java.lang.String doGetFullPath(java.lang.String filename, boolean includeSeparator) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (filename == null) {\n                        return null;\n                    } \n                    int int = org.apache.commons.io.FilenameUtils.getPrefixLength(filename);\n                    if (prefix < 0) {\n                        return null;\n                    } \n                    if (prefix >= (filename.length())) {\n                        if (includeSeparator) {\n                            return org.apache.commons.io.FilenameUtils.getPrefix(filename);\n                        } else {\n                            return filename;\n                        }\n                    } \n                    int int = org.apache.commons.io.FilenameUtils.indexOfLastSeparator(filename);\n                    if (index < 0) {\n                        return filename.substring(0, prefix);\n                    } \n                    int int = index + (includeSeparator ? 1 : 0);\n                    if (end == 0) {\n                        end++;\n                    } \n                    return filename.substring(0, end);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"commons-io","transformationCount":100,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}