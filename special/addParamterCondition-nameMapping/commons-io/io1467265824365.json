{"failureDictionary":{},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.BOMInputStream:336","type":"CtBinaryOperatorImpl","sourcecode":"b >= 0"},"failures":[],"tindex":"8a09b383-3e86-11e6-bb8f-bdd61dca094d","method":{"position":"org.apache.commons.io.output.NullOutputStream:44","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b, int off, int len) {\n    if (off >= 0) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"off"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:89","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"8a0a01a4-3e86-11e6-bb8f-5b1466dbfa13","method":{"position":"org.apache.commons.io.CopyUtils:190","type":"CtMethodImpl","sourcecode":"public static int copy(java.io.InputStream input, java.io.OutputStream output) throws java.io.IOException {\n    if (null != output) {\n        {\n            byte[] byte[] = new byte[org.apache.commons.io.CopyUtils.org.apache.commons.io.CopyUtils.int];\n            int int = 0;\n            int int = 0;\n            while ((-1) != (n = input.read(buffer))) {\n                output.write(buffer, 0, n);\n                count += n;\n            }\n            return count;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:797","type":"CtBinaryOperatorImpl","sourcecode":"(file1.isDirectory()) || (file2.isDirectory())"},"failures":[],"tindex":"8a0a28b5-3e86-11e6-bb8f-870514995a75","method":{"position":"org.apache.commons.io.comparator.SizeFileComparator:108","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if ((file1.isDirectory()) || (file2.isDirectory())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            long long = 0;\n            if (file1.isDirectory()) {\n                size1 = (boolean) && (file1.exists()) ? org.apache.commons.io.FileUtils.sizeOfDirectory(file1) : 0;\n            } else {\n                size1 = file1.length();\n            }\n            long long = 0;\n            if (file2.isDirectory()) {\n                size2 = (boolean) && (file2.exists()) ? org.apache.commons.io.FileUtils.sizeOfDirectory(file2) : 0;\n            } else {\n                size2 = file2.length();\n            }\n            long long = size1 - size2;\n            if (result < 0) {\n                return -1;\n            } else if (result > 0) {\n                return 1;\n            } else {\n                return 0;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file2":"file2","file1":"file1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"8a0a28b6-3e86-11e6-bb8f-995535241b72","method":{"position":"org.apache.commons.io.IOUtils:1448","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.CharSequence data, java.io.OutputStream output, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (data != null) {\n                org.apache.commons.io.IOUtils.write(data.toString(), output, encoding);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:107","type":"CtBinaryOperatorImpl","sourcecode":"observer != null"},"failures":[],"tindex":"8a0a28b7-3e86-11e6-bb8f-eb14bdb359fe","method":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:95","type":"CtMethodImpl","sourcecode":"public void addObserver(final org.apache.commons.io.monitor.FileAlterationObserver observer) {\n    if (observer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (observer != null) {\n                java.util.List<org.apache.commons.io.monitor.FileAlterationObserver>.add(observer);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"observer":"observer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:109","type":"CtBinaryOperatorImpl","sourcecode":"(dir != null) && (new java.io.File(dir , name).isDirectory())"},"failures":[],"tindex":"8a0a28b8-3e86-11e6-bb8f-bb25641fc60f","method":{"position":"org.apache.commons.io.filefilter.DelegateFileFilter:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File dir, java.lang.String name) {\n    if ((dir != null) && (new java.io.File(dir , name).isDirectory())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.io.FilenameFilter) != null) {\n                return java.io.FilenameFilter.accept(dir, name);\n            } else {\n                return super.accept(dir, name);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name","dir":"dir"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1193","type":"CtBinaryOperatorImpl","sourcecode":"(srcDir.exists()) && ((srcDir.isDirectory()) == false)"},"failures":[],"tindex":"8a0a4fc9-3e86-11e6-bb8f-8da083ec5ccf","method":{"position":"org.apache.commons.io.FileUtils:2734","type":"CtMethodImpl","sourcecode":"public static void moveDirectory(java.io.File srcDir, java.io.File destDir) throws java.io.IOException {\n    if ((srcDir.exists()) && ((srcDir.isDirectory()) == false)) {\n        {\n            if (srcDir == null) {\n                throw new java.lang.NullPointerException(\"Source must not be null\");\n            } \n            if (destDir == null) {\n                throw new java.lang.NullPointerException(\"Destination must not be null\");\n            } \n            if (!(srcDir.exists())) {\n                throw new java.io.FileNotFoundException(((\"Source '\" + srcDir) + \"' does not exist\"));\n            } \n            if (!(srcDir.isDirectory())) {\n                throw new java.io.IOException(((\"Source '\" + srcDir) + \"' is not a directory\"));\n            } \n            if (destDir.exists()) {\n                throw new org.apache.commons.io.FileExistsException(((\"Destination '\" + destDir) + \"' already exists\"));\n            } \n            boolean boolean = srcDir.renameTo(destDir);\n            if (!rename) {\n                if (destDir.getCanonicalPath().startsWith(srcDir.getCanonicalPath())) {\n                    throw new java.io.IOException((((\"Cannot move directory: \" + srcDir) + \" to a subdirectory of itself: \") + destDir));\n                } \n                org.apache.commons.io.FileUtils.copyDirectory(srcDir, destDir);\n                org.apache.commons.io.FileUtils.deleteDirectory(srcDir);\n                if (srcDir.exists()) {\n                    throw new java.io.IOException(((((\"Failed to delete original directory '\" + srcDir) + \"' after copy to '\") + destDir) + \"'\"));\n                } \n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcDir":"srcDir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2292","type":"CtBinaryOperatorImpl","sourcecode":"n < 0"},"failures":[],"tindex":"8a0a4fca-3e86-11e6-bb8f-d1ed020479cf","method":{"position":"org.apache.commons.io.input.BoundedInputStream:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) throws java.io.IOException {\n    if (n < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            long long = (long) >= 0 ? java.lang.Math.min(n, ((long) - (long))) : n;\n            long long = java.io.InputStream.skip(toSkip);\n            long += skippedBytes;\n            return skippedBytes;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"8a0a4fcb-3e86-11e6-bb8f-475a5d957b06","method":{"position":"org.apache.commons.io.EndianUtils:344","type":"CtMethodImpl","sourcecode":"public static int readSwappedInteger(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            return ((((value1 & 255) << 0) + ((value2 & 255) << 8)) + ((value3 & 255) << 16)) + ((value4 & 255) << 24);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:85","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"8a0a76dc-3e86-11e6-bb8f-9b8a66bfc88f","method":{"position":"org.apache.commons.io.FileUtils:1747","type":"CtMethodImpl","sourcecode":"public static java.lang.String readFileToString(java.io.File file) throws java.io.IOException {\n    if (file == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.FileUtils.readFileToString(file, java.nio.charset.Charset.defaultCharset());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:223","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"8a0a76dd-3e86-11e6-bb8f-111e51b588ef","method":{"position":"org.apache.commons.io.FileUtils:325","type":"CtMethodImpl","sourcecode":"public static java.io.FileOutputStream openOutputStream(java.io.File file) throws java.io.IOException {\n    if (file == null) {\n        {\n            return org.apache.commons.io.FileUtils.openOutputStream(file, false);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.ReaderInputStream:223","type":"CtBinaryOperatorImpl","sourcecode":"b == null"},"failures":[],"tindex":"8a0a76de-3e86-11e6-bb8f-453f5dad491f","method":{"position":"org.apache.commons.io.output.TeeOutputStream:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(byte[] b) throws java.io.IOException {\n    if (b == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            super.write(b);\n            org.apache.commons.io.output.TeeOutputStream.this.java.io.OutputStream.write(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"8a0a76df-3e86-11e6-bb8f-e1ac6bb89a68","method":{"position":"org.apache.commons.io.input.TeeInputStream:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] bts, int st, int end) throws java.io.IOException {\n    if (st == 0) {\n        {\n            if (end == 0) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    int int = super.read(bts, st, end);\n                    if (n != (-1)) {\n                        java.io.OutputStream.write(bts, st, n);\n                    } \n                    return n;\n                }\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"end"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2411","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"8a0a9df0-3e86-11e6-bb8f-75fda2207976","method":{"position":"org.apache.commons.io.FileUtils:442","type":"CtMethodImpl","sourcecode":"public static void touch(java.io.File file) throws java.io.IOException {\n    if (!(file.exists())) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (!(file.exists())) {\n                java.io.OutputStream java.io.OutputStream = org.apache.commons.io.FileUtils.openOutputStream(file);\n                org.apache.commons.io.IOUtils.closeQuietly(out);\n            } \n            boolean boolean = file.setLastModified(java.lang.System.currentTimeMillis());\n            if (!success) {\n                throw new java.io.IOException((\"Unable to set the last modification time for \" + file));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:824","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"8a0a9df1-3e86-11e6-bb8f-db859c9f2e58","method":{"position":"org.apache.commons.io.FilenameUtils:1025","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeExtension(java.lang.String filename) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filename == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (filename == null) {\n                        return null;\n                    } \n                    int int = org.apache.commons.io.FilenameUtils.indexOfExtension(filename);\n                    if (index == (-1)) {\n                        return filename;\n                    } else {\n                        return filename.substring(0, index);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2448","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[],"tindex":"8a0a9df2-3e86-11e6-bb8f-43749c8869a8","method":{"position":"org.apache.commons.io.input.NullInputStream:226","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] bytes, int offset, int length) throws java.io.IOException {\n    if (offset < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (boolean) {\n                throw new java.io.IOException(\"Read after end of file\");\n            } \n            if ((long) == (long)) {\n                return doEndOfFile();\n            } \n            long += length;\n            int int = length;\n            if ((long) > (long)) {\n                returnLength = length - ((int)(((long) - (long))));\n                long = long;\n            } \n            processBytes(bytes, offset, returnLength);\n            return returnLength;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"offset"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"8a0ac503-3e86-11e6-bb8f-216b92c4674c","method":{"position":"org.apache.commons.io.EndianUtils:439","type":"CtMethodImpl","sourcecode":"public static float readSwappedFloat(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        {\n            return java.lang.Float.intBitsToFloat(org.apache.commons.io.EndianUtils.readSwappedInteger(input));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:741","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"8a0ac504-3e86-11e6-bb8f-ffbc56b6d408","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:757","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter filter) {\n    if (filter == null) {\n        {\n            if (filter == null) {\n                return org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.IOFileFilter;\n            } else {\n                return org.apache.commons.io.filefilter.FileFilterUtils.and(filter, org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.IOFileFilter);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:239","type":"CtBinaryOperatorImpl","sourcecode":"((file != null) && (file.isFile())) && (file.canRead())"},"failures":[],"tindex":"8a0ac505-3e86-11e6-bb8f-efffcd326a30","method":{"position":"org.apache.commons.io.FileUtils:1961","type":"CtMethodImpl","sourcecode":"public static void writeStringToFile(java.io.File file, java.lang.String data) throws java.io.IOException {\n    if (((file != null) && (file.isFile())) && (file.canRead())) {\n        {\n            org.apache.commons.io.FileUtils.writeStringToFile(file, data, java.nio.charset.Charset.defaultCharset(), false);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CharSequenceInputStream:114","type":"CtBinaryOperatorImpl","sourcecode":"b == null"},"failures":[],"tindex":"8a0ac506-3e86-11e6-bb8f-dfb9922ab07c","method":{"position":"org.apache.commons.io.output.NullOutputStream:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b) throws java.io.IOException {\n    if (b == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:492","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"8a0ac507-3e86-11e6-bb8f-e7ed30beadac","method":{"position":"org.apache.commons.io.IOUtils:801","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.io.InputStream input, java.lang.String encoding) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (encoding == null) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    return org.apache.commons.io.IOUtils.toString(input, org.apache.commons.io.Charsets.toCharset(encoding));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2449","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"8a0ac508-3e86-11e6-bb8f-edff48cb90d9","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:357","type":"CtMethodImpl","sourcecode":"private org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry parent, java.io.File file) {\n    if (file.isDirectory()) {\n        {\n            org.apache.commons.io.monitor.FileEntry org.apache.commons.io.monitor.FileEntry = parent.newChildInstance(file);\n            entry.refresh(file);\n            java.io.File[] java.io.File[] = listFiles(file);\n            org.apache.commons.io.monitor.FileEntry[] org.apache.commons.io.monitor.FileEntry[] = (files.int) > 0 ? new org.apache.commons.io.monitor.FileEntry[files.int] : org.apache.commons.io.monitor.FileEntry.org.apache.commons.io.monitor.FileEntry.org.apache.commons.io.monitor.FileEntry[];\n            for (int int = 0 ; i < (files.int) ; i++) {\n                children[i] = createFileEntry(entry, files[i]);\n            }\n            entry.setChildren(children);\n            return entry;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2480","type":"CtBinaryOperatorImpl","sourcecode":"size < 0"},"failures":[],"tindex":"8a0aec19-3e86-11e6-bb8f-d74d226e6a54","method":{"position":"org.apache.commons.io.IOUtils:482","type":"CtMethodImpl","sourcecode":"public static byte[] toByteArray(java.io.InputStream input, long size) throws java.io.IOException {\n    if (size < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (size < 0) {\n                {\n                    if (size > (java.lang.Integer.java.lang.Integer.int)) {\n                        throw new java.lang.IllegalArgumentException((\"Size cannot be greater than Integer max value: \" + size));\n                    } \n                    return org.apache.commons.io.IOUtils.toByteArray(input, ((int)(size)));\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:89","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"8a0aec1a-3e86-11e6-bb8f-3bccdf07df1f","method":{"position":"org.apache.commons.io.EndianUtils:426","type":"CtMethodImpl","sourcecode":"public static void writeSwappedFloat(java.io.OutputStream output, float value) throws java.io.IOException {\n    if (null != output) {\n        {\n            org.apache.commons.io.EndianUtils.writeSwappedInteger(output, java.lang.Float.floatToIntBits(value));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2331","type":"CtBinaryOperatorImpl","sourcecode":"n < 0"},"failures":[],"tindex":"8a0aec1b-3e86-11e6-bb8f-739fa413b36d","method":{"position":"org.apache.commons.io.input.BOMInputStream:399","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) throws java.io.IOException {\n    if (n < 0) {\n        {\n            while ((n > 0) && ((readFirstBytes()) >= 0)) {\n                n--;\n            }\n            return java.io.InputStream.skip(n);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:295","type":"CtBinaryOperatorImpl","sourcecode":"(file.canRead()) == false"},"failures":[],"tindex":"8a0aec1c-3e86-11e6-bb8f-fd21cc0989ee","method":{"position":"org.apache.commons.io.FileUtils:2920","type":"CtMethodImpl","sourcecode":"public static boolean isSymlink(java.io.File file) throws java.io.IOException {\n    if ((file.canRead()) == false) {\n        {\n            if (file == null) {\n                throw new java.lang.NullPointerException(\"File must not be null\");\n            } \n            if (org.apache.commons.io.FilenameUtils.isSystemWindows()) {\n                return false;\n            } \n            java.io.File java.io.File = null;\n            if ((file.getParent()) == null) {\n                fileInCanonicalDir = file;\n            } else {\n                java.io.File java.io.File = file.getParentFile().getCanonicalFile();\n                fileInCanonicalDir = new java.io.File(canonicalDir , file.getName());\n            }\n            if (fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile())) {\n                return false;\n            } else {\n                return true;\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:758","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"8a0aec1d-3e86-11e6-bb8f-41e950bd27f5","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:774","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter filter) {\n    if (filter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filter == null) {\n                return org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.IOFileFilter;\n            } \n            return new org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.IOFileFilter , filter);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"8a0b132e-3e86-11e6-bb8f-01da0e123092","method":{"position":"org.apache.commons.io.IOUtils:1247","type":"CtMethodImpl","sourcecode":"public static void write(byte[] data, java.io.OutputStream output) throws java.io.IOException {\n    if (data != null) {\n        {\n            if (data != null) {\n                {\n                    if (data != null) {\n                        output.write(data);\n                    } \n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2411","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"8a0b132f-3e86-11e6-bb8f-b9ed15d596c7","method":{"position":"org.apache.commons.io.FileUtils:2001","type":"CtMethodImpl","sourcecode":"public static void write(java.io.File file, java.lang.CharSequence data, boolean append) throws java.io.IOException {\n    if (!(file.exists())) {\n        {\n            org.apache.commons.io.FileUtils.write(file, data, java.nio.charset.Charset.defaultCharset(), append);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2273","type":"CtUnaryOperatorImpl","sourcecode":"!(file.delete())"},"failures":[],"tindex":"8a0b1330-3e86-11e6-bb8f-dbc8c8cf6283","method":{"position":"org.apache.commons.io.filefilter.SuffixFileFilter:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (!(file.delete())) {\n        {\n            java.lang.String java.lang.String = file.getName();\n            for (java.lang.String java.lang.String : org.apache.commons.io.filefilter.SuffixFileFilter.this.java.lang.String[]) {\n                if (org.apache.commons.io.IOCase.checkEndsWith(name, suffix)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NameFileFilter:69","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"8a0b1331-3e86-11e6-bb8f-978582bf1591","method":{"position":"org.apache.commons.io.filefilter.WildcardFileFilter:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File dir, java.lang.String name) {\n    if (name == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (java.lang.String java.lang.String : java.lang.String[]) {\n                if (org.apache.commons.io.FilenameUtils.wildcardMatch(name, wildcard, org.apache.commons.io.IOCase)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:2292","type":"CtBinaryOperatorImpl","sourcecode":"n < 0"},"failures":[],"tindex":"8a0b1332-3e86-11e6-bb8f-1b6731ac906e","method":{"position":"org.apache.commons.io.input.CharSequenceReader:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) {\n    if (n < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (n < 0) {\n                throw new java.lang.IllegalArgumentException((\"Number of characters to skip is less than zero: \" + n));\n            } \n            if ((int) >= (java.lang.CharSequence.length())) {\n                return -1;\n            } \n            int int = ((int)(java.lang.Math.min(java.lang.CharSequence.length(), ((int) + n))));\n            int int = dest - (int);\n            int = dest;\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"8a0b1333-3e86-11e6-bb8f-a58167d2ea0a","method":{"position":"org.apache.commons.io.IOUtils:1395","type":"CtMethodImpl","sourcecode":"public static void write(char[] data, java.io.OutputStream output, java.lang.String encoding) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.IOUtils.write(data, output, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:740","type":"CtBinaryOperatorImpl","sourcecode":"(file1.isDirectory()) || (file2.isDirectory())"},"failures":[],"tindex":"8a0b3a44-3e86-11e6-bb8f-f74837696721","method":{"position":"org.apache.commons.io.comparator.PathFileComparator:102","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if ((file1.isDirectory()) || (file1.isDirectory())) {\n        {\n            return org.apache.commons.io.IOCase.checkCompareTo(file1.getPath(), file2.getPath());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file2":"file1","file1":"file1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2928","type":"CtBinaryOperatorImpl","sourcecode":"(file.getParent()) == null"},"failures":[],"tindex":"8a0b3a45-3e86-11e6-bb8f-fdc852329a07","method":{"position":"org.apache.commons.io.FileUtils:1560","type":"CtMethodImpl","sourcecode":"public static boolean deleteQuietly(java.io.File file) {\n    if ((file.getParent()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (file == null) {\n                return false;\n            } \n            try {\n                if (file.isDirectory()) {\n                    org.apache.commons.io.FileUtils.cleanDirectory(file);\n                } \n            } catch (java.lang.Exception ignored) {\n            }\n            try {\n                return file.delete();\n            } catch (java.lang.Exception ignored) {\n                return false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1646","type":"CtBinaryOperatorImpl","sourcecode":"files == null"},"failures":[],"tindex":"8a0b3a46-3e86-11e6-bb8f-4908e1edbf81","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:180","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.io.File> filterList(org.apache.commons.io.filefilter.IOFileFilter filter, java.io.File... files) {\n    if (files == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.io.File[] java.io.File[] = org.apache.commons.io.filefilter.FileFilterUtils.filter(filter, files);\n            return java.util.Arrays.asList(acceptedFiles);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"files":"files"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"8a0b3a47-3e86-11e6-bb8f-373c8d08a0f1","method":{"position":"org.apache.commons.io.HexDump:71","type":"CtMethodImpl","sourcecode":"public static void dump(byte[] data, long offset, java.io.OutputStream stream, int index) throws java.io.IOException, java.lang.ArrayIndexOutOfBoundsException, java.lang.IllegalArgumentException {\n    if (offset < 0) {\n        {\n            if (data != null) {\n                throw new java.lang.IllegalArgumentException();\n            } else {\n                {\n                    if ((index < 0) || (index >= (data.int))) {\n                        throw new java.lang.ArrayIndexOutOfBoundsException((((\"illegal index: \" + index) + \" into array of length \") + (data.int)));\n                    } \n                    if (stream == null) {\n                        throw new java.lang.IllegalArgumentException(\"cannot write to nullstream\");\n                    } \n                    long long = offset + index;\n                    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(74);\n                    for (int int = index ; j < (data.int) ; j += 16) {\n                        int int = (data.int) - j;\n                        if (chars_read > 16) {\n                            chars_read = 16;\n                        } \n                        org.apache.commons.io.HexDump.dump(buffer, display_offset).append(' ');\n                        for (int int = 0 ; k < 16 ; k++) {\n                            if (k < chars_read) {\n                                org.apache.commons.io.HexDump.dump(buffer, data[(k + j)]);\n                            } else {\n                                buffer.append(\"  \");\n                            }\n                            buffer.append(' ');\n                        }\n                        for (int int = 0 ; k < chars_read ; k++) {\n                            if (((data[(k + j)]) >= ' ') && ((data[(k + j)]) < 127)) {\n                                buffer.append(((char)(data[(k + j)])));\n                            } else {\n                                buffer.append('.');\n                            }\n                        }\n                        buffer.append(org.apache.commons.io.HexDump.org.apache.commons.io.HexDump.java.lang.String);\n                        stream.write(buffer.toString().getBytes());\n                        stream.flush();\n                        buffer.setLength(0);\n                        display_offset += chars_read;\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.ArrayIndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"8a0b3a48-3e86-11e6-bb8f-155d677984dd","method":{"position":"org.apache.commons.io.IOUtils:801","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.io.InputStream input, java.lang.String encoding) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (encoding == null) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    return org.apache.commons.io.IOUtils.toString(input, org.apache.commons.io.Charsets.toCharset(encoding));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1249","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"8a0b6159-3e86-11e6-bb8f-2f34b80803aa","method":{"position":"org.apache.commons.io.EndianUtils:154","type":"CtMethodImpl","sourcecode":"public static void writeSwappedInteger(byte[] data, int offset, int value) {\n    if (data != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            data[(offset + 0)] = ((byte)((value >> 0) & 255));\n            data[(offset + 1)] = ((byte)((value >> 8) & 255));\n            data[(offset + 2)] = ((byte)((value >> 16) & 255));\n            data[(offset + 3)] = ((byte)((value >> 24) & 255));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:292","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"8a0b615a-3e86-11e6-bb8f-a160594ccbc7","method":{"position":"org.apache.commons.io.FileUtils:2135","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.lang.String encoding, java.util.Collection<?> lines, boolean append) throws java.io.IOException {\n    if (file.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeLines(file, encoding, lines, null, append);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1538","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.delete())"},"failures":[],"tindex":"8a0b615b-3e86-11e6-bb8f-0133d08c929c","method":{"position":"org.apache.commons.io.FileUtils:651","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<java.io.File> iterateFilesAndDirs(java.io.File directory, org.apache.commons.io.filefilter.IOFileFilter fileFilter, org.apache.commons.io.filefilter.IOFileFilter dirFilter) {\n    if (directory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(directory.delete())) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.io.FileUtils.listFilesAndDirs(directory, fileFilter, dirFilter).iterator();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2480","type":"CtBinaryOperatorImpl","sourcecode":"size < 0"},"failures":[],"tindex":"8a0b615c-3e86-11e6-bb8f-e32107cb7ec2","method":{"position":"org.apache.commons.io.IOUtils:482","type":"CtMethodImpl","sourcecode":"public static byte[] toByteArray(java.io.InputStream input, long size) throws java.io.IOException {\n    if (size < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (size < 0) {\n                {\n                    if (size > (java.lang.Integer.java.lang.Integer.int)) {\n                        throw new java.lang.IllegalArgumentException((\"Size cannot be greater than Integer max value: \" + size));\n                    } \n                    return org.apache.commons.io.IOUtils.toByteArray(input, ((int)(size)));\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:750","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"8a0b615d-3e86-11e6-bb8f-05b7cdb87826","method":{"position":"org.apache.commons.io.FilenameUtils:1025","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeExtension(java.lang.String filename) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filename == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (filename == null) {\n                        return null;\n                    } \n                    int int = org.apache.commons.io.FilenameUtils.indexOfExtension(filename);\n                    if (index == (-1)) {\n                        return filename;\n                    } else {\n                        return filename.substring(0, index);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1530","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.exists())"},"failures":[],"tindex":"8a0b615e-3e86-11e6-bb8f-0bb8d63360dd","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:43","type":"CtMethodImpl","sourcecode":"public void onDirectoryCreate(final java.io.File directory) {\n    if (!(directory.exists())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:270","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"8a0b615f-3e86-11e6-bb8f-0d9cf8365d39","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:211","type":"CtMethodImpl","sourcecode":"public static java.util.Set<java.io.File> filterSet(org.apache.commons.io.filefilter.IOFileFilter filter, java.io.File... files) {\n    if (filter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.io.File[] java.io.File[] = org.apache.commons.io.filefilter.FileFilterUtils.filter(filter, files);\n            return new java.util.HashSet<java.io.File>(java.util.Arrays.asList(acceptedFiles));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"8a0b8870-3e86-11e6-bb8f-ed088b8c7927","method":{"position":"org.apache.commons.io.IOUtils:1932","type":"CtMethodImpl","sourcecode":"public static void copy(java.io.InputStream input, java.io.Writer output, java.lang.String encoding) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.IOUtils.copy(input, output, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1605","type":"CtBinaryOperatorImpl","sourcecode":"directory == null"},"failures":[],"tindex":"8a0b8871-3e86-11e6-bb8f-fb53480f53b8","method":{"position":"org.apache.commons.io.FileUtils:651","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<java.io.File> iterateFilesAndDirs(java.io.File directory, org.apache.commons.io.filefilter.IOFileFilter fileFilter, org.apache.commons.io.filefilter.IOFileFilter dirFilter) {\n    if (directory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(directory.delete())) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.io.FileUtils.listFilesAndDirs(directory, fileFilter, dirFilter).iterator();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.SwappedDataInputStream:142","type":"CtBinaryOperatorImpl","sourcecode":"(-1) == count"},"failures":[],"tindex":"8a0b8872-3e86-11e6-bb8f-e504c7f20f38","method":{"position":"org.apache.commons.io.output.ThresholdingOutputStream:219","type":"CtMethodImpl","sourcecode":"protected void checkThreshold(int count) throws java.io.IOException {\n    if ((-1) == count) {\n        {\n            if ((!(boolean)) && (((long) + count) > (int))) {\n                boolean = true;\n                thresholdReached();\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"8a0b8873-3e86-11e6-bb8f-75484dd3cdfd","method":{"position":"org.apache.commons.io.IOUtils:1905","type":"CtMethodImpl","sourcecode":"public static void copy(java.io.InputStream input, java.io.Writer output, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (null != input) {\n        {\n            java.io.InputStreamReader java.io.InputStreamReader = new java.io.InputStreamReader(input , org.apache.commons.io.Charsets.toCharset(encoding));\n            org.apache.commons.io.IOUtils.copy(in, output);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:353","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"8a0b8874-3e86-11e6-bb8f-b96679b3691e","method":{"position":"org.apache.commons.io.FileUtils:2268","type":"CtMethodImpl","sourcecode":"public static void forceDelete(java.io.File file) throws java.io.IOException {\n    if (file.isDirectory()) {\n        {\n            if (file.isDirectory()) {\n                org.apache.commons.io.FileUtils.deleteDirectory(file);\n            } else {\n                boolean boolean = file.exists();\n                if (!(file.delete())) {\n                    if (!filePresent) {\n                        throw new java.io.FileNotFoundException((\"File does not exist: \" + file));\n                    } \n                    java.lang.String java.lang.String = \"Unable to delete file: \" + file;\n                    throw new java.io.IOException(message);\n                } \n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2278","type":"CtBinaryOperatorImpl","sourcecode":"toSkip < 0"},"failures":[],"tindex":"8a0b8875-3e86-11e6-bb8f-03576b39d488","method":{"position":"org.apache.commons.io.IOUtils:2354","type":"CtMethodImpl","sourcecode":"public static void skipFully(java.io.InputStream input, long toSkip) throws java.io.IOException {\n    if (toSkip < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (toSkip < 0) {\n                throw new java.lang.IllegalArgumentException((\"Bytes to skip must not be negative: \" + toSkip));\n            } \n            long long = org.apache.commons.io.IOUtils.skip(input, toSkip);\n            if (skipped != toSkip) {\n                throw new java.io.EOFException((((\"Bytes to skip: \" + toSkip) + \" actual: \") + skipped));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toSkip":"toSkip"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:253","type":"CtBinaryOperatorImpl","sourcecode":"listener != null"},"failures":[],"tindex":"8a0baf86-3e86-11e6-bb8f-37e2e14f9c7a","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:252","type":"CtMethodImpl","sourcecode":"public void removeListener(final org.apache.commons.io.monitor.FileAlterationListener listener) {\n    if (listener != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (listener != null) {\n                while (java.util.List<org.apache.commons.io.monitor.FileAlterationListener>.remove(listener)) {\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"listener":"listener"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:96","type":"CtBinaryOperatorImpl","sourcecode":"observer != null"},"failures":[],"tindex":"8a0baf87-3e86-11e6-bb8f-eb26feeaa27a","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:35","type":"CtMethodImpl","sourcecode":"public void onStart(final org.apache.commons.io.monitor.FileAlterationObserver observer) {\n    if (observer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"observer":"observer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:489","type":"CtBinaryOperatorImpl","sourcecode":"basePath == null"},"failures":[],"tindex":"8a0baf88-3e86-11e6-bb8f-7f117ab71c97","method":{"position":"org.apache.commons.io.FilenameUtils:481","type":"CtMethodImpl","sourcecode":"public static java.lang.String concat(java.lang.String basePath, java.lang.String fullFilenameToAdd) {\n    if (basePath == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = org.apache.commons.io.FilenameUtils.getPrefixLength(fullFilenameToAdd);\n            if (prefix < 0) {\n                return null;\n            } \n            if (prefix > 0) {\n                return org.apache.commons.io.FilenameUtils.normalize(fullFilenameToAdd);\n            } \n            if (basePath == null) {\n                return null;\n            } \n            int int = basePath.length();\n            if (len == 0) {\n                return org.apache.commons.io.FilenameUtils.normalize(fullFilenameToAdd);\n            } \n            char char = basePath.charAt((len - 1));\n            if (org.apache.commons.io.FilenameUtils.isSeparator(ch)) {\n                return org.apache.commons.io.FilenameUtils.normalize((basePath + fullFilenameToAdd));\n            } else {\n                return org.apache.commons.io.FilenameUtils.normalize(((basePath + '/') + fullFilenameToAdd));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"basePath":"basePath"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1371","type":"CtBinaryOperatorImpl","sourcecode":"((text.indexOf('?')) == (-1)) && ((text.indexOf('*')) == (-1))"},"failures":[],"tindex":"8a0baf89-3e86-11e6-bb8f-d92c1e3b74c7","method":{"position":"org.apache.commons.io.FilenameUtils:1367","type":"CtMethodImpl","sourcecode":"static java.lang.String[] splitOnTokens(java.lang.String text) {\n    if (((text.indexOf('?')) == (-1)) && ((text.indexOf('*')) == (-1))) {\n        {\n            if (((text.indexOf('?')) == (-1)) && ((text.indexOf('*')) == (-1))) {\n                {\n                    if (((text.indexOf('?')) == (-1)) && ((text.indexOf('*')) == (-1))) {\n                        return new java.lang.String[]{ text };\n                    } \n                    char[] char[] = text.toCharArray();\n                    java.util.ArrayList<java.lang.String> java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n                    for (int int = 0 ; i < (array.int) ; i++) {\n                        if (((array[i]) == '?') || ((array[i]) == '*')) {\n                            if ((buffer.length()) != 0) {\n                                list.add(buffer.toString());\n                                buffer.setLength(0);\n                            } \n                            if ((array[i]) == '?') {\n                                list.add(\"?\");\n                            } else if ((list.isEmpty()) || ((i > 0) && ((list.get(((list.size()) - 1)).equals(\"*\")) == false))) {\n                                list.add(\"*\");\n                            } \n                        } else {\n                            buffer.append(array[i]);\n                        }\n                    }\n                    if ((buffer.length()) != 0) {\n                        list.add(buffer.toString());\n                    } \n                    return list.toArray(new java.lang.String[list.size()]);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"text":"text"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.ByteOrderMark:131","type":"CtUnaryOperatorImpl","sourcecode":"!(obj instanceof org.apache.commons.io.ByteOrderMark)"},"failures":[],"tindex":"8a0baf8a-3e86-11e6-bb8f-e71aecca50ca","method":{"position":"org.apache.commons.io.ByteOrderMark:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (!(obj instanceof org.apache.commons.io.ByteOrderMark)) {\n        {\n            if (!(obj instanceof org.apache.commons.io.ByteOrderMark)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (!(obj instanceof org.apache.commons.io.ByteOrderMark)) {\n                        return false;\n                    } \n                    org.apache.commons.io.ByteOrderMark org.apache.commons.io.ByteOrderMark = ((org.apache.commons.io.ByteOrderMark)(obj));\n                    if ((int[].int) != (bom.length())) {\n                        return false;\n                    } \n                    for (int int = 0 ; i < (int[].int) ; i++) {\n                        if ((int[][i]) != (bom.get(i))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"8a0bd69b-3e86-11e6-bb8f-ab15d0ae5674","method":{"position":"org.apache.commons.io.IOUtils:776","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.io.InputStream input, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.output.StringBuilderWriter org.apache.commons.io.output.StringBuilderWriter = new org.apache.commons.io.output.StringBuilderWriter();\n            org.apache.commons.io.IOUtils.copy(input, sw, encoding);\n            return sw.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2411","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"8a0bd69c-3e86-11e6-bb8f-837d9dc308c9","method":{"position":"org.apache.commons.io.FileUtils:1780","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> readLines(java.io.File file, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (!(file.exists())) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.InputStream java.io.InputStream = null;\n            try {\n                in = org.apache.commons.io.FileUtils.openInputStream(file);\n                return org.apache.commons.io.IOUtils.readLines(in, org.apache.commons.io.Charsets.toCharset(encoding));\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(in);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1249","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"8a0bd69d-3e86-11e6-bb8f-a567cf065366","method":{"position":"org.apache.commons.io.EndianUtils:168","type":"CtMethodImpl","sourcecode":"public static int readSwappedInteger(byte[] data, int offset) {\n    if (data != null) {\n        {\n            return (((((data[(offset + 0)]) & 255) << 0) + (((data[(offset + 1)]) & 255) << 8)) + (((data[(offset + 2)]) & 255) << 16)) + (((data[(offset + 3)]) & 255) << 24);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.SuffixFileFilter:73","type":"CtBinaryOperatorImpl","sourcecode":"suffix == null"},"failures":[],"tindex":"8a0bd69e-3e86-11e6-bb8f-6778bde93d6e","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:330","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter suffixFileFilter(java.lang.String suffix, org.apache.commons.io.IOCase caseSensitivity) {\n    if (suffix == null) {\n        {\n            return new org.apache.commons.io.filefilter.SuffixFileFilter(suffix , caseSensitivity);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suffix":"suffix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"8a0bd69f-3e86-11e6-bb8f-bd1d3468a4c0","method":{"position":"org.apache.commons.io.IOUtils:1285","type":"CtMethodImpl","sourcecode":"public static void write(byte[] data, java.io.Writer output, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (data != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (data != null) {\n                output.write(new java.lang.String(data , org.apache.commons.io.Charsets.toCharset(encoding)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CountingInputStream:71","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"8a0bfdb0-3e86-11e6-bb8f-45acf34d9cf7","method":{"position":"org.apache.commons.io.input.ProxyInputStream:220","type":"CtMethodImpl","sourcecode":"protected void afterRead(int n) throws java.io.IOException {\n    if (n != (-1)) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:492","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"8a0bfdb1-3e86-11e6-bb8f-2bf369e7d001","method":{"position":"org.apache.commons.io.IOUtils:1550","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.String data, java.io.OutputStream output, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.IOUtils.write(data, output, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:192","type":"CtBinaryOperatorImpl","sourcecode":"directory == null"},"failures":[],"tindex":"8a0bfdb2-3e86-11e6-bb8f-4b39e2d2c49a","method":{"position":"org.apache.commons.io.DirectoryWalker:503","type":"CtMethodImpl","sourcecode":"protected void handleDirectoryStart(java.io.File directory, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (directory == null) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:492","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"8a0bfdb3-3e86-11e6-bb8f-ebcc9185a4fc","method":{"position":"org.apache.commons.io.IOUtils:722","type":"CtMethodImpl","sourcecode":"public static char[] toCharArray(java.io.InputStream is, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.IOUtils.toCharArray(is, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:489","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"8a0bfdb4-3e86-11e6-bb8f-dbe85f60e1bc","method":{"position":"org.apache.commons.io.IOUtils:916","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.net.URL url, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.IOUtils.toString(url, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.comparator.SizeFileComparator:116","type":"CtInvocationImpl","sourcecode":"file2.isDirectory()"},"failures":[],"tindex":"8a0bfdb5-3e86-11e6-bb8f-193f362974a5","method":{"position":"org.apache.commons.io.comparator.LastModifiedFileComparator:67","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if (file2.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            long long = (file1.lastModified()) - (file2.lastModified());\n            if (result < 0) {\n                return -1;\n            } else if (result > 0) {\n                return 1;\n            } else {\n                return 0;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file2":"file2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileCleaningTracker:91","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"8a0bfdb6-3e86-11e6-bb8f-d5a19e0db4f1","method":{"position":"org.apache.commons.io.FileUtils:2662","type":"CtMethodImpl","sourcecode":"public static boolean isFileOlder(java.io.File file, long timeMillis) {\n    if (file == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (file == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (file == null) {\n                        throw new java.lang.IllegalArgumentException(\"No specified file\");\n                    } \n                    if (!(file.exists())) {\n                        return false;\n                    } \n                    return (file.lastModified()) < timeMillis;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2444","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"8a0bfdb7-3e86-11e6-bb8f-158998bb3cdf","method":{"position":"org.apache.commons.io.FileUtils:1805","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> readLines(java.io.File file, java.lang.String encoding) throws java.io.IOException {\n    if (!(file.exists())) {\n        {\n            return org.apache.commons.io.FileUtils.readLines(file, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2377","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.mkdirs())"},"failures":[],"tindex":"8a0c24c8-3e86-11e6-bb8f-dd679e04b731","method":{"position":"org.apache.commons.io.FileUtils:591","type":"CtMethodImpl","sourcecode":"public static java.util.Collection<java.io.File> listFilesAndDirs(java.io.File directory, org.apache.commons.io.filefilter.IOFileFilter fileFilter, org.apache.commons.io.filefilter.IOFileFilter dirFilter) {\n    if (!(directory.mkdirs())) {\n        {\n            org.apache.commons.io.FileUtils.validateListFilesParameters(directory, fileFilter);\n            org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(fileFilter);\n            org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(dirFilter);\n            java.util.Collection<java.io.File> java.util.Collection<java.io.File> = new java.util.LinkedList<java.io.File>();\n            if (directory.isDirectory()) {\n                files.add(directory);\n            } \n            org.apache.commons.io.FileUtils.innerListFiles(files, directory, org.apache.commons.io.filefilter.FileFilterUtils.or(effFileFilter, effDirFilter), true);\n            return files;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.ArrayIndexOutOfBoundsException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:212","type":"CtBinaryOperatorImpl","sourcecode":"offset < 0"},"failures":[],"tindex":"8a0c24c9-3e86-11e6-bb8f-c75b97f0b9a0","method":{"position":"org.apache.commons.io.HexDump:71","type":"CtMethodImpl","sourcecode":"public static void dump(byte[] data, long offset, java.io.OutputStream stream, int index) throws java.io.IOException, java.lang.ArrayIndexOutOfBoundsException, java.lang.IllegalArgumentException {\n    if (offset < 0) {\n        {\n            if (data != null) {\n                throw new java.lang.IllegalArgumentException();\n            } else {\n                {\n                    if ((index < 0) || (index >= (data.int))) {\n                        throw new java.lang.ArrayIndexOutOfBoundsException((((\"illegal index: \" + index) + \" into array of length \") + (data.int)));\n                    } \n                    if (stream == null) {\n                        throw new java.lang.IllegalArgumentException(\"cannot write to nullstream\");\n                    } \n                    long long = offset + index;\n                    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(74);\n                    for (int int = index ; j < (data.int) ; j += 16) {\n                        int int = (data.int) - j;\n                        if (chars_read > 16) {\n                            chars_read = 16;\n                        } \n                        org.apache.commons.io.HexDump.dump(buffer, display_offset).append(' ');\n                        for (int int = 0 ; k < 16 ; k++) {\n                            if (k < chars_read) {\n                                org.apache.commons.io.HexDump.dump(buffer, data[(k + j)]);\n                            } else {\n                                buffer.append(\"  \");\n                            }\n                            buffer.append(' ');\n                        }\n                        for (int int = 0 ; k < chars_read ; k++) {\n                            if (((data[(k + j)]) >= ' ') && ((data[(k + j)]) < 127)) {\n                                buffer.append(((char)(data[(k + j)])));\n                            } else {\n                                buffer.append('.');\n                            }\n                        }\n                        buffer.append(org.apache.commons.io.HexDump.org.apache.commons.io.HexDump.java.lang.String);\n                        stream.write(buffer.toString().getBytes());\n                        stream.flush();\n                        buffer.setLength(0);\n                        display_offset += chars_read;\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.ArrayIndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offset":"offset"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CharSequenceInputStream:114","type":"CtBinaryOperatorImpl","sourcecode":"b == null"},"failures":[],"tindex":"8a0c24ca-3e86-11e6-bb8f-250e753743be","method":{"position":"org.apache.commons.io.input.CharSequenceInputStream:113","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] b, int off, int len) throws java.io.IOException {\n    if (b == null) {\n        {\n            if (b == null) {\n                throw new java.lang.NullPointerException(\"Byte array is null\");\n            } \n            if ((len < 0) || ((off + len) > (b.int))) {\n                throw new java.lang.IndexOutOfBoundsException((((((\"Array Size=\" + (b.int)) + \", offset=\") + off) + \", length=\") + len));\n            } \n            if (len == 0) {\n                return 0;\n            } \n            if ((!(org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.ByteBuffer.hasRemaining())) && (!(org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.CharBuffer.hasRemaining()))) {\n                return -1;\n            } \n            int int = 0;\n            while (len > 0) {\n                if (org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.ByteBuffer.hasRemaining()) {\n                    int int = java.lang.Math.min(org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.ByteBuffer.remaining(), len);\n                    org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.ByteBuffer.get(b, off, chunk);\n                    off += chunk;\n                    len -= chunk;\n                    bytesRead += chunk;\n                } else {\n                    fillBuffer();\n                    if ((!(org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.ByteBuffer.hasRemaining())) && (!(org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.CharBuffer.hasRemaining()))) {\n                        break;\n                    } \n                }\n            }\n            return (bytesRead == 0) && (!(org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.CharBuffer.hasRemaining())) ? -1 : bytesRead;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2921","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"8a0c4bdb-3e86-11e6-bb8f-91a4736881f9","method":{"position":"org.apache.commons.io.output.LockableFileWriter:268","type":"CtMethodImpl","sourcecode":"private java.io.Writer initWriter(java.io.File file, java.nio.charset.Charset encoding, boolean append) throws java.io.IOException {\n    if (file == null) {\n        {\n            boolean boolean = file.exists();\n            java.io.OutputStream java.io.OutputStream = null;\n            java.io.Writer java.io.Writer = null;\n            try {\n                stream = new java.io.FileOutputStream(file.getAbsolutePath() , append);\n                writer = new java.io.OutputStreamWriter(stream , org.apache.commons.io.Charsets.toCharset(encoding));\n            } catch (java.io.IOException ex) {\n                org.apache.commons.io.IOUtils.closeQuietly(writer);\n                org.apache.commons.io.IOUtils.closeQuietly(stream);\n                org.apache.commons.io.FileUtils.deleteQuietly(java.io.File);\n                if (fileExistedAlready == false) {\n                    org.apache.commons.io.FileUtils.deleteQuietly(file);\n                } \n                throw ex;\n            } catch (java.lang.RuntimeException ex) {\n                org.apache.commons.io.IOUtils.closeQuietly(writer);\n                org.apache.commons.io.IOUtils.closeQuietly(stream);\n                org.apache.commons.io.FileUtils.deleteQuietly(java.io.File);\n                if (fileExistedAlready == false) {\n                    org.apache.commons.io.FileUtils.deleteQuietly(file);\n                } \n                throw ex;\n            }\n            return writer;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2868","type":"CtUnaryOperatorImpl","sourcecode":"!(destDir.isDirectory())"},"failures":[],"tindex":"8a0c4bdc-3e86-11e6-bb8f-7571968acd63","method":{"position":"org.apache.commons.io.FileUtils:2777","type":"CtMethodImpl","sourcecode":"public static void moveDirectoryToDirectory(java.io.File src, java.io.File destDir, boolean createDestDir) throws java.io.IOException {\n    if (!(src.isDirectory())) {\n        {\n            if (src == null) {\n                throw new java.lang.NullPointerException(\"Source must not be null\");\n            } \n            if (destDir == null) {\n                throw new java.lang.NullPointerException(\"Destination directory must not be null\");\n            } \n            if ((!(destDir.exists())) && createDestDir) {\n                destDir.mkdirs();\n            } \n            if (!(destDir.exists())) {\n                throw new java.io.FileNotFoundException(((((\"Destination directory '\" + destDir) + \"' does not exist [createDestDir=\") + createDestDir) + \"]\"));\n            } \n            if (!(destDir.isDirectory())) {\n                throw new java.io.IOException(((\"Destination '\" + destDir) + \"' is not a directory\"));\n            } \n            org.apache.commons.io.FileUtils.moveDirectory(src, new java.io.File(destDir , src.getName()));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"src"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileCleaningTracker:121","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"8a0c4bdd-3e86-11e6-bb8f-815e95dad6c5","method":{"position":"org.apache.commons.io.FileCleaningTracker:106","type":"CtMethodImpl","sourcecode":"public void track(java.lang.String path, java.lang.Object marker) {\n    if (marker == null) {\n        {\n            if (path == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    track(path, marker, ((org.apache.commons.io.FileDeleteStrategy)(null)));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"path"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.LockableFileWriter:183","type":"CtBinaryOperatorImpl","sourcecode":"(file.getParentFile()) != null"},"failures":[],"tindex":"8a0c4bde-3e86-11e6-bb8f-69b8228dc4e7","method":{"position":"org.apache.commons.io.input.Tailer:273","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.input.Tailer create(java.io.File file, org.apache.commons.io.input.TailerListener listener, long delayMillis, boolean end) {\n    if ((file.getParentFile()) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.input.Tailer.create(file, listener, delayMillis, end, org.apache.commons.io.input.Tailer.org.apache.commons.io.input.Tailer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1168","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"8a0c4bdf-3e86-11e6-bb8f-49aabdbd5f59","method":{"position":"org.apache.commons.io.FilenameUtils:622","type":"CtMethodImpl","sourcecode":"public static int getPrefixLength(java.lang.String filename) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                return -1;\n            } \n            int int = filename.length();\n            if (len == 0) {\n                return 0;\n            } \n            char char = filename.charAt(0);\n            if (ch0 == ':') {\n                return -1;\n            } \n            if (len == 1) {\n                if (ch0 == '~') {\n                    return 2;\n                } \n                return org.apache.commons.io.FilenameUtils.isSeparator(ch0) ? 1 : 0;\n            } else {\n                if (ch0 == '~') {\n                    int int = filename.indexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, 1);\n                    int int = filename.indexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, 1);\n                    if ((posUnix == (-1)) && (posWin == (-1))) {\n                        return len + 1;\n                    } \n                    posUnix = posUnix == (-1) ? posWin : posUnix;\n                    posWin = posWin == (-1) ? posUnix : posWin;\n                    return (java.lang.Math.min(posUnix, posWin)) + 1;\n                } \n                char char = filename.charAt(1);\n                if (ch1 == ':') {\n                    ch0 = java.lang.Character.toUpperCase(ch0);\n                    if ((ch0 >= 'A') && (ch0 <= 'Z')) {\n                        if ((len == 2) || ((org.apache.commons.io.FilenameUtils.isSeparator(filename.charAt(2))) == false)) {\n                            return 2;\n                        } \n                        return 3;\n                    } \n                    return -1;\n                } else if ((org.apache.commons.io.FilenameUtils.isSeparator(ch0)) && (org.apache.commons.io.FilenameUtils.isSeparator(ch1))) {\n                    int int = filename.indexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, 2);\n                    int int = filename.indexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, 2);\n                    if ((((posUnix == (-1)) && (posWin == (-1))) || (posUnix == 2)) || (posWin == 2)) {\n                        return -1;\n                    } \n                    posUnix = posUnix == (-1) ? posWin : posUnix;\n                    posWin = posWin == (-1) ? posUnix : posWin;\n                    return (java.lang.Math.min(posUnix, posWin)) + 1;\n                } else {\n                    return org.apache.commons.io.FilenameUtils.isSeparator(ch0) ? 1 : 0;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:634","type":"CtBinaryOperatorImpl","sourcecode":"len == 1"},"failures":[],"tindex":"8a0c71f0-3e86-11e6-bb8f-c3be9f83a5e9","method":{"position":"org.apache.commons.io.input.ProxyReader:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] chr, int st, int len) throws java.io.IOException {\n    if (len == 1) {\n        {\n            try {\n                beforeRead(len);\n                int int = java.io.Reader.read(chr, st, len);\n                afterRead(n);\n                return n;\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n                return -1;\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"len"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.TeeInputStream:145","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"8a0c71f1-3e86-11e6-bb8f-8105d8429aeb","method":{"position":"org.apache.commons.io.output.CountingOutputStream:53","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected synchronized void beforeWrite(int n) {\n    if (n != (-1)) {\n        {\n            long += n;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1146","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"8a0c71f2-3e86-11e6-bb8f-431630a72902","method":{"position":"org.apache.commons.io.FilenameUtils:749","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPrefix(java.lang.String filename) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                return null;\n            } \n            int int = org.apache.commons.io.FilenameUtils.getPrefixLength(filename);\n            if (len < 0) {\n                return null;\n            } \n            if (len > (filename.length())) {\n                return filename + (org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char);\n            } \n            return filename.substring(0, len);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOCase:165","type":"CtBinaryOperatorImpl","sourcecode":"(str1 == null) || (str2 == null)"},"failures":[],"tindex":"8a0c71f3-3e86-11e6-bb8f-61a28bae4f30","method":{"position":"org.apache.commons.io.IOCase:164","type":"CtMethodImpl","sourcecode":"public boolean checkEquals(java.lang.String str1, java.lang.String str2) {\n    if ((str1 == null) || (str1 == null)) {\n        {\n            if ((str1 == null) || (str2 == null)) {\n                throw new java.lang.NullPointerException(\"The strings must not be null\");\n            } \n            return boolean ? str1.equals(str2) : str1.equalsIgnoreCase(str2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"str1","str2":"str1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.BOMInputStream:336","type":"CtBinaryOperatorImpl","sourcecode":"b >= 0"},"failures":[],"tindex":"8a0c71f4-3e86-11e6-bb8f-9dd04ca00753","method":{"position":"org.apache.commons.io.output.ThresholdingOutputStream:90","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int b) throws java.io.IOException {\n    if (b >= 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            checkThreshold(1);\n            getStream().write(b);\n            (long)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2380","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"8a0c9905-3e86-11e6-bb8f-e1ae0cb9b7c8","method":{"position":"org.apache.commons.io.FileUtils:1602","type":"CtMethodImpl","sourcecode":"public static boolean directoryContains(final java.io.File directory, final java.io.File child) throws java.io.IOException {\n    if (!(directory.isDirectory())) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (directory == null) {\n                throw new java.lang.IllegalArgumentException(\"Directory must not be null\");\n            } \n            if (!(directory.isDirectory())) {\n                throw new java.lang.IllegalArgumentException((\"Not a directory: \" + directory));\n            } \n            if (child == null) {\n                return false;\n            } \n            if ((!(directory.exists())) || (!(child.exists()))) {\n                return false;\n            } \n            java.lang.String java.lang.String = directory.getCanonicalPath();\n            java.lang.String java.lang.String = child.getCanonicalPath();\n            return org.apache.commons.io.FilenameUtils.directoryContains(canonicalParent, canonicalChild);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.AndFileFilter:76","type":"CtBinaryOperatorImpl","sourcecode":"(filter1 == null) || (filter2 == null)"},"failures":[],"tindex":"8a0c9906-3e86-11e6-bb8f-cb53abef037e","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:390","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static org.apache.commons.io.filefilter.IOFileFilter andFileFilter(org.apache.commons.io.filefilter.IOFileFilter filter1, org.apache.commons.io.filefilter.IOFileFilter filter2) {\n    if ((filter1 == null) || (filter1 == null)) {\n        {\n            return new org.apache.commons.io.filefilter.AndFileFilter(filter1 , filter2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter1":"filter1","filter2":"filter1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:741","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"8a0c9907-3e86-11e6-bb8f-57444dbe6000","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:515","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FilenameFilter filter) {\n    if (filter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.DelegateFileFilter(filter);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"8a0c9908-3e86-11e6-bb8f-ebd7f80bd1ea","method":{"position":"org.apache.commons.io.output.LockableFileWriter:339","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr, int st, int end) throws java.io.IOException {\n    if (end == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.Writer.write(chr, st, end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"end"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.comparator.AbstractFileComparator:61","type":"CtBinaryOperatorImpl","sourcecode":"files != null"},"failures":[],"tindex":"8a0c9909-3e86-11e6-bb8f-6f44fe3b529f","method":{"position":"org.apache.commons.io.FileUtils:462","type":"CtMethodImpl","sourcecode":"public static java.io.File[] convertFileCollectionToFileArray(java.util.Collection<java.io.File> files) {\n    if (files != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return files.toArray(new java.io.File[files.size()]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"files":"files"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:96","type":"CtBinaryOperatorImpl","sourcecode":"observer != null"},"failures":[],"tindex":"8a0c990a-3e86-11e6-bb8f-136a79cd44de","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:91","type":"CtMethodImpl","sourcecode":"public void onStop(final org.apache.commons.io.monitor.FileAlterationObserver observer) {\n    if (observer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"observer":"observer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"8a0c990b-3e86-11e6-bb8f-2bcfe39c4f68","method":{"position":"org.apache.commons.io.IOUtils:1247","type":"CtMethodImpl","sourcecode":"public static void write(byte[] data, java.io.OutputStream output) throws java.io.IOException {\n    if (data != null) {\n        {\n            if (data != null) {\n                {\n                    if (data != null) {\n                        output.write(data);\n                    } \n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:431","type":"CtVariableReadImpl","sourcecode":"lenient"},"failures":[],"tindex":"8a0c990c-3e86-11e6-bb8f-9126e08c55fc","method":{"position":"org.apache.commons.io.input.XmlStreamReader:579","type":"CtMethodImpl","sourcecode":"java.lang.String calculateHttpEncoding(java.lang.String httpContentType, java.lang.String bomEnc, java.lang.String xmlGuessEnc, java.lang.String xmlEnc, boolean lenient) throws java.io.IOException {\n    if (lenient) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (lenient && (xmlEnc != null)) {\n                return xmlEnc;\n            } \n            java.lang.String java.lang.String = org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(httpContentType);\n            java.lang.String java.lang.String = org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(httpContentType);\n            boolean boolean = org.apache.commons.io.input.XmlStreamReader.isAppXml(cTMime);\n            boolean boolean = org.apache.commons.io.input.XmlStreamReader.isTextXml(cTMime);\n            if ((!appXml) && (!textXml)) {\n                java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                throw new org.apache.commons.io.input.XmlStreamReaderException(msg , cTMime , cTEnc , bomEnc , xmlGuessEnc , xmlEnc);\n            } \n            if (cTEnc == null) {\n                if (appXml) {\n                    return calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc);\n                } else {\n                    return (java.lang.String) == null ? org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String : java.lang.String;\n                }\n            } \n            if ((cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String))) {\n                if (bomEnc != null) {\n                    java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                    throw new org.apache.commons.io.input.XmlStreamReaderException(msg , cTMime , cTEnc , bomEnc , xmlGuessEnc , xmlEnc);\n                } \n                return cTEnc;\n            } \n            if (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)) {\n                if ((bomEnc != null) && (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String))) {\n                    return bomEnc;\n                } \n                java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                throw new org.apache.commons.io.input.XmlStreamReaderException(msg , cTMime , cTEnc , bomEnc , xmlGuessEnc , xmlEnc);\n            } \n            if ((cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String))) {\n                if (bomEnc != null) {\n                    java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                    throw new org.apache.commons.io.input.XmlStreamReaderException(msg , cTMime , cTEnc , bomEnc , xmlGuessEnc , xmlEnc);\n                } \n                return cTEnc;\n            } \n            if (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)) {\n                if ((bomEnc != null) && (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String))) {\n                    return bomEnc;\n                } \n                java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                throw new org.apache.commons.io.input.XmlStreamReaderException(msg , cTMime , cTEnc , bomEnc , xmlGuessEnc , xmlEnc);\n            } \n            return cTEnc;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lenient":"lenient"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:367","type":"CtBinaryOperatorImpl","sourcecode":"selector != null"},"failures":[],"tindex":"8a0cc01d-3e86-11e6-bb8f-a7a87a30b87e","method":{"position":"org.apache.commons.io.IOUtils:366","type":"CtMethodImpl","sourcecode":"public static void closeQuietly(java.nio.channels.Selector selector) {\n    if (selector != null) {\n        {\n            if (selector != null) {\n                try {\n                    selector.close();\n                } catch (java.io.IOException ioe) {\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"selector":"selector"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1609","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"8a0cc01e-3e86-11e6-bb8f-63e524f0d362","method":{"position":"org.apache.commons.io.FileUtils:519","type":"CtMethodImpl","sourcecode":"public static java.util.Collection<java.io.File> listFiles(java.io.File directory, org.apache.commons.io.filefilter.IOFileFilter fileFilter, org.apache.commons.io.filefilter.IOFileFilter dirFilter) {\n    if (!(directory.isDirectory())) {\n        {\n            org.apache.commons.io.FileUtils.validateListFilesParameters(directory, fileFilter);\n            org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(fileFilter);\n            org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(dirFilter);\n            java.util.Collection<java.io.File> java.util.Collection<java.io.File> = new java.util.LinkedList<java.io.File>();\n            org.apache.commons.io.FileUtils.innerListFiles(files, directory, org.apache.commons.io.filefilter.FileFilterUtils.or(effFileFilter, effDirFilter), false);\n            return files;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:206","type":"CtBinaryOperatorImpl","sourcecode":"magicNumber == null"},"failures":[],"tindex":"8a0cc01f-3e86-11e6-bb8f-cd9c4d36ac38","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:697","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[] magicNumber) {\n    if (magicNumber == null) {\n        {\n            return new org.apache.commons.io.filefilter.MagicNumberFileFilter(magicNumber);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"magicNumber":"magicNumber"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileSystemUtils:259","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"8a0cc020-3e86-11e6-bb8f-0bc43b26eaae","method":{"position":"org.apache.commons.io.FileCleaningTracker:106","type":"CtMethodImpl","sourcecode":"public void track(java.lang.String path, java.lang.Object marker) {\n    if (marker == null) {\n        {\n            if (path == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    track(path, marker, ((org.apache.commons.io.FileDeleteStrategy)(null)));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"marker"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"end == 0"},"failures":[],"tindex":"8a0cc021-3e86-11e6-bb8f-250748a318c8","method":{"position":"org.apache.commons.io.input.TeeInputStream:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] bts, int st, int end) throws java.io.IOException {\n    if (st == 0) {\n        {\n            if (end == 0) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    int int = super.read(bts, st, end);\n                    if (n != (-1)) {\n                        java.io.OutputStream.write(bts, st, n);\n                    } \n                    return n;\n                }\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"st"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:134","type":"CtBinaryOperatorImpl","sourcecode":"chr != null"},"failures":[],"tindex":"8a0ce732-3e86-11e6-bb8f-0fd6009a4c7e","method":{"position":"org.apache.commons.io.output.NullWriter:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr) {\n    if (chr != null) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chr":"chr"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"8a0ce733-3e86-11e6-bb8f-e19b8ff11202","method":{"position":"org.apache.commons.io.FileUtils:2662","type":"CtMethodImpl","sourcecode":"public static boolean isFileOlder(java.io.File file, long timeMillis) {\n    if (file == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (file == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (file == null) {\n                        throw new java.lang.IllegalArgumentException(\"No specified file\");\n                    } \n                    if (!(file.exists())) {\n                        return false;\n                    } \n                    return (file.lastModified()) < timeMillis;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.ByteOrderMark:131","type":"CtUnaryOperatorImpl","sourcecode":"!(obj instanceof org.apache.commons.io.ByteOrderMark)"},"failures":[],"tindex":"8a0ce734-3e86-11e6-bb8f-4d3c865d6717","method":{"position":"org.apache.commons.io.ByteOrderMark:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (!(obj instanceof org.apache.commons.io.ByteOrderMark)) {\n        {\n            if (!(obj instanceof org.apache.commons.io.ByteOrderMark)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (!(obj instanceof org.apache.commons.io.ByteOrderMark)) {\n                        return false;\n                    } \n                    org.apache.commons.io.ByteOrderMark org.apache.commons.io.ByteOrderMark = ((org.apache.commons.io.ByteOrderMark)(obj));\n                    if ((int[].int) != (bom.length())) {\n                        return false;\n                    } \n                    for (int int = 0 ; i < (int[].int) ; i++) {\n                        if ((int[][i]) != (bom.get(i))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:96","type":"CtBinaryOperatorImpl","sourcecode":"csq != null"},"failures":[],"tindex":"8a0ce735-3e86-11e6-bb8f-fd8ca2800975","method":{"position":"org.apache.commons.io.output.ProxyWriter:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence csq) throws java.io.IOException {\n    if (csq != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                int int = 0;\n                if (csq != null) {\n                    len = csq.length();\n                } \n                beforeWrite(len);\n                java.io.Writer.append(csq);\n                afterWrite(len);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n            return org.apache.commons.io.output.ProxyWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"csq":"csq"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1371","type":"CtBinaryOperatorImpl","sourcecode":"((text.indexOf('?')) == (-1)) && ((text.indexOf('*')) == (-1))"},"failures":[],"tindex":"8a0ce736-3e86-11e6-bb8f-7d114461782f","method":{"position":"org.apache.commons.io.FilenameUtils:1367","type":"CtMethodImpl","sourcecode":"static java.lang.String[] splitOnTokens(java.lang.String text) {\n    if (((text.indexOf('?')) == (-1)) && ((text.indexOf('*')) == (-1))) {\n        {\n            if (((text.indexOf('?')) == (-1)) && ((text.indexOf('*')) == (-1))) {\n                {\n                    if (((text.indexOf('?')) == (-1)) && ((text.indexOf('*')) == (-1))) {\n                        return new java.lang.String[]{ text };\n                    } \n                    char[] char[] = text.toCharArray();\n                    java.util.ArrayList<java.lang.String> java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n                    for (int int = 0 ; i < (array.int) ; i++) {\n                        if (((array[i]) == '?') || ((array[i]) == '*')) {\n                            if ((buffer.length()) != 0) {\n                                list.add(buffer.toString());\n                                buffer.setLength(0);\n                            } \n                            if ((array[i]) == '?') {\n                                list.add(\"?\");\n                            } else if ((list.isEmpty()) || ((i > 0) && ((list.get(((list.size()) - 1)).equals(\"*\")) == false))) {\n                                list.add(\"*\");\n                            } \n                        } else {\n                            buffer.append(array[i]);\n                        }\n                    }\n                    if ((buffer.length()) != 0) {\n                        list.add(buffer.toString());\n                    } \n                    return list.toArray(new java.lang.String[list.size()]);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"text":"text"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"commons-io","transformationCount":100,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}