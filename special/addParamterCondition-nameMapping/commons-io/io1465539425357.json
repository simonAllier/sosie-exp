{"failureDictionary":{},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:430","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f40ef6e0-2ed2-11e6-804d-d3daf7bcda4b","method":{"position":"org.apache.commons.io.FileCleaningTracker:90","type":"CtMethodImpl","sourcecode":"public void track(java.io.File file, java.lang.Object marker, org.apache.commons.io.FileDeleteStrategy deleteStrategy) {\n    if (marker.isDirectory()) {\n        {\n            if (file == null) {\n                throw new java.lang.NullPointerException(\"The file must not be null\");\n            } \n            addTracker(file.getPath(), marker, deleteStrategy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"marker"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:430","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f40f9321-2ed2-11e6-804d-87cc9e498547","method":{"position":"org.apache.commons.io.FileUtils:2077","type":"CtMethodImpl","sourcecode":"public static void writeByteArrayToFile(java.io.File file, byte[] data) throws java.io.IOException {\n    if (file.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeByteArrayToFile(file, data, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:295","type":"CtBinaryOperatorImpl","sourcecode":"(file.canRead()) == false"},"failures":[],"tindex":"f40fba32-2ed2-11e6-804d-d3273213af6e","method":{"position":"org.apache.commons.io.input.Tailer:236","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.input.Tailer create(java.io.File file, org.apache.commons.io.input.TailerListener listener, long delayMillis, boolean end, int bufSize) {\n    if ((file.canRead()) == false) {\n        {\n            org.apache.commons.io.input.Tailer org.apache.commons.io.input.Tailer = new org.apache.commons.io.input.Tailer(file , listener , delayMillis , end , bufSize);\n            java.lang.Thread java.lang.Thread = new java.lang.Thread(tailer);\n            thread.setDaemon(true);\n            thread.start();\n            return tailer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1116","type":"CtBinaryOperatorImpl","sourcecode":"(filename1 == null) || (filename2 == null)"},"failures":[],"tindex":"f40fe143-2ed2-11e6-804d-438391932a88","method":{"position":"org.apache.commons.io.FilenameUtils:1064","type":"CtMethodImpl","sourcecode":"public static boolean equalsOnSystem(java.lang.String filename1, java.lang.String filename2) {\n    if ((filename2 == null) || (filename1 == null)) {\n        {\n            return org.apache.commons.io.FilenameUtils.equals(filename1, filename2, false, org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename2":"filename1","filename1":"filename2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NameFileFilter:69","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"f40fe144-2ed2-11e6-804d-4d5dc7c89df2","method":{"position":"org.apache.commons.io.filefilter.AbstractFileFilter:50","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File dir, java.lang.String name) {\n    if (name == null) {\n        {\n            return accept(new java.io.File(dir , name));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:89","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"f40fe145-2ed2-11e6-804d-37172d92e062","method":{"position":"org.apache.commons.io.EndianUtils:283","type":"CtMethodImpl","sourcecode":"public static void writeSwappedShort(java.io.OutputStream output, short value) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (null != output) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    output.write(((byte)((value >> 0) & 255)));\n                    output.write(((byte)((value >> 8) & 255)));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:212","type":"CtBinaryOperatorImpl","sourcecode":"offset < 0"},"failures":[],"tindex":"f4100856-2ed2-11e6-804d-dbaddebd31e5","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:718","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[] magicNumber, long offset) {\n    if (offset < 0) {\n        {\n            if (offset < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.io.filefilter.MagicNumberFileFilter(magicNumber , offset);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offset":"offset"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2292","type":"CtBinaryOperatorImpl","sourcecode":"n < 0"},"failures":[],"tindex":"f4102f67-2ed2-11e6-804d-098506e947f3","method":{"position":"org.apache.commons.io.input.BoundedInputStream:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) throws java.io.IOException {\n    if (n < 0) {\n        {\n            long long = (long) >= 0 ? java.lang.Math.min(n, ((long) - (long))) : n;\n            long long = java.io.InputStream.skip(toSkip);\n            long += skippedBytes;\n            return skippedBytes;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2663","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"f4102f68-2ed2-11e6-804d-b9a0eea39da0","method":{"position":"org.apache.commons.io.FileUtils:2620","type":"CtMethodImpl","sourcecode":"public static boolean isFileOlder(java.io.File file, java.io.File reference) {\n    if (reference == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (reference == null) {\n                throw new java.lang.IllegalArgumentException(\"No specified reference file\");\n            } \n            if (!(reference.exists())) {\n                throw new java.lang.IllegalArgumentException(((\"The reference file '\" + reference) + \"' doesn't exist\"));\n            } \n            return org.apache.commons.io.FileUtils.isFileOlder(file, reference.lastModified());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"reference"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1168","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"f4105679-2ed2-11e6-804d-13fcab869396","method":{"position":"org.apache.commons.io.FilenameUtils:710","type":"CtMethodImpl","sourcecode":"public static int indexOfExtension(java.lang.String filename) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                return -1;\n            } \n            int int = filename.lastIndexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char);\n            int int = org.apache.commons.io.FilenameUtils.indexOfLastSeparator(filename);\n            return lastSeparator > extensionPos ? -1 : extensionPos;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2278","type":"CtBinaryOperatorImpl","sourcecode":"toSkip < 0"},"failures":[],"tindex":"f410567a-2ed2-11e6-804d-e734c66a078c","method":{"position":"org.apache.commons.io.IOUtils:2354","type":"CtMethodImpl","sourcecode":"public static void skipFully(java.io.InputStream input, long toSkip) throws java.io.IOException {\n    if (toSkip < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (toSkip < 0) {\n                throw new java.lang.IllegalArgumentException((\"Bytes to skip must not be negative: \" + toSkip));\n            } \n            long long = org.apache.commons.io.IOUtils.skip(input, toSkip);\n            if (skipped != toSkip) {\n                throw new java.io.EOFException((((\"Bytes to skip: \" + toSkip) + \" actual: \") + skipped));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toSkip":"toSkip"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:600","type":"CtInvocationImpl","sourcecode":"directory.isDirectory()"},"failures":[],"tindex":"f4107d8b-2ed2-11e6-804d-274f4ab46985","method":{"position":"org.apache.commons.io.DirectoryWalker:488","type":"CtMethodImpl","sourcecode":"protected boolean handleDirectory(java.io.File directory, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (!(directory.isDirectory())) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (directory.isDirectory()) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CharSequenceInputStream:121","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"f4107d8c-2ed2-11e6-804d-49f241125a48","method":{"position":"org.apache.commons.io.output.XmlStreamWriter:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] cbuf, int off, int len) throws java.io.IOException {\n    if (off == 0) {\n        {\n            if ((java.io.StringWriter) != null) {\n                detectEncoding(cbuf, off, len);\n            } else {\n                java.io.Writer.write(cbuf, off, len);\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"off"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"f410a49d-2ed2-11e6-804d-a311e9fc0ba0","method":{"position":"org.apache.commons.io.IOCase:197","type":"CtMethodImpl","sourcecode":"public boolean checkEndsWith(java.lang.String str, java.lang.String end) {\n    if (end != null) {\n        {\n            int int = end.length();\n            return str.regionMatches((!(boolean)), ((str.length()) - endLen), end, 0, endLen);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"end"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileSystemUtils:259","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"f410a49e-2ed2-11e6-804d-c536a66e5e14","method":{"position":"org.apache.commons.io.FileSystemUtils:323","type":"CtMethodImpl","sourcecode":"long parseDir(java.lang.String line, java.lang.String path) throws java.io.IOException {\n    if (line == null) {\n        {\n            int int = 0;\n            int int = 0;\n            int int = (line.length()) - 1;\n            innerLoop1 : while (j >= 0) {\n                char char = line.charAt(j);\n                if (java.lang.Character.isDigit(c)) {\n                    bytesEnd = j + 1;\n                    break innerLoop1;\n                } \n                j--;\n            }\n            innerLoop2 : while (j >= 0) {\n                char char = line.charAt(j);\n                if (((!(java.lang.Character.isDigit(c))) && (c != ',')) && (c != '.')) {\n                    bytesStart = j + 1;\n                    break innerLoop2;\n                } \n                j--;\n            }\n            if (j < 0) {\n                throw new java.io.IOException((((\"Command line 'dir /-c' did not return valid info \" + \"for path '\") + path) + \"'\"));\n            } \n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(line.substring(bytesStart, bytesEnd));\n            for (int int = 0 ; k < (buf.length()) ; k++) {\n                if (((buf.charAt(k)) == ',') || ((buf.charAt(k)) == '.')) {\n                    buf.deleteCharAt((k--));\n                } \n            }\n            return parseBytes(buf.toString(), path);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"line"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2596","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"f410cbaf-2ed2-11e6-804d-c9a1180a555f","method":{"position":"org.apache.commons.io.FileUtils:2576","type":"CtMethodImpl","sourcecode":"public static boolean isFileNewer(java.io.File file, java.util.Date date) {\n    if (file == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"No specified date\");\n            } \n            return org.apache.commons.io.FileUtils.isFileNewer(file, date.getTime());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:580","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"f410f2c0-2ed2-11e6-804d-0b98fd0e9c79","method":{"position":"org.apache.commons.io.FilenameUtils:579","type":"CtMethodImpl","sourcecode":"public static java.lang.String separatorsToSystem(java.lang.String path) {\n    if (path == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (path == null) {\n                return null;\n            } \n            if (org.apache.commons.io.FilenameUtils.isSystemWindows()) {\n                return org.apache.commons.io.FilenameUtils.separatorsToWindows(path);\n            } else {\n                return org.apache.commons.io.FilenameUtils.separatorsToUnix(path);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"path"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"f410f2c1-2ed2-11e6-804d-77549a3d194e","method":{"position":"org.apache.commons.io.IOCase:217","type":"CtMethodImpl","sourcecode":"public int checkIndexOf(java.lang.String str, int strStartIndex, java.lang.String search) {\n    if (str != null) {\n        {\n            int int = (str.length()) - (search.length());\n            if (endIndex >= strStartIndex) {\n                for (int int = strStartIndex ; i <= endIndex ; i++) {\n                    if (checkRegionMatches(str, i, search)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.PrefixFileFilter:72","type":"CtBinaryOperatorImpl","sourcecode":"prefix == null"},"failures":[],"tindex":"f41119d2-2ed2-11e6-804d-874e23acf602","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:306","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String prefix, org.apache.commons.io.IOCase caseSensitivity) {\n    if (prefix == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.PrefixFileFilter(prefix , caseSensitivity);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prefix":"prefix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"f41119d3-2ed2-11e6-804d-8faca500f56a","method":{"position":"org.apache.commons.io.IOUtils:1884","type":"CtMethodImpl","sourcecode":"public static void copy(java.io.InputStream input, java.io.Writer output) throws java.io.IOException {\n    if (null != input) {\n        {\n            org.apache.commons.io.IOUtils.copy(input, output, java.nio.charset.Charset.defaultCharset());\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.comparator.AbstractFileComparator:61","type":"CtBinaryOperatorImpl","sourcecode":"files != null"},"failures":[],"tindex":"f41140e4-2ed2-11e6-804d-45639279d776","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:151","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.io.File> filterList(org.apache.commons.io.filefilter.IOFileFilter filter, java.lang.Iterable<java.io.File> files) {\n    if (files != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.filefilter.FileFilterUtils.filter(filter, files, new java.util.ArrayList<java.io.File>());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"files":"files"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:109","type":"CtBinaryOperatorImpl","sourcecode":"(dir != null) && (new java.io.File(dir , name).isDirectory())"},"failures":[],"tindex":"f41140e5-2ed2-11e6-804d-83736dfdfda3","method":{"position":"org.apache.commons.io.filefilter.TrueFileFilter:67","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File dir, java.lang.String name) {\n    if ((dir != null) && (new java.io.File(dir , name).isDirectory())) {\n        {\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name","dir":"dir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.RegexFileFilter:76","type":"CtBinaryOperatorImpl","sourcecode":"(caseSensitivity != null) && (!(caseSensitivity.isCaseSensitive()))"},"failures":[],"tindex":"f41167f6-2ed2-11e6-804d-230cb6165630","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:354","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String name, org.apache.commons.io.IOCase caseSensitivity) {\n    if ((caseSensitivity != null) && (!(caseSensitivity.isCaseSensitive()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.NameFileFilter(name , caseSensitivity);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"caseSensitivity":"caseSensitivity"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:656","type":"CtBinaryOperatorImpl","sourcecode":"httpContentType != null"},"failures":[],"tindex":"f41167f7-2ed2-11e6-804d-d5fa229c8fad","method":{"position":"org.apache.commons.io.input.XmlStreamReader:678","type":"CtMethodImpl","sourcecode":"static java.lang.String getContentTypeEncoding(java.lang.String httpContentType) {\n    if (httpContentType != null) {\n        {\n            java.lang.String java.lang.String = null;\n            if (httpContentType != null) {\n                int int = httpContentType.indexOf(\";\");\n                if (i > (-1)) {\n                    java.lang.String java.lang.String = httpContentType.substring((i + 1));\n                    java.util.regex.Matcher java.util.regex.Matcher = org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.util.regex.Pattern.matcher(postMime);\n                    encoding = m.find() ? m.group(1) : null;\n                    encoding = encoding != null ? encoding.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale) : null;\n                } \n            } \n            return encoding;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"httpContentType":"httpContentType"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1073","type":"CtBinaryOperatorImpl","sourcecode":"(srcFile.exists()) == false"},"failures":[],"tindex":"f41167f8-2ed2-11e6-804d-bff5235f011e","method":{"position":"org.apache.commons.io.FileUtils:1005","type":"CtMethodImpl","sourcecode":"public static void copyFileToDirectory(java.io.File srcFile, java.io.File destDir, boolean preserveFileDate) throws java.io.IOException {\n    if ((srcFile.exists()) == false) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (destDir == null) {\n                throw new java.lang.NullPointerException(\"Destination must not be null\");\n            } \n            if ((destDir.exists()) && ((destDir.isDirectory()) == false)) {\n                throw new java.lang.IllegalArgumentException(((\"Destination '\" + destDir) + \"' is not a directory\"));\n            } \n            java.io.File java.io.File = new java.io.File(destDir , srcFile.getName());\n            org.apache.commons.io.FileUtils.copyFile(srcFile, destFile, preserveFileDate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcFile":"srcFile"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2377","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.mkdirs())"},"failures":[],"tindex":"f4118f09-2ed2-11e6-804d-43509bbd3fdb","method":{"position":"org.apache.commons.io.DirectoryWalker:350","type":"CtMethodImpl","sourcecode":"private void walk(java.io.File directory, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (!(directory.mkdirs())) {\n        {\n            checkIfCancelled(directory, depth, results);\n            if (handleDirectory(directory, depth, results)) {\n                handleDirectoryStart(directory, depth, results);\n                int int = depth + 1;\n                if (((int) < 0) || (childDepth <= (int))) {\n                    checkIfCancelled(directory, depth, results);\n                    java.io.File[] java.io.File[] = (java.io.FileFilter) == null ? directory.listFiles() : directory.listFiles(java.io.FileFilter);\n                    childFiles = filterDirectoryContents(directory, depth, childFiles);\n                    if (childFiles == null) {\n                        handleRestricted(directory, childDepth, results);\n                    } else {\n                        for (java.io.File java.io.File : childFiles) {\n                            if (childFile.isDirectory()) {\n                                walk(childFile, childDepth, results);\n                            } else {\n                                checkIfCancelled(childFile, childDepth, results);\n                                handleFile(childFile, childDepth, results);\n                                checkIfCancelled(childFile, childDepth, results);\n                            }\n                        }\n                    }\n                } \n                handleDirectoryEnd(directory, depth, results);\n            } \n            checkIfCancelled(directory, depth, results);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"f4118f0a-2ed2-11e6-804d-89bb23e9ce74","method":{"position":"org.apache.commons.io.IOUtils:245","type":"CtMethodImpl","sourcecode":"public static void closeQuietly(java.io.InputStream input) {\n    if (null != input) {\n        {\n            if (null != input) {\n                {\n                    org.apache.commons.io.IOUtils.closeQuietly(((java.io.Closeable)(input)));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:906","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"f411b61b-2ed2-11e6-804d-39416adcf06b","method":{"position":"org.apache.commons.io.FilenameUtils:1167","type":"CtMethodImpl","sourcecode":"public static boolean isExtension(java.lang.String filename, java.lang.String[] extensions) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filename == null) {\n                return false;\n            } \n            if ((extensions == null) || ((extensions.int) == 0)) {\n                return (org.apache.commons.io.FilenameUtils.indexOfExtension(filename)) == (-1);\n            } \n            java.lang.String java.lang.String = org.apache.commons.io.FilenameUtils.getExtension(filename);\n            for (java.lang.String java.lang.String : extensions) {\n                if (fileExt.equals(extension)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"f411b61c-2ed2-11e6-804d-3ba7b08846ce","method":{"position":"org.apache.commons.io.IOUtils:2277","type":"CtMethodImpl","sourcecode":"public static long skip(java.io.InputStream input, long toSkip) throws java.io.IOException {\n    if (null != input) {\n        {\n            if (toSkip < 0) {\n                throw new java.lang.IllegalArgumentException((\"Skip count must be non-negative, actual: \" + toSkip));\n            } \n            if ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.byte[]) == null) {\n                org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.byte[] = new byte[org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int];\n            } \n            long long = toSkip;\n            while (remain > 0) {\n                long long = input.read(org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.byte[], 0, ((int)(java.lang.Math.min(remain, org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int))));\n                if (n < 0) {\n                    break;\n                } \n                remain -= n;\n            }\n            return toSkip - remain;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:212","type":"CtBinaryOperatorImpl","sourcecode":"offset < 0"},"failures":[],"tindex":"f411dd2d-2ed2-11e6-804d-a1ee30375721","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:718","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[] magicNumber, long offset) {\n    if (offset < 0) {\n        {\n            if (offset < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.io.filefilter.MagicNumberFileFilter(magicNumber , offset);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offset":"offset"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2411","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"f411dd2e-2ed2-11e6-804d-2961297e4de0","method":{"position":"org.apache.commons.io.filefilter.FileFileFilter:58","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file.exists()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(file.exists())) {\n                {\n                    return file.isFile();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"f412043f-2ed2-11e6-804d-d35c20738628","method":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str) throws java.io.IOException {\n    if (str != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.Writer.write(str);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"f4120440-2ed2-11e6-804d-2dee7c3a8c82","method":{"position":"org.apache.commons.io.output.NullWriter:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str) {\n    if (str != null) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:841","type":"CtBinaryOperatorImpl","sourcecode":"(url == null) || (!(\"file\".equalsIgnoreCase(url.getProtocol())))"},"failures":[],"tindex":"f4122b51-2ed2-11e6-804d-a50810786115","method":{"position":"org.apache.commons.io.IOUtils:893","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.net.URL url, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if ((url == null) || (!(\"file\".equalsIgnoreCase(url.getProtocol())))) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.InputStream java.io.InputStream = url.openStream();\n            try {\n                return org.apache.commons.io.IOUtils.toString(inputStream, encoding);\n            } finally {\n                inputStream.close();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"url":"url"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.StringBuilderWriter:123","type":"CtBinaryOperatorImpl","sourcecode":"value != null"},"failures":[],"tindex":"f4122b52-2ed2-11e6-804d-330aa6c73deb","method":{"position":"org.apache.commons.io.output.StringBuilderWriter:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence value) {\n    if (value != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.StringBuilder.append(value);\n            return org.apache.commons.io.output.StringBuilderWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:239","type":"CtBinaryOperatorImpl","sourcecode":"((file != null) && (file.isFile())) && (file.canRead())"},"failures":[],"tindex":"f4122b53-2ed2-11e6-804d-73d29b2b5d0f","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:75","type":"CtMethodImpl","sourcecode":"public void onFileChange(final java.io.File file) {\n    if (((file != null) && (file.isFile())) && (file.canRead())) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1617","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"f4125264-2ed2-11e6-804d-510800cfc87a","method":{"position":"org.apache.commons.io.IOUtils:1568","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static void write(java.lang.StringBuffer data, java.io.Writer output) throws java.io.IOException {\n    if (data != null) {\n        {\n            if (data != null) {\n                output.write(data.toString());\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.BOMInputStream:336","type":"CtBinaryOperatorImpl","sourcecode":"b >= 0"},"failures":[],"tindex":"f4125265-2ed2-11e6-804d-cf79a1cc2e68","method":{"position":"org.apache.commons.io.output.NullOutputStream:44","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b, int off, int len) {\n    if (len >= 0) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"len"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1848","type":"CtBinaryOperatorImpl","sourcecode":"length == 0"},"failures":[],"tindex":"f4125266-2ed2-11e6-804d-453b901b003c","method":{"position":"org.apache.commons.io.input.CountingInputStream:57","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized long skip(final long length) throws java.io.IOException {\n    if (length == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            final long long = super.skip(length);\n            org.apache.commons.io.input.CountingInputStream.this.long += skip;\n            return skip;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:167","type":"CtBinaryOperatorImpl","sourcecode":"offset < 0"},"failures":[],"tindex":"f4125267-2ed2-11e6-804d-59fe9296d005","method":{"position":"org.apache.commons.io.EndianUtils:200","type":"CtMethodImpl","sourcecode":"public static void writeSwappedLong(byte[] data, int offset, long value) {\n    if (value < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            data[(offset + 0)] = ((byte)((value >> 0) & 255));\n            data[(offset + 1)] = ((byte)((value >> 8) & 255));\n            data[(offset + 2)] = ((byte)((value >> 16) & 255));\n            data[(offset + 3)] = ((byte)((value >> 24) & 255));\n            data[(offset + 4)] = ((byte)((value >> 32) & 255));\n            data[(offset + 5)] = ((byte)((value >> 40) & 255));\n            data[(offset + 6)] = ((byte)((value >> 48) & 255));\n            data[(offset + 7)] = ((byte)((value >> 56) & 255));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offset":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:80","type":"CtBinaryOperatorImpl","sourcecode":"files == null"},"failures":[],"tindex":"f4127978-2ed2-11e6-804d-7f318948093a","method":{"position":"org.apache.commons.io.FileUtils:944","type":"CtMethodImpl","sourcecode":"public static java.net.URL[] toURLs(java.io.File[] files) throws java.io.IOException {\n    if (files == null) {\n        {\n            java.net.URL[] java.net.URL[] = new java.net.URL[files.int];\n            for (int int = 0 ; i < (urls.int) ; i++) {\n                urls[i] = files[i].toURI().toURL();\n            }\n            return urls;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"files":"files"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2781","type":"CtBinaryOperatorImpl","sourcecode":"destDir == null"},"failures":[],"tindex":"f4127979-2ed2-11e6-804d-f5576199b63b","method":{"position":"org.apache.commons.io.FileUtils:1259","type":"CtMethodImpl","sourcecode":"public static void copyDirectory(java.io.File srcDir, java.io.File destDir, boolean preserveFileDate) throws java.io.IOException {\n    if (destDir == null) {\n        {\n            org.apache.commons.io.FileUtils.copyDirectory(srcDir, destDir, null, preserveFileDate);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"destDir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CountingInputStream:71","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"f412797a-2ed2-11e6-804d-f7c573f69892","method":{"position":"org.apache.commons.io.input.ProxyReader:223","type":"CtMethodImpl","sourcecode":"protected void beforeRead(int n) throws java.io.IOException {\n    if (n != (-1)) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"f412a08b-2ed2-11e6-804d-494c2830d1d3","method":{"position":"org.apache.commons.io.EndianUtils:311","type":"CtMethodImpl","sourcecode":"public static int readSwappedUnsignedShort(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        {\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            return ((value1 & 255) << 0) + ((value2 & 255) << 8);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1640","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"f412a08c-2ed2-11e6-804d-7b1d7bb94c04","method":{"position":"org.apache.commons.io.FileUtils:2530","type":"CtMethodImpl","sourcecode":"private static void checkDirectory(java.io.File directory) {\n    if (!(directory.isDirectory())) {\n        {\n            if (!(directory.exists())) {\n                throw new java.lang.IllegalArgumentException((directory + \" does not exist\"));\n            } \n            if (!(directory.isDirectory())) {\n                throw new java.lang.IllegalArgumentException((directory + \" is not a directory\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:431","type":"CtVariableReadImpl","sourcecode":"lenient"},"failures":[],"tindex":"f412a08d-2ed2-11e6-804d-25fb3d5a536c","method":{"position":"org.apache.commons.io.input.XmlStreamReader:423","type":"CtMethodImpl","sourcecode":"private java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream bom, org.apache.commons.io.input.BOMInputStream pis, boolean lenient) throws java.io.IOException {\n    if (lenient) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.lang.String java.lang.String = bom.getBOMCharsetName();\n            java.lang.String java.lang.String = pis.getBOMCharsetName();\n            java.lang.String java.lang.String = org.apache.commons.io.input.XmlStreamReader.getXmlProlog(pis, xmlGuessEnc);\n            try {\n                return calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc);\n            } catch (org.apache.commons.io.input.XmlStreamReaderException ex) {\n                if (lenient) {\n                    return doLenientDetection(null, ex);\n                } else {\n                    throw ex;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lenient":"lenient"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:291","type":"CtInvocationImpl","sourcecode":"file.exists()"},"failures":[],"tindex":"f412c79e-2ed2-11e6-804d-49756181ac9a","method":{"position":"org.apache.commons.io.FileUtils:1987","type":"CtMethodImpl","sourcecode":"public static void write(java.io.File file, java.lang.CharSequence data) throws java.io.IOException {\n    if (file.exists()) {\n        {\n            org.apache.commons.io.FileUtils.write(file, data, java.nio.charset.Charset.defaultCharset(), false);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:291","type":"CtInvocationImpl","sourcecode":"file.exists()"},"failures":[],"tindex":"f412c79f-2ed2-11e6-804d-5f7a510d479e","method":{"position":"org.apache.commons.io.filefilter.FileFileFilter:58","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file.exists()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(file.exists())) {\n                {\n                    return file.isFile();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1605","type":"CtBinaryOperatorImpl","sourcecode":"directory == null"},"failures":[],"tindex":"f412c7a0-2ed2-11e6-804d-79a549e366c1","method":{"position":"org.apache.commons.io.FileUtils:2307","type":"CtMethodImpl","sourcecode":"private static void deleteDirectoryOnExit(java.io.File directory) throws java.io.IOException {\n    if (directory == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (!(directory.exists())) {\n                return ;\n            } \n            directory.deleteOnExit();\n            if (!(org.apache.commons.io.FileUtils.isSymlink(directory))) {\n                org.apache.commons.io.FileUtils.cleanDirectoryOnExit(directory);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:352","type":"CtInvocationImpl","sourcecode":"file.exists()"},"failures":[],"tindex":"f412c7a1-2ed2-11e6-804d-5943d8332131","method":{"position":"org.apache.commons.io.comparator.DirectoryFileComparator:72","type":"CtMethodImpl","sourcecode":"private int getType(java.io.File file) {\n    if (file == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (file.exists()) {\n                {\n                    if (file.isDirectory()) {\n                        return 1;\n                    } else {\n                        return 2;\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:492","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"f412eeb2-2ed2-11e6-804d-554f36b1d7ac","method":{"position":"org.apache.commons.io.IOUtils:583","type":"CtMethodImpl","sourcecode":"public static byte[] toByteArray(java.io.Reader input, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        {\n            if (encoding == null) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    return org.apache.commons.io.IOUtils.toByteArray(input, org.apache.commons.io.Charsets.toCharset(encoding));\n                }\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:492","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"f412eeb3-2ed2-11e6-804d-19fe4d5ce122","method":{"position":"org.apache.commons.io.IOUtils:583","type":"CtMethodImpl","sourcecode":"public static byte[] toByteArray(java.io.Reader input, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        {\n            if (encoding == null) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    return org.apache.commons.io.IOUtils.toByteArray(input, org.apache.commons.io.Charsets.toCharset(encoding));\n                }\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.EOFException","condition":{"position":"org.apache.commons.io.input.SwappedDataInputStream:142","type":"CtBinaryOperatorImpl","sourcecode":"(-1) == count"},"failures":[],"tindex":"f412eeb4-2ed2-11e6-804d-5b3fa4520e91","method":{"position":"org.apache.commons.io.input.SwappedDataInputStream:244","type":"CtMethodImpl","sourcecode":"public int skipBytes(int count) throws java.io.EOFException, java.io.IOException {\n    if ((-1) == count) {\n        throw new java.io.EOFException();\n    } else {\n        {\n            return ((int)(java.io.InputStream.skip(count)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:797","type":"CtBinaryOperatorImpl","sourcecode":"(file1.isDirectory()) || (file2.isDirectory())"},"failures":[],"tindex":"f412eeb5-2ed2-11e6-804d-8705e21405cc","method":{"position":"org.apache.commons.io.comparator.PathFileComparator:102","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if ((file1.isDirectory()) || (file2.isDirectory())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.IOCase.checkCompareTo(file1.getPath(), file2.getPath());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file2":"file2","file1":"file1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1146","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"f41315c6-2ed2-11e6-804d-9304efd934d4","method":{"position":"org.apache.commons.io.FilenameUtils:1025","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeExtension(java.lang.String filename) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                return null;\n            } \n            int int = org.apache.commons.io.FilenameUtils.indexOfExtension(filename);\n            if (index == (-1)) {\n                return filename;\n            } else {\n                return filename.substring(0, index);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:134","type":"CtBinaryOperatorImpl","sourcecode":"chr != null"},"failures":[],"tindex":"f41315c7-2ed2-11e6-804d-0ff989072bb2","method":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:276","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr) throws java.io.IOException {\n    if (chr != null) {\n        {\n            java.io.Writer.write(chr);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chr":"chr"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.XmlStreamWriter:190","type":"CtBinaryOperatorImpl","sourcecode":"(encoding) != null"},"failures":[],"tindex":"f41315c8-2ed2-11e6-804d-033f1f1dda92","method":{"position":"org.apache.commons.io.IOUtils:1210","type":"CtMethodImpl","sourcecode":"public static java.io.InputStream toInputStream(java.lang.String input, java.nio.charset.Charset encoding) {\n    if (input != null) {\n        {\n            return new java.io.ByteArrayInputStream(input.getBytes(org.apache.commons.io.Charsets.toCharset(encoding)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:85","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"f4133cd9-2ed2-11e6-804d-a1b798a18562","method":{"position":"org.apache.commons.io.comparator.DirectoryFileComparator:72","type":"CtMethodImpl","sourcecode":"private int getType(java.io.File file) {\n    if (file == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (file.exists()) {\n                {\n                    if (file.isDirectory()) {\n                        return 1;\n                    } else {\n                        return 2;\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:109","type":"CtBinaryOperatorImpl","sourcecode":"(dir != null) && (new java.io.File(dir , name).isDirectory())"},"failures":[],"tindex":"f4133cda-2ed2-11e6-804d-81972aa995e9","method":{"position":"org.apache.commons.io.filefilter.NameFileFilter:161","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File dir, java.lang.String name) {\n    if ((dir != null) && (new java.io.File(dir , name).isDirectory())) {\n        {\n            for (java.lang.String java.lang.String : java.lang.String[]) {\n                if (org.apache.commons.io.IOCase.checkEquals(name, name2)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name","dir":"dir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1146","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"f4133cdb-2ed2-11e6-804d-e1d0727676dd","method":{"position":"org.apache.commons.io.FilenameUtils:812","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPathNoEndSeparator(java.lang.String filename) {\n    if (filename == null) {\n        {\n            return org.apache.commons.io.FilenameUtils.doGetPath(filename, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:72","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"f4133cdc-2ed2-11e6-804d-770eac706b35","method":{"position":"org.apache.commons.io.FileUtils:1111","type":"CtMethodImpl","sourcecode":"public static long copyFile(java.io.File input, java.io.OutputStream output) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            final java.io.FileInputStream java.io.FileInputStream = new java.io.FileInputStream(input);\n            try {\n                return org.apache.commons.io.IOUtils.copyLarge(fis, output);\n            } finally {\n                fis.close();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1534","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(directory))"},"failures":[],"tindex":"f41363ed-2ed2-11e6-804d-bfb932df5b37","method":{"position":"org.apache.commons.io.FileUtils:2502","type":"CtMethodImpl","sourcecode":"public static java.math.BigInteger sizeOfDirectoryAsBigInteger(java.io.File directory) {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(directory))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.checkDirectory(directory);\n            final java.io.File[] java.io.File[] = directory.listFiles();\n            if (files == null) {\n                return java.math.BigInteger.java.math.BigInteger.java.math.BigInteger;\n            } \n            java.math.BigInteger java.math.BigInteger = java.math.BigInteger.java.math.BigInteger.java.math.BigInteger;\n            for (final java.io.File java.io.File : files) {\n                try {\n                    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n                        size = size.add(java.math.BigInteger.valueOf(org.apache.commons.io.FileUtils.sizeOf(file)));\n                    } \n                } catch (java.io.IOException ioe) {\n                }\n            }\n            return size;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2331","type":"CtBinaryOperatorImpl","sourcecode":"n < 0"},"failures":[],"tindex":"f41363ee-2ed2-11e6-804d-4d86d96e6f8a","method":{"position":"org.apache.commons.io.input.BOMInputStream:399","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) throws java.io.IOException {\n    if (n < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            while ((n > 0) && ((readFirstBytes()) >= 0)) {\n                n--;\n            }\n            return java.io.InputStream.skip(n);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:740","type":"CtBinaryOperatorImpl","sourcecode":"(file1.isDirectory()) || (file2.isDirectory())"},"failures":[],"tindex":"f41363ef-2ed2-11e6-804d-13c80cf57a02","method":{"position":"org.apache.commons.io.comparator.CompositeFileComparator:91","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if ((file2.length()) != (file2.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((file1.isDirectory()) || (file1.isDirectory())) {\n                {\n                    int int = 0;\n                    for (java.util.Comparator<java.io.File> java.util.Comparator<java.io.File> : java.util.Comparator<java.io.File>[]) {\n                        result = delegate.compare(file1, file2);\n                        if (result != 0) {\n                            break;\n                        } \n                    }\n                    return result;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file2":"file1","file1":"file1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:580","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"f4138b00-2ed2-11e6-804d-41e27a6ba743","method":{"position":"org.apache.commons.io.FileSystemUtils:379","type":"CtMethodImpl","sourcecode":"long freeSpaceUnix(java.lang.String path, boolean kb, boolean posix, long timeout) throws java.io.IOException {\n    if (path == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((path.length()) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Path must not be empty\");\n            } \n            java.lang.String java.lang.String = \"-\";\n            if (kb) {\n                flags += \"k\";\n            } \n            if (posix) {\n                flags += \"P\";\n            } \n            java.lang.String[] java.lang.String[] = (flags.length()) > 1 ? new java.lang.String[]{ org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.java.lang.String , flags , path } : new java.lang.String[]{ org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.java.lang.String , path };\n            java.util.List<java.lang.String> java.util.List<java.lang.String> = performCommand(cmdAttribs, 3, timeout);\n            if ((lines.size()) < 2) {\n                throw new java.io.IOException(((((((\"Command line '\" + (org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.java.lang.String)) + \"' did not return info as expected \") + \"for path '\") + path) + \"'- response was \") + lines));\n            } \n            java.lang.String java.lang.String = lines.get(1);\n            java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(line2 , \" \");\n            if ((tok.countTokens()) < 4) {\n                if (((tok.countTokens()) == 1) && ((lines.size()) >= 3)) {\n                    java.lang.String java.lang.String = lines.get(2);\n                    tok = new java.util.StringTokenizer(line3 , \" \");\n                } else {\n                    throw new java.io.IOException((((((\"Command line '\" + (org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.java.lang.String)) + \"' did not return data as expected \") + \"for path '\") + path) + \"'- check path is valid\"));\n                }\n            } else {\n                tok.nextToken();\n            }\n            tok.nextToken();\n            tok.nextToken();\n            java.lang.String java.lang.String = tok.nextToken();\n            return parseBytes(freeSpace, path);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"path"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileSystemUtils:305","type":"CtBinaryOperatorImpl","sourcecode":"(line.length()) > 0"},"failures":[],"tindex":"f4138b01-2ed2-11e6-804d-fb34dc74d12e","method":{"position":"org.apache.commons.io.input.TailerListenerAdapter:54","type":"CtMethodImpl","sourcecode":"public void handle(java.lang.String line) {\n    if ((line.length()) > 0) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"line":"line"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2402","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[],"tindex":"f413b212-2ed2-11e6-804d-8d4ac33c922e","method":{"position":"org.apache.commons.io.IOUtils:2447","type":"CtMethodImpl","sourcecode":"public static int read(java.io.InputStream input, byte[] buffer, int offset, int length) throws java.io.IOException {\n    if (length < 0) {\n        {\n            if (length < 0) {\n                throw new java.lang.IllegalArgumentException((\"Length must not be negative: \" + length));\n            } \n            int int = length;\n            while (remaining > 0) {\n                int int = length - remaining;\n                int int = input.read(buffer, (offset + location), remaining);\n                if ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int) == count) {\n                    break;\n                } \n                remaining -= count;\n            }\n            return length - remaining;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2273","type":"CtUnaryOperatorImpl","sourcecode":"!(file.delete())"},"failures":[],"tindex":"f413b213-2ed2-11e6-804d-b742cd5992e2","method":{"position":"org.apache.commons.io.input.Tailer:299","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.input.Tailer create(java.io.File file, org.apache.commons.io.input.TailerListener listener, long delayMillis) {\n    if (!(file.delete())) {\n        {\n            return org.apache.commons.io.input.Tailer.create(file, listener, delayMillis, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"f413b214-2ed2-11e6-804d-33f5f45a6f61","method":{"position":"org.apache.commons.io.IOUtils:245","type":"CtMethodImpl","sourcecode":"public static void closeQuietly(java.io.InputStream input) {\n    if (null != input) {\n        {\n            if (null != input) {\n                {\n                    org.apache.commons.io.IOUtils.closeQuietly(((java.io.Closeable)(input)));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2380","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"f413b215-2ed2-11e6-804d-a5922c3aca9f","method":{"position":"org.apache.commons.io.DirectoryWalker:488","type":"CtMethodImpl","sourcecode":"protected boolean handleDirectory(java.io.File directory, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (!(directory.isDirectory())) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (directory.isDirectory()) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:164","type":"CtBinaryOperatorImpl","sourcecode":"conn instanceof java.net.HttpURLConnection"},"failures":[],"tindex":"f413d926-2ed2-11e6-804d-cd0466098e47","method":{"position":"org.apache.commons.io.IOUtils:163","type":"CtMethodImpl","sourcecode":"public static void close(java.net.URLConnection conn) {\n    if (conn instanceof java.net.HttpURLConnection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (conn instanceof java.net.HttpURLConnection) {\n                ((java.net.HttpURLConnection)(conn)).disconnect();\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"conn":"conn"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"f413d927-2ed2-11e6-804d-217d27d0c202","method":{"position":"org.apache.commons.io.HexDump:71","type":"CtMethodImpl","sourcecode":"public static void dump(byte[] data, long offset, java.io.OutputStream stream, int index) throws java.io.IOException, java.lang.ArrayIndexOutOfBoundsException, java.lang.IllegalArgumentException {\n    if (data != null) {\n        {\n            if ((index < 0) || (index >= (data.int))) {\n                throw new java.lang.ArrayIndexOutOfBoundsException((((\"illegal index: \" + index) + \" into array of length \") + (data.int)));\n            } \n            if (stream == null) {\n                throw new java.lang.IllegalArgumentException(\"cannot write to nullstream\");\n            } \n            long long = offset + index;\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(74);\n            for (int int = index ; j < (data.int) ; j += 16) {\n                int int = (data.int) - j;\n                if (chars_read > 16) {\n                    chars_read = 16;\n                } \n                org.apache.commons.io.HexDump.dump(buffer, display_offset).append(' ');\n                for (int int = 0 ; k < 16 ; k++) {\n                    if (k < chars_read) {\n                        org.apache.commons.io.HexDump.dump(buffer, data[(k + j)]);\n                    } else {\n                        buffer.append(\"  \");\n                    }\n                    buffer.append(' ');\n                }\n                for (int int = 0 ; k < chars_read ; k++) {\n                    if (((data[(k + j)]) >= ' ') && ((data[(k + j)]) < 127)) {\n                        buffer.append(((char)(data[(k + j)])));\n                    } else {\n                        buffer.append('.');\n                    }\n                }\n                buffer.append(org.apache.commons.io.HexDump.org.apache.commons.io.HexDump.java.lang.String);\n                stream.write(buffer.toString().getBytes());\n                stream.flush();\n                buffer.setLength(0);\n                display_offset += chars_read;\n            }\n        }\n    } else {\n        throw new java.lang.IllegalArgumentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:489","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"f413d928-2ed2-11e6-804d-e9cf9a44217a","method":{"position":"org.apache.commons.io.IOUtils:2157","type":"CtMethodImpl","sourcecode":"public static void copy(java.io.Reader input, java.io.OutputStream output, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.IOUtils.copy(input, output, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:72","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"f4140039-2ed2-11e6-804d-7fab002bf759","method":{"position":"org.apache.commons.io.EndianUtils:328","type":"CtMethodImpl","sourcecode":"public static void writeSwappedInteger(java.io.OutputStream output, int value) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            output.write(((byte)((value >> 0) & 255)));\n            output.write(((byte)((value >> 8) & 255)));\n            output.write(((byte)((value >> 16) & 255)));\n            output.write(((byte)((value >> 24) & 255)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.TaggedIOException:94","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.TaggedIOException.isTaggedWith(throwable, tag)"},"failures":[],"tindex":"f414003a-2ed2-11e6-804d-574be98c709c","method":{"position":"org.apache.commons.io.TaggedIOException:64","type":"CtMethodImpl","sourcecode":"public static boolean isTaggedWith(java.lang.Throwable throwable, java.lang.Object tag) {\n    if (org.apache.commons.io.TaggedIOException.isTaggedWith(tag, tag)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((tag != null) && (throwable instanceof org.apache.commons.io.TaggedIOException)) && (tag.equals(((org.apache.commons.io.TaggedIOException)(throwable)).java.io.Serializable));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"tag","tag":"tag"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.BOMInputStream:336","type":"CtBinaryOperatorImpl","sourcecode":"b >= 0"},"failures":[],"tindex":"f414003b-2ed2-11e6-804d-013e957b5c23","method":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:166","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(int b) {\n    if (b >= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (int) - (int);\n            if (inBufferPos == (byte[].int)) {\n                needNewBuffer(((int) + 1));\n                inBufferPos = 0;\n            } \n            byte[][inBufferPos] = ((byte)(b));\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:136","type":"CtBinaryOperatorImpl","sourcecode":"(threadFactory) != null"},"failures":[],"tindex":"f414003c-2ed2-11e6-804d-9b3aa7e81fbf","method":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:86","type":"CtMethodImpl","sourcecode":"public synchronized void setThreadFactory(java.util.concurrent.ThreadFactory threadFactory) {\n    if (threadFactory != null) {\n        {\n            if (threadFactory != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.io.monitor.FileAlterationMonitor.this.java.util.concurrent.ThreadFactory = threadFactory;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"threadFactory":"threadFactory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1526","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"f414274d-2ed2-11e6-804d-f7cc914e5526","method":{"position":"org.apache.commons.io.FileUtils:1910","type":"CtMethodImpl","sourcecode":"public static void writeStringToFile(java.io.File file, java.lang.String data, java.lang.String encoding) throws java.io.IOException {\n    if (data != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeStringToFile(file, data, encoding, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NameFileFilter:69","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"f414274e-2ed2-11e6-804d-691d88b88d0a","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:341","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String name) {\n    if (name == null) {\n        {\n            return new org.apache.commons.io.filefilter.NameFileFilter(name);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2531","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.exists())"},"failures":[],"tindex":"f414274f-2ed2-11e6-804d-d5aba3313c04","method":{"position":"org.apache.commons.io.DirectoryWalker:547","type":"CtMethodImpl","sourcecode":"protected void handleRestricted(java.io.File directory, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (!(directory.exists())) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:72","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"f4142750-2ed2-11e6-804d-bf453e21dc6d","method":{"position":"org.apache.commons.io.EndianUtils:283","type":"CtMethodImpl","sourcecode":"public static void writeSwappedShort(java.io.OutputStream output, short value) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (null != output) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    output.write(((byte)((value >> 0) & 255)));\n                    output.write(((byte)((value >> 8) & 255)));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:924","type":"CtBinaryOperatorImpl","sourcecode":"(url.getProtocol().equals(\"file\")) == false"},"failures":[],"tindex":"f4144e61-2ed2-11e6-804d-87fe01bf3721","method":{"position":"org.apache.commons.io.FileUtils:840","type":"CtMethodImpl","sourcecode":"public static java.io.File toFile(java.net.URL url) {\n    if ((url.getProtocol().equals(\"file\")) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((url == null) || (!(\"file\".equalsIgnoreCase(url.getProtocol())))) {\n                return null;\n            } else {\n                java.lang.String java.lang.String = url.getFile().replace('/', java.io.File.java.io.File.char);\n                filename = org.apache.commons.io.FileUtils.decodeUrl(filename);\n                return new java.io.File(filename);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"url":"url"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:136","type":"CtBinaryOperatorImpl","sourcecode":"(threadFactory) != null"},"failures":[],"tindex":"f4144e62-2ed2-11e6-804d-dff35beef09c","method":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:86","type":"CtMethodImpl","sourcecode":"public synchronized void setThreadFactory(java.util.concurrent.ThreadFactory threadFactory) {\n    if (threadFactory != null) {\n        {\n            if (threadFactory != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.io.monitor.FileAlterationMonitor.this.java.util.concurrent.ThreadFactory = threadFactory;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"threadFactory":"threadFactory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.comparator.DirectoryFileComparator:73","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f4144e63-2ed2-11e6-804d-e3951e164217","method":{"position":"org.apache.commons.io.filefilter.WildcardFileFilter:167","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file.isDirectory()) {\n        {\n            java.lang.String java.lang.String = file.getName();\n            for (java.lang.String java.lang.String : java.lang.String[]) {\n                if (org.apache.commons.io.FilenameUtils.wildcardMatch(name, wildcard, org.apache.commons.io.IOCase)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.BOMInputStream:336","type":"CtBinaryOperatorImpl","sourcecode":"b >= 0"},"failures":[],"tindex":"f4147574-2ed2-11e6-804d-0fc2c1326783","method":{"position":"org.apache.commons.io.output.BrokenOutputStream:61","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int b) throws java.io.IOException {\n    if (b >= 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            throw java.io.IOException;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NameFileFilter:69","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"f4147575-2ed2-11e6-804d-afa11cd5dd90","method":{"position":"org.apache.commons.io.filefilter.WildcardFilter:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File dir, java.lang.String name) {\n    if (name == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((dir != null) && (new java.io.File(dir , name).isDirectory())) {\n                return false;\n            } \n            for (java.lang.String java.lang.String : java.lang.String[]) {\n                if (org.apache.commons.io.FilenameUtils.wildcardMatch(name, wildcard)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.DirectoryWalker:330","type":"CtBinaryOperatorImpl","sourcecode":"startDirectory == null"},"failures":[],"tindex":"f4147576-2ed2-11e6-804d-abae3118b871","method":{"position":"org.apache.commons.io.DirectoryWalker:329","type":"CtMethodImpl","sourcecode":"protected final void walk(java.io.File startDirectory, java.util.Collection<T> results) throws java.io.IOException {\n    if (startDirectory == null) {\n        {\n            if (startDirectory == null) {\n                throw new java.lang.NullPointerException(\"Start Directory is null\");\n            } \n            try {\n                handleStart(startDirectory, results);\n                walk(startDirectory, 0, results);\n                handleEnd(results);\n            } catch (org.apache.commons.io.DirectoryWalker.CancelException cancel) {\n                handleCancelled(startDirectory, results, cancel);\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startDirectory":"startDirectory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:109","type":"CtBinaryOperatorImpl","sourcecode":"(dir != null) && (new java.io.File(dir , name).isDirectory())"},"failures":[],"tindex":"f4147577-2ed2-11e6-804d-9f9582f86892","method":{"position":"org.apache.commons.io.filefilter.WildcardFileFilter:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File dir, java.lang.String name) {\n    if ((dir != null) && (new java.io.File(dir , name).isDirectory())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (java.lang.String java.lang.String : java.lang.String[]) {\n                if (org.apache.commons.io.FilenameUtils.wildcardMatch(name, wildcard, org.apache.commons.io.IOCase)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name","dir":"dir"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CountingInputStream:71","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"f4149c88-2ed2-11e6-804d-ad8133493e1e","method":{"position":"org.apache.commons.io.output.ProxyWriter:242","type":"CtMethodImpl","sourcecode":"protected void beforeWrite(int n) throws java.io.IOException {\n    if (n != (-1)) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2411","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"f4149c89-2ed2-11e6-804d-a1e0cb83edf9","method":{"position":"org.apache.commons.io.FileUtils:2247","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.util.Collection<?> lines, java.lang.String lineEnding, boolean append) throws java.io.IOException {\n    if (!(file.exists())) {\n        {\n            org.apache.commons.io.FileUtils.writeLines(file, null, lines, lineEnding, append);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:242","type":"CtBinaryOperatorImpl","sourcecode":"listener != null"},"failures":[],"tindex":"f4149c8a-2ed2-11e6-804d-eb9fa57f8791","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:252","type":"CtMethodImpl","sourcecode":"public void removeListener(final org.apache.commons.io.monitor.FileAlterationListener listener) {\n    if (listener != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (listener != null) {\n                while (java.util.List<org.apache.commons.io.monitor.FileAlterationListener>.remove(listener)) {\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"listener":"listener"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1659","type":"CtBinaryOperatorImpl","sourcecode":"null != exception"},"failures":[],"tindex":"f4149c8b-2ed2-11e6-804d-59244d6a8029","method":{"position":"org.apache.commons.io.output.TaggedOutputStream:87","type":"CtMethodImpl","sourcecode":"public boolean isCauseOf(java.lang.Exception exception) {\n    if (null != exception) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.TaggedIOException.isTaggedWith(exception, java.io.Serializable);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"exception":"exception"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2444","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"f414c39c-2ed2-11e6-804d-dd94385189aa","method":{"position":"org.apache.commons.io.filefilter.SuffixFileFilter:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (!(file.exists())) {\n        {\n            java.lang.String java.lang.String = file.getName();\n            for (java.lang.String java.lang.String : org.apache.commons.io.filefilter.SuffixFileFilter.this.java.lang.String[]) {\n                if (org.apache.commons.io.IOCase.checkEndsWith(name, suffix)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2534","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"f414c39d-2ed2-11e6-804d-5761a7414f72","method":{"position":"org.apache.commons.io.DirectoryWalker:561","type":"CtMethodImpl","sourcecode":"protected void handleDirectoryEnd(java.io.File directory, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (!(directory.isDirectory())) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:758","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"f414c39e-2ed2-11e6-804d-8bd301c80ebb","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:469","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter filter) {\n    if (filter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.NotFileFilter(filter);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileSystemUtils:343","type":"CtBinaryOperatorImpl","sourcecode":"((!(java.lang.Character.isDigit(c))) && (c != ',')) && (c != '.')"},"failures":[],"tindex":"f414c39f-2ed2-11e6-804d-dde3ff30a1ec","method":{"position":"org.apache.commons.io.output.ProxyWriter:53","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(char c) throws java.io.IOException {\n    if (((!(java.lang.Character.isDigit(c))) && (c != ',')) && (c != '.')) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                beforeWrite(1);\n                java.io.Writer.append(c);\n                afterWrite(1);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n            return org.apache.commons.io.output.ProxyWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"f414eab0-2ed2-11e6-804d-a5bc4616c00f","method":{"position":"org.apache.commons.io.EndianUtils:297","type":"CtMethodImpl","sourcecode":"public static short readSwappedShort(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        {\n            return ((short)((((org.apache.commons.io.EndianUtils.read(input)) & 255) << 0) + (((org.apache.commons.io.EndianUtils.read(input)) & 255) << 8)));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:707","type":"CtBinaryOperatorImpl","sourcecode":"guessedEnc != null"},"failures":[],"tindex":"f414eab1-2ed2-11e6-804d-1dd25959390d","method":{"position":"org.apache.commons.io.input.XmlStreamReader:704","type":"CtMethodImpl","sourcecode":"private static java.lang.String getXmlProlog(java.io.InputStream is, java.lang.String guessedEnc) throws java.io.IOException {\n    if (guessedEnc != null) {\n        {\n            java.lang.String java.lang.String = null;\n            if (guessedEnc != null) {\n                byte[] byte[] = new byte[org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.int];\n                is.mark(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.int);\n                int int = 0;\n                int int = org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.int;\n                int int = is.read(bytes, offset, max);\n                int int = -1;\n                java.lang.String java.lang.String = null;\n                while (((c != (-1)) && (firstGT == (-1))) && (offset < (org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.int))) {\n                    offset += c;\n                    max -= c;\n                    c = is.read(bytes, offset, max);\n                    xmlProlog = new java.lang.String(bytes , 0 , offset , guessedEnc);\n                    firstGT = xmlProlog.indexOf('>');\n                }\n                if (firstGT == (-1)) {\n                    if (c == (-1)) {\n                        throw new java.io.IOException(\"Unexpected end of XML stream\");\n                    } else {\n                        throw new java.io.IOException(((\"XML prolog or ROOT element not found on first \" + offset) + \" bytes\"));\n                    }\n                } \n                int int = offset;\n                if (bytesRead > 0) {\n                    is.reset();\n                    java.io.BufferedReader java.io.BufferedReader = new java.io.BufferedReader(new java.io.StringReader(xmlProlog.substring(0, (firstGT + 1))));\n                    java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer();\n                    java.lang.String java.lang.String = bReader.readLine();\n                    while (line != null) {\n                        prolog.append(line);\n                        line = bReader.readLine();\n                    }\n                    java.util.regex.Matcher java.util.regex.Matcher = org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.util.regex.Pattern.matcher(prolog);\n                    if (m.find()) {\n                        encoding = m.group(1).toUpperCase();\n                        encoding = encoding.substring(1, ((encoding.length()) - 1));\n                    } \n                } \n            } \n            return encoding;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"guessedEnc":"guessedEnc"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"(file1.length()) != (file2.length())"},"failures":[],"tindex":"f41511c2-2ed2-11e6-804d-416f4cbbdd93","method":{"position":"org.apache.commons.io.comparator.CompositeFileComparator:91","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if ((file2.length()) != (file2.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((file1.isDirectory()) || (file1.isDirectory())) {\n                {\n                    int int = 0;\n                    for (java.util.Comparator<java.io.File> java.util.Comparator<java.io.File> : java.util.Comparator<java.io.File>[]) {\n                        result = delegate.compare(file1, file2);\n                        if (result != 0) {\n                            break;\n                        } \n                    }\n                    return result;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file2":"file2","file1":"file2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:275","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"f41511c3-2ed2-11e6-804d-c99dac6427f5","method":{"position":"org.apache.commons.io.filefilter.HiddenFileFilter:73","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file == null) {\n        {\n            return file.isHidden();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"commons-io","transformationCount":100,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}