{"failureDictionary":{},"transformations":[{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"34e48130-2ea9-11e6-8e3d-3922277797d5","method":{"position":"org.apache.commons.io.EndianUtils:344","type":"CtMethodImpl","sourcecode":"public static int readSwappedInteger(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        {\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            return ((((value1 & 255) << 0) + ((value2 & 255) << 8)) + ((value3 & 255) << 16)) + ((value4 & 255) << 24);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.LockableFileWriter:183","type":"CtBinaryOperatorImpl","sourcecode":"(file.getParentFile()) != null"},"failures":[],"tindex":"34e54481-2ea9-11e6-8e3d-930c75fc012b","method":{"position":"org.apache.commons.io.FileUtils:2185","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.lang.String encoding, java.util.Collection<?> lines, java.lang.String lineEnding) throws java.io.IOException {\n    if (file.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((file.getParentFile()) != null) {\n                {\n                    org.apache.commons.io.FileUtils.writeLines(file, encoding, lines, lineEnding, false);\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"(file1.length()) != (file2.length())"},"failures":[],"tindex":"34e56b92-2ea9-11e6-8e3d-f57cb8b301d4","method":{"position":"org.apache.commons.io.comparator.ExtensionFileComparator:106","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if ((file2.length()) != (file1.length())) {\n        {\n            java.lang.String java.lang.String = org.apache.commons.io.FilenameUtils.getExtension(file1.getName());\n            java.lang.String java.lang.String = org.apache.commons.io.FilenameUtils.getExtension(file2.getName());\n            return org.apache.commons.io.IOCase.checkCompareTo(suffix1, suffix2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file2":"file1","file1":"file2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1609","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"34e592a3-2ea9-11e6-8e3d-c5c77871dd3a","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:59","type":"CtMethodImpl","sourcecode":"public void onDirectoryDelete(final java.io.File directory) {\n    if (!(directory.isDirectory())) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:629","type":"CtBinaryOperatorImpl","sourcecode":"bomEnc != null"},"failures":[],"tindex":"34e592a4-2ea9-11e6-8e3d-b3ed78304c27","method":{"position":"org.apache.commons.io.input.XmlStreamReader:507","type":"CtMethodImpl","sourcecode":"java.lang.String calculateRawEncoding(java.lang.String bomEnc, java.lang.String xmlGuessEnc, java.lang.String xmlEnc) throws java.io.IOException {\n    if (xmlGuessEnc != null) {\n        {\n            if (bomEnc == null) {\n                if ((xmlGuessEnc == null) || (xmlEnc == null)) {\n                    return (java.lang.String) == null ? org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String : java.lang.String;\n                } \n                if ((xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)) && ((xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)) || (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)))) {\n                    return xmlGuessEnc;\n                } \n                return xmlEnc;\n            } \n            if (bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)) {\n                if ((xmlGuessEnc != null) && (!(xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)))) {\n                    java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, new java.lang.Object[]{ bomEnc , xmlGuessEnc , xmlEnc });\n                    throw new org.apache.commons.io.input.XmlStreamReaderException(msg , bomEnc , xmlGuessEnc , xmlEnc);\n                } \n                if ((xmlEnc != null) && (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)))) {\n                    java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, new java.lang.Object[]{ bomEnc , xmlGuessEnc , xmlEnc });\n                    throw new org.apache.commons.io.input.XmlStreamReaderException(msg , bomEnc , xmlGuessEnc , xmlEnc);\n                } \n                return bomEnc;\n            } \n            if ((bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)) || (bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String))) {\n                if ((xmlGuessEnc != null) && (!(xmlGuessEnc.equals(bomEnc)))) {\n                    java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, new java.lang.Object[]{ bomEnc , xmlGuessEnc , xmlEnc });\n                    throw new org.apache.commons.io.input.XmlStreamReaderException(msg , bomEnc , xmlGuessEnc , xmlEnc);\n                } \n                if (((xmlEnc != null) && (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)))) && (!(xmlEnc.equals(bomEnc)))) {\n                    java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, new java.lang.Object[]{ bomEnc , xmlGuessEnc , xmlEnc });\n                    throw new org.apache.commons.io.input.XmlStreamReaderException(msg , bomEnc , xmlGuessEnc , xmlEnc);\n                } \n                return bomEnc;\n            } \n            if ((bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)) || (bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String))) {\n                if ((xmlGuessEnc != null) && (!(xmlGuessEnc.equals(bomEnc)))) {\n                    java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, new java.lang.Object[]{ bomEnc , xmlGuessEnc , xmlEnc });\n                    throw new org.apache.commons.io.input.XmlStreamReaderException(msg , bomEnc , xmlGuessEnc , xmlEnc);\n                } \n                if (((xmlEnc != null) && (!(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)))) && (!(xmlEnc.equals(bomEnc)))) {\n                    java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, new java.lang.Object[]{ bomEnc , xmlGuessEnc , xmlEnc });\n                    throw new org.apache.commons.io.input.XmlStreamReaderException(msg , bomEnc , xmlGuessEnc , xmlEnc);\n                } \n                return bomEnc;\n            } \n            java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, new java.lang.Object[]{ bomEnc , xmlGuessEnc , xmlEnc });\n            throw new org.apache.commons.io.input.XmlStreamReaderException(msg , bomEnc , xmlGuessEnc , xmlEnc);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bomEnc":"xmlGuessEnc"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1411","type":"CtBinaryOperatorImpl","sourcecode":"(destDir.isDirectory()) == false"},"failures":[],"tindex":"34e607d5-2ea9-11e6-8e3d-cd7f7d33c518","method":{"position":"org.apache.commons.io.FileUtils:1229","type":"CtMethodImpl","sourcecode":"public static void copyDirectory(java.io.File srcDir, java.io.File destDir) throws java.io.IOException {\n    if ((srcDir.isDirectory()) == false) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.copyDirectory(srcDir, destDir, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"srcDir"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2416","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"34e607d6-2ea9-11e6-8e3d-c56566eb51b5","method":{"position":"org.apache.commons.io.filefilter.OrFileFilter:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(final java.io.File file, final java.lang.String name) {\n    if (file.isDirectory()) {\n        {\n            for (org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter : java.util.List<org.apache.commons.io.filefilter.IOFileFilter>) {\n                if (fileFilter.accept(file, name)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileSystemUtils:386","type":"CtVariableReadImpl","sourcecode":"kb"},"failures":[],"tindex":"34e62ee7-2ea9-11e6-8e3d-f90d0c134846","method":{"position":"org.apache.commons.io.FileSystemUtils:258","type":"CtMethodImpl","sourcecode":"long freeSpaceOS(java.lang.String path, int os, boolean kb, long timeout) throws java.io.IOException {\n    if (kb) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (path == null) {\n                throw new java.lang.IllegalArgumentException(\"Path must not be empty\");\n            } \n            switch (os) {\n                case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                    return kb ? (freeSpaceWindows(path, timeout)) / (org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.long) : freeSpaceWindows(path, timeout);\n                case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                    return freeSpaceUnix(path, kb, false, timeout);\n                case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                    return freeSpaceUnix(path, kb, true, timeout);\n                case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                    throw new java.lang.IllegalStateException(\"Unsupported operating system\");\n                default :\n                    throw new java.lang.IllegalStateException(\"Exception caught when determining operating system\");\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"kb":"kb"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2068","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[],"tindex":"34e655f8-2ea9-11e6-8e3d-d323cc1f667d","method":{"position":"org.apache.commons.io.IOUtils:2051","type":"CtMethodImpl","sourcecode":"public static long copyLarge(java.io.Reader input, java.io.Writer output, final long inputOffset, final long length, char[] buffer) throws java.io.IOException {\n    if (inputOffset > 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (inputOffset > 0) {\n                org.apache.commons.io.IOUtils.skipFully(input, inputOffset);\n            } \n            if (length == 0) {\n                return 0;\n            } \n            int int = buffer.int;\n            if ((length > 0) && (length < (buffer.int))) {\n                bytesToRead = ((int)(length));\n            } \n            int int;\n            long long = 0;\n            while ((bytesToRead > 0) && ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int) != (read = input.read(buffer, 0, bytesToRead)))) {\n                output.write(buffer, 0, read);\n                totalRead += read;\n                if (length > 0) {\n                    bytesToRead = ((int)(java.lang.Math.min((length - totalRead), buffer.int)));\n                } \n            }\n            return totalRead;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"inputOffset"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2416","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"34e67d09-2ea9-11e6-8e3d-c3a80fba9dd3","method":{"position":"org.apache.commons.io.FileUtils:2062","type":"CtMethodImpl","sourcecode":"public static void write(java.io.File file, java.lang.CharSequence data, java.lang.String encoding, boolean append) throws java.io.IOException {\n    if (file.isDirectory()) {\n        {\n            org.apache.commons.io.FileUtils.write(file, data, org.apache.commons.io.Charsets.toCharset(encoding), append);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOCase:165","type":"CtBinaryOperatorImpl","sourcecode":"(str1 == null) || (str2 == null)"},"failures":[],"tindex":"34e67d0a-2ea9-11e6-8e3d-f1340259bb75","method":{"position":"org.apache.commons.io.IOCase:146","type":"CtMethodImpl","sourcecode":"public int checkCompareTo(java.lang.String str1, java.lang.String str2) {\n    if ((str2 == null) || (str2 == null)) {\n        {\n            if ((str1 == null) || (str2 == null)) {\n                throw new java.lang.NullPointerException(\"The strings must not be null\");\n            } \n            return boolean ? str1.compareTo(str2) : str1.compareToIgnoreCase(str2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"str2","str2":"str2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:492","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"34e6a41b-2ea9-11e6-8e3d-9591d15d4563","method":{"position":"org.apache.commons.io.CopyUtils:259","type":"CtMethodImpl","sourcecode":"public static void copy(java.io.InputStream input, java.io.Writer output, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.InputStreamReader java.io.InputStreamReader = new java.io.InputStreamReader(input , encoding);\n            org.apache.commons.io.CopyUtils.copy(in, output);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:136","type":"CtBinaryOperatorImpl","sourcecode":"(threadFactory) != null"},"failures":[],"tindex":"34e6a41c-2ea9-11e6-8e3d-8f5e28274116","method":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:86","type":"CtMethodImpl","sourcecode":"public synchronized void setThreadFactory(java.util.concurrent.ThreadFactory threadFactory) {\n    if (threadFactory != null) {\n        {\n            org.apache.commons.io.monitor.FileAlterationMonitor.this.java.util.concurrent.ThreadFactory = threadFactory;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"threadFactory":"threadFactory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:2402","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[],"tindex":"34e6cb2d-2ea9-11e6-8e3d-958cb6bf50e5","method":{"position":"org.apache.commons.io.input.NullInputStream:318","type":"CtMethodImpl","sourcecode":"protected void processBytes(byte[] bytes, int offset, int length) {\n    if (offset < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"offset"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:493","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"34e6cb2e-2ea9-11e6-8e3d-f7d09c39748d","method":{"position":"org.apache.commons.io.output.WriterOutputStream:209","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b, int off, int len) throws java.io.IOException {\n    if (len == 0) {\n        {\n            while (len > 0) {\n                int int = java.lang.Math.min(len, java.nio.ByteBuffer.remaining());\n                java.nio.ByteBuffer.put(b, off, c);\n                processInput(false);\n                len -= c;\n                off += c;\n            }\n            if (boolean) {\n                flushOutput();\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"len"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:430","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"34e6f23f-2ea9-11e6-8e3d-ab3966f5ec54","method":{"position":"org.apache.commons.io.filefilter.CanReadFileFilter:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return file.canRead();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1617","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"34e71950-2ea9-11e6-8e3d-3d451b11a799","method":{"position":"org.apache.commons.io.IOUtils:1568","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static void write(java.lang.StringBuffer data, java.io.Writer output) throws java.io.IOException {\n    if (data != null) {\n        {\n            if (data != null) {\n                output.write(data.toString());\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:109","type":"CtBinaryOperatorImpl","sourcecode":"(dir != null) && (new java.io.File(dir , name).isDirectory())"},"failures":[],"tindex":"34e71951-2ea9-11e6-8e3d-21e222fb4486","method":{"position":"org.apache.commons.io.filefilter.RegexFileFilter:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File dir, java.lang.String name) {\n    if ((dir != null) && (new java.io.File(dir , name).isDirectory())) {\n        {\n            return java.util.regex.Pattern.matcher(name).matches();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name","dir":"dir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"34e71952-2ea9-11e6-8e3d-eb1b37e3b946","method":{"position":"org.apache.commons.io.IOUtils:482","type":"CtMethodImpl","sourcecode":"public static byte[] toByteArray(java.io.InputStream input, long size) throws java.io.IOException {\n    if (null != input) {\n        {\n            if (size > (java.lang.Integer.java.lang.Integer.int)) {\n                throw new java.lang.IllegalArgumentException((\"Size cannot be greater than Integer max value: \" + size));\n            } \n            return org.apache.commons.io.IOUtils.toByteArray(input, ((int)(size)));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.TeeInputStream:145","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"34e74063-2ea9-11e6-8e3d-574fde482f08","method":{"position":"org.apache.commons.io.input.CountingInputStream:70","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected synchronized void afterRead(int n) {\n    if (n != (-1)) {\n        {\n            if (n != (-1)) {\n                {\n                    if (n != (-1)) {\n                        org.apache.commons.io.input.CountingInputStream.this.long += n;\n                    } \n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:89","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"34e76774-2ea9-11e6-8e3d-932011c5f9bb","method":{"position":"org.apache.commons.io.EndianUtils:426","type":"CtMethodImpl","sourcecode":"public static void writeSwappedFloat(java.io.OutputStream output, float value) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.EndianUtils.writeSwappedInteger(output, java.lang.Float.floatToIntBits(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:141","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"34e76775-2ea9-11e6-8e3d-f5b64521b481","method":{"position":"org.apache.commons.io.output.ThresholdingOutputStream:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b, int off, int len) throws java.io.IOException {\n    if (off == 0) {\n        {\n            checkThreshold(len);\n            getStream().write(b, off, len);\n            long += len;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"off"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"34e78e86-2ea9-11e6-8e3d-17777c989833","method":{"position":"org.apache.commons.io.FileUtils:1876","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.LineIterator lineIterator(java.io.File file) throws java.io.IOException {\n    if (file == null) {\n        {\n            return org.apache.commons.io.FileUtils.lineIterator(file, null);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:292","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"34e78e87-2ea9-11e6-8e3d-79d1976bbe68","method":{"position":"org.apache.commons.io.filefilter.AgeFileFilter:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file.isDirectory()) {\n        {\n            boolean boolean = org.apache.commons.io.FileUtils.isFileNewer(file, long);\n            return boolean ? !newer : newer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"34e78e88-2ea9-11e6-8e3d-adf99620fe84","method":{"position":"org.apache.commons.io.EndianUtils:142","type":"CtMethodImpl","sourcecode":"public static int readSwappedUnsignedShort(byte[] data, int offset) {\n    if (data != null) {\n        {\n            return (((data[(offset + 0)]) & 255) << 0) + (((data[(offset + 1)]) & 255) << 8);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1146","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"34e7b599-2ea9-11e6-8e3d-0deeb9ee2e2f","method":{"position":"org.apache.commons.io.FilenameUtils:905","type":"CtMethodImpl","sourcecode":"private static java.lang.String doGetFullPath(java.lang.String filename, boolean includeSeparator) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                return null;\n            } \n            int int = org.apache.commons.io.FilenameUtils.getPrefixLength(filename);\n            if (prefix < 0) {\n                return null;\n            } \n            if (prefix >= (filename.length())) {\n                if (includeSeparator) {\n                    return org.apache.commons.io.FilenameUtils.getPrefix(filename);\n                } else {\n                    return filename;\n                }\n            } \n            int int = org.apache.commons.io.FilenameUtils.indexOfLastSeparator(filename);\n            if (index < 0) {\n                return filename.substring(0, prefix);\n            } \n            int int = index + (includeSeparator ? 1 : 0);\n            if (end == 0) {\n                end++;\n            } \n            return filename.substring(0, end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"34e7b59a-2ea9-11e6-8e3d-e929f07a4b9c","method":{"position":"org.apache.commons.io.IOUtils:245","type":"CtMethodImpl","sourcecode":"public static void closeQuietly(java.io.InputStream input) {\n    if (null != input) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.IOUtils.closeQuietly(((java.io.Closeable)(input)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"34e7b59b-2ea9-11e6-8e3d-6f95cbbefcf5","method":{"position":"org.apache.commons.io.input.ReversedLinesFileReader:329","type":"CtMethodImpl","sourcecode":"private int getNewLineMatchByteCount(byte[] data, int i) {\n    if (data != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (byte[] byte[] : byte[][]) {\n                boolean boolean = true;\n                for (int int = (newLineSequence.int) - 1 ; j >= 0 ; j--) {\n                    int int = (i + j) - ((newLineSequence.int) - 1);\n                    match &= (k >= 0) && ((data[k]) == (newLineSequence[j]));\n                }\n                if (match) {\n                    return newLineSequence.int;\n                } \n            }\n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.comparator.SizeFileComparator:110","type":"CtInvocationImpl","sourcecode":"file1.isDirectory()"},"failures":[],"tindex":"34e7dcac-2ea9-11e6-8e3d-659321f6f561","method":{"position":"org.apache.commons.io.comparator.SizeFileComparator:108","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if (file2.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            long long = 0;\n            if (file1.isDirectory()) {\n                size1 = (boolean) && (file1.exists()) ? org.apache.commons.io.FileUtils.sizeOfDirectory(file1) : 0;\n            } else {\n                size1 = file1.length();\n            }\n            long long = 0;\n            if (file2.isDirectory()) {\n                size2 = (boolean) && (file2.exists()) ? org.apache.commons.io.FileUtils.sizeOfDirectory(file2) : 0;\n            } else {\n                size2 = file2.length();\n            }\n            long long = size1 - size2;\n            if (result < 0) {\n                return -1;\n            } else if (result > 0) {\n                return 1;\n            } else {\n                return 0;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file1":"file2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:544","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"34e7dcad-2ea9-11e6-8e3d-9d72271a6e68","method":{"position":"org.apache.commons.io.FileUtils:519","type":"CtMethodImpl","sourcecode":"public static java.util.Collection<java.io.File> listFiles(java.io.File directory, org.apache.commons.io.filefilter.IOFileFilter fileFilter, org.apache.commons.io.filefilter.IOFileFilter dirFilter) {\n    if (!(directory.isDirectory())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.validateListFilesParameters(directory, fileFilter);\n            org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(fileFilter);\n            org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(dirFilter);\n            java.util.Collection<java.io.File> java.util.Collection<java.io.File> = new java.util.LinkedList<java.io.File>();\n            org.apache.commons.io.FileUtils.innerListFiles(files, directory, org.apache.commons.io.filefilter.FileFilterUtils.or(effFileFilter, effDirFilter), false);\n            return files;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:109","type":"CtBinaryOperatorImpl","sourcecode":"(dir != null) && (new java.io.File(dir , name).isDirectory())"},"failures":[],"tindex":"34e803be-2ea9-11e6-8e3d-b10198eb9094","method":{"position":"org.apache.commons.io.filefilter.FalseFileFilter:68","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File dir, java.lang.String name) {\n    if (name == null) {\n        {\n            if ((dir != null) && (new java.io.File(dir , name).isDirectory())) {\n                {\n                    return false;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name","dir":"dir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:824","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"34e803bf-2ea9-11e6-8e3d-8d6a68231d36","method":{"position":"org.apache.commons.io.FilenameUtils:995","type":"CtMethodImpl","sourcecode":"public static java.lang.String getExtension(java.lang.String filename) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                return null;\n            } \n            int int = org.apache.commons.io.FilenameUtils.indexOfExtension(filename);\n            if (index == (-1)) {\n                return \"\";\n            } else {\n                return filename.substring((index + 1));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"34e803c0-2ea9-11e6-8e3d-07915138b0d3","method":{"position":"org.apache.commons.io.EndianUtils:297","type":"CtMethodImpl","sourcecode":"public static short readSwappedShort(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        {\n            if (null != input) {\n                {\n                    return ((short)((((org.apache.commons.io.EndianUtils.read(input)) & 255) << 0) + (((org.apache.commons.io.EndianUtils.read(input)) & 255) << 8)));\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:348","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"34e82ad1-2ea9-11e6-8e3d-75473ca20ee5","method":{"position":"org.apache.commons.io.FilenameUtils:1167","type":"CtMethodImpl","sourcecode":"public static boolean isExtension(java.lang.String filename, java.lang.String[] extensions) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                return false;\n            } \n            if ((extensions == null) || ((extensions.int) == 0)) {\n                return (org.apache.commons.io.FilenameUtils.indexOfExtension(filename)) == (-1);\n            } \n            java.lang.String java.lang.String = org.apache.commons.io.FilenameUtils.getExtension(filename);\n            for (java.lang.String java.lang.String : extensions) {\n                if (fileExt.equals(extension)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:492","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"34e82ad2-2ea9-11e6-8e3d-3744dae198e3","method":{"position":"org.apache.commons.io.IOUtils:948","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(byte[] input, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        {\n            return new java.lang.String(input , org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.ThreadMonitor:84","type":"CtBinaryOperatorImpl","sourcecode":"thread != null"},"failures":[],"tindex":"34e851e3-2ea9-11e6-8e3d-9776a823a1b3","method":{"position":"org.apache.commons.io.ThreadMonitor:67","type":"CtMethodImpl","sourcecode":"public static java.lang.Thread start(java.lang.Thread thread, long timeout) {\n    if (thread != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Thread java.lang.Thread = null;\n            if (timeout > 0) {\n                org.apache.commons.io.ThreadMonitor org.apache.commons.io.ThreadMonitor = new org.apache.commons.io.ThreadMonitor(thread , timeout);\n                monitor = new java.lang.Thread(timout , org.apache.commons.io.ThreadMonitor.org.apache.commons.io.ThreadMonitor.java.lang.Class.getSimpleName());\n                monitor.setDaemon(true);\n                monitor.start();\n            } \n            return monitor;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"thread":"thread"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"34e851e4-2ea9-11e6-8e3d-e31a9f86367e","method":{"position":"org.apache.commons.io.EndianUtils:154","type":"CtMethodImpl","sourcecode":"public static void writeSwappedInteger(byte[] data, int offset, int value) {\n    if (data != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            data[(offset + 0)] = ((byte)((value >> 0) & 255));\n            data[(offset + 1)] = ((byte)((value >> 8) & 255));\n            data[(offset + 2)] = ((byte)((value >> 16) & 255));\n            data[(offset + 3)] = ((byte)((value >> 24) & 255));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1146","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"34e851e5-2ea9-11e6-8e3d-25a614c8d2f3","method":{"position":"org.apache.commons.io.FilenameUtils:622","type":"CtMethodImpl","sourcecode":"public static int getPrefixLength(java.lang.String filename) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                return -1;\n            } \n            int int = filename.length();\n            if (len == 0) {\n                return 0;\n            } \n            char char = filename.charAt(0);\n            if (ch0 == ':') {\n                return -1;\n            } \n            if (len == 1) {\n                if (ch0 == '~') {\n                    return 2;\n                } \n                return org.apache.commons.io.FilenameUtils.isSeparator(ch0) ? 1 : 0;\n            } else {\n                if (ch0 == '~') {\n                    int int = filename.indexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, 1);\n                    int int = filename.indexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, 1);\n                    if ((posUnix == (-1)) && (posWin == (-1))) {\n                        return len + 1;\n                    } \n                    posUnix = posUnix == (-1) ? posWin : posUnix;\n                    posWin = posWin == (-1) ? posUnix : posWin;\n                    return (java.lang.Math.min(posUnix, posWin)) + 1;\n                } \n                char char = filename.charAt(1);\n                if (ch1 == ':') {\n                    ch0 = java.lang.Character.toUpperCase(ch0);\n                    if ((ch0 >= 'A') && (ch0 <= 'Z')) {\n                        if ((len == 2) || ((org.apache.commons.io.FilenameUtils.isSeparator(filename.charAt(2))) == false)) {\n                            return 2;\n                        } \n                        return 3;\n                    } \n                    return -1;\n                } else if ((org.apache.commons.io.FilenameUtils.isSeparator(ch0)) && (org.apache.commons.io.FilenameUtils.isSeparator(ch1))) {\n                    int int = filename.indexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, 2);\n                    int int = filename.indexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, 2);\n                    if ((((posUnix == (-1)) && (posWin == (-1))) || (posUnix == 2)) || (posWin == 2)) {\n                        return -1;\n                    } \n                    posUnix = posUnix == (-1) ? posWin : posUnix;\n                    posWin = posWin == (-1) ? posUnix : posWin;\n                    return (java.lang.Math.min(posUnix, posWin)) + 1;\n                } else {\n                    return org.apache.commons.io.FilenameUtils.isSeparator(ch0) ? 1 : 0;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:164","type":"CtBinaryOperatorImpl","sourcecode":"(magicNumber.length()) == 0"},"failures":[],"tindex":"34e878f6-2ea9-11e6-8e3d-f347749dea7c","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:657","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String magicNumber) {\n    if ((magicNumber.length()) == 0) {\n        {\n            return new org.apache.commons.io.filefilter.MagicNumberFileFilter(magicNumber);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"magicNumber":"magicNumber"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:141","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"34e878f7-2ea9-11e6-8e3d-4bcdba6f997b","method":{"position":"org.apache.commons.io.input.ProxyReader:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] chr, int st, int len) throws java.io.IOException {\n    if (st == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                beforeRead(len);\n                int int = java.io.Reader.read(chr, st, len);\n                afterRead(n);\n                return n;\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"st"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2478","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(file))"},"failures":[],"tindex":"34e8a008-2ea9-11e6-8e3d-27153264e631","method":{"position":"org.apache.commons.io.FileUtils:351","type":"CtMethodImpl","sourcecode":"public static java.io.FileOutputStream openOutputStream(java.io.File file, boolean append) throws java.io.IOException {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (file.exists()) {\n                if (file.isDirectory()) {\n                    throw new java.io.IOException(((\"File '\" + file) + \"' exists but is a directory\"));\n                } \n                if ((file.canWrite()) == false) {\n                    throw new java.io.IOException(((\"File '\" + file) + \"' cannot be written to\"));\n                } \n            } else {\n                java.io.File java.io.File = file.getParentFile();\n                if (parent != null) {\n                    if ((!(parent.mkdirs())) && (!(parent.isDirectory()))) {\n                        throw new java.io.IOException(((\"Directory '\" + parent) + \"' could not be created\"));\n                    } \n                } \n            }\n            return new java.io.FileOutputStream(file , append);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2293","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"34e8a009-2ea9-11e6-8e3d-1769bc8eb71e","method":{"position":"org.apache.commons.io.FileUtils:2920","type":"CtMethodImpl","sourcecode":"public static boolean isSymlink(java.io.File file) throws java.io.IOException {\n    if (file.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (file == null) {\n                throw new java.lang.NullPointerException(\"File must not be null\");\n            } \n            if (org.apache.commons.io.FilenameUtils.isSystemWindows()) {\n                return false;\n            } \n            java.io.File java.io.File = null;\n            if ((file.getParent()) == null) {\n                fileInCanonicalDir = file;\n            } else {\n                java.io.File java.io.File = file.getParentFile().getCanonicalFile();\n                fileInCanonicalDir = new java.io.File(canonicalDir , file.getName());\n            }\n            if (fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile())) {\n                return false;\n            } else {\n                return true;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"34e8a00a-2ea9-11e6-8e3d-2ff1a382c232","method":{"position":"org.apache.commons.io.IOUtils:967","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> readLines(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (null != input) {\n                {\n                    if (null != input) {\n                        {\n                            if (null != input) {\n                                throw new java.io.IOException();\n                            } else {\n                                {\n                                    return org.apache.commons.io.IOUtils.readLines(input, java.nio.charset.Charset.defaultCharset());\n                                }\n                            }\n                        }\n                    } else {\n                        throw new java.io.IOException();\n                    }\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileDeleteStrategy:72","type":"CtBinaryOperatorImpl","sourcecode":"(fileToDelete == null) || ((fileToDelete.exists()) == false)"},"failures":[],"tindex":"34e8c71b-2ea9-11e6-8e3d-ddad1f3707c9","method":{"position":"org.apache.commons.io.FileDeleteStrategy:71","type":"CtMethodImpl","sourcecode":"public boolean deleteQuietly(java.io.File fileToDelete) {\n    if ((fileToDelete == null) || ((fileToDelete.exists()) == false)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((fileToDelete == null) || ((fileToDelete.exists()) == false)) {\n                return true;\n            } \n            try {\n                return doDelete(fileToDelete);\n            } catch (java.io.IOException ex) {\n                return false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fileToDelete":"fileToDelete"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"34e8c71c-2ea9-11e6-8e3d-d1e81b46069b","method":{"position":"org.apache.commons.io.output.LockableFileWriter:349","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str) throws java.io.IOException {\n    if (str != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.Writer.write(str);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.TeeInputStream:128","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"34e8c71d-2ea9-11e6-8e3d-bb3ae6e089f7","method":{"position":"org.apache.commons.io.output.CountingOutputStream:53","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected synchronized void beforeWrite(int n) {\n    if (n != (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            long += n;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.DirectoryWalker:330","type":"CtBinaryOperatorImpl","sourcecode":"startDirectory == null"},"failures":[],"tindex":"34e8ee2e-2ea9-11e6-8e3d-b10d85da0a82","method":{"position":"org.apache.commons.io.DirectoryWalker:453","type":"CtMethodImpl","sourcecode":"protected void handleCancelled(java.io.File startDirectory, java.util.Collection<T> results, org.apache.commons.io.DirectoryWalker.CancelException cancel) throws java.io.IOException {\n    if (startDirectory == null) {\n        {\n            throw cancel;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startDirectory":"startDirectory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:213","type":"CtBinaryOperatorImpl","sourcecode":"names == null"},"failures":[],"tindex":"34e8ee2f-2ea9-11e6-8e3d-6feb0f74b9fe","method":{"position":"org.apache.commons.io.FileUtils:212","type":"CtMethodImpl","sourcecode":"public static java.io.File getFile(java.lang.String... names) {\n    if (names == null) {\n        {\n            if (names == null) {\n                throw new java.lang.NullPointerException(\"names must not be null\");\n            } \n            java.io.File java.io.File = null;\n            for (java.lang.String java.lang.String : names) {\n                if (file == null) {\n                    file = new java.io.File(name);\n                } else {\n                    file = new java.io.File(file , name);\n                }\n            }\n            return file;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"names":"names"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2708","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"34e91540-2ea9-11e6-8e3d-c1fdada881cc","method":{"position":"org.apache.commons.io.input.Tailer:273","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.input.Tailer create(java.io.File file, org.apache.commons.io.input.TailerListener listener, long delayMillis, boolean end) {\n    if (file.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.input.Tailer.create(file, listener, delayMillis, end, org.apache.commons.io.input.Tailer.org.apache.commons.io.input.Tailer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1605","type":"CtBinaryOperatorImpl","sourcecode":"directory == null"},"failures":[],"tindex":"34e91541-2ea9-11e6-8e3d-6d661300d1ce","method":{"position":"org.apache.commons.io.DirectoryWalker:503","type":"CtMethodImpl","sourcecode":"protected void handleDirectoryStart(java.io.File directory, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (directory == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NameFileFilter:69","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"34e91542-2ea9-11e6-8e3d-e3b9bfd76212","method":{"position":"org.apache.commons.io.filefilter.FalseFileFilter:68","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File dir, java.lang.String name) {\n    if (name == null) {\n        {\n            if ((dir != null) && (new java.io.File(dir , name).isDirectory())) {\n                {\n                    return false;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileSystemUtils:259","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"34e91543-2ea9-11e6-8e3d-b5785e191b26","method":{"position":"org.apache.commons.io.FileCleaner:104","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static void track(java.lang.String path, java.lang.Object marker, org.apache.commons.io.FileDeleteStrategy deleteStrategy) {\n    if (marker == null) {\n        {\n            org.apache.commons.io.FileCleaner.org.apache.commons.io.FileCleaner.org.apache.commons.io.FileCleaningTracker.track(path, marker, deleteStrategy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"marker"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:253","type":"CtBinaryOperatorImpl","sourcecode":"listener != null"},"failures":[],"tindex":"34e93c54-2ea9-11e6-8e3d-a153d26ca134","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:241","type":"CtMethodImpl","sourcecode":"public void addListener(final org.apache.commons.io.monitor.FileAlterationListener listener) {\n    if (listener != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (listener != null) {\n                java.util.List<org.apache.commons.io.monitor.FileAlterationListener>.add(listener);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"listener":"listener"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2331","type":"CtBinaryOperatorImpl","sourcecode":"n < 0"},"failures":[],"tindex":"34e93c55-2ea9-11e6-8e3d-2b2198a3fc9c","method":{"position":"org.apache.commons.io.input.CharSequenceInputStream:165","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) throws java.io.IOException {\n    if (n < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = 0;\n            while ((n > 0) && (org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.CharBuffer.hasRemaining())) {\n                org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.CharBuffer.get();\n                n--;\n                skipped++;\n            }\n            return skipped;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.BoundedInputStream:172","type":"CtFieldReadImpl","sourcecode":"propagateClose"},"failures":[],"tindex":"34e93c56-2ea9-11e6-8e3d-4b5aeb6c71bd","method":{"position":"org.apache.commons.io.input.BoundedInputStream:227","type":"CtMethodImpl","sourcecode":"public void setPropagateClose(boolean propagateClose) {\n    if (propagateClose) {\n        {\n            org.apache.commons.io.input.BoundedInputStream.this.boolean = propagateClose;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"propagateClose":"propagateClose"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"34e96367-2ea9-11e6-8e3d-ad4c6d716944","method":{"position":"org.apache.commons.io.EndianUtils:297","type":"CtMethodImpl","sourcecode":"public static short readSwappedShort(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        {\n            if (null != input) {\n                {\n                    return ((short)((((org.apache.commons.io.EndianUtils.read(input)) & 255) << 0) + (((org.apache.commons.io.EndianUtils.read(input)) & 255) << 8)));\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.LineIterator:68","type":"CtBinaryOperatorImpl","sourcecode":"reader == null"},"failures":[],"tindex":"34e96368-2ea9-11e6-8e3d-3ff676b7ceba","method":{"position":"org.apache.commons.io.IOUtils:1067","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.LineIterator lineIterator(java.io.Reader reader) {\n    if (reader == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.LineIterator(reader);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reader":"reader"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1534","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(directory))"},"failures":[],"tindex":"34e96369-2ea9-11e6-8e3d-f5932f083b6a","method":{"position":"org.apache.commons.io.DirectoryWalker:488","type":"CtMethodImpl","sourcecode":"protected boolean handleDirectory(java.io.File directory, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (!(directory.isDirectory())) {\n        {\n            if (!(org.apache.commons.io.FileUtils.isSymlink(directory))) {\n                {\n                    return true;\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:492","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"34e9636a-2ea9-11e6-8e3d-873239895d0c","method":{"position":"org.apache.commons.io.CopyUtils:168","type":"CtMethodImpl","sourcecode":"public static void copy(byte[] input, java.io.Writer output, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.ByteArrayInputStream java.io.ByteArrayInputStream = new java.io.ByteArrayInputStream(input);\n            org.apache.commons.io.CopyUtils.copy(in, output, encoding);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:754","type":"CtBinaryOperatorImpl","sourcecode":"len < 0"},"failures":[],"tindex":"34e98a7b-2ea9-11e6-8e3d-dfae4ed6eb36","method":{"position":"org.apache.commons.io.input.BoundedInputStream:116","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] b, int off, int len) throws java.io.IOException {\n    if (len < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (((long) >= 0) && ((long) >= (long))) {\n                return -1;\n            } \n            long long = (long) >= 0 ? java.lang.Math.min(len, ((long) - (long))) : len;\n            int int = java.io.InputStream.read(b, off, ((int)(maxRead)));\n            if (bytesRead == (-1)) {\n                return -1;\n            } \n            long += bytesRead;\n            return bytesRead;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"len"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.comparator.DirectoryFileComparator:73","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"34e98a7c-2ea9-11e6-8e3d-8b6be96cd0b4","method":{"position":"org.apache.commons.io.FileUtils:442","type":"CtMethodImpl","sourcecode":"public static void touch(java.io.File file) throws java.io.IOException {\n    if (!(file.exists())) {\n        {\n            if (file.isDirectory()) {\n                {\n                    if (!(file.exists())) {\n                        java.io.OutputStream java.io.OutputStream = org.apache.commons.io.FileUtils.openOutputStream(file);\n                        org.apache.commons.io.IOUtils.closeQuietly(out);\n                    } \n                    boolean boolean = file.setLastModified(java.lang.System.currentTimeMillis());\n                    if (!success) {\n                        throw new java.io.IOException((\"Unable to set the last modification time for \" + file));\n                    } \n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.TeeInputStream:109","type":"CtBinaryOperatorImpl","sourcecode":"ch != (-1)"},"failures":[],"tindex":"34e98a7d-2ea9-11e6-8e3d-9d62cd202d57","method":{"position":"org.apache.commons.io.output.DemuxOutputStream:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int ch) throws java.io.IOException {\n    if (ch != (-1)) {\n        {\n            java.io.OutputStream java.io.OutputStream = java.lang.InheritableThreadLocal<java.io.OutputStream>.get();\n            if (null != output) {\n                output.write(ch);\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"34e9b18e-2ea9-11e6-8e3d-7fa723ebed90","method":{"position":"org.apache.commons.io.IOUtils:967","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> readLines(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (null != input) {\n                {\n                    if (null != input) {\n                        {\n                            if (null != input) {\n                                throw new java.io.IOException();\n                            } else {\n                                {\n                                    return org.apache.commons.io.IOUtils.readLines(input, java.nio.charset.Charset.defaultCharset());\n                                }\n                            }\n                        }\n                    } else {\n                        throw new java.io.IOException();\n                    }\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.AutoCloseInputStream:76","type":"CtBinaryOperatorImpl","sourcecode":"n == (-1)"},"failures":[],"tindex":"34e9b18f-2ea9-11e6-8e3d-ed0437e6c6a5","method":{"position":"org.apache.commons.io.output.ProxyWriter:242","type":"CtMethodImpl","sourcecode":"protected void beforeWrite(int n) throws java.io.IOException {\n    if (n == (-1)) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileSystemUtils:305","type":"CtBinaryOperatorImpl","sourcecode":"(line.length()) > 0"},"failures":[],"tindex":"34e9b190-2ea9-11e6-8e3d-cdead09c4df9","method":{"position":"org.apache.commons.io.LineIterator:117","type":"CtMethodImpl","sourcecode":"protected boolean isValidLine(java.lang.String line) {\n    if ((line.length()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"line":"line"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"url != null"},"failures":[],"tindex":"34e9b191-2ea9-11e6-8e3d-a352e17c22dc","method":{"position":"org.apache.commons.io.IOUtils:893","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.net.URL url, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (url != null) {\n        {\n            java.io.InputStream java.io.InputStream = url.openStream();\n            try {\n                return org.apache.commons.io.IOUtils.toString(inputStream, encoding);\n            } finally {\n                inputStream.close();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"url":"url"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2449","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"34e9d8a2-2ea9-11e6-8e3d-6bc7a31254a6","method":{"position":"org.apache.commons.io.FileUtils:1950","type":"CtMethodImpl","sourcecode":"public static void writeStringToFile(java.io.File file, java.lang.String data, java.lang.String encoding, boolean append) throws java.io.IOException {\n    if (file.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeStringToFile(file, data, org.apache.commons.io.Charsets.toCharset(encoding), append);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"34e9d8a3-2ea9-11e6-8e3d-ff3fb3cd6080","method":{"position":"org.apache.commons.io.IOUtils:967","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> readLines(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (null != input) {\n                {\n                    if (null != input) {\n                        {\n                            if (null != input) {\n                                throw new java.io.IOException();\n                            } else {\n                                {\n                                    return org.apache.commons.io.IOUtils.readLines(input, java.nio.charset.Charset.defaultCharset());\n                                }\n                            }\n                        }\n                    } else {\n                        throw new java.io.IOException();\n                    }\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1364","type":"CtBinaryOperatorImpl","sourcecode":"destDir == null"},"failures":[],"tindex":"34e9d8a4-2ea9-11e6-8e3d-5f011f065c9b","method":{"position":"org.apache.commons.io.FileUtils:2734","type":"CtMethodImpl","sourcecode":"public static void moveDirectory(java.io.File srcDir, java.io.File destDir) throws java.io.IOException {\n    if (destDir == null) {\n        {\n            if (srcDir == null) {\n                throw new java.lang.NullPointerException(\"Source must not be null\");\n            } \n            if (destDir == null) {\n                throw new java.lang.NullPointerException(\"Destination must not be null\");\n            } \n            if (!(srcDir.exists())) {\n                throw new java.io.FileNotFoundException(((\"Source '\" + srcDir) + \"' does not exist\"));\n            } \n            if (!(srcDir.isDirectory())) {\n                throw new java.io.IOException(((\"Source '\" + srcDir) + \"' is not a directory\"));\n            } \n            if (destDir.exists()) {\n                throw new org.apache.commons.io.FileExistsException(((\"Destination '\" + destDir) + \"' already exists\"));\n            } \n            boolean boolean = srcDir.renameTo(destDir);\n            if (!rename) {\n                if (destDir.getCanonicalPath().startsWith(srcDir.getCanonicalPath())) {\n                    throw new java.io.IOException((((\"Cannot move directory: \" + srcDir) + \" to a subdirectory of itself: \") + destDir));\n                } \n                org.apache.commons.io.FileUtils.copyDirectory(srcDir, destDir);\n                org.apache.commons.io.FileUtils.deleteDirectory(srcDir);\n                if (srcDir.exists()) {\n                    throw new java.io.IOException(((((\"Failed to delete original directory '\" + srcDir) + \"' after copy to '\") + destDir) + \"'\"));\n                } \n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"destDir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2411","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"34e9ffb5-2ea9-11e6-8e3d-09b7c6c9933e","method":{"position":"org.apache.commons.io.FileUtils:2662","type":"CtMethodImpl","sourcecode":"public static boolean isFileOlder(java.io.File file, long timeMillis) {\n    if (!(file.exists())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (file == null) {\n                throw new java.lang.IllegalArgumentException(\"No specified file\");\n            } \n            if (!(file.exists())) {\n                return false;\n            } \n            return (file.lastModified()) < timeMillis;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1122","type":"CtBinaryOperatorImpl","sourcecode":"(filename1 == null) || (filename2 == null)"},"failures":[],"tindex":"34e9ffb6-2ea9-11e6-8e3d-53faae5a405f","method":{"position":"org.apache.commons.io.FilenameUtils:1080","type":"CtMethodImpl","sourcecode":"public static boolean equalsNormalized(java.lang.String filename1, java.lang.String filename2) {\n    if ((filename1 == null) || (filename2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FilenameUtils.equals(filename1, filename2, true, org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename2":"filename2","filename1":"filename1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2416","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"34e9ffb7-2ea9-11e6-8e3d-c92cb1c4b549","method":{"position":"org.apache.commons.io.FileUtils:1560","type":"CtMethodImpl","sourcecode":"public static boolean deleteQuietly(java.io.File file) {\n    if (file.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (file == null) {\n                return false;\n            } \n            try {\n                if (file.isDirectory()) {\n                    org.apache.commons.io.FileUtils.cleanDirectory(file);\n                } \n            } catch (java.lang.Exception ignored) {\n            }\n            try {\n                return file.delete();\n            } catch (java.lang.Exception ignored) {\n                return false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.TeeInputStream:145","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"34ea26c8-2ea9-11e6-8e3d-9545df72709f","method":{"position":"org.apache.commons.io.input.CountingInputStream:70","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected synchronized void afterRead(int n) {\n    if (n != (-1)) {\n        {\n            if (n != (-1)) {\n                {\n                    if (n != (-1)) {\n                        org.apache.commons.io.input.CountingInputStream.this.long += n;\n                    } \n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:489","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"34ea26c9-2ea9-11e6-8e3d-ad718334bea2","method":{"position":"org.apache.commons.io.IOUtils:1525","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.String data, java.io.OutputStream output, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (data == null) {\n        {\n            if (data == null) {\n                {\n                    if (data != null) {\n                        output.write(data.getBytes(org.apache.commons.io.Charsets.toCharset(encoding)));\n                    } \n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"data"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1249","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"34ea26ca-2ea9-11e6-8e3d-2fa1ad1fd310","method":{"position":"org.apache.commons.io.IOUtils:1311","type":"CtMethodImpl","sourcecode":"public static void write(byte[] data, java.io.Writer output, java.lang.String encoding) throws java.io.IOException {\n    if (data != null) {\n        {\n            org.apache.commons.io.IOUtils.write(data, output, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2292","type":"CtBinaryOperatorImpl","sourcecode":"n < 0"},"failures":[],"tindex":"34ea26cb-2ea9-11e6-8e3d-115b787940f0","method":{"position":"org.apache.commons.io.input.BOMInputStream:399","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) throws java.io.IOException {\n    if (n < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            while ((n > 0) && ((readFirstBytes()) >= 0)) {\n                n--;\n            }\n            return java.io.InputStream.skip(n);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1122","type":"CtBinaryOperatorImpl","sourcecode":"(filename1 == null) || (filename2 == null)"},"failures":[],"tindex":"34ea4ddc-2ea9-11e6-8e3d-adfb46ac2ec7","method":{"position":"org.apache.commons.io.FilenameUtils:1097","type":"CtMethodImpl","sourcecode":"public static boolean equalsNormalizedOnSystem(java.lang.String filename1, java.lang.String filename2) {\n    if ((filename2 == null) || (filename1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FilenameUtils.equals(filename1, filename2, true, org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename2":"filename1","filename1":"filename2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:866","type":"CtBinaryOperatorImpl","sourcecode":"(url != null) && ((url.indexOf('%')) >= 0)"},"failures":[],"tindex":"34ea4ddd-2ea9-11e6-8e3d-4d86b89be464","method":{"position":"org.apache.commons.io.FileUtils:864","type":"CtMethodImpl","sourcecode":"static java.lang.String decodeUrl(java.lang.String url) {\n    if ((url != null) && ((url.indexOf('%')) >= 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String = url;\n            if ((url != null) && ((url.indexOf('%')) >= 0)) {\n                int int = url.length();\n                java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer();\n                java.nio.ByteBuffer java.nio.ByteBuffer = java.nio.ByteBuffer.allocate(n);\n                for (int int = 0 ; i < n ; ) {\n                    if ((url.charAt(i)) == '%') {\n                        try {\n                            do {\n                                byte byte = ((byte)(java.lang.Integer.parseInt(url.substring((i + 1), (i + 3)), 16)));\n                                bytes.put(octet);\n                                i += 3;\n                            } while ((i < n) && ((url.charAt(i)) == '%') );\n                            continue;\n                        } catch (java.lang.RuntimeException e) {\n                        } finally {\n                            if ((bytes.position()) > 0) {\n                                bytes.flip();\n                                buffer.append(org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.java.nio.charset.Charset.decode(bytes).toString());\n                                bytes.clear();\n                            } \n                        }\n                    } \n                    buffer.append(url.charAt((i++)));\n                }\n                decoded = buffer.toString();\n            } \n            return decoded;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"url":"url"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1656","type":"CtBinaryOperatorImpl","sourcecode":"lines == null"},"failures":[],"tindex":"34ea4dde-2ea9-11e6-8e3d-fb5fd3fd076d","method":{"position":"org.apache.commons.io.IOUtils:1706","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.util.Collection<?> lines, java.lang.String lineEnding, java.io.Writer writer) throws java.io.IOException {\n    if (lines == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (lines == null) {\n                return ;\n            } \n            if (lineEnding == null) {\n                lineEnding = org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.java.lang.String;\n            } \n            for (java.lang.Object java.lang.Object : lines) {\n                if (line != null) {\n                    writer.write(line.toString());\n                } \n                writer.write(lineEnding);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lines":"lines"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:109","type":"CtBinaryOperatorImpl","sourcecode":"(dir != null) && (new java.io.File(dir , name).isDirectory())"},"failures":[],"tindex":"34ea74ef-2ea9-11e6-8e3d-331bff71bd35","method":{"position":"org.apache.commons.io.filefilter.NameFileFilter:161","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File dir, java.lang.String name) {\n    if ((dir != null) && (new java.io.File(dir , name).isDirectory())) {\n        {\n            for (java.lang.String java.lang.String : java.lang.String[]) {\n                if (org.apache.commons.io.IOCase.checkEquals(name, name2)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name","dir":"dir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"34ea74f0-2ea9-11e6-8e3d-77a65a5f43ec","method":{"position":"org.apache.commons.io.IOCase:217","type":"CtMethodImpl","sourcecode":"public int checkIndexOf(java.lang.String str, int strStartIndex, java.lang.String search) {\n    if (search != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (str.length()) - (search.length());\n            if (endIndex >= strStartIndex) {\n                for (int int = strStartIndex ; i <= endIndex ; i++) {\n                    if (checkRegionMatches(str, i, search)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"search"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2596","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"34ea74f1-2ea9-11e6-8e3d-2f2a369256e3","method":{"position":"org.apache.commons.io.filefilter.AndFileFilter:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(final java.io.File file) {\n    if (file == null) {\n        {\n            if (org.apache.commons.io.filefilter.AndFileFilter.this.java.util.List<org.apache.commons.io.filefilter.IOFileFilter>.isEmpty()) {\n                return false;\n            } \n            for (org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter : java.util.List<org.apache.commons.io.filefilter.IOFileFilter>) {\n                if (!(fileFilter.accept(file))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileSystemUtils:259","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"34ea9c02-2ea9-11e6-8e3d-57d2678b44fc","method":{"position":"org.apache.commons.io.FileSystemUtils:170","type":"CtMethodImpl","sourcecode":"public static long freeSpaceKb(java.lang.String path) throws java.io.IOException {\n    if (((path.length()) > 0) && ((path.charAt(0)) != '\"')) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (path == null) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    return org.apache.commons.io.FileSystemUtils.freeSpaceKb(path, (-1));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"path"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.ThreadMonitor:69","type":"CtBinaryOperatorImpl","sourcecode":"timeout > 0"},"failures":[],"tindex":"34ea9c03-2ea9-11e6-8e3d-bd1904e6833e","method":{"position":"org.apache.commons.io.FileSystemUtils:199","type":"CtMethodImpl","sourcecode":"public static long freeSpaceKb(java.lang.String path, long timeout) throws java.io.IOException {\n    if (timeout > 0) {\n        {\n            return org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.freeSpaceOS(path, org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int, true, timeout);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeout":"timeout"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:72","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"34ea9c04-2ea9-11e6-8e3d-4bf2b154663f","method":{"position":"org.apache.commons.io.CopyUtils:280","type":"CtMethodImpl","sourcecode":"public static void copy(java.io.Reader input, java.io.OutputStream output) throws java.io.IOException {\n    if (null != output) {\n        {\n            java.io.OutputStreamWriter java.io.OutputStreamWriter = new java.io.OutputStreamWriter(output);\n            org.apache.commons.io.CopyUtils.copy(input, out);\n            out.flush();\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1534","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(directory))"},"failures":[],"tindex":"34ea9c05-2ea9-11e6-8e3d-5f0af8ebf124","method":{"position":"org.apache.commons.io.FileUtils:543","type":"CtMethodImpl","sourcecode":"private static void validateListFilesParameters(java.io.File directory, org.apache.commons.io.filefilter.IOFileFilter fileFilter) {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(directory))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(directory.isDirectory())) {\n                throw new java.lang.IllegalArgumentException(\"Parameter 'directory' is not a directory\");\n            } \n            if (fileFilter == null) {\n                throw new java.lang.NullPointerException(\"Parameter 'fileFilter' is null\");\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileSystemUtils:289","type":"CtBinaryOperatorImpl","sourcecode":"((path.length()) > 0) && ((path.charAt(0)) != '\"')"},"failures":[],"tindex":"34eac316-2ea9-11e6-8e3d-538e6620d1b8","method":{"position":"org.apache.commons.io.FileSystemUtils:170","type":"CtMethodImpl","sourcecode":"public static long freeSpaceKb(java.lang.String path) throws java.io.IOException {\n    if (((path.length()) > 0) && ((path.charAt(0)) != '\"')) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (path == null) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    return org.apache.commons.io.FileSystemUtils.freeSpaceKb(path, (-1));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"path"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2368","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"34eac317-2ea9-11e6-8e3d-6ddef58db77f","method":{"position":"org.apache.commons.io.DirectoryWalker:488","type":"CtMethodImpl","sourcecode":"protected boolean handleDirectory(java.io.File directory, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (!(directory.isDirectory())) {\n        {\n            if (!(org.apache.commons.io.FileUtils.isSymlink(directory))) {\n                {\n                    return true;\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"(file1.length()) != (file2.length())"},"failures":[],"tindex":"34eac318-2ea9-11e6-8e3d-630a322f69d9","method":{"position":"org.apache.commons.io.comparator.DefaultFileComparator:63","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if ((file2.length()) != (file2.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return file1.compareTo(file2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file2":"file2","file1":"file2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:443","type":"CtUnaryOperatorImpl","sourcecode":"!(file.exists())"},"failures":[],"tindex":"34eac319-2ea9-11e6-8e3d-3d160f0690d0","method":{"position":"org.apache.commons.io.FileUtils:442","type":"CtMethodImpl","sourcecode":"public static void touch(java.io.File file) throws java.io.IOException {\n    if (!(file.exists())) {\n        {\n            if (file.isDirectory()) {\n                {\n                    if (!(file.exists())) {\n                        java.io.OutputStream java.io.OutputStream = org.apache.commons.io.FileUtils.openOutputStream(file);\n                        org.apache.commons.io.IOUtils.closeQuietly(out);\n                    } \n                    boolean boolean = file.setLastModified(java.lang.System.currentTimeMillis());\n                    if (!success) {\n                        throw new java.io.IOException((\"Unable to set the last modification time for \" + file));\n                    } \n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:689","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"34eaea2a-2ea9-11e6-8e3d-cfa5590a66d9","method":{"position":"org.apache.commons.io.FilenameUtils:193","type":"CtMethodImpl","sourcecode":"public static java.lang.String normalize(java.lang.String filename) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FilenameUtils.doNormalize(filename, org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:352","type":"CtInvocationImpl","sourcecode":"file.exists()"},"failures":[],"tindex":"34eaea2b-2ea9-11e6-8e3d-f720a72e31fa","method":{"position":"org.apache.commons.io.FileUtils:2205","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.lang.String encoding, java.util.Collection<?> lines, java.lang.String lineEnding, boolean append) throws java.io.IOException {\n    if (file.exists()) {\n        {\n            java.io.FileOutputStream java.io.FileOutputStream = null;\n            try {\n                out = org.apache.commons.io.FileUtils.openOutputStream(file, append);\n                final java.io.BufferedOutputStream java.io.BufferedOutputStream = new java.io.BufferedOutputStream(out);\n                org.apache.commons.io.IOUtils.writeLines(lines, lineEnding, buffer, encoding);\n                buffer.flush();\n                out.close();\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(out);\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.EmptyFileFilter:77","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"34eaea2c-2ea9-11e6-8e3d-ff5156790d34","method":{"position":"org.apache.commons.io.FileUtils:2185","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.lang.String encoding, java.util.Collection<?> lines, java.lang.String lineEnding) throws java.io.IOException {\n    if (file.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((file.getParentFile()) != null) {\n                {\n                    org.apache.commons.io.FileUtils.writeLines(file, encoding, lines, lineEnding, false);\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:492","type":"CtBinaryOperatorImpl","sourcecode":"encoding == null"},"failures":[],"tindex":"34eb113d-2ea9-11e6-8e3d-0b4cbbec5431","method":{"position":"org.apache.commons.io.IOUtils:1525","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.String data, java.io.OutputStream output, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (data == null) {\n        {\n            if (data == null) {\n                {\n                    if (data != null) {\n                        output.write(data.getBytes(org.apache.commons.io.Charsets.toCharset(encoding)));\n                    } \n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NotFileFilter:41","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"34eb113e-2ea9-11e6-8e3d-e3d1c03c8976","method":{"position":"org.apache.commons.io.FileUtils:476","type":"CtMethodImpl","sourcecode":"private static void innerListFiles(java.util.Collection<java.io.File> files, java.io.File directory, org.apache.commons.io.filefilter.IOFileFilter filter, boolean includeSubDirectories) {\n    if (filter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.io.File[] java.io.File[] = directory.listFiles(((java.io.FileFilter)(filter)));\n            if (found != null) {\n                for (java.io.File java.io.File : found) {\n                    if (file.isDirectory()) {\n                        if (includeSubDirectories) {\n                            files.add(file);\n                        } \n                        org.apache.commons.io.FileUtils.innerListFiles(files, file, filter, includeSubDirectories);\n                    } else {\n                        files.add(file);\n                    }\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:173","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"34eb113f-2ea9-11e6-8e3d-3ddc21a4f631","method":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str) throws java.io.IOException {\n    if (str != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.Writer.write(str);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:790","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"34eb3850-2ea9-11e6-8e3d-c97300ef445e","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:757","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter filter) {\n    if (filter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filter == null) {\n                return org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.IOFileFilter;\n            } else {\n                return org.apache.commons.io.filefilter.FileFilterUtils.and(filter, org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.IOFileFilter);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.LockableFileWriter:186","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"34eb3851-2ea9-11e6-8e3d-51e232285b93","method":{"position":"org.apache.commons.io.filefilter.WildcardFilter:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file.isDirectory()) {\n        {\n            if (file.isDirectory()) {\n                return false;\n            } \n            for (java.lang.String java.lang.String : java.lang.String[]) {\n                if (org.apache.commons.io.FilenameUtils.wildcardMatch(file.getName(), wildcard)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NameFileFilter:69","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"34eb3852-2ea9-11e6-8e3d-4da76f46f123","method":{"position":"org.apache.commons.io.filefilter.WildcardFilter:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File dir, java.lang.String name) {\n    if (name == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((dir != null) && (new java.io.File(dir , name).isDirectory())) {\n                return false;\n            } \n            for (java.lang.String java.lang.String : java.lang.String[]) {\n                if (org.apache.commons.io.FilenameUtils.wildcardMatch(name, wildcard)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"34eb3853-2ea9-11e6-8e3d-79e67570ddbd","method":{"position":"org.apache.commons.io.IOUtils:967","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> readLines(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (null != input) {\n                {\n                    if (null != input) {\n                        {\n                            if (null != input) {\n                                throw new java.io.IOException();\n                            } else {\n                                {\n                                    return org.apache.commons.io.IOUtils.readLines(input, java.nio.charset.Charset.defaultCharset());\n                                }\n                            }\n                        }\n                    } else {\n                        throw new java.io.IOException();\n                    }\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"commons-io","transformationCount":100,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}