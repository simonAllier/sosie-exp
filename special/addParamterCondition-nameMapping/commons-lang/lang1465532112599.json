{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":7,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfShorts":207,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":164,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":73,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":115,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayDouble":199,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectComparator":250,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":276,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodPrivateInterface":222,"org.apache.commons.lang3.tuple.TripleTest.testComparable2":259,"org.apache.commons.lang3.tuple.TripleTest.testComparable1":258,"org.apache.commons.lang3.tuple.TripleTest.testComparable4":261,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":165,"org.apache.commons.lang3.tuple.TripleTest.testComparable3":260,"org.apache.commons.lang3.ClassUtilsTest.testWrappersToPrimitivesNull":314,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":294,"org.apache.commons.lang3.ValidateTest.testIsTrue5":3,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":8,"org.apache.commons.lang3.StringUtilsTest.testReplacePattern":134,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":157,"org.apache.commons.lang3.CharRangeTest.testContainsNullArg":301,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":323,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":50,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithCalendar":92,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":9,"org.apache.commons.lang3.builder.CompareToBuilderTest.testByteArrayHiddenByObject":233,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":172,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArray":315,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiShortArray":255,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":280,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":239,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":275,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByteArrayAsObject":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":45,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder":5,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":223,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":162,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayRemoveNone":283,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":319,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":277,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":161,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiLongArray":248,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayRemoveNone":140,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":137,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringInt":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":78,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":216,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":62,"org.apache.commons.lang3.tuple.PairTest.testComparable2":257,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":204,"org.apache.commons.lang3.tuple.PairTest.testComparable1":256,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMixedArray":243,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":66,"org.apache.commons.lang3.BooleanUtilsTest.test_isFalse_Boolean":264,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectBuild":229,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":46,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":308,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":56,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithCalendar":90,"org.apache.commons.lang3.math.FractionTest.testMultiply":290,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleWithStartIndexTolerance":291,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":183,"org.apache.commons.lang3.RandomUtilsTest.testNextBytes":317,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":214,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":189,"org.apache.commons.lang3.ArrayUtilsTest.testReverseCharRange":145,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayOutOfBoundsIndex":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":33,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":121,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayOutOfBoundsIndex":282,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":69,"org.apache.commons.lang3.math.NumberUtilsTest.testToByteString":132,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":195,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":235,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectEx2":241,"org.apache.commons.lang3.text.StrMatcherTest.testStringMatcher_String":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":44,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":210,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArray":228,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":83,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessiblePublicMethodFromDescription":227,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":152,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiFloatArray":242,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":213,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":48,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObject":252,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":22,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":169,"org.apache.commons.lang3.ClassUtilsTest.testHierarchyIncludingInterfaces":196,"org.apache.commons.lang3.ConversionTest.testHexToShort":302,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":17,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":271,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":41,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":305,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":296,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":30,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":181,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":85,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectComparatorNull":231,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":153,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":175,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiIntArray":244,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":279,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":107,"org.apache.commons.lang3.ArrayUtilsTest.testReverseByteRange":4,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":154,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":186,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringAfterLast_StringString":212,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":40,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":188,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":167,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":49,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":84,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":219,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":28,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":320,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":184,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":194,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":150,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":299,"org.apache.commons.lang3.math.FractionTest.testFactory_String_improper":126,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":36,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String":288,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":159,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":65,"org.apache.commons.lang3.ArrayUtilsTest.testReverseBooleanRange":143,"org.apache.commons.lang3.math.NumberUtilsTest.testToShortString":286,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":21,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterizeWithOwner":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":60,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":88,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayString":266,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":18,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":163,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":269,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":24,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithCalender":95,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":122,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":176,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":298,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":26,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":129,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfBytes":293,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":174,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArrayHiddenByObject":236,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayNegativeIndex":284,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringInt":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":38,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithCalendar":91,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":270,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntChar":120,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":273,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":100,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":27,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":155,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":185,"org.apache.commons.lang3.StringUtilsTest.testJoin_Objectarray":267,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer_nullValue":114,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Class":146,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_CharArray":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":61,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":309,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":173,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":12,"org.apache.commons.lang3.StringUtilsTest.testDefault_StringString":200,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":160,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":99,"org.apache.commons.lang3.StringUtilsTest.testJoin_Objects":268,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":304,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":112,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":202,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadFieldForceAccess":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":13,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteCharAt":193,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiByteArray":238,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArrayHiddenByObject":249,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":171,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":295,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":123,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArrayHiddenByObject":245,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":278,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":67,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":179,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArray":285,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":0,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_boolean":142,"org.apache.commons.lang3.builder.CompareToBuilderTest.testAppendSuper":254,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_String":116,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":64,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":306,"org.apache.commons.lang3.RandomUtilsTest.testZeroLengthNextBytes":316,"org.apache.commons.lang3.ArrayUtilsTest.testReverseChar":144,"org.apache.commons.lang3.builder.CompareToBuilderTest.testIntArrayHiddenByObject":246,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":75,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactStaticMethod":226,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfInts":148,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":297,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":230,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":303,"org.apache.commons.lang3.text.StrBuilderTest.testContains_String":147,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessiblePublicMethod":220,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":16,"org.apache.commons.lang3.builder.DiffTest.testGetType":182,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":208,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":318,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":274,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":63,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":198,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArrayHiddenByObject":240,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":52,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":300,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArray":141,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactMethod":224,"org.apache.commons.lang3.text.StrTokenizerTest.test5":105,"org.apache.commons.lang3.text.StrTokenizerTest.test4":104,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":53,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":201,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":54,"org.apache.commons.lang3.text.StrTokenizerTest.test6":106,"org.apache.commons.lang3.text.StrTokenizerTest.test1":103,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntChar":118,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":29,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_char":87,"org.apache.commons.lang3.builder.DiffTest.testToString":180,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":131,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":311,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayObject":265,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":324,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":89,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":203,"org.apache.commons.lang3.ObjectUtilsTest.testHashCode":206,"org.apache.commons.lang3.ClassUtilsTest.testWrapperToPrimitiveNull":313,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":247,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":221,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":307,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":215,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String":289,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiDoubleArray":253,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":15,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleTolerance":292,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":128,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":57,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithCalendar":96,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayNegativeIndex":138,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArrayHiddenByObject":237,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":166,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":272,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveShortArray":135,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotFalse_Boolean":263,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithCalendar":97,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":102,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":101,"org.apache.commons.lang3.ClassUtilsTest.testWrappersToPrimitives":312,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":14,"org.apache.commons.lang3.text.StrMatcherTest.testTrimMatcher":98,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":111,"org.apache.commons.lang3.ClassUtilsTest.test_convertClassesToClassNames_List":262,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":127,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_likeList":205,"org.apache.commons.lang3.ValidateTest.testExclusiveBetweenLong_withMessage":287,"org.apache.commons.lang3.builder.CompareToBuilderTest.testRaggedArray":234,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":32,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":232,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":187,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByteArray":1,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":109,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethod":217,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":110,"org.apache.commons.lang3.StringUtilsTest.testRemovePattern":133,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":108,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":321,"org.apache.commons.lang3.JavaVersionTest.testGetJavaVersion":281,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethodFromDescription":218,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":34,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":86,"org.apache.commons.lang3.ArrayUtilsTest.testCloneDouble":209,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithCalendar":93,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":151,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":310,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDoubleArrayHiddenByObject":251,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":20,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":197,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":11,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":81,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_short":322},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:848","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.lang3.math.Fraction) == false"},"failures":[],"tindex":"ed50095a-2ec1-11e6-acc6-cdf9424e1161","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.lang3.math.Fraction) == false) {\n        {\n            if (obj == (org.apache.commons.lang3.text.ExtendedMessageFormat.this)) {\n                return true;\n            } \n            if (obj == null) {\n                return false;\n            } \n            if (!(super.equals(obj))) {\n                return false;\n            } \n            if (org.apache.commons.lang3.ObjectUtils.notEqual(getClass(), obj.getClass())) {\n                return false;\n            } \n            final org.apache.commons.lang3.text.ExtendedMessageFormat org.apache.commons.lang3.text.ExtendedMessageFormat = ((org.apache.commons.lang3.text.ExtendedMessageFormat)(obj));\n            if (org.apache.commons.lang3.ObjectUtils.notEqual(java.lang.String, rhs.java.lang.String)) {\n                return false;\n            } \n            if (org.apache.commons.lang3.ObjectUtils.notEqual(java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>, rhs.java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>)) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2228","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[0],"tindex":"ed50ccab-2ec1-11e6-acc6-7fa7021d27b6","method":{"position":"org.apache.commons.lang3.ArrayUtils:3632","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final short[] array) {\n    if (array == null) {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1609","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[1,2],"tindex":"ed50f3bc-2ec1-11e6-acc6-9fcdac45705b","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:622","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final byte[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final byte byte : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:179","type":"CtBinaryOperatorImpl","sourcecode":"expression == false"},"failures":[3],"tindex":"ed50f3bd-2ec1-11e6-acc6-235ab8db1988","method":{"position":"org.apache.commons.lang3.Validate:129","type":"CtMethodImpl","sourcecode":"public static void isTrue(final boolean expression, final java.lang.String message, final double value) {\n    if (expression == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, java.lang.Double.valueOf(value)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expression":"expression"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:874","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[4],"tindex":"ed511ace-2ec1-11e6-acc6-6fbc22f69a84","method":{"position":"org.apache.commons.lang3.ArrayUtils:1608","type":"CtMethodImpl","sourcecode":"public static void reverse(final byte[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            byte byte;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"startIndexInclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:696","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[5],"tindex":"ed511acf-2ec1-11e6-acc6-d168c124dabe","method":{"position":"org.apache.commons.lang3.text.StrBuilder:672","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final org.apache.commons.lang3.text.StrBuilder str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return appendNull();\n            } \n            final int int = str.length();\n            if (strLen > 0) {\n                final int int = length();\n                ensureCapacity((len + strLen));\n                java.lang.System.arraycopy(str.char[], 0, char[], len, strLen);\n                int += strLen;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:324","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[6],"tindex":"ed5141e0-2ec1-11e6-acc6-efdf231c7462","method":{"position":"org.apache.commons.lang3.StringUtils:6309","type":"CtMethodImpl","sourcecode":"public static java.lang.String reverseDelimited(final java.lang.String str, final char separatorChar) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            final java.lang.String[] java.lang.String[] = org.apache.commons.lang3.StringUtils.split(str, separatorChar);\n            org.apache.commons.lang3.ArrayUtils.reverse(strs);\n            return org.apache.commons.lang3.StringUtils.join(strs, separatorChar);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:297","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[7,8,9,10,11,12,12,13,14,15,16,17,18,19,20,21,22,23,24,25,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"ed5168f1-2ec1-11e6-acc6-bd15c733db24","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:675","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int value) {\n    if (fieldName == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1492","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[87,88],"tindex":"ed519002-2ec1-11e6-acc6-0378638837f6","method":{"position":"org.apache.commons.lang3.ArrayUtils:3001","type":"CtMethodImpl","sourcecode":"public static java.lang.Character[] toObject(final char[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Character[];\n            } \n            final java.lang.Character[] java.lang.Character[] = new java.lang.Character[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Character.valueOf(array[i]);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:320","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[89],"tindex":"ed519003-2ec1-11e6-acc6-fd8a80465287","method":{"position":"org.apache.commons.lang3.StringUtils:5686","type":"CtMethodImpl","sourcecode":"public static java.lang.String capitalize(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int;\n            if ((str == null) || ((strLen = str.length()) == 0)) {\n                return str;\n            } \n            char char = str.charAt(0);\n            if (java.lang.Character.isTitleCase(firstChar)) {\n                return str;\n            } \n            return new java.lang.StringBuilder(strLen).append(java.lang.Character.toTitleCase(firstChar)).append(str.substring(1)).toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[90,91,92,93,94,95,96,97],"tindex":"ed51b714-2ec1-11e6-acc6-c98efc43de8f","method":{"position":"org.apache.commons.lang3.time.DateUtils:1479","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMilliseconds(final java.util.Calendar calendar, final int fragment) {\n    if (calendar == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2251","type":"CtBinaryOperatorImpl","sourcecode":"pos < 0"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"ed51b715-2ec1-11e6-acc6-4f6b8a9b7ebb","method":{"position":"org.apache.commons.lang3.text.StrMatcher:431","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n    if (pos < 0) {\n        {\n            return (buffer[pos]) <= 32 ? 1 : 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"pos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[113,114],"tindex":"ed51de26-2ec1-11e6-acc6-4f72539d3c40","method":{"position":"org.apache.commons.lang3.BooleanUtils:289","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final java.lang.Integer value, final java.lang.Integer trueValue, final java.lang.Integer falseValue) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                if (trueValue == null) {\n                    return true;\n                } \n                if (falseValue == null) {\n                    return false;\n                } \n            } else if (value.equals(trueValue)) {\n                return true;\n            } else if (value.equals(falseValue)) {\n                return false;\n            } \n            throw new java.lang.IllegalArgumentException(\"The Integer did not match either specified value\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:194","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[115],"tindex":"ed520537-2ec1-11e6-acc6-d7f44fefc576","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:133","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getInstance(final java.lang.String pattern, final java.util.TimeZone timeZone) {\n    if (pattern == null) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(pattern, timeZone, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5847","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(cs)"},"failures":[116,117,118,119,120],"tindex":"ed520538-2ec1-11e6-acc6-996ad1b350d8","method":{"position":"org.apache.commons.lang3.StringUtils:1805","type":"CtMethodImpl","sourcecode":"public static boolean containsOnly(final java.lang.CharSequence cs, final char... valid) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n        {\n            if ((valid == null) || (cs == null)) {\n                return false;\n            } \n            if ((cs.length()) == 0) {\n                return true;\n            } \n            if ((valid.int) == 0) {\n                return false;\n            } \n            return (org.apache.commons.lang3.StringUtils.indexOfAnyBut(cs, valid)) == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:423","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"ed522c49-2ec1-11e6-acc6-db9664ea4b60","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:618","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.util.Map<?, ?> map) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1491","type":"CtBinaryOperatorImpl","sourcecode":"(raw.getEnclosingClass()) == null"},"failures":[121,122,123,124,125],"tindex":"ed522c4a-2ec1-11e6-acc6-f70fef3e4526","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1487","type":"CtMethodImpl","sourcecode":"public static final java.lang.reflect.ParameterizedType parameterizeWithOwner(final java.lang.reflect.Type owner, final java.lang.Class<?> raw, final java.lang.reflect.Type... typeArguments) {\n    if ((raw.getEnclosingClass()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(raw, \"raw class is null\");\n            final java.lang.reflect.Type java.lang.reflect.Type;\n            if ((raw.getEnclosingClass()) == null) {\n                org.apache.commons.lang3.Validate.isTrue((owner == null), \"no owner allowed for top-level %s\", raw);\n                useOwner = null;\n            } else if (owner == null) {\n                useOwner = raw.getEnclosingClass();\n            } else {\n                org.apache.commons.lang3.Validate.isTrue(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(owner, raw.getEnclosingClass()), \"%s is invalid owner type for parameterized %s\", owner, raw);\n                useOwner = owner;\n            }\n            org.apache.commons.lang3.Validate.noNullElements(typeArguments, \"null type argument at index %s\");\n            org.apache.commons.lang3.Validate.isTrue(((raw.getTypeParameters().int) == (typeArguments.int)), \"invalid number of type parameters specified: expected %s, got %s\", raw.getTypeParameters().int, typeArguments.int);\n            return new org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl(raw , useOwner , typeArguments);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"raw":"raw"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3076","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[126,127,128],"tindex":"ed52535b-2ec1-11e6-acc6-854d60e616aa","method":{"position":"org.apache.commons.lang3.math.Fraction:319","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n            } \n            int int = str.indexOf('.');\n            if (pos >= 0) {\n                return org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Double.parseDouble(str));\n            } \n            pos = str.indexOf(' ');\n            if (pos > 0) {\n                final int int = java.lang.Integer.parseInt(str.substring(0, pos));\n                str = str.substring((pos + 1));\n                pos = str.indexOf('/');\n                if (pos < 0) {\n                    throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\");\n                } else {\n                    final int int = java.lang.Integer.parseInt(str.substring(0, pos));\n                    final int int = java.lang.Integer.parseInt(str.substring((pos + 1)));\n                    return org.apache.commons.lang3.math.Fraction.getFraction(whole, numer, denom);\n                }\n            } \n            pos = str.indexOf('/');\n            if (pos < 0) {\n                return org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Integer.parseInt(str), 1);\n            } else {\n                final int int = java.lang.Integer.parseInt(str.substring(0, pos));\n                final int int = java.lang.Integer.parseInt(str.substring((pos + 1)));\n                return org.apache.commons.lang3.math.Fraction.getFraction(numer, denom);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2034","type":"CtBinaryOperatorImpl","sourcecode":"sizeEndText == null"},"failures":[],"tindex":"ed527a6c-2ec1-11e6-acc6-6320ea01d7bc","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:492","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setSizeEndText(final java.lang.String sizeEndText) {\n    if (sizeEndText == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setSizeEndText(sizeEndText);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeEndText":"sizeEndText"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[129,130,131],"tindex":"ed527a6d-2ec1-11e6-acc6-5b5af45cb17b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:606","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.util.Collection<?> coll) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:514","type":"CtInvocationImpl","sourcecode":"clazz.isArray()"},"failures":[],"tindex":"ed52a17e-2ec1-11e6-acc6-83c5668e0a97","method":{"position":"org.apache.commons.lang3.builder.RecursiveToStringStyle:97","type":"CtMethodImpl","sourcecode":"protected boolean accept(final java.lang.Class<?> clazz) {\n    if (clazz.isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"clazz":"clazz"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:195","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[132],"tindex":"ed52a17f-2ec1-11e6-acc6-75108b3ece60","method":{"position":"org.apache.commons.lang3.math.NumberUtils:323","type":"CtMethodImpl","sourcecode":"public static byte toByte(final java.lang.String str, final byte defaultValue) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return defaultValue;\n            } \n            try {\n                return java.lang.Byte.parseByte(str);\n            } catch (final java.lang.NumberFormatException nfe) {\n                return defaultValue;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:282","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"ed52c890-2ec1-11e6-acc6-751a2526d268","method":{"position":"org.apache.commons.lang3.time.DateUtils:502","type":"CtMethodImpl","sourcecode":"public static java.util.Date addMilliseconds(final java.util.Date date, final int amount) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:391","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[133,134],"tindex":"ed52c891-2ec1-11e6-acc6-2984a6dc3f4a","method":{"position":"org.apache.commons.lang3.StringUtils:4441","type":"CtMethodImpl","sourcecode":"public static java.lang.String replacePattern(final java.lang.String source, final java.lang.String regex, final java.lang.String replacement) {\n    if (source == null) {\n        {\n            return java.util.regex.Pattern.compile(regex, java.util.regex.Pattern.java.util.regex.Pattern.int).matcher(source).replaceAll(replacement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3478","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[43,43],"tindex":"ed5364d2-2ec1-11e6-acc6-e9f9cb5a944b","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:289","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final boolean[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2228","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[135],"tindex":"ed5364d3-2ec1-11e6-acc6-c721d768fe3d","method":{"position":"org.apache.commons.lang3.ArrayUtils:5132","type":"CtMethodImpl","sourcecode":"public static short[] remove(final short[] array, final int index) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[136,137],"tindex":"ed5364d4-2ec1-11e6-acc6-e7a73ba0fadc","method":{"position":"org.apache.commons.lang3.LocaleUtils:90","type":"CtMethodImpl","sourcecode":"public static java.util.Locale toLocale(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (str.isEmpty()) {\n                return new java.util.Locale(\"\" , \"\");\n            } \n            if (str.contains(\"#\")) {\n                throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n            } \n            final int int = str.length();\n            if (len < 2) {\n                throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n            } \n            final char char = str.charAt(0);\n            if (ch0 == '_') {\n                if (len < 3) {\n                    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                } \n                final char char = str.charAt(1);\n                final char char = str.charAt(2);\n                if ((!(java.lang.Character.isUpperCase(ch1))) || (!(java.lang.Character.isUpperCase(ch2)))) {\n                    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                } \n                if (len == 3) {\n                    return new java.util.Locale(\"\" , str.substring(1, 3));\n                } \n                if (len < 5) {\n                    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                } \n                if ((str.charAt(3)) != '_') {\n                    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                } \n                return new java.util.Locale(\"\" , str.substring(1, 3) , str.substring(4));\n            } \n            java.lang.String[] java.lang.String[] = str.split(\"_\", (-1));\n            int int = (split.int) - 1;\n            switch (occurrences) {\n                case 0 :\n                    if ((org.apache.commons.lang3.StringUtils.isAllLowerCase(str)) && ((len == 2) || (len == 3))) {\n                        return new java.util.Locale(str);\n                    } else {\n                        throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                    }\n                case 1 :\n                    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && ((split[1].length()) == 2)) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))) {\n                        return new java.util.Locale(split[0] , split[1]);\n                    } else {\n                        throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                    }\n                case 2 :\n                    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && (((split[1].length()) == 0) || (((split[1].length()) == 2) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))))) && ((split[2].length()) > 0)) {\n                        return new java.util.Locale(split[0] , split[1] , split[2]);\n                    } \n                default :\n                    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1534","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[138,139,140,141],"tindex":"ed538be5-2ec1-11e6-acc6-9dd7d32dbb8c","method":{"position":"org.apache.commons.lang3.ArrayUtils:5769","type":"CtMethodImpl","sourcecode":"public static float[] removeAll(final float[] array, final int... indices) {\n    if (array == null) {\n        {\n            return ((float[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:940","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[142],"tindex":"ed53b2f6-2ec1-11e6-acc6-8fd77c1f9a7c","method":{"position":"org.apache.commons.lang3.ArrayUtils:3433","type":"CtMethodImpl","sourcecode":"public static boolean[] toPrimitive(final java.lang.Boolean[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.boolean[];\n            } \n            final boolean[] boolean[] = new boolean[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].booleanValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1574","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[143],"tindex":"ed53b2f7-2ec1-11e6-acc6-11f4eb9d0d8a","method":{"position":"org.apache.commons.lang3.ArrayUtils:1573","type":"CtMethodImpl","sourcecode":"public static void reverse(final boolean[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            boolean boolean;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:549","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"ed53b2f8-2ec1-11e6-acc6-b5d85bca532f","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:505","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final float[] lhs, final float[] rhs) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Float[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Float[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Float[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:297","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"ed53da09-2ec1-11e6-acc6-c7cfbf712666","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1297","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double[] array) {\n    if (fieldName == null) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1214","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[144,145],"tindex":"ed53da0a-2ec1-11e6-acc6-7936771aba30","method":{"position":"org.apache.commons.lang3.ArrayUtils:1643","type":"CtMethodImpl","sourcecode":"public static void reverse(final char[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            char char;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:430","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[146],"tindex":"ed54011b-2ec1-11e6-acc6-97ac1804383a","method":{"position":"org.apache.commons.lang3.ClassUtils:175","type":"CtMethodImpl","sourcecode":"public static java.lang.String getShortClassName(final java.lang.Class<?> cls) {\n    if (cls == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cls == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return org.apache.commons.lang3.ClassUtils.getShortClassName(cls.getName());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:91","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[147],"tindex":"ed54011c-2ec1-11e6-acc6-ad340d0f4a93","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2263","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.String str) {\n    if (str == null) {\n        {\n            return (indexOf(str, 0)) >= 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2228","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[60,60],"tindex":"ed54011d-2ec1-11e6-acc6-059c7fc558b5","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:513","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final short[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2025","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[148],"tindex":"ed54282e-2ec1-11e6-acc6-e571cd81b265","method":{"position":"org.apache.commons.lang3.StringUtils:3661","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final int[] array, final char separator, final int startIndex, final int endIndex) {\n    if (startIndex < 0) {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:107","type":"CtVariableReadImpl","sourcecode":"forceAccess"},"failures":[149],"tindex":"ed544f3f-2ec1-11e6-acc6-f9c7ce5294b2","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:380","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readField(final java.lang.reflect.Field field, final java.lang.Object target, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (forceAccess) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"The field must not be null\");\n            if (forceAccess && (!(field.isAccessible()))) {\n                field.setAccessible(true);\n            } else {\n                org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(field);\n            }\n            return field.get(target);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"forceAccess":"forceAccess"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:220","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[],"tindex":"ed544f40-2ec1-11e6-acc6-99f9a03bb1ad","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:566","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final byte lhs, final byte rhs) {\n    if (rhs != rhs) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            boolean = lhs == rhs;\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"rhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:423","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"ed547651-2ec1-11e6-acc6-c1ae2c111a66","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:630","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final char[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3852","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[150],"tindex":"ed547652-2ec1-11e6-acc6-b15b6ef230ed","method":{"position":"org.apache.commons.lang3.ArrayUtils:3849","type":"CtMethodImpl","sourcecode":"public static short[] addAll(final short[] array1, final short... array2) {\n    if (array1 == null) {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final short[] short[] = new short[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[151,152,153,154],"tindex":"ed549d63-2ec1-11e6-acc6-79f5996331d4","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        {\n            buffer.append(((char)((value / 10) + '0')));\n            buffer.append(((char)((value % 10) + '0')));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:625","type":"CtBinaryOperatorImpl","sourcecode":"toClass == null"},"failures":[155,156,157,158,159,160,161,88,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,121,122,183,184,185,186,187,188,189,190,191],"tindex":"ed549d64-2ec1-11e6-acc6-23380ec6433c","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:844","type":"CtMethodImpl","sourcecode":"private static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(final java.lang.reflect.ParameterizedType parameterizedType, final java.lang.Class<?> toClass, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> subtypeVarAssigns) {\n    if (toClass == null) {\n        {\n            final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.getRawType(parameterizedType);\n            if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, toClass))) {\n                return null;\n            } \n            final java.lang.reflect.Type java.lang.reflect.Type = parameterizedType.getOwnerType();\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n            if (ownerType instanceof java.lang.reflect.ParameterizedType) {\n                final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(ownerType));\n                typeVarAssigns = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(parameterizedOwnerType, org.apache.commons.lang3.reflect.TypeUtils.getRawType(parameterizedOwnerType), subtypeVarAssigns);\n            } else {\n                typeVarAssigns = subtypeVarAssigns == null ? new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>() : new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(subtypeVarAssigns);\n            }\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = parameterizedType.getActualTypeArguments();\n            final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = cls.getTypeParameters();\n            for (int int = 0 ; i < (typeParams.int) ; i++) {\n                final java.lang.reflect.Type java.lang.reflect.Type = typeArgs[i];\n                typeVarAssigns.put(typeParams[i], (typeVarAssigns.containsKey(typeArg) ? typeVarAssigns.get(typeArg) : typeArg));\n            }\n            if (toClass.equals(cls)) {\n                return typeVarAssigns;\n            } \n            return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(cls, toClass), toClass, typeVarAssigns);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"toClass"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5411","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[192],"tindex":"ed54c475-2ec1-11e6-acc6-932dfd8af99c","method":{"position":"org.apache.commons.lang3.text.StrMatcher:205","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrMatcher stringMatcher(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher;\n            } \n            return new org.apache.commons.lang3.text.StrMatcher.StringMatcher(str);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtBinaryOperatorImpl","sourcecode":"index != 0"},"failures":[193,194],"tindex":"ed54c476-2ec1-11e6-acc6-43ec93e25cd9","method":{"position":"org.apache.commons.lang3.text.StrBuilder:342","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder deleteCharAt(final int index) {\n    if (index != 0) {\n        {\n            if ((index < 0) || (index >= (int))) {\n                throw new java.lang.StringIndexOutOfBoundsException(index);\n            } \n            deleteImpl(index, (index + 1), 1);\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:73","type":"CtBinaryOperatorImpl","sourcecode":"timeZone == null"},"failures":[195],"tindex":"ed54c477-2ec1-11e6-acc6-77252e70e328","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:353","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(final int dateStyle, final int timeStyle, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (timeZone == null) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateTimeInstance(dateStyle, timeStyle, timeZone, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeZone":"timeZone"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1692","type":"CtBinaryOperatorImpl","sourcecode":"(c.getEnclosingClass()) == null"},"failures":[196,190],"tindex":"ed54eb88-2ec1-11e6-acc6-3559bebd22be","method":{"position":"org.apache.commons.lang3.ClassUtils:1222","type":"CtMethodImpl","sourcecode":"private void walkInterfaces(java.util.Set<java.lang.Class<?>> addTo, java.lang.Class<?> c) {\n    if ((c.getEnclosingClass()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (java.lang.Class<?> java.lang.Class<?> : c.getInterfaces()) {\n                if (!(seenInterfaces.contains(iface))) {\n                    addTo.add(iface);\n                } \n                walkInterfaces(addTo, iface);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:557","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[197],"tindex":"ed54eb89-2ec1-11e6-acc6-83205c90caf7","method":{"position":"org.apache.commons.lang3.text.WordUtils:504","type":"CtMethodImpl","sourcecode":"public static java.lang.String initials(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.WordUtils.initials(str, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:273","type":"CtInvocationImpl","sourcecode":"type.isAnnotation()"},"failures":[],"tindex":"ed55129a-2ec1-11e6-acc6-8513bda8cf4b","method":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:289","type":"CtMethodImpl","sourcecode":"private static boolean isAccessible(final java.lang.Class<?> type) {\n    if (type.isAnnotation()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Class<?> java.lang.Class<?> = type;\n            while (cls != null) {\n                if (!(java.lang.reflect.Modifier.isPublic(cls.getModifiers()))) {\n                    return false;\n                } \n                cls = cls.getEnclosingClass();\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:378","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"ed55129b-2ec1-11e6-acc6-b9f7efaee813","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:685","type":"CtMethodImpl","sourcecode":"private int readNextToken(final char[] srcChars, int start, final int len, final org.apache.commons.lang3.text.StrBuilder workArea, final java.util.List<java.lang.String> tokenList) {\n    if (len == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (start < len) {\n                final int int = java.lang.Math.max(getIgnoredMatcher().isMatch(srcChars, start, start, len), getTrimmerMatcher().isMatch(srcChars, start, start, len));\n                if (((removeLen == 0) || ((getDelimiterMatcher().isMatch(srcChars, start, start, len)) > 0)) || ((getQuoteMatcher().isMatch(srcChars, start, start, len)) > 0)) {\n                    break;\n                } \n                start += removeLen;\n            }\n            if (start >= len) {\n                addToken(tokenList, \"\");\n                return -1;\n            } \n            final int int = getDelimiterMatcher().isMatch(srcChars, start, start, len);\n            if (delimLen > 0) {\n                addToken(tokenList, \"\");\n                return start + delimLen;\n            } \n            final int int = getQuoteMatcher().isMatch(srcChars, start, start, len);\n            if (quoteLen > 0) {\n                return readWithQuotes(srcChars, (start + quoteLen), len, workArea, tokenList, start, quoteLen);\n            } \n            return readWithQuotes(srcChars, start, len, workArea, tokenList, 0, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"len"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:829","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[198],"tindex":"ed5539ac-2ec1-11e6-acc6-f10047ef661f","method":{"position":"org.apache.commons.lang3.time.DateUtils:909","type":"CtMethodImpl","sourcecode":"public static java.util.Calendar ceiling(final java.util.Calendar date, final int field) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = ((java.util.Calendar)(date.clone()));\n            org.apache.commons.lang3.time.DateUtils.modify(ceiled, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return ceiled;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"ed5539ad-2ec1-11e6-acc6-edefbf13fbed","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:900","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendTo(buffer, calendar.get(int));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"ed5539ae-2ec1-11e6-acc6-2d6e655e216d","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1081","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        {\n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2591","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[199],"tindex":"ed5560bf-2ec1-11e6-acc6-f19527cdb898","method":{"position":"org.apache.commons.lang3.ArrayUtils:1114","type":"CtMethodImpl","sourcecode":"public static double[] subarray(final double[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.double[];\n            } \n            final double[] double[] = new double[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2207","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[200],"tindex":"ed5560c0-2ec1-11e6-acc6-ef3a63852095","method":{"position":"org.apache.commons.lang3.StringUtils:6219","type":"CtMethodImpl","sourcecode":"public static java.lang.String defaultString(final java.lang.String str, final java.lang.String defaultStr) {\n    if (str == null) {\n        {\n            return str == null ? defaultStr : str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6284","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[201],"tindex":"ed5587d1-2ec1-11e6-acc6-1b267957eb3b","method":{"position":"org.apache.commons.lang3.StringUtils:5811","type":"CtMethodImpl","sourcecode":"public static int countMatches(final java.lang.CharSequence str, final java.lang.CharSequence sub) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(sub))) {\n                return 0;\n            } \n            int int = 0;\n            int int = 0;\n            while ((idx = org.apache.commons.lang3.CharSequenceUtils.indexOf(str, sub, idx)) != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                count++;\n                idx += sub.length();\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7389","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(string)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchStrings))"},"failures":[202],"tindex":"ed5587d2-2ec1-11e6-acc6-69ee33057dc2","method":{"position":"org.apache.commons.lang3.StringUtils:7231","type":"CtMethodImpl","sourcecode":"public static boolean startsWithAny(final java.lang.CharSequence string, final java.lang.CharSequence... searchStrings) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(string)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchStrings))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(string)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchStrings))) {\n                return false;\n            } \n            for (final java.lang.CharSequence java.lang.CharSequence : searchStrings) {\n                if (org.apache.commons.lang3.StringUtils.startsWith(string, searchString)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"string":"string","searchStrings":"searchStrings"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:173","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.mutable.MutableBoolean"},"failures":[203],"tindex":"ed5587d3-2ec1-11e6-acc6-6babf34817a6","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:400","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.lang.Object obj, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) {\n    if (obj instanceof org.apache.commons.lang3.mutable.MutableBoolean) {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(obj, toAppendTo, pos);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1214","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[144],"tindex":"ed55aee4-2ec1-11e6-acc6-bf0fc58277a0","method":{"position":"org.apache.commons.lang3.ArrayUtils:1491","type":"CtMethodImpl","sourcecode":"public static void reverse(final char[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:212","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.lang3.CharRange) == false"},"failures":[204,205,206],"tindex":"ed55aee5-2ec1-11e6-acc6-ef3a77c773cf","method":{"position":"org.apache.commons.lang3.ObjectUtils:205","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static int hashCode(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.lang3.CharRange) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return obj == null ? 0 : obj.hashCode();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:418","type":"CtBinaryOperatorImpl","sourcecode":"startIndex > endIndex"},"failures":[207],"tindex":"ed55aee6-2ec1-11e6-acc6-d7efa5da0698","method":{"position":"org.apache.commons.lang3.StringUtils:3759","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final short[] array, final char separator, final int startIndex, final int endIndex) {\n    if (endIndex > startIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"endIndex","endIndex":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3528","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[208,209,210],"tindex":"ed55d5f7-2ec1-11e6-acc6-496b2e059fe6","method":{"position":"org.apache.commons.lang3.ArrayUtils:418","type":"CtMethodImpl","sourcecode":"public static double[] clone(final double[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:656","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[211,120],"tindex":"ed55d5f8-2ec1-11e6-acc6-1dfe8adb1330","method":{"position":"org.apache.commons.lang3.StringUtils:5261","type":"CtMethodImpl","sourcecode":"public static java.lang.String rightPad(final java.lang.String str, final int size, final char padChar) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            final int int = size - (str.length());\n            if (pads <= 0) {\n                return str;\n            } \n            if (pads > (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return org.apache.commons.lang3.StringUtils.rightPad(str, size, java.lang.String.valueOf(padChar));\n            } \n            return str.concat(org.apache.commons.lang3.StringUtils.repeat(padChar, pads));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:585","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[212],"tindex":"ed55d5f9-2ec1-11e6-acc6-2b5b966c81fe","method":{"position":"org.apache.commons.lang3.StringUtils:2412","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringAfterLast(final java.lang.String str, final java.lang.String separator) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            if (org.apache.commons.lang3.StringUtils.isEmpty(separator)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.lastIndexOf(separator);\n            if ((pos == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) || (pos == ((str.length()) - (separator.length())))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return str.substring((pos + (separator.length())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:355","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(method))"},"failures":[213,214,215,216,217,218,190,219,220,221,222,223,191,224,225,226,227],"tindex":"ed55fd0a-2ec1-11e6-acc6-6bda503c4dd1","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:354","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Method getAccessibleMethod(java.lang.reflect.Method method) {\n    if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(method))) {\n        {\n            if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(method))) {\n                return null;\n            } \n            final java.lang.Class<?> java.lang.Class<?> = method.getDeclaringClass();\n            if (java.lang.reflect.Modifier.isPublic(cls.getModifiers())) {\n                return method;\n            } \n            final java.lang.String java.lang.String = method.getName();\n            final java.lang.Class<?>[] java.lang.Class<?>[] = method.getParameterTypes();\n            method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(cls, methodName, parameterTypes);\n            if (method == null) {\n                method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(cls, methodName, parameterTypes);\n            } \n            return method;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"method"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:478","type":"CtBinaryOperatorImpl","sourcecode":"lhs instanceof char[]"},"failures":[228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261],"tindex":"ed55fd0b-2ec1-11e6-acc6-eb8a1c6efd70","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:398","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final java.lang.Object lhs, final java.lang.Object rhs, final java.util.Comparator<?> comparator) {\n    if (rhs instanceof char[]) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs.getClass().isArray()) {\n                if (lhs instanceof long[]) {\n                    append(((long[])(lhs)), ((long[])(rhs)));\n                } else if (lhs instanceof int[]) {\n                    append(((int[])(lhs)), ((int[])(rhs)));\n                } else if (lhs instanceof short[]) {\n                    append(((short[])(lhs)), ((short[])(rhs)));\n                } else if (lhs instanceof char[]) {\n                    append(((char[])(lhs)), ((char[])(rhs)));\n                } else if (lhs instanceof byte[]) {\n                    append(((byte[])(lhs)), ((byte[])(rhs)));\n                } else if (lhs instanceof double[]) {\n                    append(((double[])(lhs)), ((double[])(rhs)));\n                } else if (lhs instanceof float[]) {\n                    append(((float[])(lhs)), ((float[])(rhs)));\n                } else if (lhs instanceof boolean[]) {\n                    append(((boolean[])(lhs)), ((boolean[])(rhs)));\n                } else {\n                    append(((java.lang.Object[])(lhs)), ((java.lang.Object[])(rhs)), comparator);\n                }\n            } else {\n                if (comparator == null) {\n                    @java.lang.SuppressWarnings(value = \"unchecked\")\n                    final java.lang.Comparable<java.lang.Object> java.lang.Comparable<java.lang.Object> = ((java.lang.Comparable<java.lang.Object>)(lhs));\n                    int = comparable.compareTo(rhs);\n                } else {\n                    @java.lang.SuppressWarnings(value = \"unchecked\")\n                    final java.util.Comparator<java.lang.Object> java.util.Comparator<java.lang.Object> = ((java.util.Comparator<java.lang.Object>)(comparator));\n                    int = comparator2.compare(lhs, rhs);\n                }\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:425","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[262],"tindex":"ed56241c-2ec1-11e6-acc6-39497609ddff","method":{"position":"org.apache.commons.lang3.ClassUtils:424","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> convertClassesToClassNames(final java.util.List<java.lang.Class<?>> classes) {\n    if (classes == null) {\n        {\n            if (classes == null) {\n                return null;\n            } \n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>(classes.size());\n            for (final java.lang.Class<?> java.lang.Class<?> : classes) {\n                if (cls == null) {\n                    classNames.add(null);\n                } else {\n                    classNames.add(cls.getName());\n                }\n            }\n            return classNames;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"classes"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:812","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[263,264],"tindex":"ed564b2d-2ec1-11e6-acc6-219d7a1691a9","method":{"position":"org.apache.commons.lang3.BooleanUtils:122","type":"CtMethodImpl","sourcecode":"public static boolean isFalse(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            if (bool == null) {\n                {\n                    return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(bool);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3562","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[265,266,267,268],"tindex":"ed564b2e-2ec1-11e6-acc6-091505160664","method":{"position":"org.apache.commons.lang3.StringUtils:3990","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Object[] array, java.lang.String separator, final int startIndex, final int endIndex) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (separator == null) {\n                separator = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                if ((array[i]) != null) {\n                    buf.append(array[i]);\n                } \n            }\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:458","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[],"tindex":"ed564b2f-2ec1-11e6-acc6-9975e400e2d7","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:305","type":"CtMethodImpl","sourcecode":"private static void reflectionAppend(final java.lang.Object lhs, final java.lang.Object rhs, final java.lang.Class<?> clazz, final org.apache.commons.lang3.builder.CompareToBuilder builder, final boolean useTransients, final java.lang.String[] excludeFields) {\n    if ((lhs == null) || (rhs == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.reflect.Field[] java.lang.reflect.Field[] = clazz.getDeclaredFields();\n            java.lang.reflect.AccessibleObject.setAccessible(fields, true);\n            for (int int = 0 ; (i < (fields.int)) && ((builder.int) == 0) ; i++) {\n                final java.lang.reflect.Field java.lang.reflect.Field = fields[i];\n                if ((((!(org.apache.commons.lang3.ArrayUtils.contains(excludeFields, f.getName()))) && ((f.getName().indexOf('$')) == (-1))) && (useTransients || (!(java.lang.reflect.Modifier.isTransient(f.getModifiers()))))) && (!(java.lang.reflect.Modifier.isStatic(f.getModifiers())))) {\n                    try {\n                        builder.append(f.get(lhs), f.get(rhs));\n                    } catch (final java.lang.IllegalAccessException e) {\n                        throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n                    }\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"rhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:264","type":"CtBinaryOperatorImpl","sourcecode":"(ch >= 56320) && (ch <= 57343)"},"failures":[],"tindex":"ed567240-2ec1-11e6-acc6-dbb2b6aaab4f","method":{"position":"org.apache.commons.lang3.text.StrBuilder:795","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.text.StrBuilder append(final char ch) {\n    if ((ch >= 56320) && (ch <= 57343)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = length();\n            ensureCapacity((len + 1));\n            char[][((int)++)] = ch;\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:666","type":"CtBinaryOperatorImpl","sourcecode":"clazz != null"},"failures":[269,10,10,11,12,12,13,14,15,15,16,17,18,19,19,20,20,21,22,23,24,25,26,27,27,28,28,29,30,31,32,32,33,34,35,36,36,37,38,38,39,40,40,41,41,42,42,43,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,53,54,55,55,56,56,57,57,58,59,59,60,61,62,62,63,63,64,64,65,66,66,67,68,68,69,70,71,72,72,73,74,74,75,76,77,77,78,78,79,80,80,81,81,82,83,83,270,271,272,273,274,275,276,277,278,279,280],"tindex":"ed567241-2ec1-11e6-acc6-f70a825b5c60","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:513","type":"CtMethodImpl","sourcecode":"protected void appendFieldsIn(final java.lang.Class<?> clazz) {\n    if (clazz != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (clazz.isArray()) {\n                org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.reflectionAppendArray(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getObject());\n                return ;\n            } \n            final java.lang.reflect.Field[] java.lang.reflect.Field[] = clazz.getDeclaredFields();\n            java.lang.reflect.AccessibleObject.setAccessible(fields, true);\n            for (final java.lang.reflect.Field java.lang.reflect.Field : fields) {\n                final java.lang.String java.lang.String = field.getName();\n                if (org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.accept(field)) {\n                    try {\n                        final java.lang.Object java.lang.Object = org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getValue(field);\n                        org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.append(fieldName, fieldValue);\n                    } catch (final java.lang.IllegalAccessException ex) {\n                        throw new java.lang.InternalError((\"Unexpected IllegalAccessException: \" + (ex.getMessage())));\n                    }\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"clazz":"clazz"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:797","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[189],"tindex":"ed569952-2ec1-11e6-acc6-2dfbf9141c1d","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:783","type":"CtMethodImpl","sourcecode":"public static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(final java.lang.reflect.Type type, final java.lang.Class<?> toClass) {\n    if (type instanceof java.lang.Class<?>) {\n        {\n            return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(type, toClass, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:138","type":"CtInvocationImpl","sourcecode":"\"1.3\".equals(nom)"},"failures":[281],"tindex":"ed569953-2ec1-11e6-acc6-bd6ff040fa20","method":{"position":"org.apache.commons.lang3.JavaVersion:131","type":"CtMethodImpl","sourcecode":"static org.apache.commons.lang3.JavaVersion get(final java.lang.String nom) {\n    if (\"1.3\".equals(nom)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (\"0.9\".equals(nom)) {\n                return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n            } else if (\"1.1\".equals(nom)) {\n                return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n            } else if (\"1.2\".equals(nom)) {\n                return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n            } else if (\"1.3\".equals(nom)) {\n                return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n            } else if (\"1.4\".equals(nom)) {\n                return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n            } else if (\"1.5\".equals(nom)) {\n                return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n            } else if (\"1.6\".equals(nom)) {\n                return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n            } else if (\"1.7\".equals(nom)) {\n                return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n            } else if (\"1.8\".equals(nom)) {\n                return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n            } else {\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"nom"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:525","type":"CtBinaryOperatorImpl","sourcecode":"(coll == null) || (coll.isEmpty())"},"failures":[],"tindex":"ed56c064-2ec1-11e6-acc6-dd3774c03351","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:524","type":"CtMethodImpl","sourcecode":"private boolean containsElements(final java.util.Collection<?> coll) {\n    if ((coll == null) || (coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll == null) || (coll.isEmpty())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : coll) {\n                if (name != null) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3162","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[27,27,28,28,29,30,31,32,32,33,34,35,36,36,37,38,39,40,40,41,41,42,43,44,45,45,46,46,47,47,48,49,50,50,51,51,52,53,54,55,55,56,57,57,58,59,60,61,62,63,63,64,64,65,66,66,67,68,68,69,70,71,72,72,73,74,75,76,77,77,78,78,79,80,81,82,83,83],"tindex":"ed56e775-2ec1-11e6-acc6-79b73762b4fe","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:609","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ReflectionToStringBuilder reflectionAppendArray(final java.lang.Object array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getStyle().reflectionAppendArrayDetail(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getStringBuffer(), null, array);\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3613","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[282,283,284,285],"tindex":"ed570e86-2ec1-11e6-acc6-bd163115c448","method":{"position":"org.apache.commons.lang3.ArrayUtils:5680","type":"CtMethodImpl","sourcecode":"public static long[] removeAll(final long[] array, final int... indices) {\n    if (array == null) {\n        {\n            return ((long[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6393","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[89],"tindex":"ed570e87-2ec1-11e6-acc6-ff97e74c2608","method":{"position":"org.apache.commons.lang3.StringUtils:5610","type":"CtMethodImpl","sourcecode":"public static java.lang.String upperCase(final java.lang.String str, final java.util.Locale locale) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            return str.toUpperCase(locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3225","type":"CtInvocationImpl","sourcecode":"str.isEmpty()"},"failures":[286],"tindex":"ed570e88-2ec1-11e6-acc6-f9f19910efe1","method":{"position":"org.apache.commons.lang3.math.NumberUtils:372","type":"CtMethodImpl","sourcecode":"public static short toShort(final java.lang.String str, final short defaultValue) {\n    if (str.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return defaultValue;\n            } \n            try {\n                return java.lang.Short.parseShort(str);\n            } catch (final java.lang.NumberFormatException nfe) {\n                return defaultValue;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:945","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[287],"tindex":"ed570e89-2ec1-11e6-acc6-b9ece98b69ae","method":{"position":"org.apache.commons.lang3.Validate:1104","type":"CtMethodImpl","sourcecode":"public static void exclusiveBetween(long start, long end, long value, java.lang.String message) {\n    if ((start < value) || (value > start)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"value","end":"start","value":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:732","type":"CtInvocationImpl","sourcecode":"str.startsWith(\"-\")"},"failures":[288,289],"tindex":"ed57359a-2ec1-11e6-acc6-4d460db47313","method":{"position":"org.apache.commons.lang3.BooleanUtils:547","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean toBooleanObject(final java.lang.String str) {\n    if (str.startsWith(\"-\")) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == \"true\") {\n                return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } \n            if (str == null) {\n                return null;\n            } \n            switch (str.length()) {\n                case 1 :\n                    {\n                        final char char = str.charAt(0);\n                        if ((((ch0 == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T')) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        if ((((ch0 == 'n') || (ch0 == 'N')) || (ch0 == 'f')) || (ch0 == 'F')) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                case 2 :\n                    {\n                        final char char = str.charAt(0);\n                        final char char = str.charAt(1);\n                        if (((ch0 == 'o') || (ch0 == 'O')) && ((ch1 == 'n') || (ch1 == 'N'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        if (((ch0 == 'n') || (ch0 == 'N')) && ((ch1 == 'o') || (ch1 == 'O'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                case 3 :\n                    {\n                        final char char = str.charAt(0);\n                        final char char = str.charAt(1);\n                        final char char = str.charAt(2);\n                        if ((((ch0 == 'y') || (ch0 == 'Y')) && ((ch1 == 'e') || (ch1 == 'E'))) && ((ch2 == 's') || (ch2 == 'S'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        if ((((ch0 == 'o') || (ch0 == 'O')) && ((ch1 == 'f') || (ch1 == 'F'))) && ((ch2 == 'f') || (ch2 == 'F'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                case 4 :\n                    {\n                        final char char = str.charAt(0);\n                        final char char = str.charAt(1);\n                        final char char = str.charAt(2);\n                        final char char = str.charAt(3);\n                        if (((((ch0 == 't') || (ch0 == 'T')) && ((ch1 == 'r') || (ch1 == 'R'))) && ((ch2 == 'u') || (ch2 == 'U'))) && ((ch3 == 'e') || (ch3 == 'E'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                case 5 :\n                    {\n                        final char char = str.charAt(0);\n                        final char char = str.charAt(1);\n                        final char char = str.charAt(2);\n                        final char char = str.charAt(3);\n                        final char char = str.charAt(4);\n                        if ((((((ch0 == 'f') || (ch0 == 'F')) && ((ch1 == 'a') || (ch1 == 'A'))) && ((ch2 == 'l') || (ch2 == 'L'))) && ((ch3 == 's') || (ch3 == 'S'))) && ((ch4 == 'e') || (ch4 == 'E'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                default :\n                    break;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:741","type":"CtBinaryOperatorImpl","sourcecode":"fraction == null"},"failures":[290],"tindex":"ed575cab-2ec1-11e6-acc6-6bbc665d2647","method":{"position":"org.apache.commons.lang3.math.Fraction:796","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.math.Fraction multiplyBy(final org.apache.commons.lang3.math.Fraction fraction) {\n    if (fraction == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fraction == null) {\n                throw new java.lang.IllegalArgumentException(\"The fraction must not be null\");\n            } \n            if (((int) == 0) || ((fraction.int) == 0)) {\n                return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n            } \n            final int int = org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, fraction.int);\n            final int int = org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(fraction.int, int);\n            return org.apache.commons.lang3.math.Fraction.getReducedFraction(org.apache.commons.lang3.math.Fraction.mulAndCheck(((int) / d1), ((fraction.int) / d2)), org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((int) / d2), ((fraction.int) / d1)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fraction":"fraction"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[291,292],"tindex":"ed5783bc-2ec1-11e6-acc6-8fdaf00439fd","method":{"position":"org.apache.commons.lang3.ArrayUtils:2686","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final double[] array, final double valueToFind, int startIndex, final double tolerance) {\n    if (array == null) {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            final double double = valueToFind - tolerance;\n            final double double = valueToFind + tolerance;\n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (((array[i]) >= min) && ((array[i]) <= max)) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2439","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[293],"tindex":"ed5783bd-2ec1-11e6-acc6-0b1ed85cce42","method":{"position":"org.apache.commons.lang3.StringUtils:3431","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final byte[] array, final char separator) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1102","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[294,295,296,297,35,35,36,298,299,300],"tindex":"ed57aace-2ec1-11e6-acc6-238d303fcfce","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:647","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final long value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:427","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[],"tindex":"ed57aacf-2ec1-11e6-acc6-17595d8a10c9","method":{"position":"org.apache.commons.lang3.BooleanUtils:122","type":"CtMethodImpl","sourcecode":"public static boolean isFalse(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            if (bool == null) {\n                {\n                    return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(bool);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:183","type":"CtBinaryOperatorImpl","sourcecode":"range == null"},"failures":[301],"tindex":"ed57aad0-2ec1-11e6-acc6-ed783e8bd79b","method":{"position":"org.apache.commons.lang3.CharRange:182","type":"CtMethodImpl","sourcecode":"public boolean contains(final org.apache.commons.lang3.CharRange range) {\n    if (range == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (range == null) {\n                throw new java.lang.IllegalArgumentException(\"The Range must not be null\");\n            } \n            if (boolean) {\n                if (range.boolean) {\n                    return ((char) >= (range.char)) && ((char) <= (range.char));\n                } \n                return ((range.char) < (char)) || ((range.char) > (char));\n            } \n            if (range.boolean) {\n                return ((char) == 0) && ((char) == (java.lang.Character.java.lang.Character.char));\n            } \n            return ((char) <= (range.char)) && ((char) >= (range.char));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"range":"range"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1010","type":"CtBinaryOperatorImpl","sourcecode":"(((nHex - 1) * 4) + dstPos) >= 8"},"failures":[302],"tindex":"ed57d1e1-2ec1-11e6-acc6-b51760d74f9a","method":{"position":"org.apache.commons.lang3.Conversion:972","type":"CtMethodImpl","sourcecode":"public static short hexToShort(final java.lang.String src, final int srcPos, final short dstInit, final int dstPos, final int nHex) {\n    if ((((nHex - 1) * 4) + nHex) >= 8) {\n        {\n            if (0 == nHex) {\n                return dstInit;\n            } \n            if ((((nHex - 1) * 4) + dstPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 16\");\n            } \n            short short = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nHex ; i++) {\n                shift = (i * 4) + dstPos;\n                final int int = (15 & (org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))) << shift;\n                final int int = 15 << shift;\n                out = ((short)((out & (~mask)) | bits));\n            }\n            return out;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"nHex","nHex":"nHex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1492","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[0],"tindex":"ed57d1e2-2ec1-11e6-acc6-d3f11d38dff7","method":{"position":"org.apache.commons.lang3.ArrayUtils:3643","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final char[] array) {\n    if (array == null) {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[303,304,305,306,307,308,309,310,311],"tindex":"ed57d1e3-2ec1-11e6-acc6-f72146673e60","method":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:53","type":"CtMethodImpl","sourcecode":"public final java.lang.String translate(final java.lang.CharSequence input) {\n    if (input != null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.io.StringWriter java.io.StringWriter = new java.io.StringWriter(((input.length()) * 2));\n                translate(input, writer);\n                return writer.toString();\n            } catch (final java.io.IOException ioe) {\n                throw new java.lang.RuntimeException(ioe);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:430","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[312,313,314],"tindex":"ed57f8f4-2ec1-11e6-acc6-41653902f1bf","method":{"position":"org.apache.commons.lang3.ClassUtils:759","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> wrapperToPrimitive(final java.lang.Class<?> cls) {\n    if (cls == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(cls);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3094","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[315],"tindex":"ed57f8f5-2ec1-11e6-acc6-f5faf7491b7f","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:859","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final java.lang.Object[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final java.lang.Object java.lang.Object : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1272","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.ParameterizedType"},"failures":[189],"tindex":"ed57f8f6-2ec1-11e6-acc6-1b5a8625f473","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1266","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getRawType(final java.lang.reflect.Type type, final java.lang.reflect.Type assigningType) {\n    if (assigningType instanceof java.lang.reflect.ParameterizedType) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type instanceof java.lang.Class<?>) {\n                return ((java.lang.Class<?>)(type));\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(type)));\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                if (assigningType == null) {\n                    return null;\n                } \n                final java.lang.Object java.lang.Object = ((java.lang.reflect.TypeVariable<?>)(type)).getGenericDeclaration();\n                if (!(genericDeclaration instanceof java.lang.Class<?>)) {\n                    return null;\n                } \n                final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(assigningType, ((java.lang.Class<?>)(genericDeclaration)));\n                if (typeVarAssigns == null) {\n                    return null;\n                } \n                final java.lang.reflect.Type java.lang.reflect.Type = typeVarAssigns.get(type);\n                if (typeArgument == null) {\n                    return null;\n                } \n                return org.apache.commons.lang3.reflect.TypeUtils.getRawType(typeArgument, assigningType);\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType(), assigningType);\n                return java.lang.reflect.Array.newInstance(rawComponentType, 0).getClass();\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                return null;\n            } \n            throw new java.lang.IllegalArgumentException((\"unknown type: \" + type));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"assigningType"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:227","type":"CtBinaryOperatorImpl","sourcecode":"count < 0"},"failures":[316,317],"tindex":"ed582007-2ec1-11e6-acc6-b70d0785a867","method":{"position":"org.apache.commons.lang3.RandomUtils:62","type":"CtMethodImpl","sourcecode":"public static byte[] nextBytes(int count) {\n    if (count < 0) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((count >= 0), \"Count cannot be negative.\");\n            byte[] byte[] = new byte[count];\n            org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextBytes(result);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:253","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[99,318,319,107],"tindex":"ed582008-2ec1-11e6-acc6-d70b6f586766","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:164","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrTokenizer getCSVInstance(final java.lang.String input) {\n    if (input != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.text.StrTokenizer org.apache.commons.lang3.text.StrTokenizer = org.apache.commons.lang3.text.StrTokenizer.getCSVClone();\n            tok.reset(input);\n            return tok;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3225","type":"CtInvocationImpl","sourcecode":"str.isEmpty()"},"failures":[320,321],"tindex":"ed582009-2ec1-11e6-acc6-e17f10e86358","method":{"position":"org.apache.commons.lang3.CharSetUtils:107","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.lang.String str, final java.lang.String... set) {\n    if (str.isEmpty()) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return false;\n            } \n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            for (final char char : str.toCharArray()) {\n                if (chars.contains(c)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3760","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[322,174],"tindex":"ed58471a-2ec1-11e6-acc6-99bdfe87d008","method":{"position":"org.apache.commons.lang3.ArrayUtils:3205","type":"CtMethodImpl","sourcecode":"public static java.lang.Short[] toObject(final short[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Short[];\n            } \n            final java.lang.Short[] java.lang.Short[] = new java.lang.Short[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Short.valueOf(array[i]);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6689","type":"CtBinaryOperatorImpl","sourcecode":"(strs[0]) == null"},"failures":[323],"tindex":"ed58471b-2ec1-11e6-acc6-5f8770e19ee3","method":{"position":"org.apache.commons.lang3.StringUtils:702","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] stripAll(final java.lang.String... strs) {\n    if ((strs[0]) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.stripAll(strs, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strs":"strs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:198","type":"CtBinaryOperatorImpl","sourcecode":"(locale.getVariant().length()) > 0"},"failures":[],"tindex":"ed58471c-2ec1-11e6-acc6-47ec2a922f9a","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:320","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(final int dateStyle, final int timeStyle, final java.util.Locale locale) {\n    if ((locale.getVariant().length()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateTimeInstance(dateStyle, timeStyle, null, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1764","type":"CtBinaryOperatorImpl","sourcecode":"index >= 0"},"failures":[324],"tindex":"ed58471d-2ec1-11e6-acc6-c7937dc7ceed","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1623","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final int value) {\n    if (index >= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return insert(index, java.lang.String.valueOf(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}