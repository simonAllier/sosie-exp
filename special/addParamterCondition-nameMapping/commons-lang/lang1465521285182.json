{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":214,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArrayRemoveNone":78,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfBoolean":167,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":262,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":259,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":232,"org.apache.commons.lang3.StringUtilsTest.testLengthString":317,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":176,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArrayOutOfBoundsIndex":98,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementBooleanArray":166,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":65,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":152,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":215,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":201,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":168,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":256,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArray":106,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":133,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer_noMatch":163,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Cal":164,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentExceptionCauseNull":300,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":247,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":251,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":137,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":32,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArrayRemoveNone":85,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":139,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":223,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleWithStartIndex":68,"org.apache.commons.lang3.math.NumberUtilsTest.testMinByte_nullArray":240,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":33,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayRemoveNone":86,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":153,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":191,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":209,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":318,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":230,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_withoutCause":18,"org.apache.commons.lang3.StringUtilsTest.testIsAllUpperCase":316,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayRemoveNone":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":270,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayOutOfBoundsIndex":82,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":130,"org.apache.commons.lang3.math.NumberUtilsTest.testMinFloat_nullArray":237,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":180,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":248,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayRemoveNone":105,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":179,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissingIgnoreCase":326,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":252,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":52,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":71,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":5,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":12,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":26,"org.apache.commons.lang3.math.NumberUtilsTest.testIsDigits":2,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayOutOfBoundsIndex":92,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":30,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayOutOfBoundsIndex":80,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":290,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfIgnoreCase_StringInt":173,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":291,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":156,"org.apache.commons.lang3.math.NumberUtilsTest.testToByteString":57,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_char":123,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":29,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithCalendar":49,"org.apache.commons.lang3.StringUtilsSubstringTest.testRight_String":66,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testRawMessage":274,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":280,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentUncheckedException":304,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble":238,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_withCause":9,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":73,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiShortArray":190,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_ThrowableArray":17,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextEntries":282,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":294,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringInt":324,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":178,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":11,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":155,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentExceptionCauseError":299,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":311,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableCount_Throwable":16,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentRuntimeExceptionCauseNull":305,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArray":97,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithCalendar":50,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":257,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":219,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseChecked":297,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":142,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentRuntimeExceptionCauseError":306,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":271,"org.apache.commons.lang3.BooleanUtilsTest.test_toInteger_Boolean_int_int_int":319,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat_nullArray":241,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":258,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":314,"org.apache.commons.lang3.math.NumberUtilsTest.testMinLong_nullArray":233,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":193,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble_nullArray":236,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":45,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":292,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_recursiveCause":20,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":140,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":15,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxByte_nullArray":245,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayChar":42,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_jdkNoCause":7,"org.apache.commons.lang3.ConversionTest.testIntArrayToLong":151,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":226,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionStringThrowableContext":276,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_char":124,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":203,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntChar":323,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissing":325,"org.apache.commons.lang3.ClassUtilsTest.test_getSimpleName_Class":159,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":204,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":181,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":158,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_charInt":122,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringIntInt":231,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":217,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":228,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCharArray":160,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetInterruptedException":310,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArray":76,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_NoAutoboxing":35,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":221,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":134,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":132,"org.apache.commons.lang3.builder.EqualsBuilderTest.testShortArrayHiddenByObject":188,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementBooleanArray":165,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_jdkNoCause":23,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithCalendar":54,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":315,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArrayNegativeIndex":102,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":263,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":207,"org.apache.commons.lang3.ConversionTest.testLongToHex":246,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":138,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayShort":119,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":183,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":312,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":136,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":211,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":0,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort_nullArray":234,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArrayOutOfBoundsIndex":84,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String":196,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringAppendable":44,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":218,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_Throwable":10,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":14,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBooleanWithStartIndex":172,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionStringThrowable":278,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithCalendar":55,"org.apache.commons.lang3.math.NumberUtilsTest.testToShortString":69,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":309,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":146,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":135,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":266,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":144,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedChecked":302,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":61,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":212,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithCalendar":53,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArrayNegativeIndex":100,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":143,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":174,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":213,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":269,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArrayNegativeIndex":111,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":227,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayOutOfBoundsIndex":88,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNumberArray":90,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":260,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayNegativeIndex":99,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":225,"org.apache.commons.lang3.math.NumberUtilsTest.testMinShort_nullArray":243,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArrayRemoveNone":107,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArrayNegativeIndex":104,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":192,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":46,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDouble":67,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testNullExceptionPassing":273,"org.apache.commons.lang3.math.FractionTest.testConversions":58,"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":117,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":200,"org.apache.commons.lang3.math.FractionTest.testCompareTo":62,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":129,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Class":126,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer_nullValue":162,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":3,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":131,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":265,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionString":277,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":224,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":267,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Object":127,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArrayRemoveNone":83,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":249,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":40,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":198,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfBooleanWithStartIndex":171,"org.apache.commons.lang3.ArrayUtilsTest.testToString":321,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseChecked":298,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testInitializeUncheckedEx":308,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_char":120,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":115,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":254,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":253,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":320,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":250,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":222,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedException":289,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":19,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_String":37,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_nested":8,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArray":112,"org.apache.commons.lang3.text.StrTokenizerTest.testGetContent":205,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentExceptionCauseUnchecked":307,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":36,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":125,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":70,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedException":272,"org.apache.commons.lang3.ArrayUtilsTest.testReverseChar":48,"org.apache.commons.lang3.math.FractionTest.testGets":59,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOf":296,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_recursiveCause":22,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArrayRemoveNone":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":147,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong_nullArray":239,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":28,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":261,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":284,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArray":101,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":148,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArray":109,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":206,"org.apache.commons.lang3.math.NumberUtilsTest.testMinDouble_nullArray":235,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":229,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":293,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":220,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArray":91,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":72,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArray":108,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentRuntimeExceptionCauseUnchecked":303,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_char_char":39,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_Boolean":43,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayNegativeIndex":81,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":313,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWith":322,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxByte":114,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang645":157,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":194,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionThrowable":275,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayShort":185,"org.apache.commons.lang3.text.StrBuilderTest.testCharAt":118,"org.apache.commons.lang3.ArrayUtilsTest.testContainsShort":149,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedFieldForceAccess":177,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_withoutCause":13,"org.apache.commons.lang3.builder.EqualsBuilderTest.testShortArray":189,"org.apache.commons.lang3.text.StrBuilderTest.testGetCharsIntIntCharArrayInt":121,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":31,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String":197,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArray":286,"org.apache.commons.lang3.ConversionTest.testIntToByteArray":288,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":116,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArray":93,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArrayOutOfBoundsIndex":95,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":285,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArrayNegativeIndex":110,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":4,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":182,"org.apache.commons.lang3.math.FractionTest.testToProperString":63,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":64,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":195,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":279,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithCalendar":56,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayNegativeIndex":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":255,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfShort":150,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":216,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotFalse_Boolean":41,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayRemoveNone":89,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":141,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":199,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArrayOutOfBoundsIndex":96,"org.apache.commons.lang3.builder.EqualsBuilderTest.testShort":187,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithCalendar":51,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCause_Throwable":25,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":75,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedChecked":301,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":154,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":175,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":27,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt_nullArray":242,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt_nullArray":244,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArrayOutOfBoundsIndex":103,"org.apache.commons.lang3.RangeTest.testIsAfterRange":287,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBoolean":169,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_Autoboxing":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":268,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxByte_emptyArray":113,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":128,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementCharArray":208,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":202,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayNegativeIndex":87,"org.apache.commons.lang3.math.FractionTest.testToString":60,"org.apache.commons.lang3.ArrayUtilsTest.testCloneDouble":295,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_nested":6,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_withCause":24,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":184,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":264,"org.apache.commons.lang3.ArrayUtilsTest.testContainsBoolean":170,"org.apache.commons.lang3.ArrayUtilsTest.testCloneChar":210,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":281,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextLabels":283,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":145,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer":161,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayLong":74},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:97","type":"CtInvocationImpl","sourcecode":"str.contains(\"#\")"},"failures":[0,1,2,3],"tindex":"b7ab0254-2ea8-11e6-9deb-6f60231f66c0","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1311","type":"CtMethodImpl","sourcecode":"public static boolean isDigits(final java.lang.String str) {\n    if (str.contains(\"#\")) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return false;\n            } \n            for (int int = 0 ; i < (str.length()) ; i++) {\n                if (!(java.lang.Character.isDigit(str.charAt(i)))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:906","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"b7abc5a5-2ea8-11e6-9deb-91161684012f","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:539","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final boolean[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:682","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"b7abecb6-2ea8-11e6-9deb-e358f775c386","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:687","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final long[] lhs, final long[] rhs) {\n    if (!(java.util.Arrays.equals(rhs, rhs))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"rhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:489","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"b7ac13c7-2ea8-11e6-9deb-bfd74126384b","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:141","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.Throwable getCause(final java.lang.Throwable throwable, java.lang.String[] methodNames) {\n    if (throwable == null) {\n        {\n            if (throwable == null) {\n                return null;\n            } \n            if (methodNames == null) {\n                methodNames = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[];\n            } \n            for (final java.lang.String java.lang.String : methodNames) {\n                if (methodName != null) {\n                    final java.lang.Throwable java.lang.Throwable = org.apache.commons.lang3.exception.ExceptionUtils.getCauseUsingMethodName(throwable, methodName);\n                    if (cause != null) {\n                        return cause;\n                    } \n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1740","type":"CtBinaryOperatorImpl","sourcecode":"arrayStart == null"},"failures":[26,27,28,29,30,31,32,33],"tindex":"b7acb008-2ea8-11e6-9deb-15b35d142bdc","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:203","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setArrayStart(final java.lang.String arrayStart) {\n    if (arrayStart == null) {\n        {\n            super.setArrayStart(arrayStart);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arrayStart":"arrayStart"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1042","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"b7acd719-2ea8-11e6-9deb-3d4cf7944aad","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:559","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final boolean[] array, final boolean fullDetail) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:517","type":"CtBinaryOperatorImpl","sourcecode":"classArray == null"},"failures":[34,35,36],"tindex":"b7acfe2a-2ea8-11e6-9deb-337f11735ebb","method":{"position":"org.apache.commons.lang3.ClassUtils:513","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(java.lang.Class<?>[] classArray, java.lang.Class<?>[] toClassArray, final boolean autoboxing) {\n    if (classArray == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isSameLength(classArray, toClassArray)) == false) {\n                return false;\n            } \n            if (classArray == null) {\n                classArray = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Class<?>[];\n            } \n            if (toClassArray == null) {\n                toClassArray = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Class<?>[];\n            } \n            for (int int = 0 ; i < (classArray.int) ; i++) {\n                if ((org.apache.commons.lang3.ClassUtils.isAssignable(classArray[i], toClassArray[i], autoboxing)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classArray":"classArray"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:863","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(seq)"},"failures":[37],"tindex":"b7acfe2b-2ea8-11e6-9deb-9766e9624842","method":{"position":"org.apache.commons.lang3.StringUtils:1221","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(searchSeq)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"searchSeq"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:253","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[38],"tindex":"b7acfe2c-2ea8-11e6-9deb-8b2379da93e8","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:524","type":"CtMethodImpl","sourcecode":"public static final java.lang.String unescapeJava(final java.lang.String input) {\n    if (input != null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1844","type":"CtBinaryOperatorImpl","sourcecode":"contentEnd == null"},"failures":[],"tindex":"b7ad253d-2ea8-11e6-9deb-8b2826061b24","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:303","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setContentEnd(final java.lang.String contentEnd) {\n    if (contentEnd == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setContentEnd(contentEnd);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"contentEnd":"contentEnd"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1870","type":"CtBinaryOperatorImpl","sourcecode":"search != replace"},"failures":[39],"tindex":"b7ad253e-2ea8-11e6-9deb-053b2beec832","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1869","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replaceFirst(final char search, final char replace) {\n    if (search != replace) {\n        {\n            if (search != replace) {\n                for (int int = 0 ; i < (int) ; i++) {\n                    if ((char[][i]) == search) {\n                        char[][i] = replace;\n                        break;\n                    } \n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"search":"search","replace":"replace"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"b7ad253f-2ea8-11e6-9deb-f5bda82c9d6f","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:798","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value < 10) {\n                buffer.append(((char)(value + '0')));\n            } else {\n                buffer.append(((char)((value / 10) + '0')));\n                buffer.append(((char)((value % 10) + '0')));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.Throwable","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:355","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(method))"},"failures":[],"tindex":"b7ad2540-2ea8-11e6-9deb-c3d0bba0ef20","method":{"position":"org.apache.commons.lang3.event.EventListenerSupport:315","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object invoke(final java.lang.Object unusedProxy, final java.lang.reflect.Method method, final java.lang.Object[] args) throws java.lang.Throwable {\n    if (unusedProxy == null) {\n        throw new java.lang.Throwable();\n    } else {\n        {\n            if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(method))) {\n                throw new java.lang.Throwable();\n            } else {\n                {\n                    for (final L L : java.util.List<L>) {\n                        method.invoke(listener, args);\n                    }\n                    return null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"method"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtBinaryOperatorImpl","sourcecode":"index != 0"},"failures":[40],"tindex":"b7ad4c51-2ea8-11e6-9deb-878cc2991d2b","method":{"position":"org.apache.commons.lang3.ArrayUtils:4358","type":"CtMethodImpl","sourcecode":"public static char[] add(final char[] array, final int index, final char element) {\n    if (index != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((char[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Character.valueOf(element), java.lang.Character.java.lang.Character.java.lang.Class<java.lang.Character>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:466","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[41],"tindex":"b7ad4c52-2ea8-11e6-9deb-8bf77c9467a5","method":{"position":"org.apache.commons.lang3.BooleanUtils:140","type":"CtMethodImpl","sourcecode":"public static boolean isNotFalse(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            return !(org.apache.commons.lang3.BooleanUtils.isFalse(bool));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:106","type":"CtUnaryOperatorImpl","sourcecode":"!(java.lang.reflect.Modifier.isPublic(field.getModifiers()))"},"failures":[],"tindex":"b7ad4c53-2ea8-11e6-9deb-4332af380e43","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:488","type":"CtMethodImpl","sourcecode":"public static void writeStaticField(final java.lang.reflect.Field field, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (!(java.lang.reflect.Modifier.isPublic(value.getModifiers()))) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(field, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"value"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1035","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[42],"tindex":"b7ad7364-2ea8-11e6-9deb-0f494db1d50d","method":{"position":"org.apache.commons.lang3.ArrayUtils:4097","type":"CtMethodImpl","sourcecode":"public static char[] add(final char[] array, final char element) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final char[] char[] = ((char[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Character.java.lang.Character.java.lang.Class<java.lang.Character>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:812","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[43],"tindex":"b7ad7365-2ea8-11e6-9deb-afd9a62785c9","method":{"position":"org.apache.commons.lang3.BooleanUtils:775","type":"CtMethodImpl","sourcecode":"public static java.lang.String toStringOnOff(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            return org.apache.commons.lang3.BooleanUtils.toString(bool, \"on\", \"off\", null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:317","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[44],"tindex":"b7ad7366-2ea8-11e6-9deb-0df2cafedb5f","method":{"position":"org.apache.commons.lang3.ObjectUtils:292","type":"CtMethodImpl","sourcecode":"public static void identityToString(final java.lang.Appendable appendable, final java.lang.Object object) throws java.io.IOException {\n    if (object == null) {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n            } \n            appendable.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[45,45],"tindex":"b7ad7367-2ea8-11e6-9deb-a31ea64c4d93","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:815","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:448","type":"CtBinaryOperatorImpl","sourcecode":"(nullText) == null"},"failures":[26,27,28,29,30,31,32,33],"tindex":"b7ad9a78-2ea8-11e6-9deb-55d7d77b2f6d","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:430","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setNullText(final java.lang.String nullText) {\n    if (nullText == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (nullText == null) {\n                {\n                    super.setNullText(nullText);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"nullText"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.Throwable","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:291","type":"CtBinaryOperatorImpl","sourcecode":"method == null"},"failures":[],"tindex":"b7ad9a79-2ea8-11e6-9deb-2b74c94dbc62","method":{"position":"org.apache.commons.lang3.event.EventListenerSupport:315","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object invoke(final java.lang.Object unusedProxy, final java.lang.reflect.Method method, final java.lang.Object[] args) throws java.lang.Throwable {\n    if (unusedProxy == null) {\n        throw new java.lang.Throwable();\n    } else {\n        {\n            if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(method))) {\n                throw new java.lang.Throwable();\n            } else {\n                {\n                    for (final L L : java.util.List<L>) {\n                        method.invoke(listener, args);\n                    }\n                    return null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"unusedProxy"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(valueDelimiter)"},"failures":[46,47],"tindex":"b7ad9a7a-2ea8-11e6-9deb-a793ffbbcf31","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1144","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setValueDelimiter(final java.lang.String valueDelimiter) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(valueDelimiter)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(valueDelimiter)) {\n                setValueDelimiterMatcher(null);\n                return org.apache.commons.lang3.text.StrSubstitutor.this;\n            } \n            return setValueDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(valueDelimiter));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueDelimiter":"valueDelimiter"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1035","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[48],"tindex":"b7adc18b-2ea8-11e6-9deb-1d8ccdef70da","method":{"position":"org.apache.commons.lang3.ArrayUtils:1491","type":"CtMethodImpl","sourcecode":"public static void reverse(final char[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[49,50,51,52,53,54,55,56],"tindex":"b7adc18c-2ea8-11e6-9deb-5586c52f1fb3","method":{"position":"org.apache.commons.lang3.time.DateUtils:1592","type":"CtMethodImpl","sourcecode":"public static long getFragmentInHours(final java.util.Calendar calendar, final int fragment) {\n    if (calendar == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2805","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[57],"tindex":"b7adc18d-2ea8-11e6-9deb-19e82414decf","method":{"position":"org.apache.commons.lang3.math.NumberUtils:302","type":"CtMethodImpl","sourcecode":"public static byte toByte(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                {\n                    return org.apache.commons.lang3.math.NumberUtils.toByte(str, ((byte)(0)));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:528","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) >= 0"},"failures":[58,59,60,61,62,63,64],"tindex":"b7adc18e-2ea8-11e6-9deb-07174d7217c6","method":{"position":"org.apache.commons.lang3.math.Fraction:172","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(final int whole, final int numerator, final int denominator) {\n    if (denominator >= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (denominator == 0) {\n                throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n            } \n            if (denominator < 0) {\n                throw new java.lang.ArithmeticException(\"The denominator must not be negative\");\n            } \n            if (numerator < 0) {\n                throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n            } \n            long long;\n            if (whole < 0) {\n                numeratorValue = (whole * ((long)(denominator))) - numerator;\n            } else {\n                numeratorValue = (whole * ((long)(denominator))) + numerator;\n            }\n            if ((numeratorValue < (java.lang.Integer.java.lang.Integer.int)) || (numeratorValue > (java.lang.Integer.java.lang.Integer.int))) {\n                throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\");\n            } \n            return new org.apache.commons.lang3.math.Fraction(((int)(numeratorValue)) , denominator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"denominator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:282","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[65],"tindex":"b7ade89f-2ea8-11e6-9deb-192f8ce21c2d","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:165","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatUTC(final java.util.Date date, final java.lang.String pattern, final java.util.Locale locale) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(date, pattern, org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.java.util.TimeZone, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5299","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[66],"tindex":"b7ade8a0-2ea8-11e6-9deb-7d2ac8217644","method":{"position":"org.apache.commons.lang3.StringUtils:2206","type":"CtMethodImpl","sourcecode":"public static java.lang.String right(final java.lang.String str, final int len) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (len < 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            if ((str.length()) <= len) {\n                return str;\n            } \n            return str.substring(((str.length()) - len));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:603","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[10],"tindex":"b7ade8a1-2ea8-11e6-9deb-1d93ef5c58d0","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:123","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.Throwable getCause(final java.lang.Throwable throwable) {\n    if (throwable == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ExceptionUtils.getCause(throwable, org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:39","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[67,68],"tindex":"b7ae0fb2-2ea8-11e6-9deb-cbf11d0d2b80","method":{"position":"org.apache.commons.lang3.ArrayUtils:2617","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final double[] array, final double valueToFind) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2332","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[69],"tindex":"b7ae0fb3-2ea8-11e6-9deb-25632908af60","method":{"position":"org.apache.commons.lang3.math.NumberUtils:351","type":"CtMethodImpl","sourcecode":"public static short toShort(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toShort(str, ((short)(0)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:357","type":"CtBinaryOperatorImpl","sourcecode":"ch < 4096"},"failures":[],"tindex":"b7ae0fb4-2ea8-11e6-9deb-97d906755b05","method":{"position":"org.apache.commons.lang3.CharUtils:307","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final char ch) {\n    if (ch < 4096) {\n        {\n            if (ch < 128) {\n                return org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.java.lang.String[][ch];\n            } \n            return new java.lang.String(new char[]{ ch });\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:762","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[38,70,71,72,73],"tindex":"b7ae36c5-2ea8-11e6-9deb-797e7a845997","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:455","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeJava(final java.lang.String input) {\n    if (input == null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3336","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[74],"tindex":"b7ae36c6-2ea8-11e6-9deb-2b1f61269b72","method":{"position":"org.apache.commons.lang3.ArrayUtils:914","type":"CtMethodImpl","sourcecode":"public static long[] subarray(final long[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.long[];\n            } \n            final long[] long[] = new long[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2065","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"b7ae36c7-2ea8-11e6-9deb-1bac682b3f6f","method":{"position":"org.apache.commons.lang3.ArrayUtils:6011","type":"CtMethodImpl","sourcecode":"static java.lang.Object removeAll(final java.lang.Object array, final int... indices) {\n    if (array == null) {\n        {\n            if (array == null) {\n                {\n                    final int int = org.apache.commons.lang3.ArrayUtils.getLength(array);\n                    int int = 0;\n                    if (org.apache.commons.lang3.ArrayUtils.isNotEmpty(indices)) {\n                        java.util.Arrays.sort(indices);\n                        int int = indices.int;\n                        int int = length;\n                        while ((--i) >= 0) {\n                            final int int = indices[i];\n                            if ((index < 0) || (index >= length)) {\n                                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Length: \") + length));\n                            } \n                            if (index >= prevIndex) {\n                                continue;\n                            } \n                            diff++;\n                            prevIndex = index;\n                        }\n                    } \n                    final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (length - diff));\n                    if (diff < length) {\n                        int int = length;\n                        int int = length - diff;\n                        for (int int = (indices.int) - 1 ; i >= 0 ; i--) {\n                            final int int = indices[i];\n                            if ((end - index) > 1) {\n                                final int int = (end - index) - 1;\n                                dest -= cp;\n                                java.lang.System.arraycopy(array, (index + 1), result, dest, cp);\n                            } \n                            end = index;\n                        }\n                        if (end > 0) {\n                            java.lang.System.arraycopy(array, 0, result, 0, end);\n                        } \n                    } \n                    return result;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:623","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[113,114],"tindex":"b7ae5dd8-2ea8-11e6-9deb-7547d3607fae","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1005","type":"CtMethodImpl","sourcecode":"public static byte max(final byte[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            byte byte = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if ((array[i]) > max) {\n                    max = array[i];\n                } \n            }\n            return max;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtBinaryOperatorImpl","sourcecode":"index != 0"},"failures":[115,116,117,118],"tindex":"b7ae5dd9-2ea8-11e6-9deb-bb5cf1cd4f88","method":{"position":"org.apache.commons.lang3.text.StrBuilder:308","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic char charAt(final int index) {\n    if (index != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index >= (length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(index);\n            } \n            return char[][index];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1478","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[119],"tindex":"b7ae5dda-2ea8-11e6-9deb-f3b8c39e4a7e","method":{"position":"org.apache.commons.lang3.ArrayUtils:4232","type":"CtMethodImpl","sourcecode":"public static short[] add(final short[] array, final short element) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final short[] short[] = ((short[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Short.java.lang.Short.java.lang.Class<java.lang.Short>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1970","type":"CtBinaryOperatorImpl","sourcecode":"nullText == null"},"failures":[],"tindex":"b7ae84eb-2ea8-11e6-9deb-ebcca3eb97e2","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:430","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setNullText(final java.lang.String nullText) {\n    if (nullText == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (nullText == null) {\n                {\n                    super.setNullText(nullText);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"nullText"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:308","type":"CtBinaryOperatorImpl","sourcecode":"ch < 128"},"failures":[120],"tindex":"b7ae84ec-2ea8-11e6-9deb-b955bd0610dd","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1725","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder deleteFirst(final char ch) {\n    if (ch < 128) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < (int) ; i++) {\n                if ((char[][i]) == ch) {\n                    deleteImpl(i, (i + 1), 1);\n                    break;\n                } \n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:412","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[121],"tindex":"b7ae84ed-2ea8-11e6-9deb-5f74f9013eb3","method":{"position":"org.apache.commons.lang3.text.StrBuilder:411","type":"CtMethodImpl","sourcecode":"public void getChars(final int startIndex, final int endIndex, final char[] destination, final int destinationIndex) {\n    if (endIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (startIndex < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n            } \n            if ((endIndex < 0) || (endIndex > (length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(endIndex);\n            } \n            if (startIndex > endIndex) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n            } \n            java.lang.System.arraycopy(char[], startIndex, destination, destinationIndex, (endIndex - startIndex));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"endIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6034","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(cs)"},"failures":[122,123],"tindex":"b7aeabfe-2ea8-11e6-9deb-0dd5270939cf","method":{"position":"org.apache.commons.lang3.CharSequenceUtils:116","type":"CtMethodImpl","sourcecode":"static int lastIndexOf(final java.lang.CharSequence cs, final int searchChar, int start) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n        {\n            if (cs instanceof java.lang.String) {\n                return ((java.lang.String)(cs)).lastIndexOf(searchChar, start);\n            } else {\n                final int int = cs.length();\n                if (start < 0) {\n                    return -1;\n                } \n                if (start >= sz) {\n                    start = sz - 1;\n                } \n                for (int int = start ; i >= 0 ; --i) {\n                    if ((cs.charAt(i)) == searchChar) {\n                        return i;\n                    } \n                }\n                return -1;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5299","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"b7aeabff-2ea8-11e6-9deb-bb0f2d2ec299","method":{"position":"org.apache.commons.lang3.math.NumberUtils:302","type":"CtMethodImpl","sourcecode":"public static byte toByte(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                {\n                    return org.apache.commons.lang3.math.NumberUtils.toByte(str, ((byte)(0)));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:378","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[117],"tindex":"b7aeac00-2ea8-11e6-9deb-d7ad87c69cc2","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2873","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(final char[] b, final int off, int len) {\n    if (off == 0) {\n        {\n            if (((((off < 0) || (len < 0)) || (off > (b.int))) || ((off + len) > (b.int))) || ((off + len) < 0)) {\n                throw new java.lang.IndexOutOfBoundsException();\n            } \n            if (len == 0) {\n                return 0;\n            } \n            if ((int) >= (org.apache.commons.lang3.text.StrBuilder.this.size())) {\n                return -1;\n            } \n            if (((int) + len) > (size())) {\n                len = (org.apache.commons.lang3.text.StrBuilder.this.size()) - (int);\n            } \n            org.apache.commons.lang3.text.StrBuilder.this.getChars(int, ((int) + len), b, off);\n            int += len;\n            return len;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"off"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false"},"failures":[124],"tindex":"b7aed311-2ea8-11e6-9deb-0ff665ca2a7f","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2413","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final char ch) {\n    if ((org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return lastIndexOf(ch, ((int) - 1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:905","type":"CtInvocationImpl","sourcecode":"cls.isPrimitive()"},"failures":[5,125,126,127,26,27,28,29,30,31,32,33,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,142,143,144,145,146,147,147],"tindex":"b7aed312-2ea8-11e6-9deb-3da581c76134","method":{"position":"org.apache.commons.lang3.ClassUtils:175","type":"CtMethodImpl","sourcecode":"public static java.lang.String getShortClassName(final java.lang.Class<?> cls) {\n    if (cls.isPrimitive()) {\n        {\n            if (cls == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return org.apache.commons.lang3.ClassUtils.getShortClassName(cls.getName());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1854","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[148,149,150],"tindex":"b7aed313-2ea8-11e6-9deb-bd476137f217","method":{"position":"org.apache.commons.lang3.ArrayUtils:2209","type":"CtMethodImpl","sourcecode":"public static int indexOf(final short[] array, final short valueToFind) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:690","type":"CtBinaryOperatorImpl","sourcecode":"(((nInts - 1) * 32) + dstPos) >= 64"},"failures":[151],"tindex":"b7aefa24-2ea8-11e6-9deb-05afc260acf7","method":{"position":"org.apache.commons.lang3.Conversion:686","type":"CtMethodImpl","sourcecode":"public static long intArrayToLong(final int[] src, final int srcPos, final long dstInit, final int dstPos, final int nInts) {\n    if ((((srcPos - 1) * 32) + dstPos) >= 64) {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nInts)) {\n                return dstInit;\n            } \n            if ((((nInts - 1) * 32) + dstPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+dstPos is greather or equal to than 64\");\n            } \n            long long = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nInts ; i++) {\n                shift = (i * 32) + dstPos;\n                final long long = (4294967295L & (src[(i + srcPos)])) << shift;\n                final long long = 4294967295L << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"dstPos","nInts":"srcPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.Throwable","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:127","type":"CtBinaryOperatorImpl","sourcecode":"method == null"},"failures":[],"tindex":"b7aefa25-2ea8-11e6-9deb-4db7c523bdce","method":{"position":"org.apache.commons.lang3.event.EventUtils:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object invoke(final java.lang.Object proxy, final java.lang.reflect.Method method, final java.lang.Object[] parameters) throws java.lang.Throwable {\n    if (method == null) {\n        throw new java.lang.Throwable();\n    } else {\n        {\n            if ((java.util.Set<java.lang.String>.isEmpty()) || (java.util.Set<java.lang.String>.contains(method.getName()))) {\n                if (hasMatchingParametersMethod(method)) {\n                    return org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String, parameters);\n                } else {\n                    return org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String);\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"method"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[152,153,154,155,156,157,158],"tindex":"b7aefa26-2ea8-11e6-9deb-1fbbf001e2d3","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:712","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        {\n            buffer.append(java.lang.String[][calendar.get(int)]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[159],"tindex":"b7af2137-2ea8-11e6-9deb-f5aa831b76d3","method":{"position":"org.apache.commons.lang3.ClassUtils:235","type":"CtMethodImpl","sourcecode":"public static java.lang.String getSimpleName(final java.lang.Class<?> cls) {\n    if (cls == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cls == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return cls.getSimpleName();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:770","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[160],"tindex":"b7af2138-2ea8-11e6-9deb-a9cd5f7eaf15","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:763","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final char[] lhs, final char[] rhs) {\n    if ((rhs == null) || (lhs == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:297","type":"CtInvocationImpl","sourcecode":"value.equals(trueValue)"},"failures":[161,162,163],"tindex":"b7af4849-2ea8-11e6-9deb-0d206a2ec049","method":{"position":"org.apache.commons.lang3.BooleanUtils:289","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final java.lang.Integer value, final java.lang.Integer trueValue, final java.lang.Integer falseValue) {\n    if (value.equals(value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                if (trueValue == null) {\n                    return true;\n                } \n                if (falseValue == null) {\n                    return false;\n                } \n            } else if (value.equals(trueValue)) {\n                return true;\n            } else if (value.equals(falseValue)) {\n                return false;\n            } \n            throw new java.lang.IllegalArgumentException(\"The Integer did not match either specified value\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueValue":"value","value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:225","type":"CtBinaryOperatorImpl","sourcecode":"count == 0"},"failures":[],"tindex":"b7af484a-2ea8-11e6-9deb-8101753e3b0a","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:461","type":"CtMethodImpl","sourcecode":"private static java.lang.String paddedValue(final long value, final boolean padWithZeros, final int count) {\n    if (count == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.String java.lang.String = java.lang.Long.toString(value);\n            return padWithZeros ? org.apache.commons.lang3.StringUtils.leftPad(longString, count, '0') : longString;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:180","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[164],"tindex":"b7af484b-2ea8-11e6-9deb-0fec3ec28db1","method":{"position":"org.apache.commons.lang3.time.DateUtils:218","type":"CtMethodImpl","sourcecode":"public static boolean isSameInstant(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if ((cal2 == null) || (cal2 == null)) {\n        {\n            if ((cal1 == null) || (cal2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return (cal1.getTime().getTime()) == (cal2.getTime().getTime());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"cal2","cal1":"cal2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1397","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[165,166,167,168,169,170,171,172],"tindex":"b7af6f5c-2ea8-11e6-9deb-a34c484992fb","method":{"position":"org.apache.commons.lang3.ArrayUtils:3586","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final boolean[] array) {\n    if (array == null) {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2949","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"b7af6f5d-2ea8-11e6-9deb-278ad5220cf0","method":{"position":"org.apache.commons.lang3.StringUtils:2752","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByWholeSeparatorPreserveAllTokens(final java.lang.String str, final java.lang.String separator) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(str, separator, (-1), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:647","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"b7af6f5e-2ea8-11e6-9deb-4d0b14293344","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:187","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Date date, final java.lang.String pattern) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(date, pattern, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5262","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[173],"tindex":"b7af6f5f-2ea8-11e6-9deb-d19eb411c851","method":{"position":"org.apache.commons.lang3.StringUtils:1371","type":"CtMethodImpl","sourcecode":"public static int lastIndexOfIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence searchStr, int startPos) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((str == null) || (searchStr == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if (startPos > ((str.length()) - (searchStr.length()))) {\n                startPos = (str.length()) - (searchStr.length());\n            } \n            if (startPos < 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if ((searchStr.length()) == 0) {\n                return startPos;\n            } \n            for (int int = startPos ; i >= 0 ; i--) {\n                if (org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:696","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"b7af9670-2ea8-11e6-9deb-2178ad8df64f","method":{"position":"org.apache.commons.lang3.text.StrBuilder:954","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final org.apache.commons.lang3.text.StrBuilder str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(str).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:759","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[174,175,176,177],"tindex":"b7af9671-2ea8-11e6-9deb-77c927df67c3","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:424","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readField(final java.lang.Object target, final java.lang.String fieldName, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (fieldName == null) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((target != null), \"target object must not be null\");\n            final java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate field %s on %s\", fieldName, cls);\n            return org.apache.commons.lang3.reflect.FieldUtils.readField(field, target, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:94","type":"CtInvocationImpl","sourcecode":"str.isEmpty()"},"failures":[178],"tindex":"b7af9672-2ea8-11e6-9deb-715bee3c948d","method":{"position":"org.apache.commons.lang3.StringUtils:2631","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] split(final java.lang.String str, final java.lang.String separatorChars) {\n    if (separatorChars.isEmpty()) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChars, (-1), false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separatorChars"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:6015","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isNotEmpty(indices)"},"failures":[107],"tindex":"b7af9673-2ea8-11e6-9deb-8b1d190672b6","method":{"position":"org.apache.commons.lang3.ArrayUtils:5943","type":"CtMethodImpl","sourcecode":"public static boolean[] removeAll(final boolean[] array, final int... indices) {\n    if (org.apache.commons.lang3.ArrayUtils.isNotEmpty(indices)) {\n        {\n            return ((boolean[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indices":"indices"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:225","type":"CtBinaryOperatorImpl","sourcecode":"count == 0"},"failures":[179,180,181,182,183,184],"tindex":"b7afbd84-2ea8-11e6-9deb-dba33c06e108","method":{"position":"org.apache.commons.lang3.RandomStringUtils:142","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count, final boolean letters, final boolean numbers) {\n    if (count == 0) {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, 0, 0, letters, numbers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:194","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"b7afbd85-2ea8-11e6-9deb-672050160b68","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:477","type":"CtMethodImpl","sourcecode":"private java.lang.StringBuilder appendQuotedString(final java.lang.String pattern, final java.text.ParsePosition pos, final java.lang.StringBuilder appendTo, final boolean escapingOn) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = pos.getIndex();\n            final char[] char[] = pattern.toCharArray();\n            if (escapingOn && ((c[start]) == (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char))) {\n                next(pos);\n                return appendTo == null ? null : appendTo.append(org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char);\n            } \n            int int = start;\n            for (int int = pos.getIndex() ; i < (pattern.length()) ; i++) {\n                if (escapingOn && (pattern.substring(i).startsWith(org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.java.lang.String))) {\n                    appendTo.append(c, lastHold, ((pos.getIndex()) - lastHold)).append(org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char);\n                    pos.setIndex((i + (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.java.lang.String.length())));\n                    lastHold = pos.getIndex();\n                    continue;\n                } \n                switch (c[pos.getIndex()]) {\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        next(pos);\n                        return appendTo == null ? null : appendTo.append(c, lastHold, ((pos.getIndex()) - lastHold));\n                    default :\n                        next(pos);\n                }\n            }\n            throw new java.lang.IllegalArgumentException((\"Unterminated quoted string at position \" + start));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:724","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[185,186,187,188,189,190,191,192,193,194,195],"tindex":"b7afe496-2ea8-11e6-9deb-f76d510952b4","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:536","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final short lhs, final short rhs) {\n    if (lhs != rhs) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            boolean = lhs == rhs;\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1081","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"b7afe497-2ea8-11e6-9deb-819bba661d88","method":{"position":"org.apache.commons.lang3.ArrayUtils:6011","type":"CtMethodImpl","sourcecode":"static java.lang.Object removeAll(final java.lang.Object array, final int... indices) {\n    if (array == null) {\n        {\n            if (array == null) {\n                {\n                    final int int = org.apache.commons.lang3.ArrayUtils.getLength(array);\n                    int int = 0;\n                    if (org.apache.commons.lang3.ArrayUtils.isNotEmpty(indices)) {\n                        java.util.Arrays.sort(indices);\n                        int int = indices.int;\n                        int int = length;\n                        while ((--i) >= 0) {\n                            final int int = indices[i];\n                            if ((index < 0) || (index >= length)) {\n                                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Length: \") + length));\n                            } \n                            if (index >= prevIndex) {\n                                continue;\n                            } \n                            diff++;\n                            prevIndex = index;\n                        }\n                    } \n                    final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (length - diff));\n                    if (diff < length) {\n                        int int = length;\n                        int int = length - diff;\n                        for (int int = (indices.int) - 1 ; i >= 0 ; i--) {\n                            final int int = indices[i];\n                            if ((end - index) > 1) {\n                                final int int = (end - index) - 1;\n                                dest -= cp;\n                                java.lang.System.arraycopy(array, (index + 1), result, dest, cp);\n                            } \n                            end = index;\n                        }\n                        if (end > 0) {\n                            java.lang.System.arraycopy(array, 0, result, 0, end);\n                        } \n                    } \n                    return result;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:358","type":"CtBinaryOperatorImpl","sourcecode":"trueValue == null"},"failures":[],"tindex":"b7b00ba8-2ea8-11e6-9deb-61a157826e4d","method":{"position":"org.apache.commons.lang3.BooleanUtils:485","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer toIntegerObject(final boolean bool, final java.lang.Integer trueValue, final java.lang.Integer falseValue) {\n    if (trueValue == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bool ? trueValue : falseValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueValue":"trueValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2119","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[196,197],"tindex":"b7b00ba9-2ea8-11e6-9deb-f11e7c78b684","method":{"position":"org.apache.commons.lang3.BooleanUtils:547","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean toBooleanObject(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == \"true\") {\n                return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } \n            if (str == null) {\n                return null;\n            } \n            switch (str.length()) {\n                case 1 :\n                    {\n                        final char char = str.charAt(0);\n                        if ((((ch0 == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T')) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        if ((((ch0 == 'n') || (ch0 == 'N')) || (ch0 == 'f')) || (ch0 == 'F')) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                case 2 :\n                    {\n                        final char char = str.charAt(0);\n                        final char char = str.charAt(1);\n                        if (((ch0 == 'o') || (ch0 == 'O')) && ((ch1 == 'n') || (ch1 == 'N'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        if (((ch0 == 'n') || (ch0 == 'N')) && ((ch1 == 'o') || (ch1 == 'O'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                case 3 :\n                    {\n                        final char char = str.charAt(0);\n                        final char char = str.charAt(1);\n                        final char char = str.charAt(2);\n                        if ((((ch0 == 'y') || (ch0 == 'Y')) && ((ch1 == 'e') || (ch1 == 'E'))) && ((ch2 == 's') || (ch2 == 'S'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        if ((((ch0 == 'o') || (ch0 == 'O')) && ((ch1 == 'f') || (ch1 == 'F'))) && ((ch2 == 'f') || (ch2 == 'F'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                case 4 :\n                    {\n                        final char char = str.charAt(0);\n                        final char char = str.charAt(1);\n                        final char char = str.charAt(2);\n                        final char char = str.charAt(3);\n                        if (((((ch0 == 't') || (ch0 == 'T')) && ((ch1 == 'r') || (ch1 == 'R'))) && ((ch2 == 'u') || (ch2 == 'U'))) && ((ch3 == 'e') || (ch3 == 'E'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                case 5 :\n                    {\n                        final char char = str.charAt(0);\n                        final char char = str.charAt(1);\n                        final char char = str.charAt(2);\n                        final char char = str.charAt(3);\n                        final char char = str.charAt(4);\n                        if ((((((ch0 == 'f') || (ch0 == 'F')) && ((ch1 == 'a') || (ch1 == 'A'))) && ((ch2 == 'l') || (ch2 == 'L'))) && ((ch3 == 's') || (ch3 == 'S'))) && ((ch4 == 'e') || (ch4 == 'E'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                default :\n                    break;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:387","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[198,199,200,201,202,203,204,205,206,207,208,209,210,211],"tindex":"b7b032ba-2ea8-11e6-9deb-373bed509c0a","method":{"position":"org.apache.commons.lang3.ArrayUtils:386","type":"CtMethodImpl","sourcecode":"public static char[] clone(final char[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:214","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[212,191,213,214,215,216,217,218,219,220,221,222,223,193,224,225,194,226,227,195,228],"tindex":"b7b032bb-2ea8-11e6-9deb-01594962a6b3","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:631","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final long lhs, final long rhs) {\n    if (fieldName == null) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Long>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Long getLeft() {\n                        return java.lang.Long.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Long getRight() {\n                        return java.lang.Long.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2002","type":"CtBinaryOperatorImpl","sourcecode":"sizeStartText == null"},"failures":[26,27,28,29,30,31,32,33],"tindex":"b7b059cc-2ea8-11e6-9deb-ed48705363f7","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:461","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setSizeStartText(final java.lang.String sizeStartText) {\n    if (sizeStartText == null) {\n        {\n            super.setSizeStartText(sizeStartText);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeStartText":"sizeStartText"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[198,229,230,204],"tindex":"b7b080dd-2ea8-11e6-9deb-517f1f36f369","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:164","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrTokenizer getCSVInstance(final java.lang.String input) {\n    if (input != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.text.StrTokenizer org.apache.commons.lang3.text.StrTokenizer = org.apache.commons.lang3.text.StrTokenizer.getCSVClone();\n            tok.reset(input);\n            return tok;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateFormat:563","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.lang3.time.FastDateFormat) == false"},"failures":[],"tindex":"b7b080de-2ea8-11e6-9deb-21e79522c775","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:400","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.lang.Object obj, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) {\n    if ((obj instanceof org.apache.commons.lang3.time.FastDateFormat) == false) {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(obj, toAppendTo, pos);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2336","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[231,232],"tindex":"b7b080df-2ea8-11e6-9deb-6fb6a61797c0","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2162","type":"CtMethodImpl","sourcecode":"public java.lang.String substring(final int startIndex, int endIndex) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            return new java.lang.String(char[] , startIndex , (endIndex - startIndex));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:758","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[233,234,235,236,237,238,239,240,241,242,243,244,245],"tindex":"b7b080e0-2ea8-11e6-9deb-ab3147418bbf","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1080","type":"CtMethodImpl","sourcecode":"private static void validateArray(final java.lang.Object array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } else if ((java.lang.reflect.Array.getLength(array)) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"b7b0a7f1-2ea8-11e6-9deb-e1930bbd3603","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:850","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value < 100) {\n                for (int int = int ; (--i) >= 2 ; ) {\n                    buffer.append('0');\n                }\n                buffer.append(((char)((value / 10) + '0')));\n                buffer.append(((char)((value % 10) + '0')));\n            } else {\n                int int;\n                if (value < 1000) {\n                    digits = 3;\n                } else {\n                    org.apache.commons.lang3.Validate.isTrue((value > (-1)), \"Negative values should not be possible\", value);\n                    digits = java.lang.Integer.toString(value).length();\n                }\n                for (int int = int ; (--i) >= digits ; ) {\n                    buffer.append('0');\n                }\n                buffer.append(java.lang.Integer.toString(value));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1513","type":"CtBinaryOperatorImpl","sourcecode":"(((nHexs - 1) * 4) + srcPos) >= 8"},"failures":[246],"tindex":"b7b0a7f2-2ea8-11e6-9deb-8fea1015c497","method":{"position":"org.apache.commons.lang3.Conversion:1389","type":"CtMethodImpl","sourcecode":"public static java.lang.String longToHex(final long src, final int srcPos, final java.lang.String dstInit, final int dstPos, final int nHexs) {\n    if ((((nHexs - 1) * 4) + nHexs) >= 8) {\n        {\n            if (0 == nHexs) {\n                return dstInit;\n            } \n            if ((((nHexs - 1) * 4) + srcPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\");\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(dstInit);\n            int int = 0;\n            int int = sb.length();\n            for (int int = 0 ; i < nHexs ; i++) {\n                shift = (i * 4) + srcPos;\n                final int int = ((int)(15 & (src >> shift)));\n                if ((dstPos + i) == append) {\n                    ++append;\n                    sb.append(org.apache.commons.lang3.Conversion.intToHexDigit(bits));\n                } else {\n                    sb.setCharAt((dstPos + i), org.apache.commons.lang3.Conversion.intToHexDigit(bits));\n                }\n            }\n            return sb.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"nHexs","nHexs":"nHexs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:543","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,46,264,265,266,267,268,269,270,271],"tindex":"b7b0a7f3-2ea8-11e6-9deb-8b239c4540ce","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:750","type":"CtMethodImpl","sourcecode":"private int substitute(final org.apache.commons.lang3.text.StrBuilder buf, final int offset, final int length, java.util.List<java.lang.String> priorVariables) {\n    if (offset > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = getVariablePrefixMatcher();\n            final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = getVariableSuffixMatcher();\n            final char char = getEscapeChar();\n            final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = getValueDelimiterMatcher();\n            final boolean boolean = isEnableSubstitutionInVariables();\n            final boolean boolean = priorVariables == null;\n            boolean boolean = false;\n            int int = 0;\n            char[] char[] = buf.char[];\n            int int = offset + length;\n            int int = offset;\n            while (pos < bufEnd) {\n                final int int = pfxMatcher.isMatch(chars, pos, offset, bufEnd);\n                if (startMatchLen == 0) {\n                    pos++;\n                } else {\n                    if ((pos > offset) && ((chars[(pos - 1)]) == escape)) {\n                        buf.deleteCharAt((pos - 1));\n                        chars = buf.char[];\n                        lengthChange--;\n                        altered = true;\n                        bufEnd--;\n                    } else {\n                        final int int = pos;\n                        pos += startMatchLen;\n                        int int = 0;\n                        int int = 0;\n                        while (pos < bufEnd) {\n                            if (substitutionInVariablesEnabled && ((endMatchLen = pfxMatcher.isMatch(chars, pos, offset, bufEnd)) != 0)) {\n                                nestedVarCount++;\n                                pos += endMatchLen;\n                                continue;\n                            } \n                            endMatchLen = suffMatcher.isMatch(chars, pos, offset, bufEnd);\n                            if (endMatchLen == 0) {\n                                pos++;\n                            } else {\n                                if (nestedVarCount == 0) {\n                                    java.lang.String java.lang.String = new java.lang.String(chars , (startPos + startMatchLen) , ((pos - startPos) - startMatchLen));\n                                    if (substitutionInVariablesEnabled) {\n                                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(varNameExpr);\n                                        substitute(bufName, 0, bufName.length());\n                                        varNameExpr = bufName.toString();\n                                    } \n                                    pos += endMatchLen;\n                                    final int int = pos;\n                                    java.lang.String java.lang.String = varNameExpr;\n                                    java.lang.String java.lang.String = null;\n                                    if (valueDelimMatcher != null) {\n                                        final char[] char[] = varNameExpr.toCharArray();\n                                        int int = 0;\n                                        for (int int = 0 ; i < (varNameExprChars.int) ; i++) {\n                                            if ((!substitutionInVariablesEnabled) && ((pfxMatcher.isMatch(varNameExprChars, i, i, varNameExprChars.int)) != 0)) {\n                                                break;\n                                            } \n                                            if ((valueDelimiterMatchLen = valueDelimMatcher.isMatch(varNameExprChars, i)) != 0) {\n                                                varName = varNameExpr.substring(0, i);\n                                                varDefaultValue = varNameExpr.substring((i + valueDelimiterMatchLen));\n                                                break;\n                                            } \n                                        }\n                                    } \n                                    if (priorVariables == null) {\n                                        priorVariables = new java.util.ArrayList<java.lang.String>();\n                                        priorVariables.add(new java.lang.String(chars , offset , length));\n                                    } \n                                    checkCyclicSubstitution(varName, priorVariables);\n                                    priorVariables.add(varName);\n                                    java.lang.String java.lang.String = resolveVariable(varName, buf, startPos, endPos);\n                                    if (varValue == null) {\n                                        varValue = varDefaultValue;\n                                    } \n                                    if (varValue != null) {\n                                        final int int = varValue.length();\n                                        buf.replace(startPos, endPos, varValue);\n                                        altered = true;\n                                        int int = substitute(buf, startPos, varLen, priorVariables);\n                                        change = (change + varLen) - (endPos - startPos);\n                                        pos += change;\n                                        bufEnd += change;\n                                        lengthChange += change;\n                                        chars = buf.char[];\n                                    } \n                                    priorVariables.remove(((priorVariables.size()) - 1));\n                                    break;\n                                } else {\n                                    nestedVarCount--;\n                                    pos += endMatchLen;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (top) {\n                return altered ? 1 : 0;\n            } \n            return lengthChange;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"offset"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:501","type":"CtBinaryOperatorImpl","sourcecode":"value instanceof int[]"},"failures":[272,273,274,275,276,277,278,279,280,281,282,283,284,285],"tindex":"b7b0f614-2ea8-11e6-9deb-6b16029b01d6","method":{"position":"org.apache.commons.lang3.exception.ContextedRuntimeException:171","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.exception.ContextedRuntimeException addContextValue(final java.lang.String label, final java.lang.Object value) {\n    if (value instanceof int[]) {\n        {\n            org.apache.commons.lang3.exception.ExceptionContext.addContextValue(label, value);\n            return org.apache.commons.lang3.exception.ContextedRuntimeException.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1492","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[286],"tindex":"b7b0f615-2ea8-11e6-9deb-434c2b76a7ac","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:656","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final char[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final char char : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:369","type":"CtBinaryOperatorImpl","sourcecode":"otherRange == null"},"failures":[287],"tindex":"b7b11d26-2ea8-11e6-9deb-4bbd44c8f238","method":{"position":"org.apache.commons.lang3.Range:331","type":"CtMethodImpl","sourcecode":"public boolean isAfterRange(final org.apache.commons.lang3.Range<T> otherRange) {\n    if (otherRange == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (otherRange == null) {\n                return false;\n            } \n            return isAfter(otherRange.T);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"otherRange":"otherRange"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1686","type":"CtBinaryOperatorImpl","sourcecode":"0 == nBytes"},"failures":[288],"tindex":"b7b11d27-2ea8-11e6-9deb-a3c982275fd2","method":{"position":"org.apache.commons.lang3.Conversion:1323","type":"CtMethodImpl","sourcecode":"public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n    if (0 == srcPos) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBytes) {\n                return dst;\n            } \n            if ((((nBytes - 1) * 8) + srcPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + srcPos;\n                dst[(dstPos + i)] = ((byte)(255 & (src >> shift)));\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"srcPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:129","type":"CtBinaryOperatorImpl","sourcecode":"baseMessage != null"},"failures":[289,290,291,292],"tindex":"b7b11d28-2ea8-11e6-9deb-f5f5087cddf9","method":{"position":"org.apache.commons.lang3.exception.ContextedException:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String getFormattedExceptionMessage(final java.lang.String baseMessage) {\n    if (baseMessage != null) {\n        {\n            return org.apache.commons.lang3.exception.ExceptionContext.getFormattedExceptionMessage(baseMessage);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"baseMessage":"baseMessage"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1115","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[293,294,295,211],"tindex":"b7b11d29-2ea8-11e6-9deb-07181f389508","method":{"position":"org.apache.commons.lang3.ArrayUtils:418","type":"CtMethodImpl","sourcecode":"public static double[] clone(final double[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:940","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[296],"tindex":"b7b11d2a-2ea8-11e6-9deb-cd24dbf93df2","method":{"position":"org.apache.commons.lang3.ArrayUtils:1935","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.Object[] array, final java.lang.Object objectToFind) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, objectToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7035","type":"CtBinaryOperatorImpl","sourcecode":"(first.length()) > (second.length())"},"failures":[],"tindex":"b7b1443b-2ea8-11e6-9deb-b3d1a41779cf","method":{"position":"org.apache.commons.lang3.StringUtils:7112","type":"CtMethodImpl","sourcecode":"private static int transpositions(java.lang.CharSequence first, java.lang.CharSequence second) {\n    if ((second.length()) > (first.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (int int = 0 ; i < (first.length()) ; i++) {\n                if ((first.charAt(i)) != (second.charAt(i))) {\n                    transpositions++;\n                } \n            }\n            return transpositions / 2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"second","second":"first"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:61","type":"CtBinaryOperatorImpl","sourcecode":"(ex == null) || ((ex.getCause()) == null)"},"failures":[297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"tindex":"b7b1443c-2ea8-11e6-9deb-67126e256f9f","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:143","type":"CtMethodImpl","sourcecode":"static java.lang.Throwable checkedException(final java.lang.Throwable ex) {\n    if ((ex == null) || ((ex.getCause()) == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((ex != null) && (!(ex instanceof java.lang.RuntimeException))) && (!(ex instanceof java.lang.Error))) {\n                return ex;\n            } else {\n                throw new java.lang.IllegalArgumentException((\"Not a checked exception: \" + ex));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6136","type":"CtBinaryOperatorImpl","sourcecode":"(cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))"},"failures":[313,314,315,316],"tindex":"b7b1443d-2ea8-11e6-9deb-5b3813cc37d0","method":{"position":"org.apache.commons.lang3.StringUtils:6167","type":"CtMethodImpl","sourcecode":"public static boolean isAllUpperCase(final java.lang.CharSequence cs) {\n    if ((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n        {\n            if ((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isUpperCase(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:70","type":"CtBinaryOperatorImpl","sourcecode":"cs instanceof java.lang.String"},"failures":[317],"tindex":"b7b1443e-2ea8-11e6-9deb-95a0286e6240","method":{"position":"org.apache.commons.lang3.StringUtils:5452","type":"CtMethodImpl","sourcecode":"public static int length(final java.lang.CharSequence cs) {\n    if (cs instanceof java.lang.String) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return cs == null ? 0 : cs.length();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:201","type":"CtBinaryOperatorImpl","sourcecode":"(locale.getCountry().length()) > 0"},"failures":[318],"tindex":"b7b16b4f-2ea8-11e6-9deb-0f70cb8ddbbb","method":{"position":"org.apache.commons.lang3.time.FormatCache:176","type":"CtMethodImpl","sourcecode":"F getTimeInstance(final int timeStyle, final java.util.TimeZone timeZone, java.util.Locale locale) {\n    if ((locale.getCountry().length()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getDateTimeInstance(null, java.lang.Integer.valueOf(timeStyle), timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:505","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[319],"tindex":"b7b16b50-2ea8-11e6-9deb-0d20a6746c22","method":{"position":"org.apache.commons.lang3.BooleanUtils:465","type":"CtMethodImpl","sourcecode":"public static int toInteger(final java.lang.Boolean bool, final int trueValue, final int falseValue, final int nullValue) {\n    if (bool == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bool == null) {\n                return nullValue;\n            } \n            return bool.booleanValue() ? trueValue : falseValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:557","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[320],"tindex":"b7b16b51-2ea8-11e6-9deb-db42ed628d09","method":{"position":"org.apache.commons.lang3.text.WordUtils:96","type":"CtMethodImpl","sourcecode":"public static java.lang.String wrap(final java.lang.String str, final int wrapLength) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.WordUtils.wrap(str, wrapLength, null, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:915","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[321],"tindex":"b7b16b52-2ea8-11e6-9deb-f3882cc89f19","method":{"position":"org.apache.commons.lang3.ArrayUtils:158","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final java.lang.Object array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.toString(array, \"{}\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:454","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isBlank(str)"},"failures":[322,116],"tindex":"b7b16b53-2ea8-11e6-9deb-b7068228f11d","method":{"position":"org.apache.commons.lang3.StringUtils:7269","type":"CtMethodImpl","sourcecode":"public static boolean endsWith(final java.lang.CharSequence str, final java.lang.CharSequence suffix) {\n    if (org.apache.commons.lang3.StringUtils.isBlank(str)) {\n        {\n            return org.apache.commons.lang3.StringUtils.endsWith(str, suffix, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[323,324],"tindex":"b7b19264-2ea8-11e6-9deb-0b5774c7b808","method":{"position":"org.apache.commons.lang3.StringUtils:5509","type":"CtMethodImpl","sourcecode":"public static java.lang.String center(java.lang.String str, final int size, final char padChar) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((str == null) || (size <= 0)) {\n                return str;\n            } \n            final int int = str.length();\n            final int int = size - strLen;\n            if (pads <= 0) {\n                return str;\n            } \n            str = org.apache.commons.lang3.StringUtils.leftPad(str, (strLen + (pads / 2)), padChar);\n            str = org.apache.commons.lang3.StringUtils.rightPad(str, size, padChar);\n            return str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5080","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[197],"tindex":"b7b19265-2ea8-11e6-9deb-0320ce0b0028","method":{"position":"org.apache.commons.lang3.BooleanUtils:709","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.BooleanUtils.toBooleanObject(str)) == (java.lang.Boolean.java.lang.Boolean.java.lang.Boolean);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7364","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[325,326],"tindex":"b7b19266-2ea8-11e6-9deb-97e39b392d7e","method":{"position":"org.apache.commons.lang3.StringUtils:7512","type":"CtMethodImpl","sourcecode":"private static java.lang.String prependIfMissing(final java.lang.String str, final java.lang.CharSequence prefix, final boolean ignoreCase, final java.lang.CharSequence... prefixes) {\n    if (str == null) {\n        {\n            if (((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(prefix))) || (org.apache.commons.lang3.StringUtils.startsWith(str, prefix, ignoreCase))) {\n                return str;\n            } \n            if ((prefixes != null) && ((prefixes.int) > 0)) {\n                for (final java.lang.CharSequence java.lang.CharSequence : prefixes) {\n                    if (org.apache.commons.lang3.StringUtils.startsWith(str, p, ignoreCase)) {\n                        return str;\n                    } \n                }\n            } \n            return (prefix.toString()) + str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[],"tindex":"b7b19267-2ea8-11e6-9deb-87f55970ee29","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:900","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (calendar == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendTo(buffer, calendar.get(int));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}