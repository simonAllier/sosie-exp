{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithDate":28,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArray":227,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":84,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":109,"org.apache.commons.lang3.StringUtilsTest.testIsNoneEmpty":246,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":147,"org.apache.commons.lang3.math.NumberUtilsTest.testToByteStringI":42,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":202,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":142,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":341,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringTrueFalse_Boolean":164,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBoolean":58,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringAfter_StringString":218,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":63,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":66,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":85,"org.apache.commons.lang3.StringUtilsTest.testDifference_StringString":166,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedField":329,"org.apache.commons.lang3.math.NumberUtilsTest.testToFloatStringF":71,"org.apache.commons.lang3.text.CompositeFormatTest.testUsage":33,"org.apache.commons.lang3.ArrayUtilsTest.testContainsLong":38,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":260,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":139,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":76,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":273,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":279,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":339,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":132,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":62,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":207,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":137,"org.apache.commons.lang3.text.StrBuilderTest.testContains_StrMatcher":281,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":22,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher_int":283,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":324,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":274,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":92,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":112,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullDoubleArray":345,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":161,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":57,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":82,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":325,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":334,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":157,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphaspace":73,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":201,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":133,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":156,"org.apache.commons.lang3.CharRangeTest.testContains_Char":310,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_String":330,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":265,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithDate":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":134,"org.apache.commons.lang3.CharUtilsTest.testToCharacterObject_String":177,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":158,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissingIgnoreCase":247,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumFloat":342,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":159,"org.apache.commons.lang3.StringUtilsTest.testChomp":233,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":297,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":162,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":15,"org.apache.commons.lang3.StringUtilsTest.testRemoveEndIgnoreCase":237,"org.apache.commons.lang3.StringUtilsTest.testDifferenceAt_StringString":165,"org.apache.commons.lang3.ClassUtilsTest.test_convertClassNamesToClasses_List":326,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":106,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":108,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":319,"org.apache.commons.lang3.math.NumberUtilsTest.testIsDigits":193,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntString":240,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher_int":278,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":323,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":104,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":117,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":198,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":195,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":289,"org.apache.commons.lang3.text.StrMatcherTest.testSingleQuoteMatcher":119,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":337,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_String":178,"org.apache.commons.lang3.math.NumberUtilsTest.testToByteString":43,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_char":226,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":118,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":322,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":20,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":69,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":160,"org.apache.commons.lang3.text.StrMatcherTest.testStringMatcher_String":126,"org.apache.commons.lang3.StringUtilsTest.testRemove_String":230,"org.apache.commons.lang3.ValidateTest.testValidIndex_charSequence":29,"org.apache.commons.lang3.text.StrMatcherTest.testNoneMatcher":124,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":261,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":114,"org.apache.commons.lang3.StringUtilsTest.testReplaceOnce_StringStringString":244,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullIntArray":347,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageName_Object":172,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":168,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":335,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBeforeLast_StringString":217,"org.apache.commons.lang3.StringUtilsTest.testSwapCase_String":249,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":64,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":55,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringString":219,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_String":170,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":180,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":140,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":32,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":89,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringString":245,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":65,"org.apache.commons.lang3.StringUtilsTest.testAbbreviateMiddle":236,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithDate":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":267,"org.apache.commons.lang3.ConversionTest.testUuidToByteArray":13,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfEmpty_StringString":242,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":19,"org.apache.commons.lang3.text.StrMatcherTest.testCommaMatcher":121,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":141,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":304,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringsBetween_StringStringString":214,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_char":221,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":181,"org.apache.commons.lang3.StringUtilsTest.testIsAnyEmpty":231,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":144,"org.apache.commons.lang3.ConversionTest.testLongToByteArray":14,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":101,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":223,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_Char":220,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphanumeric_char":327,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":336,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":95,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyFloatObjectEmptyArray":258,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":70,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_Class":171,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":298,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissing":232,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":299,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthInt":307,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfChar":41,"org.apache.commons.lang3.text.StrMatcherTest.testSpaceMatcher":127,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":338,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringAfterLast_StringString":215,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_charInt":224,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":197,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":87,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":98,"org.apache.commons.lang3.text.StrBuilderTest.testLang295":312,"org.apache.commons.lang3.ArrayUtilsTest.testCloneShort":317,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":318,"org.apache.commons.lang3.CharSetTest.testContains_Char":308,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithDate":26,"org.apache.commons.lang3.text.StrMatcherTest.testCharMatcher_char":122,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":263,"org.apache.commons.lang3.ArrayUtilsTest.testReverseShortRange":111,"org.apache.commons.lang3.StringUtilsTest.testRemove_char":235,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testOrdinalIndexOf":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":149,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":280,"org.apache.commons.lang3.ConversionTest.testBinaryToByte":311,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":200,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiControl_char":256,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":107,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBefore_StringString":213,"org.apache.commons.lang3.StringUtilsIsTest.testIsNumeric":190,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":199,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":315,"org.apache.commons.lang3.ClassUtilsTest.testIsPrimitiveWrapper":115,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":75,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfByte":331,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":78,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":88,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullLongArray":349,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrimToNull":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":271,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":269,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":47,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":81,"org.apache.commons.lang3.StringUtilsTest.testRemoveStart":234,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":268,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_charArray":131,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":83,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringStringInt":254,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":155,"org.apache.commons.lang3.StringUtilsTest.testIsNotEmpty":243,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":96,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":105,"org.apache.commons.lang3.text.StrMatcherTest.testDoubleQuoteMatcher":130,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":143,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArray":59,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":94,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":276,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyFloatObject":257,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":18,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringString":3,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":68,"org.apache.commons.lang3.math.FractionTest.testConversions":44,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":77,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":288,"org.apache.commons.lang3.math.FractionTest.testCompareTo":48,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":74,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":194,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadField":255,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":264,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissing":241,"org.apache.commons.lang3.ArrayUtilsTest.testContainsChar":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":151,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":253,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_charInt":222,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":93,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":153,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":314,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":135,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":284,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":182,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_StringString":209,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":305,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyShortNull":53,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":306,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":205,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":16,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsEmpty":211,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":138,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":67,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":185,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":136,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":91,"org.apache.commons.lang3.ValidateTest.testMatchesPattern_withMessage":116,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArrayHiddenByObject":60,"org.apache.commons.lang3.text.StrMatcherTest.testSplitMatcher":129,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithDate":23,"org.apache.commons.lang3.StringUtilsTest.testRemoveEnd":252,"org.apache.commons.lang3.math.FractionTest.testAdd":0,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":99,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumeric":191,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":186,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayByte":262,"org.apache.commons.lang3.text.StrMatcherTest.testQuoteMatcher":128,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":183,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithDate":25,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":110,"org.apache.commons.lang3.math.FractionTest.testGets":45,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissingIgnoreCase":238,"org.apache.commons.lang3.math.NumberUtilsTest.testToFloatString":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":272,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_String":56,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":321,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":145,"org.apache.commons.lang3.text.StrBuilderTest.testContains_char":313,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":316,"org.apache.commons.lang3.builder.DiffTest.testGetType":102,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":90,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_String":123,"org.apache.commons.lang3.StringUtilsTest.testReplaceChars_StringStringString":239,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":309,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullFloatArray":348,"org.apache.commons.lang3.text.StrTokenizerTest.test8":11,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":113,"org.apache.commons.lang3.text.StrTokenizerTest.test5":8,"org.apache.commons.lang3.text.StrTokenizerTest.test4":7,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedField":328,"org.apache.commons.lang3.text.StrTokenizerTest.test7":10,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":216,"org.apache.commons.lang3.text.StrTokenizerTest.test6":9,"org.apache.commons.lang3.text.StrTokenizerTest.test1":4,"org.apache.commons.lang3.text.StrTokenizerTest.test3":6,"org.apache.commons.lang3.text.StrTokenizerTest.test2":5,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":21,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":179,"org.apache.commons.lang3.StringUtilsTest.testIsEmpty":250,"org.apache.commons.lang3.builder.DiffTest.testToString":100,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullByteArray":344,"org.apache.commons.lang3.StringUtilsIsTest.testIsWhitespace":259,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullCharArray":350,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullShortArray":343,"org.apache.commons.lang3.ConversionTest.testByteArrayToInt":340,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":167,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":61,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":285,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":286,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsNotEmpty":208,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":266,"org.apache.commons.lang3.CharUtilsTest.testToChar_String":175,"org.apache.commons.lang3.math.FractionTest.testSubtract":1,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":206,"org.apache.commons.lang3.StringUtilsTest.testDeleteWhitespace_String":229,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageName_Class":174,"org.apache.commons.lang3.CharUtilsTest.testToChar_String_char":176,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":188,"org.apache.commons.lang3.text.CompositeFormatTest.testCompositeFormat":34,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArray":228,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyBooleanObjectNull":35,"org.apache.commons.lang3.text.StrMatcherTest.testTabMatcher":125,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntString":248,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":37,"org.apache.commons.lang3.math.FractionTest.testToProperString":49,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":50,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":97,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":17,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":86,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_Object":169,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":204,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":290,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":287,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":292,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":291,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":294,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":293,"org.apache.commons.lang3.ValidateTest.testValidIndex_withMessage_charSequence":30,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":296,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":295,"org.apache.commons.lang3.text.StrMatcherTest.testTrimMatcher":120,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":303,"org.apache.commons.lang3.ValidateTest.testExclusiveBetweenLong_withMessage":351,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfByteWithStartIndex":332,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":320,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringCharArray":225,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":148,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageName_String":173,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":302,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":301,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":196,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":12,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":163,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher":282,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":154,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher":277,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":300,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringStringWithSupplementaryChars":2,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementCharArray":39,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":203,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":275,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":103,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":184,"org.apache.commons.lang3.text.WordUtilsTest.testSwapCase_String":189,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullBooleanArray":346,"org.apache.commons.lang3.math.FractionTest.testToString":46,"org.apache.commons.lang3.StringUtilsTest.testRemoveStartIgnoreCase":251,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_String":212,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":150,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlpha":192,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":31,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":333,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":187,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":270,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayLong":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":146,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyIntNull":54},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:797","type":"CtBinaryOperatorImpl","sourcecode":"fraction == null"},"failures":[0,1],"tindex":"a012dfc9-2ed2-11e6-bb82-ef12b271c40d","method":{"position":"org.apache.commons.lang3.math.Fraction:740","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.math.Fraction addSub(final org.apache.commons.lang3.math.Fraction fraction, final boolean isAdd) {\n    if (fraction == null) {\n        {\n            if (fraction == null) {\n                throw new java.lang.IllegalArgumentException(\"The fraction must not be null\");\n            } \n            if ((int) == 0) {\n                return isAdd ? fraction : fraction.negate();\n            } \n            if ((fraction.int) == 0) {\n                return org.apache.commons.lang3.math.Fraction.this;\n            } \n            final int int = org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, fraction.int);\n            if (d1 == 1) {\n                final int int = org.apache.commons.lang3.math.Fraction.mulAndCheck(int, fraction.int);\n                final int int = org.apache.commons.lang3.math.Fraction.mulAndCheck(fraction.int, int);\n                return new org.apache.commons.lang3.math.Fraction((isAdd ? org.apache.commons.lang3.math.Fraction.addAndCheck(uvp, upv) : org.apache.commons.lang3.math.Fraction.subAndCheck(uvp, upv)) , org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int, fraction.int));\n            } \n            final java.math.BigInteger java.math.BigInteger = java.math.BigInteger.valueOf(int).multiply(java.math.BigInteger.valueOf(((fraction.int) / d1)));\n            final java.math.BigInteger java.math.BigInteger = java.math.BigInteger.valueOf(fraction.int).multiply(java.math.BigInteger.valueOf(((int) / d1)));\n            final java.math.BigInteger java.math.BigInteger = isAdd ? uvp.add(upv) : uvp.subtract(upv);\n            final int int = t.mod(java.math.BigInteger.valueOf(d1)).intValue();\n            final int int = tmodd1 == 0 ? d1 : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(tmodd1, d1);\n            final java.math.BigInteger java.math.BigInteger = t.divide(java.math.BigInteger.valueOf(d2));\n            if ((w.bitLength()) > 31) {\n                throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\");\n            } \n            return new org.apache.commons.lang3.math.Fraction(w.intValue() , org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((int) / d1), ((fraction.int) / d2)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fraction":"fraction"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:396","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.EqualsBuilder.isRegistered(lhs, rhs)"},"failures":[],"tindex":"a013ca2a-2ed2-11e6-bb82-f54d09b89e5e","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:247","type":"CtMethodImpl","sourcecode":"public static boolean reflectionEquals(final java.lang.Object lhs, final java.lang.Object rhs, final java.util.Collection<java.lang.String> excludeFields) {\n    if (org.apache.commons.lang3.builder.EqualsBuilder.isRegistered(lhs, rhs)) {\n        {\n            return org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(lhs, rhs, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"rhs"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:713","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"a013f13b-2ed2-11e6-bb82-7134cc769bbd","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:513","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(java.lang.CharSequence source) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            return replace(source, 0, source.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1154","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(seq)"},"failures":[2,3],"tindex":"a013f13c-2ed2-11e6-bb82-69ec7131904a","method":{"position":"org.apache.commons.lang3.StringUtils:1759","type":"CtMethodImpl","sourcecode":"public static int indexOfAnyBut(final java.lang.CharSequence seq, final java.lang.CharSequence searchChars) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(seq)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            final int int = seq.length();\n            for (int int = 0 ; i < strLen ; i++) {\n                final char char = seq.charAt(i);\n                final boolean boolean = (org.apache.commons.lang3.CharSequenceUtils.indexOf(searchChars, ch, 0)) >= 0;\n                if (((i + 1) < strLen) && (java.lang.Character.isHighSurrogate(ch))) {\n                    final char char = seq.charAt((i + 1));\n                    if (chFound && ((org.apache.commons.lang3.CharSequenceUtils.indexOf(searchChars, ch2, 0)) < 0)) {\n                        return i;\n                    } \n                } else {\n                    if (!chFound) {\n                        return i;\n                    } \n                }\n            }\n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"seq"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"len < 5"},"failures":[4,5,6,7,8,9,10,11,12],"tindex":"a014184d-2ed2-11e6-bb82-e1bd8be43a72","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:735","type":"CtMethodImpl","sourcecode":"private int readWithQuotes(final char[] srcChars, final int start, final int len, final org.apache.commons.lang3.text.StrBuilder workArea, final java.util.List<java.lang.String> tokenList, final int quoteStart, final int quoteLen) {\n    if (quoteStart < 5) {\n        {\n            workArea.clear();\n            int int = start;\n            boolean boolean = quoteLen > 0;\n            int int = 0;\n            while (pos < len) {\n                if (quoting) {\n                    if (isQuote(srcChars, pos, len, quoteStart, quoteLen)) {\n                        if (isQuote(srcChars, (pos + quoteLen), len, quoteStart, quoteLen)) {\n                            workArea.append(srcChars, pos, quoteLen);\n                            pos += quoteLen * 2;\n                            trimStart = workArea.size();\n                            continue;\n                        } \n                        quoting = false;\n                        pos += quoteLen;\n                        continue;\n                    } \n                    workArea.append(srcChars[(pos++)]);\n                    trimStart = workArea.size();\n                } else {\n                    final int int = getDelimiterMatcher().isMatch(srcChars, pos, start, len);\n                    if (delimLen > 0) {\n                        addToken(tokenList, workArea.substring(0, trimStart));\n                        return pos + delimLen;\n                    } \n                    if ((quoteLen > 0) && (isQuote(srcChars, pos, len, quoteStart, quoteLen))) {\n                        quoting = true;\n                        pos += quoteLen;\n                        continue;\n                    } \n                    final int int = getIgnoredMatcher().isMatch(srcChars, pos, start, len);\n                    if (ignoredLen > 0) {\n                        pos += ignoredLen;\n                        continue;\n                    } \n                    final int int = getTrimmerMatcher().isMatch(srcChars, pos, start, len);\n                    if (trimmedLen > 0) {\n                        workArea.append(srcChars, pos, trimmedLen);\n                        pos += trimmedLen;\n                        continue;\n                    } \n                    workArea.append(srcChars[(pos++)]);\n                    trimStart = workArea.size();\n                }\n            }\n            addToken(tokenList, workArea.substring(0, trimStart));\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"quoteStart"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1686","type":"CtBinaryOperatorImpl","sourcecode":"0 == nBytes"},"failures":[13,14],"tindex":"a014666e-2ed2-11e6-bb82-4520405e2aac","method":{"position":"org.apache.commons.lang3.Conversion:1289","type":"CtMethodImpl","sourcecode":"public static byte[] longToByteArray(final long src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n    if (0 == nBytes) {\n        {\n            if (0 == nBytes) {\n                return dst;\n            } \n            if ((((nBytes - 1) * 8) + srcPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 64\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + srcPos;\n                dst[(dstPos + i)] = ((byte)(255 & (src >> shift)));\n            }\n            return dst;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"nBytes"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1083","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"a0148d7f-2ed2-11e6-bb82-6359e6565d4e","method":{"position":"org.apache.commons.lang3.Validate:1081","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void exclusiveBetween(long start, long end, long value) {\n    if ((value <= value) || (value >= start)) {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"value","end":"start","value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1072","type":"CtBinaryOperatorImpl","sourcecode":"suffix == null"},"failures":[15,16,17,18,19,20],"tindex":"a0148d80-2ed2-11e6-bb82-d93d9d0638ea","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1071","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setVariableSuffix(final java.lang.String suffix) {\n    if (suffix == null) {\n        {\n            if (suffix == null) {\n                throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\");\n            } \n            return setVariableSuffixMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(suffix));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suffix":"suffix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1102","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"a014b491-2ed2-11e6-bb82-495bc91b363c","method":{"position":"org.apache.commons.lang3.Validate:1148","type":"CtMethodImpl","sourcecode":"public static void exclusiveBetween(double start, double end, double value, java.lang.String message) {\n    if (message == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"message"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:282","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[21,22,23,24,25,26,27,28],"tindex":"a014b492-2ed2-11e6-bb82-895f248f2cb8","method":{"position":"org.apache.commons.lang3.time.DateUtils:1289","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMilliseconds(final java.util.Date date, final int fragment) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1913","type":"CtBinaryOperatorImpl","sourcecode":"index >= 0"},"failures":[29,30],"tindex":"a014dba3-2ed2-11e6-bb82-bb685c85faeb","method":{"position":"org.apache.commons.lang3.Validate:744","type":"CtMethodImpl","sourcecode":"public static <T extends java.lang.CharSequence>T validIndex(final T chars, final int index, final java.lang.String message, final java.lang.Object... values) {\n    if (index >= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(chars);\n            if ((index < 0) || (index >= (chars.length()))) {\n                throw new java.lang.IndexOutOfBoundsException(java.lang.String.format(message, values));\n            } \n            return chars;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:253","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[31,32],"tindex":"a01502b4-2ed2-11e6-bb82-4baf4c7b9418","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:801","type":"CtMethodImpl","sourcecode":"public static final java.lang.String unescapeCsv(final java.lang.String input) {\n    if (input != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:414","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[33,34],"tindex":"a01502b5-2ed2-11e6-bb82-7db2c0891d88","method":{"position":"org.apache.commons.lang3.text.CompositeFormat:83","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object parseObject(final java.lang.String source, final java.text.ParsePosition pos) {\n    if (source == null) {\n        {\n            return java.text.Format.parseObject(source, pos);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"a01529c6-2ed2-11e6-bb82-97461f60ed01","method":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:62","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.exception.DefaultExceptionContext setContextValue(final java.lang.String label, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>> java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>> = java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.iterator() ; iter.hasNext() ; ) {\n                final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> = iter.next();\n                if (org.apache.commons.lang3.StringUtils.equals(label, p.getKey())) {\n                    iter.remove();\n                } \n            }\n            addContextValue(label, value);\n            return org.apache.commons.lang3.exception.DefaultExceptionContext.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:623","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"a01550d7-2ed2-11e6-bb82-a5edeed0422d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:914","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.StringBuilder str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(str).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1009","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[35],"tindex":"a01550d8-2ed2-11e6-bb82-d3a7cd7599d4","method":{"position":"org.apache.commons.lang3.ArrayUtils:832","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean[] nullToEmpty(final java.lang.Boolean[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Boolean[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:796","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[36],"tindex":"a01577e9-2ed2-11e6-bb82-b32eed517554","method":{"position":"org.apache.commons.lang3.ArrayUtils:914","type":"CtMethodImpl","sourcecode":"public static long[] subarray(final long[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.long[];\n            } \n            final long[] long[] = new long[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:489","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[37],"tindex":"a01577ea-2ed2-11e6-bb82-9307e6dfdd9f","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:347","type":"CtMethodImpl","sourcecode":"public static int indexOfType(final java.lang.Throwable throwable, final java.lang.Class<?> type) {\n    if (throwable == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, 0, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1092","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"a0159efb-2ed2-11e6-bb82-61d92805cc98","method":{"position":"org.apache.commons.lang3.ArrayUtils:5444","type":"CtMethodImpl","sourcecode":"public static short[] removeElements(final short[] array, final short... values) {\n    if (values == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final short short : values) {\n                final java.lang.Short java.lang.Short = java.lang.Short.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Short java.lang.Short = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.shortValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"values"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:201","type":"CtBinaryOperatorImpl","sourcecode":"(locale.getCountry().length()) > 0"},"failures":[],"tindex":"a015c60c-2ed2-11e6-bb82-7f5a7977e86e","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:250","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern, final java.util.Locale locale) {\n    if ((locale.getCountry().length()) > 0) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, null, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:970","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[38],"tindex":"a015c60d-2ed2-11e6-bb82-879e57c74ad2","method":{"position":"org.apache.commons.lang3.ArrayUtils:2090","type":"CtMethodImpl","sourcecode":"public static boolean contains(final long[] array, final long valueToFind) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1035","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[39,40,41],"tindex":"a015ed1e-2ed2-11e6-bb82-31e108b38ecf","method":{"position":"org.apache.commons.lang3.ArrayUtils:2313","type":"CtMethodImpl","sourcecode":"public static int indexOf(final char[] array, final char valueToFind) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1454","type":"CtFieldReadImpl","sourcecode":"useShortClassName"},"failures":[],"tindex":"a015ed1f-2ed2-11e6-bb82-f3089c11f1d2","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setUseShortClassName(final boolean useShortClassName) {\n    if (useShortClassName) {\n        {\n            super.setUseShortClassName(useShortClassName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"useShortClassName":"useShortClassName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2949","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[42,43],"tindex":"a0161430-2ed2-11e6-bb82-3d302b536a80","method":{"position":"org.apache.commons.lang3.math.NumberUtils:323","type":"CtMethodImpl","sourcecode":"public static byte toByte(final java.lang.String str, final byte defaultValue) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return defaultValue;\n            } \n            try {\n                return java.lang.Byte.parseByte(str);\n            } catch (final java.lang.NumberFormatException nfe) {\n                return defaultValue;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.ClassNotFoundException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1128","type":"CtBinaryOperatorImpl","sourcecode":"(className.length()) > 0"},"failures":[],"tindex":"a0161431-2ed2-11e6-bb82-13b9bf448415","method":{"position":"org.apache.commons.lang3.ClassUtils:820","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getClass(final java.lang.ClassLoader classLoader, final java.lang.String className, final boolean initialize) throws java.lang.ClassNotFoundException {\n    if ((className.length()) > 0) {\n        {\n            try {\n                java.lang.Class<?> java.lang.Class<?>;\n                if (org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.containsKey(className)) {\n                    final java.lang.String java.lang.String = \"[\" + (org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(className));\n                    clazz = java.lang.Class.forName(clsName, initialize, classLoader).getComponentType();\n                } else {\n                    clazz = java.lang.Class.forName(org.apache.commons.lang3.ClassUtils.toCanonicalName(className), initialize, classLoader);\n                }\n                return clazz;\n            } catch (final java.lang.ClassNotFoundException ex) {\n                final int int = className.lastIndexOf(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char);\n                if (lastDotIndex != (-1)) {\n                    try {\n                        return org.apache.commons.lang3.ClassUtils.getClass(classLoader, (((className.substring(0, lastDotIndex)) + (org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char)) + (className.substring((lastDotIndex + 1)))), initialize);\n                    } catch (final java.lang.ClassNotFoundException ex2) {\n                    }\n                } \n                throw ex;\n            }\n        }\n    } else {\n        throw new java.lang.ClassNotFoundException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"className"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:183","type":"CtBinaryOperatorImpl","sourcecode":"whole < 0"},"failures":[44,45,46,47,48,49,50],"tindex":"a0163b42-2ed2-11e6-bb82-99d3e1724e73","method":{"position":"org.apache.commons.lang3.math.Fraction:172","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(final int whole, final int numerator, final int denominator) {\n    if (denominator < 0) {\n        {\n            if (denominator == 0) {\n                throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n            } \n            if (denominator < 0) {\n                throw new java.lang.ArithmeticException(\"The denominator must not be negative\");\n            } \n            if (numerator < 0) {\n                throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n            } \n            long long;\n            if (whole < 0) {\n                numeratorValue = (whole * ((long)(denominator))) - numerator;\n            } else {\n                numeratorValue = (whole * ((long)(denominator))) + numerator;\n            }\n            if ((numeratorValue < (java.lang.Integer.java.lang.Integer.int)) || (numeratorValue > (java.lang.Integer.java.lang.Integer.int))) {\n                throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\");\n            } \n            return new org.apache.commons.lang3.math.Fraction(((int)(numeratorValue)) , denominator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"whole":"denominator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1792","type":"CtBinaryOperatorImpl","sourcecode":"arraySeparator == null"},"failures":[51],"tindex":"a0163b43-2ed2-11e6-bb82-21d6cd557e8c","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1791","type":"CtMethodImpl","sourcecode":"protected void setArraySeparator(java.lang.String arraySeparator) {\n    if (arraySeparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (arraySeparator == null) {\n                arraySeparator = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = arraySeparator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arraySeparator":"arraySeparator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:634","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[52],"tindex":"a0166254-2ed2-11e6-bb82-87cc8282a615","method":{"position":"org.apache.commons.lang3.StringUtils:1007","type":"CtMethodImpl","sourcecode":"public static int ordinalIndexOf(final java.lang.CharSequence str, final java.lang.CharSequence searchStr, final int ordinal) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:995","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[53],"tindex":"a0166255-2ed2-11e6-bb82-bd25aa817712","method":{"position":"org.apache.commons.lang3.ArrayUtils:572","type":"CtMethodImpl","sourcecode":"public static short[] nullToEmpty(final short[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[54],"tindex":"a0166256-2ed2-11e6-bb82-b55bc6b6be80","method":{"position":"org.apache.commons.lang3.ArrayUtils:552","type":"CtMethodImpl","sourcecode":"public static int[] nullToEmpty(final int[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5588","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[55],"tindex":"a0166257-2ed2-11e6-bb82-d12f5738b4a6","method":{"position":"org.apache.commons.lang3.StringUtils:3013","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitPreserveAllTokens(final java.lang.String str, final java.lang.String separatorChars) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChars, (-1), true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:816","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"a0168968-2ed2-11e6-bb82-e33c3b8f59e5","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:349","type":"CtMethodImpl","sourcecode":"public static java.lang.String toStringExclude(final java.lang.Object object, final java.lang.String... excludeFieldNames) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.builder.ReflectionToStringBuilder(object).setExcludeFieldNames(excludeFieldNames).toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:127","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[56],"tindex":"a0168969-2ed2-11e6-bb82-f56aaf26af47","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1742","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder deleteAll(final java.lang.String str) {\n    if (str == \"true\") {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = str == null ? 0 : str.length();\n                    if (len > 0) {\n                        int int = indexOf(str, 0);\n                        while (index >= 0) {\n                            deleteImpl(index, (index + len), len);\n                            index = indexOf(str, index);\n                        }\n                    } \n                    return org.apache.commons.lang3.text.StrBuilder.this;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:138","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[57,58,59,60],"tindex":"a016896a-2ed2-11e6-bb82-f7660e206595","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:584","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final boolean lhs, final boolean rhs) {\n    if (rhs != rhs) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == false) {\n                int = -1;\n            } else {\n                int = +1;\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:345","type":"CtArrayReadImpl","sourcecode":"src[srcPos]"},"failures":[61,62],"tindex":"a016b07b-2ed2-11e6-bb82-3fe81b5e4012","method":{"position":"org.apache.commons.lang3.Conversion:405","type":"CtMethodImpl","sourcecode":"public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n    if (src[srcPos]) {\n        {\n            if ((src.int) > 8) {\n                throw new java.lang.IllegalArgumentException((\"src.length>8: src.length=\" + (src.int)));\n            } \n            if (((src.int) - srcPos) < 4) {\n                throw new java.lang.IllegalArgumentException((((\"src.length-srcPos<4: src.length=\" + (src.int)) + \", srcPos=\") + srcPos));\n            } \n            if (src[(srcPos + 3)]) {\n                if (src[(srcPos + 2)]) {\n                    if (src[(srcPos + 1)]) {\n                        if (src[srcPos]) {\n                            return 'f';\n                        } else {\n                            return '7';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return 'b';\n                        } else {\n                            return '3';\n                        }\n                    }\n                } else {\n                    if (src[(srcPos + 1)]) {\n                        if (src[srcPos]) {\n                            return 'd';\n                        } else {\n                            return '5';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return '9';\n                        } else {\n                            return '1';\n                        }\n                    }\n                }\n            } else {\n                if (src[(srcPos + 2)]) {\n                    if (src[(srcPos + 1)]) {\n                        if (src[srcPos]) {\n                            return 'e';\n                        } else {\n                            return '6';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return 'a';\n                        } else {\n                            return '2';\n                        }\n                    }\n                } else {\n                    if (src[(srcPos + 1)]) {\n                        if (src[srcPos]) {\n                            return 'c';\n                        } else {\n                            return '4';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return '8';\n                        } else {\n                            return '0';\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"srcPos","src":"src"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:448","type":"CtBinaryOperatorImpl","sourcecode":"(nullText) == null"},"failures":[],"tindex":"a016d78c-2ed2-11e6-bb82-ffcb75ba9591","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:430","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setNullText(final java.lang.String nullText) {\n    if (nullText == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setNullText(nullText);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"nullText"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:623","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"a016d78d-2ed2-11e6-bb82-83cdddace718","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1175","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[63,64,65,66,67,68,69,70],"tindex":"a016d78e-2ed2-11e6-bb82-9dc29a02df69","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:302","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Date date, final java.lang.String pattern, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (pattern == null) {\n        {\n            final org.apache.commons.lang3.time.FastDateFormat org.apache.commons.lang3.time.FastDateFormat = org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale);\n            return df.format(date);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:507","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"a016d78f-2ed2-11e6-bb82-67776afcecb8","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:212","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final byte lhs, final byte rhs) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Byte>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Byte getLeft() {\n                        return java.lang.Byte.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Byte getRight() {\n                        return java.lang.Byte.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2119","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[71,72],"tindex":"a017e900-2ed2-11e6-bb82-e964eb49637c","method":{"position":"org.apache.commons.lang3.math.NumberUtils:221","type":"CtMethodImpl","sourcecode":"public static float toFloat(final java.lang.String str, final float defaultValue) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return defaultValue;\n            } \n            try {\n                return java.lang.Float.parseFloat(str);\n            } catch (final java.lang.NumberFormatException nfe) {\n                return defaultValue;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5882","type":"CtBinaryOperatorImpl","sourcecode":"cs == null"},"failures":[73],"tindex":"a017e901-2ed2-11e6-bb82-8b919b936ea2","method":{"position":"org.apache.commons.lang3.StringUtils:5881","type":"CtMethodImpl","sourcecode":"public static boolean isAlphaSpace(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cs == null) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if (((java.lang.Character.isLetter(cs.charAt(i))) == false) && ((cs.charAt(i)) != ' ')) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1660","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"a0181012-2ed2-11e6-bb82-ddb23341418a","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:783","type":"CtMethodImpl","sourcecode":"public static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(final java.lang.reflect.Type type, final java.lang.Class<?> toClass) {\n    if (type instanceof java.lang.Class<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(type, toClass, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1298","type":"CtBinaryOperatorImpl","sourcecode":"typeVarAssigns == null"},"failures":[],"tindex":"a0181013-2ed2-11e6-bb82-a5ec7f6b2e28","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:489","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Type unrollVariableAssignments(java.lang.reflect.TypeVariable<?> var, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (typeVarAssigns == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.reflect.Type java.lang.reflect.Type;\n            do {\n                result = typeVarAssigns.get(var);\n                if ((result instanceof java.lang.reflect.TypeVariable<?>) && (!(result.equals(var)))) {\n                    var = ((java.lang.reflect.TypeVariable<?>)(result));\n                    continue;\n                } \n                break;\n            } while (true );\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeVarAssigns":"typeVarAssigns"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1092","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[111],"tindex":"a0181014-2ed2-11e6-bb82-45c2d2bee2c7","method":{"position":"org.apache.commons.lang3.ArrayUtils:1853","type":"CtMethodImpl","sourcecode":"public static void reverse(final short[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            short short;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:119","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 255"},"failures":[112,113,114],"tindex":"a0183725-2ed2-11e6-bb82-79b793619c88","method":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.String toUtf16Escape(final int codepoint) {\n    if (codepoint > 255) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final char[] char[] = java.lang.Character.toChars(codepoint);\n            return ((\"\\\\u\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + \"\\\\u\") + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepoint"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:227","type":"CtInvocationImpl","sourcecode":"type.isArray()"},"failures":[115],"tindex":"a0183726-2ed2-11e6-bb82-5d6bbb81defc","method":{"position":"org.apache.commons.lang3.ClassUtils:558","type":"CtMethodImpl","sourcecode":"public static boolean isPrimitiveWrapper(final java.lang.Class<?> type) {\n    if (type.isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:874","type":"CtBinaryOperatorImpl","sourcecode":"(java.util.regex.Pattern.matches(pattern, input)) == false"},"failures":[116],"tindex":"a0185e37-2ed2-11e6-bb82-a1585a605274","method":{"position":"org.apache.commons.lang3.Validate:872","type":"CtMethodImpl","sourcecode":"public static void matchesPattern(final java.lang.CharSequence input, final java.lang.String pattern, final java.lang.String message, final java.lang.Object... values) {\n    if ((java.util.regex.Pattern.matches(pattern, input)) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.regex.Pattern.matches(pattern, input)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","pattern":"pattern"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:135","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"a0185e38-2ed2-11e6-bb82-3b64c0f67483","method":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:292","type":"CtMethodImpl","sourcecode":"public boolean isException(final java.lang.String name) {\n    if (name == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkName(name);\n            return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.containsKey(name);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:975","type":"CtBinaryOperatorImpl","sourcecode":"prefixMatcher == null"},"failures":[117],"tindex":"a0185e39-2ed2-11e6-bb82-c9821d293153","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:974","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setVariablePrefixMatcher(final org.apache.commons.lang3.text.StrMatcher prefixMatcher) {\n    if (prefixMatcher == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (prefixMatcher == null) {\n                throw new java.lang.IllegalArgumentException(\"Variable prefix matcher must not be null!\");\n            } \n            org.apache.commons.lang3.text.StrSubstitutor.this.org.apache.commons.lang3.text.StrMatcher = prefixMatcher;\n            return org.apache.commons.lang3.text.StrSubstitutor.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prefixMatcher":"prefixMatcher"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"a018854a-2ed2-11e6-bb82-f1561ac50e35","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:908","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value < 100) {\n                buffer.append(((char)((value / 10) + '0')));\n                buffer.append(((char)((value % 10) + '0')));\n            } else {\n                buffer.append(java.lang.Integer.toString(value));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:198","type":"CtBinaryOperatorImpl","sourcecode":"(locale.getVariant().length()) > 0"},"failures":[118],"tindex":"a018854b-2ed2-11e6-bb82-255cef494b50","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:353","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(final int dateStyle, final int timeStyle, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if ((locale.getVariant().length()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateTimeInstance(dateStyle, timeStyle, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2057","type":"CtBinaryOperatorImpl","sourcecode":"pos > 0"},"failures":[119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,15,138,16,17,139,140,141,142,143,144,145,146,147,148,149,18,150,151,152,153,154,155,156,19,157,158,159,160,161,162,163],"tindex":"a018854c-2ed2-11e6-bb82-e38d37092d16","method":{"position":"org.apache.commons.lang3.text.StrMatcher:267","type":"CtMethodImpl","sourcecode":"public int isMatch(final char[] buffer, final int pos) {\n    if (pos > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isMatch(buffer, pos, 0, buffer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"pos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[164],"tindex":"a018854d-2ed2-11e6-bb82-45f13da2a33f","method":{"position":"org.apache.commons.lang3.BooleanUtils:758","type":"CtMethodImpl","sourcecode":"public static java.lang.String toStringTrueFalse(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            return org.apache.commons.lang3.BooleanUtils.toString(bool, \"true\", \"false\", null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"a018ac5e-2ed2-11e6-bb82-63f70bf1bf4f","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:744","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendTo(buffer, calendar.get(int));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:801","type":"CtBinaryOperatorImpl","sourcecode":"(cs1 instanceof java.lang.String) && (cs2 instanceof java.lang.String)"},"failures":[165,166],"tindex":"a018ac5f-2ed2-11e6-bb82-532ea2007a29","method":{"position":"org.apache.commons.lang3.StringUtils:6540","type":"CtMethodImpl","sourcecode":"public static int indexOfDifference(final java.lang.CharSequence cs1, final java.lang.CharSequence cs2) {\n    if ((cs1 instanceof java.lang.String) && (cs1 instanceof java.lang.String)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cs1 == cs2) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if ((cs1 == null) || (cs2 == null)) {\n                return 0;\n            } \n            int int;\n            for (i = 0 ; (i < (cs1.length())) && (i < (cs2.length())) ; ++i) {\n                if ((cs1.charAt(i)) != (cs2.charAt(i))) {\n                    break;\n                } \n            }\n            if ((i < (cs2.length())) || (i < (cs1.length()))) {\n                return i;\n            } \n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs1":"cs1","cs2":"cs1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1764","type":"CtBinaryOperatorImpl","sourcecode":"index >= 0"},"failures":[167],"tindex":"a018d370-2ed2-11e6-bb82-d58fddbe50b1","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1635","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final long value) {\n    if (index >= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return insert(index, java.lang.String.valueOf(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:554","type":"CtBinaryOperatorImpl","sourcecode":"str == \"true\""},"failures":[168],"tindex":"a018d371-2ed2-11e6-bb82-69256574cbe8","method":{"position":"org.apache.commons.lang3.StringUtils:2631","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] split(final java.lang.String str, final java.lang.String separatorChars) {\n    if (str == \"true\") {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChars, (-1), false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:195","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(className)"},"failures":[169,170,171,172,173,174],"tindex":"a018d372-2ed2-11e6-bb82-1fe2cd14e641","method":{"position":"org.apache.commons.lang3.ClassUtils:296","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPackageName(java.lang.String className) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(className)) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(className)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            while ((className.charAt(0)) == '[') {\n                className = className.substring(1);\n            }\n            if (((className.charAt(0)) == 'L') && ((className.charAt(((className.length()) - 1))) == ';')) {\n                className = className.substring(1);\n            } \n            final int int = className.lastIndexOf(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char);\n            if (i == (-1)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return className.substring(0, i);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"className"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[],"tindex":"a018fa83-2ed2-11e6-bb82-b5146602d14e","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1024","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (calendar == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = calendar.get(java.util.Calendar.java.util.Calendar.int);\n            if (value == 0) {\n                value = (calendar.getLeastMaximum(java.util.Calendar.java.util.Calendar.int)) + 1;\n            } \n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"(ch >= 56192) && (ch <= 56319)"},"failures":[],"tindex":"a018fa84-2ed2-11e6-bb82-dbb50e3ce0a4","method":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:68","type":"CtMethodImpl","sourcecode":"private boolean isOctalDigit(char ch) {\n    if ((ch >= 56192) && (ch <= 56319)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch >= '0') && (ch <= '7');\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6071","type":"CtBinaryOperatorImpl","sourcecode":"cs == null"},"failures":[175,176,177,178,173,179,123,126,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,3,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254],"tindex":"a0192195-2ed2-11e6-bb82-7f361fe0388b","method":{"position":"org.apache.commons.lang3.StringUtils:218","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (cs == null) || ((cs.length()) == 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:172","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(field))"},"failures":[255],"tindex":"a0192196-2ed2-11e6-bb82-d5ed01d88c01","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:360","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readField(final java.lang.reflect.Field field, final java.lang.Object target) throws java.lang.IllegalAccessException {\n    if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(field))) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readField(field, target, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtBinaryOperatorImpl","sourcecode":"index != 0"},"failures":[],"tindex":"a01948a7-2ed2-11e6-bb82-e3ac99202397","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:393","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index != 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (index != 0) {\n                throw new java.lang.IllegalStateException(\"CsvUnescaper should never reach the [1] index\");\n            } \n            if (((input.charAt(0)) != (org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.char)) || ((input.charAt(((input.length()) - 1))) != (org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.char))) {\n                out.write(input.toString());\n                return java.lang.Character.codePointCount(input, 0, input.length());\n            } \n            final java.lang.String java.lang.String = input.subSequence(1, ((input.length()) - 1)).toString();\n            if (org.apache.commons.lang3.StringUtils.containsAny(quoteless, org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.char[])) {\n                out.write(org.apache.commons.lang3.StringUtils.replace(quoteless, ((org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.java.lang.String) + (org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.java.lang.String)), org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.java.lang.String));\n            } else {\n                out.write(input.toString());\n            }\n            return java.lang.Character.codePointCount(input, 0, input.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:353","type":"CtBinaryOperatorImpl","sourcecode":"ch < 16"},"failures":[256],"tindex":"a0196fb8-2ed2-11e6-bb82-bfa8b278515f","method":{"position":"org.apache.commons.lang3.CharUtils:440","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiControl(final char ch) {\n    if (ch < 16) {\n        {\n            return (ch < 32) || (ch == 127);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3388","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[257,258],"tindex":"a0196fb9-2ed2-11e6-bb82-d75ecc2074f2","method":{"position":"org.apache.commons.lang3.ArrayUtils:812","type":"CtMethodImpl","sourcecode":"public static java.lang.Float[] nullToEmpty(final java.lang.Float[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Float[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6168","type":"CtBinaryOperatorImpl","sourcecode":"(cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))"},"failures":[259],"tindex":"a01996ca-2ed2-11e6-bb82-87ff8b0fb605","method":{"position":"org.apache.commons.lang3.StringUtils:6103","type":"CtMethodImpl","sourcecode":"public static boolean isWhitespace(final java.lang.CharSequence cs) {\n    if ((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cs == null) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isWhitespace(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:173","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"a01996cb-2ed2-11e6-bb82-3b5ec3b9567e","method":{"position":"org.apache.commons.lang3.builder.RecursiveToStringStyle:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void appendDetail(java.lang.StringBuffer buffer, java.lang.String fieldName, java.util.Collection<?> coll) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendClassName(buffer, coll);\n            appendIdentityHashCode(buffer, coll);\n            appendDetail(buffer, fieldName, coll.toArray());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:255","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"a019bddc-2ed2-11e6-bb82-2f349ab3c411","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:576","type":"CtMethodImpl","sourcecode":"public static void writeDeclaredStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (fieldName == null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredStaticField(cls, fieldName, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3138","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[260,261],"tindex":"a019bddd-2ed2-11e6-bb82-79021e579d2c","method":{"position":"org.apache.commons.lang3.ArrayUtils:3520","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final int[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1118","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[262],"tindex":"a019bdde-2ed2-11e6-bb82-2b88da2162d9","method":{"position":"org.apache.commons.lang3.ArrayUtils:1074","type":"CtMethodImpl","sourcecode":"public static byte[] subarray(final byte[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive < 0) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.byte[];\n            } \n            final byte[] byte[] = new byte[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"startIndexInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:255","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[263,264,265,266,267,267,268,269,270,271,272,272,273,274,275],"tindex":"a019e4ef-2ed2-11e6-bb82-e3c466d90eed","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:631","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value) {\n    if (value == null) {\n        {\n            buffer.append(java.lang.String);\n            buffer.append(getShortClassName(value.getClass()));\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:339","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"a019e4f0-2ed2-11e6-bb82-292727e820e1","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:547","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final int lhs, final int rhs) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Integer>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Integer getLeft() {\n                        return java.lang.Integer.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Integer getRight() {\n                        return java.lang.Integer.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:945","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"a01a0c01-2ed2-11e6-bb82-af2b7b57c5c4","method":{"position":"org.apache.commons.lang3.Validate:966","type":"CtMethodImpl","sourcecode":"public static void inclusiveBetween(long start, long end, long value, java.lang.String message) {\n    if ((start < end) || (value > value)) {\n        {\n            if ((value < start) || (value > end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"value","value":"start"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2057","type":"CtBinaryOperatorImpl","sourcecode":"pos > 0"},"failures":[276,277,278,279,280,281,282,283,119,121,122,125,127,130,284,285,286,287,288,289,290,291,292,293,294,295,296,4,5,6,7,8,9,10,11,297,298,299,300,301,302,12,303,304,305,306],"tindex":"a01a3312-2ed2-11e6-bb82-8bb0e6477f39","method":{"position":"org.apache.commons.lang3.text.StrMatcher:333","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n    if (bufferEnd > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (char) == (buffer[pos]) ? 1 : 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"bufferEnd"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3881","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[307],"tindex":"a01a3313-2ed2-11e6-bb82-81cbc23113cb","method":{"position":"org.apache.commons.lang3.ArrayUtils:1263","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final int[] array1, final int[] array2) {\n    if (array2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:464","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isTitleCase(ch)"},"failures":[308,309,310,195,196,197,198,199,200,201,202,203,204],"tindex":"a01a3314-2ed2-11e6-bb82-1d18c8940350","method":{"position":"org.apache.commons.lang3.CharRange:170","type":"CtMethodImpl","sourcecode":"public boolean contains(final char ch) {\n    if (java.lang.Character.isTitleCase(ch)) {\n        {\n            return ((ch >= (char)) && (ch <= (char))) != (boolean);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:462","type":"CtArrayReadImpl","sourcecode":"src[srcPos]"},"failures":[311],"tindex":"a01a5a25-2ed2-11e6-bb82-dfecefe9cd53","method":{"position":"org.apache.commons.lang3.Conversion:1152","type":"CtMethodImpl","sourcecode":"public static byte binaryToByte(final boolean[] src, final int srcPos, final byte dstInit, final int dstPos, final int nBools) {\n    if (src[nBools]) {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBools)) {\n                return dstInit;\n            } \n            if (((nBools - 1) + dstPos) >= 8) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 8\");\n            } \n            byte byte = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + dstPos;\n                final int int = (src[(i + srcPos)] ? 1 : 0) << shift;\n                final int int = 1 << shift;\n                out = ((byte)((out & (~mask)) | bits));\n            }\n            return out;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"nBools","src":"src"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false"},"failures":[312,313],"tindex":"a01a8136-2ed2-11e6-bb82-8f29461fdb55","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2247","type":"CtMethodImpl","sourcecode":"public boolean contains(final char ch) {\n    if ((org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final char[] char[] = char[];\n            for (int int = 0 ; i < (org.apache.commons.lang3.text.StrBuilder.this.int) ; i++) {\n                if ((thisBuf[i]) == ch) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2482","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[314],"tindex":"a01a8137-2ed2-11e6-bb82-573658a926a1","method":{"position":"org.apache.commons.lang3.ArrayUtils:5355","type":"CtMethodImpl","sourcecode":"public static byte[] removeElements(final byte[] array, final byte... values) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final byte byte : values) {\n                final java.lang.Byte java.lang.Byte = java.lang.Byte.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Byte java.lang.Byte = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.byteValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((byte[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3794","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[315],"tindex":"a01aa848-2ed2-11e6-bb82-0fe245abb34d","method":{"position":"org.apache.commons.lang3.ArrayUtils:3791","type":"CtMethodImpl","sourcecode":"public static char[] addAll(final char[] array1, final char... array2) {\n    if (array2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final char[] char[] = new char[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1478","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[316,317,318],"tindex":"a01acf59-2ed2-11e6-bb82-a59f7b883c0f","method":{"position":"org.apache.commons.lang3.ArrayUtils:370","type":"CtMethodImpl","sourcecode":"public static short[] clone(final short[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:554","type":"CtBinaryOperatorImpl","sourcecode":"str == \"true\""},"failures":[],"tindex":"a01acf5a-2ed2-11e6-bb82-8740d0c23d10","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1742","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder deleteAll(final java.lang.String str) {\n    if (str == \"true\") {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = str == null ? 0 : str.length();\n                    if (len > 0) {\n                        int int = indexOf(str, 0);\n                        while (index >= 0) {\n                            deleteImpl(index, (index + len), len);\n                            index = indexOf(str, index);\n                        }\n                    } \n                    return org.apache.commons.lang3.text.StrBuilder.this;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2034","type":"CtBinaryOperatorImpl","sourcecode":"sizeEndText == null"},"failures":[319,320,321,322,323,266,324,325],"tindex":"a01acf5b-2ed2-11e6-bb82-29c4fb252293","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2033","type":"CtMethodImpl","sourcecode":"protected void setSizeEndText(java.lang.String sizeEndText) {\n    if (sizeEndText == null) {\n        {\n            if (sizeEndText == null) {\n                sizeEndText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = sizeEndText;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeEndText":"sizeEndText"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:398","type":"CtBinaryOperatorImpl","sourcecode":"classNames == null"},"failures":[326],"tindex":"a01af66c-2ed2-11e6-bb82-7315894c0fe1","method":{"position":"org.apache.commons.lang3.ClassUtils:397","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.Class<?>> convertClassNamesToClasses(final java.util.List<java.lang.String> classNames) {\n    if (classNames == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classNames == null) {\n                return null;\n            } \n            final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>(classNames.size());\n            for (final java.lang.String java.lang.String : classNames) {\n                try {\n                    classes.add(java.lang.Class.forName(className));\n                } catch (final java.lang.Exception ex) {\n                    classes.add(null);\n                }\n            }\n            return classes;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classNames":"classNames"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:308","type":"CtBinaryOperatorImpl","sourcecode":"ch < 128"},"failures":[327],"tindex":"a01af66d-2ed2-11e6-bb82-99a70e4efaea","method":{"position":"org.apache.commons.lang3.CharUtils:535","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiAlphanumeric(final char ch) {\n    if (ch < 128) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.CharUtils.isAsciiAlpha(ch)) || (org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:633","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[328,329],"tindex":"a01b1d7e-2ed2-11e6-bb82-b1646cd3e2c2","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:446","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readDeclaredField(final java.lang.Object target, final java.lang.String fieldName) throws java.lang.IllegalAccessException {\n    if (fieldName == null) {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readDeclaredField(target, fieldName, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:418","type":"CtBinaryOperatorImpl","sourcecode":"startIndex > endIndex"},"failures":[],"tindex":"a01b6b9f-2ed2-11e6-bb82-e11e4f0df22e","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1686","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder delete(final int startIndex, int endIndex) {\n    if (startIndex > startIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            final int int = endIndex - startIndex;\n            if (len > 0) {\n                deleteImpl(startIndex, endIndex, len);\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex","endIndex":"startIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1222","type":"CtBinaryOperatorImpl","sourcecode":"(seq == null) || (searchSeq == null)"},"failures":[330],"tindex":"a01b6ba0-2ed2-11e6-bb82-835bb835677c","method":{"position":"org.apache.commons.lang3.StringUtils:926","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq) {\n    if ((seq == null) || (searchSeq == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchSeq, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchSeq":"searchSeq","seq":"seq"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1214","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"a01b91b1-2ed2-11e6-bb82-e5c407a30937","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1236","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final char[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:476","type":"CtBinaryOperatorImpl","sourcecode":"lhs instanceof short[]"},"failures":[],"tindex":"a01b91b2-2ed2-11e6-bb82-afa52815e7a2","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:153","type":"CtMethodImpl","sourcecode":"static boolean isRegistered(final java.lang.Object lhs, final java.lang.Object rhs) {\n    if (rhs instanceof short[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> = org.apache.commons.lang3.builder.EqualsBuilder.getRegistry();\n            final org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.EqualsBuilder.getRegisterPair(lhs, rhs);\n            final org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.tuple.Pair.of(pair.getLeft(), pair.getRight());\n            return (registry != null) && ((registry.contains(pair)) || (registry.contains(swappedPair)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.SystemUtils:1429","type":"CtBinaryOperatorImpl","sourcecode":"version == null"},"failures":[],"tindex":"a01bb8c3-2ed2-11e6-bb82-b79caea66a1f","method":{"position":"org.apache.commons.lang3.SystemUtils:1428","type":"CtMethodImpl","sourcecode":"static boolean isJavaVersionMatch(final java.lang.String version, final java.lang.String versionPrefix) {\n    if (versionPrefix == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (version == null) {\n                return false;\n            } \n            return version.startsWith(versionPrefix);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"versionPrefix"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1957","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[331,332],"tindex":"a01bb8c4-2ed2-11e6-bb82-e73902c2247d","method":{"position":"org.apache.commons.lang3.ArrayUtils:2481","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final byte[] array, final byte valueToFind, int startIndex) {\n    if (startIndex < 0) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[333,334,335,336,337,338,65,70],"tindex":"a01bb8c5-2ed2-11e6-bb82-7f28fa7a50b5","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:752","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        {\n            if (value < 10) {\n                buffer.append(((char)(value + '0')));\n            } else if (value < 100) {\n                buffer.append(((char)((value / 10) + '0')));\n                buffer.append(((char)((value % 10) + '0')));\n            } else {\n                buffer.append(java.lang.Integer.toString(value));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[260,339],"tindex":"a01bdfd6-2ed2-11e6-bb82-fb0f2da640c2","method":{"position":"org.apache.commons.lang3.ArrayUtils:3509","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final long[] array) {\n    if (array == null) {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:874","type":"CtBinaryOperatorImpl","sourcecode":"(((nBytes - 1) * 8) + dstPos) >= 16"},"failures":[340],"tindex":"a01bdfd7-2ed2-11e6-bb82-a3fc350b564a","method":{"position":"org.apache.commons.lang3.Conversion:833","type":"CtMethodImpl","sourcecode":"public static int byteArrayToInt(final byte[] src, final int srcPos, final int dstInit, final int dstPos, final int nBytes) {\n    if ((((dstPos - 1) * 8) + srcPos) >= 16) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBytes)) {\n                return dstInit;\n            } \n            if ((((nBytes - 1) * 8) + dstPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 32\");\n            } \n            int int = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + dstPos;\n                final int int = (255 & (src[(i + srcPos)])) << shift;\n                final int int = 255 << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"srcPos","nBytes":"dstPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:188","type":"CtBinaryOperatorImpl","sourcecode":"method == null"},"failures":[],"tindex":"a01c06e8-2ed2-11e6-bb82-79292e60a86b","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:354","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Method getAccessibleMethod(java.lang.reflect.Method method) {\n    if (method == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(method))) {\n                return null;\n            } \n            final java.lang.Class<?> java.lang.Class<?> = method.getDeclaringClass();\n            if (java.lang.reflect.Modifier.isPublic(cls.getModifiers())) {\n                return method;\n            } \n            final java.lang.String java.lang.String = method.getName();\n            final java.lang.Class<?>[] java.lang.Class<?>[] = method.getParameterTypes();\n            method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(cls, methodName, parameterTypes);\n            if (method == null) {\n                method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(cls, methodName, parameterTypes);\n            } \n            return method;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"method"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:258","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(b)"},"failures":[341,342],"tindex":"a01c2df9-2ed2-11e6-bb82-6b0822e07c36","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1296","type":"CtMethodImpl","sourcecode":"public static float max(final float a, final float b, final float c) {\n    if (java.lang.Float.isNaN(b)) {\n        {\n            return java.lang.Math.max(java.lang.Math.max(a, b), c);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:247","type":"CtBinaryOperatorImpl","sourcecode":"value instanceof java.lang.annotation.Annotation"},"failures":[],"tindex":"a01c2dfa-2ed2-11e6-bb82-65c709c8e19c","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:488","type":"CtMethodImpl","sourcecode":"public static void writeStaticField(final java.lang.reflect.Field field, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (value instanceof java.lang.annotation.Annotation) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(field, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1548","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[343,344,345,346,347,348,349,350],"tindex":"a01c2dfb-2ed2-11e6-bb82-7521ebff68bc","method":{"position":"org.apache.commons.lang3.ArrayUtils:6011","type":"CtMethodImpl","sourcecode":"static java.lang.Object removeAll(final java.lang.Object array, final int... indices) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.getLength(array);\n            int int = 0;\n            if (org.apache.commons.lang3.ArrayUtils.isNotEmpty(indices)) {\n                java.util.Arrays.sort(indices);\n                int int = indices.int;\n                int int = length;\n                while ((--i) >= 0) {\n                    final int int = indices[i];\n                    if ((index < 0) || (index >= length)) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Length: \") + length));\n                    } \n                    if (index >= prevIndex) {\n                        continue;\n                    } \n                    diff++;\n                    prevIndex = index;\n                }\n            } \n            final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (length - diff));\n            if (diff < length) {\n                int int = length;\n                int int = length - diff;\n                for (int int = (indices.int) - 1 ; i >= 0 ; i--) {\n                    final int int = indices[i];\n                    if ((end - index) > 1) {\n                        final int int = (end - index) - 1;\n                        dest -= cp;\n                        java.lang.System.arraycopy(array, (index + 1), result, dest, cp);\n                    } \n                    end = index;\n                }\n                if (end > 0) {\n                    java.lang.System.arraycopy(array, 0, result, 0, end);\n                } \n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:968","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[351],"tindex":"a01c550c-2ed2-11e6-bb82-c90ecee68b67","method":{"position":"org.apache.commons.lang3.Validate:1104","type":"CtMethodImpl","sourcecode":"public static void exclusiveBetween(long start, long end, long value, java.lang.String message) {\n    if ((end < end) || (value > start)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"start","value":"end"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}