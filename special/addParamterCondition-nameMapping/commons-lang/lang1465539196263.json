{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":202,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":111,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":305,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":301,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":67,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":283,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringAfter_StringString":54,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":100,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":148,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":203,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedField":69,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteStaticFieldForceAccess":65,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":157,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":300,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":70,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":226,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":77,"org.apache.commons.lang3.time.DateUtilsTest.testAddSeconds":290,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":81,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiBooleanArray":195,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":164,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":188,"org.apache.commons.lang3.text.StrBuilderTest.testContains_StrMatcher":228,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher_int":230,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":10,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedUncheckedException":277,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_char":264,"org.apache.commons.lang3.text.StrBuilderTest.testGetSetNewLineText":288,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":107,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteFieldForceAccess":60,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":161,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":125,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":200,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":314,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetContextValues":38,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":116,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":174,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":298,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":312,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedException":276,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":140,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_int_int":268,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":79,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":120,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":189,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":249,"org.apache.commons.lang3.text.FormattableUtilsTest.testAlternatePadCharacter":97,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":17,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":180,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":165,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":25,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":73,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":191,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":9,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher_int":225,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":21,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":39,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":219,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":40,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":235,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":145,"org.apache.commons.lang3.text.FormattableUtilsTest.testDefaultAppend":96,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":139,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":8,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":151,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":261,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":30,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":162,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":27,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedUncheckedException":273,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringChar":263,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":127,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":284,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":168,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":114,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":185,"org.apache.commons.lang3.CharUtilsTest.testToString_char":103,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":143,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthByte":112,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":129,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":313,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfChars":48,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":146,"org.apache.commons.lang3.ConversionTest.testLongToShortArray":49,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringString":113,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":158,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":260,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":128,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":83,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":207,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendNewLine":289,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":147,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseChecked":271,"org.apache.commons.lang3.StringUtilsTest.testAbbreviateMiddle":220,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":22,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":4,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":84,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":256,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":131,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":173,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":71,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":172,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":210,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":303,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_float":57,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":41,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":166,"org.apache.commons.lang3.ConversionTest.testLongToByteArray":2,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEquals":45,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":118,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseError":281,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":5,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":137,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":144,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":214,"org.apache.commons.lang3.text.FormattableUtilsTest.testAlternatePadCharAndEllipsis":98,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":152,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":250,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":132,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":169,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":117,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":205,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":217,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":160,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":175,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":153,"org.apache.commons.lang3.text.StrMatcherTest.testCharMatcher_char":231,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":178,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEqualsOnStrings":44,"org.apache.commons.lang3.ConversionTest.testShortToByteArray":262,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteField":58,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testSetContextValue":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":86,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":227,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedError":278,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":52,"org.apache.commons.lang3.LocaleUtilsTest.testLanguagesByCountry":1,"org.apache.commons.lang3.BooleanUtilsTest.test_negate_Boolean":93,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiControl_char":110,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":259,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBefore_StringString":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":78,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":155,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":167,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":285,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":28,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":206,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanDefaultIfNull_Boolean_boolean":76,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullLongArray":119,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":286,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":123,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testAddContextValue":34,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedChecked":280,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":199,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBoolean":53,"org.apache.commons.lang3.ArrayUtilsTest.testReverseDouble":108,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayBoolean":193,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":194,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":61,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":221,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":136,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":201,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":89,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":187,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_Boolean":296,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":215,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedFieldForceAccess":62,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":142,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":135,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":302,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":121,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":212,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringInt":266,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":209,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":223,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":20,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":150,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":104,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBooleanArrayHiddenByObject":198,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":287,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":14,"org.apache.commons.lang3.text.FormattableUtilsTest.testEllipsis":99,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":186,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_String":46,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedError":275,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringStringInt":265,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":307,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":308,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":311,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":182,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":211,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":171,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":309,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":295,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":299,"org.apache.commons.lang3.CharUtilsTest.testToString_Character":102,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":12,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetFirstContextValue":37,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":269,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseChecked":272,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumByte":0,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":257,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":258,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":82,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":149,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":80,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":138,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":106,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":7,"org.apache.commons.lang3.math.FractionTest.testAdd":94,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":154,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":179,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":270,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":192,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":72,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":74,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":24,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissingIgnoreCase":293,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":51,"org.apache.commons.lang3.EnumUtilsTest.test_isEnum_nullClass":15,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":35,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":50,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_char_int":297,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":134,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":23,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":32,"org.apache.commons.lang3.ValidateTest.testExclusiveBetweenLong":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":304,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":105,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":208,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":26,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":170,"org.apache.commons.lang3.text.StrTokenizerTest.test5":247,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":183,"org.apache.commons.lang3.text.StrTokenizerTest.test4":246,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":159,"org.apache.commons.lang3.text.StrTokenizerTest.test6":248,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_long_long":267,"org.apache.commons.lang3.text.StrTokenizerTest.test1":243,"org.apache.commons.lang3.text.StrTokenizerTest.test3":245,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":133,"org.apache.commons.lang3.text.StrTokenizerTest.test2":244,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":291,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticFieldForceAccess":59,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayObject":55,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseError":274,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":213,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":42,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":92,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteStaticField":66,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":176,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":232,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":233,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":130,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":43,"org.apache.commons.lang3.math.FractionTest.testSubtract":95,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":115,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":184,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":101,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":181,"org.apache.commons.lang3.StringUtilsTest.testDeleteWhitespace_String":292,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedException":282,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":33,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticFieldForceAccess":68,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":29,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":216,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":294,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":19,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":204,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBooleanArray":197,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":236,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":234,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":238,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":237,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":240,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":239,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":242,"org.apache.commons.lang3.time.FastDateParserTest.testParses":141,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":241,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":163,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":255,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedChecked":279,"org.apache.commons.lang3.ConversionTest.testByteToHex":90,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":91,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":126,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":6,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":222,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":306,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":190,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticField":64,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":253,"org.apache.commons.lang3.StringUtilsTest.testDefault_String":109,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":252,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":218,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBoolean":196,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":254,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher":229,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher":224,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":310,"org.apache.commons.lang3.EnumUtilsTest.test_isEnum":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":251,"org.apache.commons.lang3.text.WordUtilsTest.testSwapCase_String":75,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":156,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":122,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":177,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":87,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":3,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":63,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":31,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":124,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":85},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[0],"tindex":"6b80ed23-2ed2-11e6-bb2b-553a23bf879c","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1152","type":"CtMethodImpl","sourcecode":"public static byte min(byte a, final byte b, final byte c) {\n    if (b < a) {\n        {\n            if (b < a) {\n                a = b;\n            } \n            if (c < a) {\n                a = c;\n            } \n            return a;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","c":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:261","type":"CtBinaryOperatorImpl","sourcecode":"countryCode == null"},"failures":[1],"tindex":"6b81b074-2ed2-11e6-bb2b-c5684c58a740","method":{"position":"org.apache.commons.lang3.LocaleUtils:260","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.util.Locale> languagesByCountry(final java.lang.String countryCode) {\n    if (countryCode == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (countryCode == null) {\n                return java.util.Collections.emptyList();\n            } \n            java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(countryCode);\n            if (langs == null) {\n                langs = new java.util.ArrayList<java.util.Locale>();\n                final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.availableLocaleList();\n                for (int int = 0 ; i < (locales.size()) ; i++) {\n                    final java.util.Locale java.util.Locale = locales.get(i);\n                    if ((countryCode.equals(locale.getCountry())) && (locale.getVariant().isEmpty())) {\n                        langs.add(locale);\n                    } \n                }\n                langs = java.util.Collections.unmodifiableList(langs);\n                org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.putIfAbsent(countryCode, langs);\n                langs = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(countryCode);\n            } \n            return langs;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"countryCode":"countryCode"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.CharUtils:195","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"6b81d785-2ed2-11e6-bb2b-7de312e52ba9","method":{"position":"org.apache.commons.lang3.time.DateUtils:267","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDate(final java.lang.String str, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.text.ParseException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.parseDate(str, null, parsePatterns);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1294","type":"CtBinaryOperatorImpl","sourcecode":"(((nBytes - 1) * 8) + srcPos) >= 64"},"failures":[2],"tindex":"6b81fe96-2ed2-11e6-bb2b-d733f6d07fef","method":{"position":"org.apache.commons.lang3.Conversion:1289","type":"CtMethodImpl","sourcecode":"public static byte[] longToByteArray(final long src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n    if ((((srcPos - 1) * 8) + nBytes) >= 64) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBytes) {\n                return dst;\n            } \n            if ((((nBytes - 1) * 8) + srcPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 64\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + srcPos;\n                dst[(dstPos + i)] = ((byte)(255 & (src >> shift)));\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"srcPos","srcPos":"nBytes"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:201","type":"CtBinaryOperatorImpl","sourcecode":"(locale.getCountry().length()) > 0"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"6b81fe97-2ed2-11e6-bb2b-f3d1c245079b","method":{"position":"org.apache.commons.lang3.time.FormatCache:190","type":"CtMethodImpl","sourcecode":"static java.lang.String getPatternForStyle(final java.lang.Integer dateStyle, final java.lang.Integer timeStyle, final java.util.Locale locale) {\n    if ((locale.getCountry().length()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.time.FormatCache.MultipartKey org.apache.commons.lang3.time.FormatCache.MultipartKey = new org.apache.commons.lang3.time.FormatCache.MultipartKey(dateStyle , timeStyle , locale);\n            java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.get(key);\n            if (pattern == null) {\n                try {\n                    java.text.DateFormat java.text.DateFormat;\n                    if (dateStyle == null) {\n                        formatter = java.text.DateFormat.getTimeInstance(timeStyle.intValue(), locale);\n                    } else if (timeStyle == null) {\n                        formatter = java.text.DateFormat.getDateInstance(dateStyle.intValue(), locale);\n                    } else {\n                        formatter = java.text.DateFormat.getDateTimeInstance(dateStyle.intValue(), timeStyle.intValue(), locale);\n                    }\n                    pattern = ((java.text.SimpleDateFormat)(formatter)).toPattern();\n                    final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(key, pattern);\n                    if (previous != null) {\n                        pattern = previous;\n                    } \n                } catch (final java.lang.ClassCastException ex) {\n                    throw new java.lang.IllegalArgumentException((\"No date time pattern for locale: \" + locale));\n                }\n            } \n            return pattern;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:179","type":"CtBinaryOperatorImpl","sourcecode":"expression == false"},"failures":[],"tindex":"6b824cb8-2ed2-11e6-bb2b-bfd5643a475f","method":{"position":"org.apache.commons.lang3.Validate:824","type":"CtMethodImpl","sourcecode":"public static void validState(final boolean expression, final java.lang.String message, final java.lang.Object... values) {\n    if (expression == false) {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalStateException(java.lang.String.format(message, values));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expression":"expression"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.EnumUtils:114","type":"CtBinaryOperatorImpl","sourcecode":"enumName == null"},"failures":[15,16],"tindex":"6b824cb9-2ed2-11e6-bb2b-ff60905a9ccb","method":{"position":"org.apache.commons.lang3.EnumUtils:90","type":"CtMethodImpl","sourcecode":"public static <E extends java.lang.Enum<E>>boolean isValidEnum(final java.lang.Class<E> enumClass, final java.lang.String enumName) {\n    if (enumName == null) {\n        {\n            if (enumName == null) {\n                return false;\n            } \n            try {\n                java.lang.Enum.valueOf(enumClass, enumName);\n                return true;\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumName":"enumName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1007","type":"CtBinaryOperatorImpl","sourcecode":"prefix == null"},"failures":[17,18,19,20,21,22],"tindex":"6b8273ca-2ed2-11e6-bb2b-3ba2ce606541","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1006","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setVariablePrefix(final java.lang.String prefix) {\n    if (prefix == null) {\n        {\n            if (prefix == null) {\n                throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n            } \n            return setVariablePrefixMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(prefix));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prefix":"prefix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[23,24,25,26,27],"tindex":"6b8273cb-2ed2-11e6-bb2b-91042074fcab","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:455","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeJava(final java.lang.String input) {\n    if (input != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3966","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[28],"tindex":"6b829adc-2ed2-11e6-bb2b-81ee3dde2012","method":{"position":"org.apache.commons.lang3.ArrayUtils:3965","type":"CtMethodImpl","sourcecode":"public static double[] addAll(final double[] array1, final double... array2) {\n    if (array2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final double[] double[] = new double[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6541","type":"CtBinaryOperatorImpl","sourcecode":"cs1 == cs2"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"6b82c1ed-2ed2-11e6-bb2b-0ff5b1114410","method":{"position":"org.apache.commons.lang3.StringUtils:794","type":"CtMethodImpl","sourcecode":"public static boolean equals(final java.lang.CharSequence cs1, final java.lang.CharSequence cs2) {\n    if (cs1 == cs2) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cs1 == cs2) {\n                return true;\n            } \n            if ((cs1 == null) || (cs2 == null)) {\n                return false;\n            } \n            if ((cs1 instanceof java.lang.String) && (cs2 instanceof java.lang.String)) {\n                return cs1.equals(cs2);\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, java.lang.Math.max(cs1.length(), cs2.length()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs1":"cs1","cs2":"cs2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4938","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[46],"tindex":"6b82c1ee-2ed2-11e6-bb2b-d7fa60d9de64","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2445","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return lastIndexOf(str, ((int) - 1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1106","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[47],"tindex":"6b82e8ff-2ed2-11e6-bb2b-01ac433c428f","method":{"position":"org.apache.commons.lang3.Validate:1081","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void exclusiveBetween(long start, long end, long value) {\n    if ((end <= value) || (value >= value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"value","end":"value","value":"end"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:381","type":"CtFieldReadImpl","sourcecode":"fieldSeparatorAtStart"},"failures":[],"tindex":"6b831010-2ed2-11e6-bb2b-43ee83992d4f","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1922","type":"CtMethodImpl","sourcecode":"protected void setFieldSeparatorAtStart(final boolean fieldSeparatorAtStart) {\n    if (fieldSeparatorAtStart) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = fieldSeparatorAtStart;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldSeparatorAtStart":"fieldSeparatorAtStart"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1749","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"6b831011-2ed2-11e6-bb2b-5bc6954fcd93","method":{"position":"org.apache.commons.lang3.ArrayUtils:5413","type":"CtMethodImpl","sourcecode":"public static short[] removeAll(final short[] array, final int... indices) {\n    if (indices == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"indices"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2068","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[48],"tindex":"6b833722-2ed2-11e6-bb2b-dba94c384b5f","method":{"position":"org.apache.commons.lang3.StringUtils:3808","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final char[] array, final char separator, final int startIndex, final int endIndex) {\n    if (startIndex < 0) {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:727","type":"CtBinaryOperatorImpl","sourcecode":"(((nShorts - 1) * 16) + dstPos) >= 64"},"failures":[49],"tindex":"6b835e33-2ed2-11e6-bb2b-8792f20ae912","method":{"position":"org.apache.commons.lang3.Conversion:1221","type":"CtMethodImpl","sourcecode":"public static short[] longToShortArray(final long src, final int srcPos, final short[] dst, final int dstPos, final int nShorts) {\n    if ((((nShorts - 1) * 16) + srcPos) >= 64) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nShorts) {\n                return dst;\n            } \n            if ((((nShorts - 1) * 16) + srcPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 64\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nShorts ; i++) {\n                shift = (i * 16) + srcPos;\n                dst[(dstPos + i)] = ((short)(65535 & (src >> shift)));\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"srcPos","nShorts":"nShorts"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"focus == null"},"failures":[50,51,52],"tindex":"6b835e34-2ed2-11e6-bb2b-eb4edb55f78c","method":{"position":"org.apache.commons.lang3.time.DateUtils:1155","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<java.util.Calendar> iterator(final java.util.Calendar focus, final int rangeStyle) {\n    if (focus == null) {\n        {\n            if (focus == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            java.util.Calendar java.util.Calendar = null;\n            java.util.Calendar java.util.Calendar = null;\n            int int = java.util.Calendar.java.util.Calendar.int;\n            int int = java.util.Calendar.java.util.Calendar.int;\n            switch (rangeStyle) {\n                case org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int :\n                case org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int :\n                    start = org.apache.commons.lang3.time.DateUtils.truncate(focus, java.util.Calendar.java.util.Calendar.int);\n                    end = ((java.util.Calendar)(start.clone()));\n                    end.add(java.util.Calendar.java.util.Calendar.int, 1);\n                    end.add(java.util.Calendar.java.util.Calendar.int, (-1));\n                    if (rangeStyle == (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int)) {\n                        startCutoff = java.util.Calendar.java.util.Calendar.int;\n                        endCutoff = java.util.Calendar.java.util.Calendar.int;\n                    } \n                    break;\n                case org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int :\n                case org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int :\n                case org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int :\n                case org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int :\n                    start = org.apache.commons.lang3.time.DateUtils.truncate(focus, java.util.Calendar.java.util.Calendar.int);\n                    end = org.apache.commons.lang3.time.DateUtils.truncate(focus, java.util.Calendar.java.util.Calendar.int);\n                    switch (rangeStyle) {\n                        case org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int :\n                            break;\n                        case org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int :\n                            startCutoff = java.util.Calendar.java.util.Calendar.int;\n                            endCutoff = java.util.Calendar.java.util.Calendar.int;\n                            break;\n                        case org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int :\n                            startCutoff = focus.get(java.util.Calendar.java.util.Calendar.int);\n                            endCutoff = startCutoff - 1;\n                            break;\n                        case org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int :\n                            startCutoff = (focus.get(java.util.Calendar.java.util.Calendar.int)) - 3;\n                            endCutoff = (focus.get(java.util.Calendar.java.util.Calendar.int)) + 3;\n                            break;\n                        default :\n                            break;\n                    }\n                    break;\n                default :\n                    throw new java.lang.IllegalArgumentException(((\"The range style \" + rangeStyle) + \" is not valid.\"));\n            }\n            if (startCutoff < (java.util.Calendar.java.util.Calendar.int)) {\n                startCutoff += 7;\n            } \n            if (startCutoff > (java.util.Calendar.java.util.Calendar.int)) {\n                startCutoff -= 7;\n            } \n            if (endCutoff < (java.util.Calendar.java.util.Calendar.int)) {\n                endCutoff += 7;\n            } \n            if (endCutoff > (java.util.Calendar.java.util.Calendar.int)) {\n                endCutoff -= 7;\n            } \n            while ((start.get(java.util.Calendar.java.util.Calendar.int)) != startCutoff) {\n                start.add(java.util.Calendar.java.util.Calendar.int, (-1));\n            }\n            while ((end.get(java.util.Calendar.java.util.Calendar.int)) != endCutoff) {\n                end.add(java.util.Calendar.java.util.Calendar.int, 1);\n            }\n            return new org.apache.commons.lang3.time.DateUtils.DateIterator(start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"focus":"focus"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:709","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[53],"tindex":"6b83d365-2ed2-11e6-bb2b-535a0432d8fe","method":{"position":"org.apache.commons.lang3.StringUtils:2692","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByWholeSeparator(final java.lang.String str, final java.lang.String separator) {\n    if (separator == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(str, separator, (-1), false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:244","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"6b83d366-2ed2-11e6-bb2b-75ea4320078e","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:300","type":"CtMethodImpl","sourcecode":"public static <K, V>V createIfAbsentUnchecked(final java.util.concurrent.ConcurrentMap<K, V> map, final K key, final org.apache.commons.lang3.concurrent.ConcurrentInitializer<V> init) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                return org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsent(map, key, init);\n            } catch (final org.apache.commons.lang3.concurrent.ConcurrentException cex) {\n                throw new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(cex.getCause());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7364","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[54],"tindex":"6b83d367-2ed2-11e6-bb2b-d5b92a8fcac8","method":{"position":"org.apache.commons.lang3.StringUtils:2331","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringAfter(final java.lang.String str, final java.lang.String separator) {\n    if (str == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            if (separator == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.indexOf(separator);\n            if (pos == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return str.substring((pos + (separator.length())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:874","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[55],"tindex":"6b83fa78-2ed2-11e6-bb2b-716763e8a6e9","method":{"position":"org.apache.commons.lang3.ArrayUtils:870","type":"CtMethodImpl","sourcecode":"public static <T>T[] subarray(final T[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive < 0) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            final java.lang.Class<?> java.lang.Class<?> = array.getClass().getComponentType();\n            if (newSize <= 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(type, 0)));\n                return emptyArray;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(type, newSize)));\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"startIndexInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1499","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[56],"tindex":"6b83fa79-2ed2-11e6-bb2b-0f017b625896","method":{"position":"org.apache.commons.lang3.StringUtils:2289","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringBefore(final java.lang.String str, final java.lang.String separator) {\n    if (str != null) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (separator == null)) {\n                return str;\n            } \n            if (separator.isEmpty()) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.indexOf(separator);\n            if (pos == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return str;\n            } \n            return str.substring(0, pos);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:884","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"6b84218a-2ed2-11e6-bb2b-2550e1ada6b6","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:461","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.util.Date date, final java.lang.StringBuffer buf) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(date, buf);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1155","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[57],"tindex":"6b84218b-2ed2-11e6-bb2b-fd84cf7108e6","method":{"position":"org.apache.commons.lang3.ArrayUtils:3409","type":"CtMethodImpl","sourcecode":"public static java.lang.Float[] toObject(final float[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Float[];\n            } \n            final java.lang.Float[] java.lang.Float[] = new java.lang.Float[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Float.valueOf(array[i]);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:487","type":"CtBinaryOperatorImpl","sourcecode":"value instanceof java.util.Map<?, ?>"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"6b84218c-2ed2-11e6-bb2b-73e2405ec18b","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:641","type":"CtMethodImpl","sourcecode":"public static void writeField(final java.lang.reflect.Field field, final java.lang.Object target, final java.lang.Object value, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (target instanceof java.util.Map<?, ?>) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"The field must not be null\");\n            if (forceAccess && (!(field.isAccessible()))) {\n                field.setAccessible(true);\n            } else {\n                org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(field);\n            }\n            field.set(target, value);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"target"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:196","type":"CtBinaryOperatorImpl","sourcecode":"locale != null"},"failures":[9],"tindex":"6b84489d-2ed2-11e6-bb2b-c9cf9e9535e0","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:226","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(final int style, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (locale != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(style, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:414","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[70],"tindex":"6b84489e-2ed2-11e6-bb2b-c17015c11c7e","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:390","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final java.lang.String source) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(source);\n            if ((substitute(buf, 0, source.length())) == false) {\n                return source;\n            } \n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2073","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[71,72],"tindex":"6b846faf-2ed2-11e6-bb2b-6fe7c5594bb8","method":{"position":"org.apache.commons.lang3.text.WordUtils:284","type":"CtMethodImpl","sourcecode":"public static java.lang.String capitalize(final java.lang.String str, final char... delimiters) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = delimiters == null ? -1 : delimiters.int;\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (delimLen == 0)) {\n                return str;\n            } \n            final char[] char[] = str.toCharArray();\n            boolean boolean = true;\n            for (int int = 0 ; i < (buffer.int) ; i++) {\n                final char char = buffer[i];\n                if (org.apache.commons.lang3.text.WordUtils.isDelimiter(ch, delimiters)) {\n                    capitalizeNext = true;\n                } else if (capitalizeNext) {\n                    buffer[i] = java.lang.Character.toTitleCase(ch);\n                    capitalizeNext = false;\n                } \n            }\n            return new java.lang.String(buffer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"6b846fb0-2ed2-11e6-bb2b-3f72ab3f20ef","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:752","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value < 10) {\n                buffer.append(((char)(value + '0')));\n            } else if (value < 100) {\n                buffer.append(((char)((value / 10) + '0')));\n                buffer.append(((char)((value % 10) + '0')));\n            } else {\n                buffer.append(java.lang.Integer.toString(value));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"th == null"},"failures":[73,74],"tindex":"6b846fb1-2ed2-11e6-bb2b-537d119d92d3","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:671","type":"CtMethodImpl","sourcecode":"public static java.lang.String getMessage(final java.lang.Throwable th) {\n    if (th == null) {\n        {\n            if (th == null) {\n                return \"\";\n            } \n            final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.getShortClassName(th, null);\n            final java.lang.String java.lang.String = th.getMessage();\n            return (clsName + \": \") + (org.apache.commons.lang3.StringUtils.defaultString(msg));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"th":"th"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:850","type":"CtBinaryOperatorImpl","sourcecode":"(java.util.regex.Pattern.matches(pattern, input)) == false"},"failures":[],"tindex":"6b8496c2-2ed2-11e6-bb2b-bd6fb499eabb","method":{"position":"org.apache.commons.lang3.Validate:872","type":"CtMethodImpl","sourcecode":"public static void matchesPattern(final java.lang.CharSequence input, final java.lang.String pattern, final java.lang.String message, final java.lang.Object... values) {\n    if ((java.util.regex.Pattern.matches(input, input)) == false) {\n        {\n            if ((java.util.regex.Pattern.matches(pattern, input)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","pattern":"input"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:732","type":"CtInvocationImpl","sourcecode":"str.startsWith(\"-\")"},"failures":[75],"tindex":"6b8496c3-2ed2-11e6-bb2b-a5122edc3693","method":{"position":"org.apache.commons.lang3.text.WordUtils:451","type":"CtMethodImpl","sourcecode":"public static java.lang.String swapCase(final java.lang.String str) {\n    if (str.startsWith(\"-\")) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            final char[] char[] = str.toCharArray();\n            boolean boolean = true;\n            for (int int = 0 ; i < (buffer.int) ; i++) {\n                final char char = buffer[i];\n                if (java.lang.Character.isUpperCase(ch)) {\n                    buffer[i] = java.lang.Character.toLowerCase(ch);\n                    whitespace = false;\n                } else if (java.lang.Character.isTitleCase(ch)) {\n                    buffer[i] = java.lang.Character.toLowerCase(ch);\n                    whitespace = false;\n                } else if (java.lang.Character.isLowerCase(ch)) {\n                    if (whitespace) {\n                        buffer[i] = java.lang.Character.toTitleCase(ch);\n                        whitespace = false;\n                    } else {\n                        buffer[i] = java.lang.Character.toUpperCase(ch);\n                    }\n                } else {\n                    whitespace = java.lang.Character.isWhitespace(ch);\n                }\n            }\n            return new java.lang.String(buffer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:427","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[76],"tindex":"6b84bdd4-2ed2-11e6-bb2b-9d6c4e22dfe2","method":{"position":"org.apache.commons.lang3.BooleanUtils:175","type":"CtMethodImpl","sourcecode":"public static boolean toBooleanDefaultIfNull(final java.lang.Boolean bool, final boolean valueIfNull) {\n    if (bool == null) {\n        {\n            if (bool == null) {\n                return valueIfNull;\n            } \n            return bool.booleanValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"6b84bdd5-2ed2-11e6-bb2b-5f7168741913","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:798","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value < 10) {\n                buffer.append(((char)(value + '0')));\n            } else {\n                buffer.append(((char)((value / 10) + '0')));\n                buffer.append(((char)((value % 10) + '0')));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:434","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"6b84e4e6-2ed2-11e6-bb2b-a1305666a13c","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:433","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final char[] source) {\n    if (source == null) {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(source.int).append(source);\n            substitute(buf, 0, source.int);\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1473","type":"CtBinaryOperatorImpl","sourcecode":"(((nHexs - 1) * 4) + srcPos) >= 16"},"failures":[90],"tindex":"6b84e4e7-2ed2-11e6-bb2b-cd3a1238a5da","method":{"position":"org.apache.commons.lang3.Conversion:1509","type":"CtMethodImpl","sourcecode":"public static java.lang.String byteToHex(final byte src, final int srcPos, final java.lang.String dstInit, final int dstPos, final int nHexs) {\n    if ((((nHexs - 1) * 4) + dstPos) >= 16) {\n        {\n            if (0 == nHexs) {\n                return dstInit;\n            } \n            if ((((nHexs - 1) * 4) + srcPos) >= 8) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 8\");\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(dstInit);\n            int int = 0;\n            int int = sb.length();\n            for (int int = 0 ; i < nHexs ; i++) {\n                shift = (i * 4) + srcPos;\n                final int int = 15 & (src >> shift);\n                if ((dstPos + i) == append) {\n                    ++append;\n                    sb.append(org.apache.commons.lang3.Conversion.intToHexDigit(bits));\n                } else {\n                    sb.setCharAt((dstPos + i), org.apache.commons.lang3.Conversion.intToHexDigit(bits));\n                }\n            }\n            return sb.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"dstPos","nHexs":"nHexs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1870","type":"CtBinaryOperatorImpl","sourcecode":"fieldNameValueSeparator == null"},"failures":[],"tindex":"6b850bf8-2ed2-11e6-bb2b-e76bd1b14a45","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1869","type":"CtMethodImpl","sourcecode":"protected void setFieldNameValueSeparator(java.lang.String fieldNameValueSeparator) {\n    if (fieldNameValueSeparator == null) {\n        {\n            if (fieldNameValueSeparator == null) {\n                fieldNameValueSeparator = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = fieldNameValueSeparator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldNameValueSeparator":"fieldNameValueSeparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:675","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[61,91],"tindex":"6b850bf9-2ed2-11e6-bb2b-e917574710b8","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:403","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readField(final java.lang.Object target, final java.lang.String fieldName) throws java.lang.IllegalAccessException {\n    if (fieldName == null) {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readField(target, fieldName, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:768","type":"CtInvocationImpl","sourcecode":"str.trim().startsWith(\"--\")"},"failures":[92],"tindex":"6b850bfa-2ed2-11e6-bb2b-a300934ccea8","method":{"position":"org.apache.commons.lang3.StringUtils:5636","type":"CtMethodImpl","sourcecode":"public static java.lang.String lowerCase(final java.lang.String str) {\n    if (str.trim().startsWith(\"--\")) {\n        {\n            if (str == null) {\n                return null;\n            } \n            return str.toLowerCase();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[93],"tindex":"6b85330b-2ed2-11e6-bb2b-b108720cac23","method":{"position":"org.apache.commons.lang3.BooleanUtils:63","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean negate(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            if (bool == null) {\n                return null;\n            } \n            return bool.booleanValue() ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:797","type":"CtBinaryOperatorImpl","sourcecode":"fraction == null"},"failures":[94,95],"tindex":"6b85330c-2ed2-11e6-bb2b-c34dd5503b60","method":{"position":"org.apache.commons.lang3.math.Fraction:740","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.math.Fraction addSub(final org.apache.commons.lang3.math.Fraction fraction, final boolean isAdd) {\n    if (fraction == null) {\n        {\n            if (fraction == null) {\n                throw new java.lang.IllegalArgumentException(\"The fraction must not be null\");\n            } \n            if ((int) == 0) {\n                return isAdd ? fraction : fraction.negate();\n            } \n            if ((fraction.int) == 0) {\n                return org.apache.commons.lang3.math.Fraction.this;\n            } \n            final int int = org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, fraction.int);\n            if (d1 == 1) {\n                final int int = org.apache.commons.lang3.math.Fraction.mulAndCheck(int, fraction.int);\n                final int int = org.apache.commons.lang3.math.Fraction.mulAndCheck(fraction.int, int);\n                return new org.apache.commons.lang3.math.Fraction((isAdd ? org.apache.commons.lang3.math.Fraction.addAndCheck(uvp, upv) : org.apache.commons.lang3.math.Fraction.subAndCheck(uvp, upv)) , org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int, fraction.int));\n            } \n            final java.math.BigInteger java.math.BigInteger = java.math.BigInteger.valueOf(int).multiply(java.math.BigInteger.valueOf(((fraction.int) / d1)));\n            final java.math.BigInteger java.math.BigInteger = java.math.BigInteger.valueOf(fraction.int).multiply(java.math.BigInteger.valueOf(((int) / d1)));\n            final java.math.BigInteger java.math.BigInteger = isAdd ? uvp.add(upv) : uvp.subtract(upv);\n            final int int = t.mod(java.math.BigInteger.valueOf(d1)).intValue();\n            final int int = tmodd1 == 0 ? d1 : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(tmodd1, d1);\n            final java.math.BigInteger java.math.BigInteger = t.divide(java.math.BigInteger.valueOf(d2));\n            if ((w.bitLength()) > 31) {\n                throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\");\n            } \n            return new org.apache.commons.lang3.math.Fraction(w.intValue() , org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((int) / d1), ((fraction.int) / d2)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fraction":"fraction"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5780","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isTitleCase(ch)"},"failures":[],"tindex":"6b855a1d-2ed2-11e6-bb2b-cfa9f676c770","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1016","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final char ch) {\n    if (java.lang.Character.isTitleCase(ch)) {\n        {\n            return append(ch).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1386","type":"CtBinaryOperatorImpl","sourcecode":"width > 0"},"failures":[96,97,98,99],"tindex":"6b855a1e-2ed2-11e6-bb2b-53d152c870aa","method":{"position":"org.apache.commons.lang3.text.FormattableUtils:134","type":"CtMethodImpl","sourcecode":"public static java.util.Formatter append(final java.lang.CharSequence seq, final java.util.Formatter formatter, final int flags, final int width, final int precision, final char padChar, final java.lang.CharSequence ellipsis) {\n    if (flags > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((((ellipsis == null) || (precision < 0)) || ((ellipsis.length()) <= precision)), \"Specified ellipsis '%1$s' exceeds precision of %2$s\", ellipsis, java.lang.Integer.valueOf(precision));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(seq);\n            if ((precision >= 0) && (precision < (seq.length()))) {\n                final java.lang.CharSequence java.lang.CharSequence = org.apache.commons.lang3.ObjectUtils.defaultIfNull(ellipsis, org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String);\n                buf.replace((precision - (_ellipsis.length())), seq.length(), _ellipsis.toString());\n            } \n            final boolean boolean = (flags & (java.util.FormattableFlags.java.util.FormattableFlags.int)) == (java.util.FormattableFlags.java.util.FormattableFlags.int);\n            for (int int = buf.length() ; i < width ; i++) {\n                buf.insert((leftJustify ? i : 0), padChar);\n            }\n            formatter.format(buf.toString());\n            return formatter;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"width":"flags"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:414","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"6b85812f-2ed2-11e6-bb2b-87a7c648958e","method":{"position":"org.apache.commons.lang3.text.CompositeFormat:83","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object parseObject(final java.lang.String source, final java.text.ParsePosition pos) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.text.Format.parseObject(source, pos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:518","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[100],"tindex":"6b858130-2ed2-11e6-bb2b-6b5f34129490","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:165","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatUTC(final java.util.Date date, final java.lang.String pattern, final java.util.Locale locale) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(date, pattern, org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.java.util.TimeZone, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:194","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"6b858131-2ed2-11e6-bb2b-7732fe5190bb","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:130","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatUTC(final long millis, final java.lang.String pattern) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.java.util.TimeZone, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2228","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"6b85a842-2ed2-11e6-bb2b-15ae83254b98","method":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:39","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = ((input.length()) - index) - 1;\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            if ((((input.charAt(index)) == '\\\\') && (remaining > 0)) && (isOctalDigit(input.charAt((index + 1))))) {\n                int int = index + 1;\n                int int = index + 2;\n                int int = index + 3;\n                builder.append(input.charAt(next));\n                if ((remaining > 1) && (isOctalDigit(input.charAt(next2)))) {\n                    builder.append(input.charAt(next2));\n                    if (((remaining > 2) && (isZeroToThree(input.charAt(next)))) && (isOctalDigit(input.charAt(next3)))) {\n                        builder.append(input.charAt(next3));\n                    } \n                } \n                out.write(java.lang.Integer.parseInt(builder.toString(), 8));\n                return 1 + (builder.length());\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2126","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"6b85a843-2ed2-11e6-bb2b-f51c0b386666","method":{"position":"org.apache.commons.lang3.text.StrBuilder:968","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final org.apache.commons.lang3.text.StrBuilder str, final int startIndex, final int length) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(str, startIndex, length).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:117","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 4095"},"failures":[101],"tindex":"6b85a844-2ed2-11e6-bb2b-85b8c891e493","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:73","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.NumericEntityEscaper above(final int codepoint) {\n    if (codepoint > 4095) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.translate.NumericEntityEscaper.outsideOf(0, codepoint);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepoint"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5778","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isUpperCase(ch)"},"failures":[102,103],"tindex":"6b85cf55-2ed2-11e6-bb2b-a7e0b714a1fa","method":{"position":"org.apache.commons.lang3.CharUtils:307","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final char ch) {\n    if (java.lang.Character.isUpperCase(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch < 128) {\n                return org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.java.lang.String[][ch];\n            } \n            return new java.lang.String(new char[]{ ch });\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:314","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[104,105,106,107],"tindex":"6b85cf56-2ed2-11e6-bb2b-7741051213a2","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:313","type":"CtMethodImpl","sourcecode":"static java.lang.String[] toNoNullStringArray(final java.util.Collection<java.lang.String> collection) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                {\n                    if (collection == null) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n                    } \n                    return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(collection.toArray());\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1083","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"6b85cf57-2ed2-11e6-bb2b-3d559140e362","method":{"position":"org.apache.commons.lang3.Validate:1104","type":"CtMethodImpl","sourcecode":"public static void exclusiveBetween(long start, long end, long value, java.lang.String message) {\n    if ((start <= start) || (value >= value)) {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"value","value":"start"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1275","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[108],"tindex":"6b85f668-2ed2-11e6-bb2b-ede81b16b119","method":{"position":"org.apache.commons.lang3.ArrayUtils:1519","type":"CtMethodImpl","sourcecode":"public static void reverse(final double[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2949","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[109],"tindex":"6b85f669-2ed2-11e6-bb2b-4d8b3bfa1e68","method":{"position":"org.apache.commons.lang3.StringUtils:6198","type":"CtMethodImpl","sourcecode":"public static java.lang.String defaultString(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return str == null ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String : str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:240","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false"},"failures":[110],"tindex":"6b85f66a-2ed2-11e6-bb2b-f3869e47e9a8","method":{"position":"org.apache.commons.lang3.CharUtils:440","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiControl(final char ch) {\n    if ((org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false) {\n        {\n            return (ch < 32) || (ch == 127);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:255","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[111],"tindex":"6b85f66b-2ed2-11e6-bb2b-43da0a2c3c02","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:254","type":"CtMethodImpl","sourcecode":"public static float max(final float a, final float b) {\n    if (java.lang.Float.isNaN(a)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (java.lang.Float.isNaN(a)) {\n                return b;\n            } else if (java.lang.Float.isNaN(b)) {\n                return a;\n            } else {\n                return java.lang.Math.max(a, b);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3821","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[112],"tindex":"6b861d7c-2ed2-11e6-bb2b-e7cc82416304","method":{"position":"org.apache.commons.lang3.ArrayUtils:1317","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final byte[] array1, final byte[] array2) {\n    if (array1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:633","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"6b861d7d-2ed2-11e6-bb2b-dd7f93b65033","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:526","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final boolean value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:363","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isBlank(cs)"},"failures":[113],"tindex":"6b861d7e-2ed2-11e6-bb2b-1bd0f30a43c8","method":{"position":"org.apache.commons.lang3.StringUtils:1585","type":"CtMethodImpl","sourcecode":"public static int indexOfAny(final java.lang.CharSequence cs, final java.lang.String searchChars) {\n    if (org.apache.commons.lang3.StringUtils.isBlank(cs)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.StringUtils.indexOfAny(cs, searchChars.toCharArray());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7013","type":"CtBinaryOperatorImpl","sourcecode":"(first == null) || (second == null)"},"failures":[],"tindex":"6b86448f-2ed2-11e6-bb2b-478935d773db","method":{"position":"org.apache.commons.lang3.StringUtils:7129","type":"CtMethodImpl","sourcecode":"private static int commonPrefixLength(java.lang.CharSequence first, java.lang.CharSequence second) {\n    if ((second == null) || (first == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.StringUtils.getCommonPrefix(first.toString(), second.toString()).length();\n            return result > 4 ? 4 : result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"second","second":"first"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"6b864490-2ed2-11e6-bb2b-bd883530f5c0","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:990","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(((char)((value / 10) + '0')));\n            buffer.append(((char)((value % 10) + '0')));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:854","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[114,115,116,117,118],"tindex":"6b866ba1-2ed2-11e6-bb2b-6f6d8259cd0b","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:270","type":"CtMethodImpl","sourcecode":"public static boolean reflectionEquals(final java.lang.Object lhs, final java.lang.Object rhs, final java.lang.String... excludeFields) {\n    if (rhs == null) {\n        {\n            return org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(lhs, rhs, false, null, excludeFields);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2022","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[119],"tindex":"6b866ba2-2ed2-11e6-bb2b-6fe90298a0fc","method":{"position":"org.apache.commons.lang3.ArrayUtils:5680","type":"CtMethodImpl","sourcecode":"public static long[] removeAll(final long[] array, final int... indices) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((long[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:666","type":"CtBinaryOperatorImpl","sourcecode":"clazz != null"},"failures":[],"tindex":"6b866ba3-2ed2-11e6-bb2b-a348fdbc7589","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:513","type":"CtMethodImpl","sourcecode":"protected void appendFieldsIn(final java.lang.Class<?> clazz) {\n    if (clazz != null) {\n        {\n            if (clazz.isArray()) {\n                org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.reflectionAppendArray(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getObject());\n                return ;\n            } \n            final java.lang.reflect.Field[] java.lang.reflect.Field[] = clazz.getDeclaredFields();\n            java.lang.reflect.AccessibleObject.setAccessible(fields, true);\n            for (final java.lang.reflect.Field java.lang.reflect.Field : fields) {\n                final java.lang.String java.lang.String = field.getName();\n                if (org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.accept(field)) {\n                    try {\n                        final java.lang.Object java.lang.Object = org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getValue(field);\n                        org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.append(fieldName, fieldValue);\n                    } catch (final java.lang.IllegalAccessException ex) {\n                        throw new java.lang.InternalError((\"Unexpected IllegalAccessException: \" + (ex.getMessage())));\n                    }\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"clazz":"clazz"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:745","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[120,121,122],"tindex":"6b8692b4-2ed2-11e6-bb2b-479ea6b6555f","method":{"position":"org.apache.commons.lang3.RandomStringUtils:328","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count, final char... chars) {\n    if (chars == null) {\n        {\n            if (chars == null) {\n                return org.apache.commons.lang3.RandomStringUtils.random(count, 0, 0, false, false, null, org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.java.util.Random);\n            } \n            return org.apache.commons.lang3.RandomStringUtils.random(count, 0, chars.int, false, false, chars, org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.java.util.Random);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"chars"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:829","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof char[]"},"failures":[],"tindex":"6b8692b5-2ed2-11e6-bb2b-b56551b0e510","method":{"position":"org.apache.commons.lang3.ObjectUtils:267","type":"CtMethodImpl","sourcecode":"public static java.lang.String identityToString(final java.lang.Object object) {\n    if (object instanceof char[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return null;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            org.apache.commons.lang3.ObjectUtils.identityToString(builder, object);\n            return builder.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:835","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof float[]"},"failures":[],"tindex":"6b86b9c6-2ed2-11e6-bb2b-b3dc412fcffd","method":{"position":"org.apache.commons.lang3.ObjectUtils:292","type":"CtMethodImpl","sourcecode":"public static void identityToString(final java.lang.Appendable appendable, final java.lang.Object object) throws java.io.IOException {\n    if (object instanceof float[]) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n            } \n            appendable.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:173","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(object)"},"failures":[123],"tindex":"6b86b9c7-2ed2-11e6-bb2b-1f5770545ac7","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:164","type":"CtMethodImpl","sourcecode":"public static java.lang.String reflectionToString(final java.lang.Object object, final org.apache.commons.lang3.builder.ToStringStyle style) {\n    if (org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(object)) {\n        {\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(object, style);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:340","type":"CtVariableReadImpl","sourcecode":"unquote"},"failures":[124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,100,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,6,176,7,8,9,10,11,12,13,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192],"tindex":"6b86e0d8-2ed2-11e6-bb2b-2f220c828595","method":{"position":"org.apache.commons.lang3.time.FastDateParser:334","type":"CtMethodImpl","sourcecode":"private static java.lang.StringBuilder escapeRegex(final java.lang.StringBuilder regex, final java.lang.String value, final boolean unquote) {\n    if (unquote) {\n        {\n            regex.append(\"\\\\Q\");\n            for (int int = 0 ; i < (value.length()) ; ++i) {\n                char char = value.charAt(i);\n                switch (c) {\n                    case '\\'' :\n                        if (unquote) {\n                            if ((++i) == (value.length())) {\n                                return regex;\n                            } \n                            c = value.charAt(i);\n                        } \n                        break;\n                    case '\\\\' :\n                        if ((++i) == (value.length())) {\n                            break;\n                        } \n                        regex.append(c);\n                        c = value.charAt(i);\n                        if (c == 'E') {\n                            regex.append(\"E\\\\\\\\E\\\\\");\n                            c = 'Q';\n                        } \n                        break;\n                    default :\n                        break;\n                }\n                regex.append(c);\n            }\n            regex.append(\"\\\\E\");\n            return regex;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unquote":"unquote"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:588","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],"tindex":"6b86e0d9-2ed2-11e6-bb2b-ef2c90096588","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:621","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final boolean lhs, final boolean rhs) {\n    if (lhs == rhs) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            boolean = lhs == rhs;\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"6b8707ea-2ed2-11e6-bb2b-bdef1ce086ca","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:328","type":"CtMethodImpl","sourcecode":"private int readArgumentIndex(final java.lang.String pattern, final java.text.ParsePosition pos) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = pos.getIndex();\n            seekNonWs(pattern, pos);\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            boolean boolean = false;\n            for ( ; (!error) && ((pos.getIndex()) < (pattern.length())) ; next(pos)) {\n                char char = pattern.charAt(pos.getIndex());\n                if (java.lang.Character.isWhitespace(c)) {\n                    seekNonWs(pattern, pos);\n                    c = pattern.charAt(pos.getIndex());\n                    if ((c != (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char)) && (c != (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char))) {\n                        error = true;\n                        continue;\n                    } \n                } \n                if (((c == (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char)) || (c == (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char))) && ((result.length()) > 0)) {\n                    try {\n                        return java.lang.Integer.parseInt(result.toString());\n                    } catch (final java.lang.NumberFormatException e) {\n                    }\n                } \n                error = !(java.lang.Character.isDigit(c));\n                result.append(c);\n            }\n            if (error) {\n                throw new java.lang.IllegalArgumentException((((\"Invalid format argument index at position \" + start) + \": \") + (pattern.substring(start, pos.getIndex()))));\n            } \n            throw new java.lang.IllegalArgumentException((\"Unterminated format element at position \" + start));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2413","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[218,219],"tindex":"6b8707eb-2ed2-11e6-bb2b-ebd8b2084a6d","method":{"position":"org.apache.commons.lang3.CharSetUtils:205","type":"CtMethodImpl","sourcecode":"public static java.lang.String delete(final java.lang.String str, final java.lang.String... set) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                        return str;\n                    } \n                    return org.apache.commons.lang3.CharSetUtils.modify(str, set, false);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:507","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"6b872efc-2ed2-11e6-bb2b-919b2683e57a","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1053","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int[] array) {\n    if (fieldName == null) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:534","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[220],"tindex":"6b872efd-2ed2-11e6-bb2b-5b21d1c456ac","method":{"position":"org.apache.commons.lang3.StringUtils:6450","type":"CtMethodImpl","sourcecode":"public static java.lang.String abbreviateMiddle(final java.lang.String str, final java.lang.String middle, final int length) {\n    if (middle == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(middle))) {\n                return str;\n            } \n            if ((length >= (str.length())) || (length < ((middle.length()) + 2))) {\n                return str;\n            } \n            final int int = length - (middle.length());\n            final int int = (targetSting / 2) + (targetSting % 2);\n            final int int = (str.length()) - (targetSting / 2);\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(length);\n            builder.append(str.substring(0, startOffset));\n            builder.append(middle);\n            builder.append(str.substring(endOffset));\n            return builder.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"middle"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:415","type":"CtArrayReadImpl","sourcecode":"src[(srcPos + 3)]"},"failures":[221,222],"tindex":"6b872efe-2ed2-11e6-bb2b-91f6a251fea2","method":{"position":"org.apache.commons.lang3.Conversion:513","type":"CtMethodImpl","sourcecode":"public static char binaryBeMsb0ToHexDigit(boolean[] src, int srcPos) {\n    if (src[(srcPos + 3)]) {\n        {\n            if ((src.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Cannot convert an empty array.\");\n            } \n            final int int = ((src.int) - 1) - srcPos;\n            final int int = java.lang.Math.min(4, (beSrcPos + 1));\n            final boolean[] boolean[] = new boolean[4];\n            java.lang.System.arraycopy(src, ((beSrcPos + 1) - srcLen), paddedSrc, (4 - srcLen), srcLen);\n            src = paddedSrc;\n            srcPos = 0;\n            if (src[srcPos]) {\n                if (((src.int) > (srcPos + 1)) && (src[(srcPos + 1)])) {\n                    if (((src.int) > (srcPos + 2)) && (src[(srcPos + 2)])) {\n                        if (((src.int) > (srcPos + 3)) && (src[(srcPos + 3)])) {\n                            return 'f';\n                        } else {\n                            return 'e';\n                        }\n                    } else {\n                        if (((src.int) > (srcPos + 3)) && (src[(srcPos + 3)])) {\n                            return 'd';\n                        } else {\n                            return 'c';\n                        }\n                    }\n                } else {\n                    if (((src.int) > (srcPos + 2)) && (src[(srcPos + 2)])) {\n                        if (((src.int) > (srcPos + 3)) && (src[(srcPos + 3)])) {\n                            return 'b';\n                        } else {\n                            return 'a';\n                        }\n                    } else {\n                        if (((src.int) > (srcPos + 3)) && (src[(srcPos + 3)])) {\n                            return '9';\n                        } else {\n                            return '8';\n                        }\n                    }\n                }\n            } else {\n                if (((src.int) > (srcPos + 1)) && (src[(srcPos + 1)])) {\n                    if (((src.int) > (srcPos + 2)) && (src[(srcPos + 2)])) {\n                        if (((src.int) > (srcPos + 3)) && (src[(srcPos + 3)])) {\n                            return '7';\n                        } else {\n                            return '6';\n                        }\n                    } else {\n                        if (((src.int) > (srcPos + 3)) && (src[(srcPos + 3)])) {\n                            return '5';\n                        } else {\n                            return '4';\n                        }\n                    }\n                } else {\n                    if (((src.int) > (srcPos + 2)) && (src[(srcPos + 2)])) {\n                        if (((src.int) > (srcPos + 3)) && (src[(srcPos + 3)])) {\n                            return '3';\n                        } else {\n                            return '2';\n                        }\n                    } else {\n                        if (((src.int) > (srcPos + 3)) && (src[(srcPos + 3)])) {\n                            return '1';\n                        } else {\n                            return '0';\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"srcPos","src":"src"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false"},"failures":[223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,21,261],"tindex":"6b87560f-2ed2-11e6-bb2b-f97c8ee6a998","method":{"position":"org.apache.commons.lang3.text.StrMatcher:163","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrMatcher charMatcher(final char ch) {\n    if ((org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(ch);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"6b877d20-2ed2-11e6-bb2b-4713499f60a8","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:787","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double value) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1361","type":"CtBinaryOperatorImpl","sourcecode":"(((nBytes - 1) * 8) + srcPos) >= 16"},"failures":[262],"tindex":"6b877d21-2ed2-11e6-bb2b-bd4af85a1463","method":{"position":"org.apache.commons.lang3.Conversion:1356","type":"CtMethodImpl","sourcecode":"public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n    if ((((nBytes - 1) * 8) + dstPos) >= 16) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBytes) {\n                return dst;\n            } \n            if ((((nBytes - 1) * 8) + srcPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + srcPos;\n                dst[(dstPos + i)] = ((byte)(255 & (src >> shift)));\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"nBytes","srcPos":"dstPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2073","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[263],"tindex":"6b87a432-2ed2-11e6-bb2b-23c3fe9ca971","method":{"position":"org.apache.commons.lang3.StringUtils:2602","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] split(final java.lang.String str, final char separatorChar) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChar, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2958","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[264],"tindex":"6b87cb43-2ed2-11e6-bb2b-33ec1d1bd44b","method":{"position":"org.apache.commons.lang3.ArrayUtils:2957","type":"CtMethodImpl","sourcecode":"public static char[] toPrimitive(final java.lang.Character[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            final char[] char[] = new char[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].charValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5660","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[265,266],"tindex":"6b87cb44-2ed2-11e6-bb2b-a733f505b242","method":{"position":"org.apache.commons.lang3.StringUtils:5119","type":"CtMethodImpl","sourcecode":"public static java.lang.String repeat(final java.lang.String str, final int repeat) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (repeat <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.length();\n            if ((repeat == 1) || (inputLength == 0)) {\n                return str;\n            } \n            if ((inputLength == 1) && (repeat <= (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int))) {\n                return org.apache.commons.lang3.StringUtils.repeat(str.charAt(0), repeat);\n            } \n            final int int = inputLength * repeat;\n            switch (inputLength) {\n                case 1 :\n                    return org.apache.commons.lang3.StringUtils.repeat(str.charAt(0), repeat);\n                case 2 :\n                    final char char = str.charAt(0);\n                    final char char = str.charAt(1);\n                    final char[] char[] = new char[outputLength];\n                    for (int int = (repeat * 2) - 2 ; i >= 0 ; i-- , i--) {\n                        output2[i] = ch0;\n                        output2[(i + 1)] = ch1;\n                    }\n                    return new java.lang.String(output2);\n                default :\n                    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(outputLength);\n                    for (int int = 0 ; i < repeat ; i++) {\n                        buf.append(str);\n                    }\n                    return buf.toString();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3048","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[267,268],"tindex":"6b87f255-2ed2-11e6-bb2b-abae7848e4b8","method":{"position":"org.apache.commons.lang3.ArrayUtils:3047","type":"CtMethodImpl","sourcecode":"public static long[] toPrimitive(final java.lang.Long[] array, final long valueForNull) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.long[];\n            } \n            final long[] long[] = new long[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Long java.lang.Long = array[i];\n                result[i] = b == null ? valueForNull : b.longValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5001","type":"CtBinaryOperatorImpl","sourcecode":"(str.length()) == 1"},"failures":[269,270],"tindex":"6b87f256-2ed2-11e6-bb2b-15fac13661fe","method":{"position":"org.apache.commons.lang3.text.WordUtils:409","type":"CtMethodImpl","sourcecode":"public static java.lang.String uncapitalize(final java.lang.String str, final char... delimiters) {\n    if ((str.length()) == 1) {\n        {\n            final int int = delimiters == null ? -1 : delimiters.int;\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (delimLen == 0)) {\n                return str;\n            } \n            final char[] char[] = str.toCharArray();\n            boolean boolean = true;\n            for (int int = 0 ; i < (buffer.int) ; i++) {\n                final char char = buffer[i];\n                if (org.apache.commons.lang3.text.WordUtils.isDelimiter(ch, delimiters)) {\n                    uncapitalizeNext = true;\n                } else if (uncapitalizeNext) {\n                    buffer[i] = java.lang.Character.toLowerCase(ch);\n                    uncapitalizeNext = false;\n                } \n            }\n            return new java.lang.String(buffer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"6b881967-2ed2-11e6-bb2b-c188ef4ecc86","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(((char)((value / 10) + '0')));\n            buffer.append(((char)((value % 10) + '0')));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:141","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))"},"failures":[],"tindex":"6b881968-2ed2-11e6-bb2b-b32ba165672f","method":{"position":"org.apache.commons.lang3.CharSetUtils:205","type":"CtMethodImpl","sourcecode":"public static java.lang.String delete(final java.lang.String str, final java.lang.String... set) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                        return str;\n                    } \n                    return org.apache.commons.lang3.CharSetUtils.modify(str, set, false);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:61","type":"CtBinaryOperatorImpl","sourcecode":"(ex == null) || ((ex.getCause()) == null)"},"failures":[271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287],"tindex":"6b881969-2ed2-11e6-bb2b-bd85fc12554e","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:158","type":"CtMethodImpl","sourcecode":"private static void throwCause(final java.util.concurrent.ExecutionException ex) {\n    if ((ex == null) || ((ex.getCause()) == null)) {\n        {\n            if ((ex.getCause()) instanceof java.lang.RuntimeException) {\n                throw ((java.lang.RuntimeException)(ex.getCause()));\n            } \n            if ((ex.getCause()) instanceof java.lang.Error) {\n                throw ((java.lang.Error)(ex.getCause()));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:314","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[],"tindex":"6b88407a-2ed2-11e6-bb2b-5be73c4a5825","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:313","type":"CtMethodImpl","sourcecode":"static java.lang.String[] toNoNullStringArray(final java.util.Collection<java.lang.String> collection) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                {\n                    if (collection == null) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n                    } \n                    return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(collection.toArray());\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:435","type":"CtBinaryOperatorImpl","sourcecode":"(newLine) == null"},"failures":[288,289],"tindex":"6b88407b-2ed2-11e6-bb2b-a52bdbcf5f01","method":{"position":"org.apache.commons.lang3.text.StrBuilder:151","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder setNewLineText(final java.lang.String newLine) {\n    if (newLine == null) {\n        {\n            org.apache.commons.lang3.text.StrBuilder.this.java.lang.String = newLine;\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newLine":"newLine"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:804","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[290],"tindex":"6b88678c-2ed2-11e6-bb2b-833db78aca1e","method":{"position":"org.apache.commons.lang3.time.DateUtils:488","type":"CtMethodImpl","sourcecode":"public static java.util.Date addSeconds(final java.util.Date date, final int amount) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:534","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[291,292],"tindex":"6b88678d-2ed2-11e6-bb2b-adf115543775","method":{"position":"org.apache.commons.lang3.StringUtils:4170","type":"CtMethodImpl","sourcecode":"public static java.lang.String deleteWhitespace(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            final int int = str.length();\n            final char[] char[] = new char[sz];\n            int int = 0;\n            for (int int = 0 ; i < sz ; i++) {\n                if (!(java.lang.Character.isWhitespace(str.charAt(i)))) {\n                    chs[(count++)] = str.charAt(i);\n                } \n            }\n            if (count == sz) {\n                return str;\n            } \n            return new java.lang.String(chs , 0 , count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:121","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[293],"tindex":"6b88678e-2ed2-11e6-bb2b-c356a6ca053f","method":{"position":"org.apache.commons.lang3.StringUtils:7497","type":"CtMethodImpl","sourcecode":"public static java.lang.String appendIfMissingIgnoreCase(final java.lang.String str, final java.lang.CharSequence suffix, final java.lang.CharSequence... suffixes) {\n    if (suffix == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.appendIfMissing(str, suffix, true, suffixes);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"suffix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1744","type":"CtBinaryOperatorImpl","sourcecode":"len > 0"},"failures":[],"tindex":"6b888e9f-2ed2-11e6-bb2b-e38d43016a75","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1672","type":"CtMethodImpl","sourcecode":"private void deleteImpl(final int startIndex, final int endIndex, final int len) {\n    if (len > 0) {\n        {\n            java.lang.System.arraycopy(char[], endIndex, char[], startIndex, ((int) - endIndex));\n            int -= len;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"len"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1595","type":"CtBinaryOperatorImpl","sourcecode":"t instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"6b888ea0-2ed2-11e6-bb2b-5f25dc8d28eb","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1611","type":"CtMethodImpl","sourcecode":"private static boolean equals(java.lang.reflect.GenericArrayType a, java.lang.reflect.Type t) {\n    if (t instanceof java.lang.reflect.ParameterizedType) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (t instanceof java.lang.reflect.GenericArrayType) && (org.apache.commons.lang3.reflect.TypeUtils.equals(a.getGenericComponentType(), ((java.lang.reflect.GenericArrayType)(t)).getGenericComponentType()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"t":"t"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2703","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.text.StrBuilder"},"failures":[294,8,9,10,11,13,295],"tindex":"6b888ea1-2ed2-11e6-bb2b-d32a7c69c320","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:562","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.lang3.text.StrBuilder) {\n        {\n            if ((obj instanceof org.apache.commons.lang3.time.FastDateFormat) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.time.FastDateFormat org.apache.commons.lang3.time.FastDateFormat = ((org.apache.commons.lang3.time.FastDateFormat)(obj));\n            return org.apache.commons.lang3.time.FastDatePrinter.equals(other.org.apache.commons.lang3.time.FastDatePrinter);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:64","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[296],"tindex":"6b888ea2-2ed2-11e6-bb2b-dd046677c687","method":{"position":"org.apache.commons.lang3.BooleanUtils:792","type":"CtMethodImpl","sourcecode":"public static java.lang.String toStringYesNo(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            return org.apache.commons.lang3.BooleanUtils.toString(bool, \"yes\", \"no\", null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2381","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[297],"tindex":"6b88b5b3-2ed2-11e6-bb2b-377938c9901e","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2424","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final char ch, int startIndex) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            startIndex = startIndex >= (int) ? (int) - 1 : startIndex;\n            if (startIndex < 0) {\n                return -1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if ((char[][i]) == ch) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:543","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[77,79,80,81,82,83,84,70,86,87,88,89],"tindex":"6b88b5b4-2ed2-11e6-bb2b-872c76468204","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:574","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final org.apache.commons.lang3.text.StrBuilder source, final int offset, final int length) {\n    if (length > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            substitute(buf, 0, length);\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:325","type":"CtBinaryOperatorImpl","sourcecode":"pos >= 0"},"failures":[],"tindex":"6b88dcc5-2ed2-11e6-bb2b-4dbdc2b6f39d","method":{"position":"org.apache.commons.lang3.text.StrMatcher:300","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n    if (bufferStart >= 0) {\n        {\n            return (java.util.Arrays.binarySearch(char[], buffer[pos])) >= 0 ? 1 : 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"bufferStart"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1040","type":"CtBinaryOperatorImpl","sourcecode":"suffixMatcher == null"},"failures":[77,78,298,79,299,80,81,17,82,18,19,300,83,84,301,302,303,304,70,85,305,306,86,20,307,87,308,88,309,260,310,89,311,312,313,21,22,261,314],"tindex":"6b88dcc6-2ed2-11e6-bb2b-b78c84c1f1e0","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1039","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setVariableSuffixMatcher(final org.apache.commons.lang3.text.StrMatcher suffixMatcher) {\n    if (suffixMatcher == null) {\n        {\n            if (suffixMatcher == null) {\n                throw new java.lang.IllegalArgumentException(\"Variable suffix matcher must not be null!\");\n            } \n            org.apache.commons.lang3.text.StrSubstitutor.this.org.apache.commons.lang3.text.StrMatcher = suffixMatcher;\n            return org.apache.commons.lang3.text.StrSubstitutor.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suffixMatcher":"suffixMatcher"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}