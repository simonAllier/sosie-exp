{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":292,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":186,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":287,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":181,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayDouble":317,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringAfter_StringString":41,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":95,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":286,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":419,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":253,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":230,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":161,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":217,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":45,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterType":29,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":102,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVectors":251,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":67,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":92,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":213,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":306,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":205,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":397,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiLongArray":276,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":281,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder_int_int":239,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":173,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":228,"org.apache.commons.lang3.CharUtilsTest.testToCharacterObject_String":411,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMixedArray":274,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":177,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissingIgnoreCase":378,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder_int_int":240,"org.apache.commons.lang3.StringUtilsTest.testChomp":366,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":73,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":26,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":312,"org.apache.commons.lang3.math.NumberUtilsTest.testIsDigits":361,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntString":373,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":144,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfInt":334,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":24,"org.apache.commons.lang3.time.DateUtilsTest.testSetMinutes":245,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":180,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":391,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":211,"org.apache.commons.lang3.mutable.MutableDoubleTest.testSetNull":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":155,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringInt":244,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeStartText":4,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":12,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticFieldForceAccess":267,"org.apache.commons.lang3.StringUtilsTest.testSwapCase_String":380,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryReplace":422,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":69,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringString":350,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":56,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementLongArray":256,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":232,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringString":199,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":414,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementIntArray":335,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfEmpty_StringString":375,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":301,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":152,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":233,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":16,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":59,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_char":353,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":341,"org.apache.commons.lang3.StringUtilsTest.testIsAnyEmpty":364,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":319,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":355,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphanumeric_char":36,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":423,"org.apache.commons.lang3.reflect.FieldUtilsTest.testAmbig":262,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":13,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_charInt":356,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringAfterLast_StringString":406,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":151,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_NoAutoboxing":80,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":393,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":136,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyIntEmptyArray":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":166,"org.apache.commons.lang3.ArrayUtilsTest.testCloneLong":254,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_NoAutoboxing":82,"org.apache.commons.lang3.math.NumberUtilsTest.testMinLong":325,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":187,"org.apache.commons.lang3.StringUtilsTest.testRemove_char":368,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":139,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":116,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBefore_StringString":404,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":11,"org.apache.commons.lang3.StringUtilsIsTest.testIsNumeric":401,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":216,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":110,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String":62,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":98,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":195,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":247,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Unboxing_Widening":85,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrimToNull":388,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":50,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthLong":336,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":49,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":125,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringStringInt":200,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":135,"org.apache.commons.lang3.StringUtilsTest.testIsNotEmpty":376,"org.apache.commons.lang3.builder.CompareToBuilderTest.testByteArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":150,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":318,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":149,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":55,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Autoboxing":86,"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":37,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":138,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":117,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_CharArray":35,"org.apache.commons.lang3.ArrayUtilsTest.testContainsChar":314,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":172,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":201,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":298,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_charInt":354,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":128,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":220,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":342,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_StringString":387,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsEmpty":389,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":231,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":221,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVector":252,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":229,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":101,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":178,"org.apache.commons.lang3.StringUtilsTest.testRemoveEnd":383,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable":78,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":87,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumeric":402,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":345,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_String":34,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":84,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":175,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetField":261,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":311,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":53,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactStaticMethod":57,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":132,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":418,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":226,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":305,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":100,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":313,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":8,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":202,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":340,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_char":243,"org.apache.commons.lang3.StringUtilsTest.testIsEmpty":381,"org.apache.commons.lang3.builder.DiffTest.testToString":88,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayLong":27,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":320,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":123,"org.apache.commons.lang3.text.StrBuilderTest.testGetCharsIntIntCharArrayInt":238,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsNotEmpty":386,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":74,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":42,"org.apache.commons.lang3.StringUtilsTest.testLengthStringBuilder":330,"org.apache.commons.lang3.CharUtilsTest.testToChar_String":409,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":70,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":40,"org.apache.commons.lang3.StringUtilsTest.testDeleteWhitespace_String":363,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumInt":194,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArray":360,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntString":379,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":168,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":285,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":96,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":400,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotFalse_Boolean":241,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":219,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":182,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":264,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":153,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":209,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":189,"org.apache.commons.lang3.mutable.MutableFloatTest.testGetSet":246,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringCharArray":357,"org.apache.commons.lang3.text.StrBuilderTest.testSetLength":278,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":143,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":119,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_Autoboxing":81,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":297,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":399,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":124,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":6,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDoubleArray":20,"org.apache.commons.lang3.StringUtilsTest.testRemoveStartIgnoreCase":382,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_String":390,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":203,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstring_StringIntInt":242,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":51,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":222,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":191,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":291,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArray":359,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":185,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":250,"org.apache.commons.lang3.StringUtilsTest.testIsNoneEmpty":377,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":398,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":184,"org.apache.commons.lang3.StringUtilsTest.testLengthString":329,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementBooleanArray":28,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedField":413,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":43,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":111,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":249,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":227,"org.apache.commons.lang3.ClassUtilsTest.test_getAllInterfaces_Class":258,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":385,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiDoubleArray":323,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":156,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":303,"org.apache.commons.lang3.StringUtilsTest.testIsAllUpperCase":61,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":115,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":299,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":188,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLong":272,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":283,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":157,"org.apache.commons.lang3.StringUtilsTest.testRemoveEndIgnoreCase":370,"org.apache.commons.lang3.CharUtilsTest.testToChar_Character_char":76,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArray":275,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":167,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":417,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":72,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":77,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":121,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":208,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":212,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":270,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":394,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_String":338,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Widening":79,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_char":358,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":302,"org.apache.commons.lang3.StringUtilsTest.testRemove_String":197,"org.apache.commons.lang3.text.StrMatcherTest.testStringMatcher_String":349,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":10,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":309,"org.apache.commons.lang3.StringUtilsTest.testReplaceOnce_StringStringString":198,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":193,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":321,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBeforeLast_StringString":408,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthByte":207,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":159,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":300,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfChars":269,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":133,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":99,"org.apache.commons.lang3.StringUtilsTest.testAbbreviateMiddle":369,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":183,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringsBetween_StringStringString":405,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":289,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":141,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":89,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":32,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":248,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_boolean":2,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_Char":352,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":206,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":105,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":415,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":196,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissing":365,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":307,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDouble":224,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":118,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":120,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccess":259,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":97,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":108,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_DefaultUnboxing_Widening":83,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":9,"org.apache.commons.lang3.ArrayUtilsTest.testContainsInt":333,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":146,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":214,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":160,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":204,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":234,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":421,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":65,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":396,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":280,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":218,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":395,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":255,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":147,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":52,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":215,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyInt":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":236,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":420,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":171,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":154,"org.apache.commons.lang3.StringUtilsTest.testRemoveStart":367,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":316,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":263,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticField":260,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":93,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":237,"org.apache.commons.lang3.ClassUtilsTest.testGetPublicMethod":257,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":25,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":106,"org.apache.commons.lang3.math.NumberUtilsTest.testMinLong_emptyArray":326,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":179,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedFieldForceAccess":412,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":137,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":288,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArray":324,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":104,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringString":351,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArray":332,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":109,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":47,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":362,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissing":374,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength":277,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":294,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":295,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":384,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_byte":279,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":103,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":296,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":158,"org.apache.commons.lang3.ValidateTest.testInclusiveBetweenLong":337,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":282,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":304,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_Locale":21,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":284,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":129,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException1":331,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":343,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissingIgnoreCase":371,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":148,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":5,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfInts":315,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":290,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":310,"org.apache.commons.lang3.builder.DiffTest.testGetType":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":174,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_String":348,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArrayHiddenByObject":273,"org.apache.commons.lang3.StringUtilsTest.testReplaceChars_StringStringString":372,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":163,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":164,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":407,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":165,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":140,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDouble":225,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleWithStartIndex":223,"org.apache.commons.lang3.text.StrBuilderTest.testCharAt":38,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":19,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":66,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String":63,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":131,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":346,"org.apache.commons.lang3.CharUtilsTest.testToChar_String_char":410,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArrayHiddenByObject":322,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyBooleanObjectNull":416,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_char_char":308,"org.apache.commons.lang3.StringUtilsTest.testLengthStringBuffer":327,"org.apache.commons.lang3.StringUtilsTest.testLength_CharBuffer":328,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":130,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccess":265,"org.apache.commons.lang3.builder.CompareToBuilderTest.testRaggedArray":271,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":293,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageName_String":339,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticField":266,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":392,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":44,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":344,"org.apache.commons.lang3.text.WordUtilsTest.testSwapCase_String":347,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":145,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":122,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":268,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":235,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlpha":403,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":142},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3368","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[0,1],"tindex":"a44a2bf1-2e7e-11e6-930e-c93b958e0a3d","method":{"position":"org.apache.commons.lang3.ArrayUtils:552","type":"CtMethodImpl","sourcecode":"public static int[] nullToEmpty(final int[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:451","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[2],"tindex":"a44b1652-2e7e-11e6-930e-7bcfea0d2057","method":{"position":"org.apache.commons.lang3.ArrayUtils:3477","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean[] toObject(final boolean[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Boolean[];\n            } \n            final java.lang.Boolean[] java.lang.Boolean[] = new java.lang.Boolean[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i] ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:357","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[3],"tindex":"a44b1653-2e7e-11e6-930e-337833047805","method":{"position":"org.apache.commons.lang3.mutable.MutableDouble:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableDouble.this.double = value.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2002","type":"CtBinaryOperatorImpl","sourcecode":"sizeStartText == null"},"failures":[4],"tindex":"a44b3d64-2e7e-11e6-930e-1d5f8a2ee085","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2001","type":"CtMethodImpl","sourcecode":"protected void setSizeStartText(java.lang.String sizeStartText) {\n    if (sizeStartText == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (sizeStartText == null) {\n                sizeStartText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = sizeStartText;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeStartText":"sizeStartText"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:738","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"a44b6475-2e7e-11e6-930e-7b43fea24b54","method":{"position":"org.apache.commons.lang3.time.DateUtils:828","type":"CtMethodImpl","sourcecode":"public static java.util.Calendar truncate(final java.util.Calendar date, final int field) {\n    if (date == null) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = ((java.util.Calendar)(date.clone()));\n            org.apache.commons.lang3.time.DateUtils.modify(truncated, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return truncated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:255","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[],"tindex":"a44b6476-2e7e-11e6-930e-9f2dead37e19","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:123","type":"CtMethodImpl","sourcecode":"public static float min(final float a, final float b, final float c) {\n    if (java.lang.Float.isNaN(b)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:454","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isBlank(str)"},"failures":[19],"tindex":"a44b8b87-2e7e-11e6-930e-274a94d33ad9","method":{"position":"org.apache.commons.lang3.StringUtils:5686","type":"CtMethodImpl","sourcecode":"public static java.lang.String capitalize(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isBlank(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int;\n            if ((str == null) || ((strLen = str.length()) == 0)) {\n                return str;\n            } \n            char char = str.charAt(0);\n            if (java.lang.Character.isTitleCase(firstChar)) {\n                return str;\n            } \n            return new java.lang.StringBuilder(strLen).append(java.lang.Character.toTitleCase(firstChar)).append(str.substring(1)).toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharEncoding:95","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"a44bb298-2e7e-11e6-930e-ffb82d1f7f28","method":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:342","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.concurrent.BackgroundInitializer<?> checkName(final java.lang.String name) {\n    if (name == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.concurrent.BackgroundInitializer<?> org.apache.commons.lang3.concurrent.BackgroundInitializer<?> = java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.get(name);\n            if (init == null) {\n                throw new java.util.NoSuchElementException((\"No child initializer with name \" + name));\n            } \n            return init;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1336","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"a44bb299-2e7e-11e6-930e-1f09975d3fed","method":{"position":"org.apache.commons.lang3.ArrayUtils:4641","type":"CtMethodImpl","sourcecode":"public static <T>T[] removeElement(final T[] array, final java.lang.Object element) {\n    if (element == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"element"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:894","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[20],"tindex":"a44bd9aa-2e7e-11e6-930e-c75d9316f202","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:887","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final double[] lhs, final double[] rhs) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:76","type":"CtBinaryOperatorImpl","sourcecode":"locale == null"},"failures":[21],"tindex":"a44c00bb-2e7e-11e6-930e-ebf6596b8045","method":{"position":"org.apache.commons.lang3.LocaleUtils:194","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.util.Locale> localeLookupList(final java.util.Locale locale, final java.util.Locale defaultLocale) {\n    if (locale == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>(4);\n            if (locale != null) {\n                list.add(locale);\n                if ((locale.getVariant().length()) > 0) {\n                    list.add(new java.util.Locale(locale.getLanguage() , locale.getCountry()));\n                } \n                if ((locale.getCountry().length()) > 0) {\n                    list.add(new java.util.Locale(locale.getLanguage() , \"\"));\n                } \n                if ((list.contains(defaultLocale)) == false) {\n                    list.add(defaultLocale);\n                } \n            } \n            return java.util.Collections.unmodifiableList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1660","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[22,23,24,25,26],"tindex":"a44c27cc-2e7e-11e6-930e-7b5e2783df13","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1658","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class<?>) {\n        {\n            org.apache.commons.lang3.Validate.notNull(type);\n            if (type instanceof java.lang.Class<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.classToString(((java.lang.Class<?>)(type)));\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(((java.lang.reflect.ParameterizedType)(type)));\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(((java.lang.reflect.WildcardType)(type)));\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(((java.lang.reflect.TypeVariable<?>)(type)));\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(((java.lang.reflect.GenericArrayType)(type)));\n            } \n            throw new java.lang.IllegalArgumentException(org.apache.commons.lang3.ObjectUtils.identityToString(type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3613","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[27],"tindex":"a44c4edd-2e7e-11e6-930e-53fe4c86f773","method":{"position":"org.apache.commons.lang3.ArrayUtils:4205","type":"CtMethodImpl","sourcecode":"public static long[] add(final long[] array, final long element) {\n    if (array == null) {\n        {\n            final long[] long[] = ((long[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1042","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[28],"tindex":"a44c4ede-2e7e-11e6-930e-2313f7625338","method":{"position":"org.apache.commons.lang3.ArrayUtils:5974","type":"CtMethodImpl","sourcecode":"public static boolean[] removeElements(final boolean[] array, final boolean... values) {\n    if (array == null) {\n        {\n            if (array == null) {\n                {\n                    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                        return org.apache.commons.lang3.ArrayUtils.clone(array);\n                    } \n                    final java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt>(2);\n                    for (final boolean boolean : values) {\n                        final java.lang.Boolean java.lang.Boolean = java.lang.Boolean.valueOf(v);\n                        final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                        if (count == null) {\n                            occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                        } else {\n                            count.increment();\n                        }\n                    }\n                    final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n                    for (final java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                        final java.lang.Boolean java.lang.Boolean = e.getKey();\n                        int int = 0;\n                        for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                            found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.booleanValue(), found);\n                            if (found < 0) {\n                                break;\n                            } \n                            toRemove.set((found++));\n                        }\n                    }\n                    return ((boolean[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:518","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"a44c9cff-2e7e-11e6-930e-efc9f3d5c122","method":{"position":"org.apache.commons.lang3.time.DateUtils:474","type":"CtMethodImpl","sourcecode":"public static java.util.Date addMinutes(final java.util.Date date, final int amount) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:525","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[29,30],"tindex":"a44c9d00-2e7e-11e6-930e-93619636564a","method":{"position":"org.apache.commons.lang3.StringUtils:3221","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] splitByCharacterType(final java.lang.String str, final boolean camelCase) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (str.isEmpty()) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            final char[] char[] = str.toCharArray();\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = 0;\n            int int = java.lang.Character.getType(c[tokenStart]);\n            for (int int = tokenStart + 1 ; pos < (c.int) ; pos++) {\n                final int int = java.lang.Character.getType(c[pos]);\n                if (type == currentType) {\n                    continue;\n                } \n                if ((camelCase && (type == (java.lang.Character.java.lang.Character.byte))) && (currentType == (java.lang.Character.java.lang.Character.byte))) {\n                    final int int = pos - 1;\n                    if (newTokenStart != tokenStart) {\n                        list.add(new java.lang.String(c , tokenStart , (newTokenStart - tokenStart)));\n                        tokenStart = newTokenStart;\n                    } \n                } else {\n                    list.add(new java.lang.String(c , tokenStart , (pos - tokenStart)));\n                    tokenStart = pos;\n                }\n                currentType = type;\n            }\n            list.add(new java.lang.String(c , tokenStart , ((c.int) - tokenStart)));\n            return list.toArray(new java.lang.String[list.size()]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.NoSuchMethodException","condition":{"position":"org.apache.commons.lang3.ClassUtils:268","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"a44ceb21-2e7e-11e6-930e-85d1bdebf34a","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:119","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeMethod(final java.lang.Object object, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (object == null) {\n        throw new java.lang.NoSuchMethodException();\n    } else {\n        {\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(object.getClass(), methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on object: \") + (object.getClass().getName())));\n            } \n            return method.invoke(object, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:825","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof int[]"},"failures":[],"tindex":"a44d1232-2e7e-11e6-930e-03f35cdf7373","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:180","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeExactMethod(final java.lang.Object object, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (object instanceof int[]) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(object.getClass(), methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on object: \") + (object.getClass().getName())));\n            } \n            return method.invoke(object, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:278","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[31,32],"tindex":"a44d3943-2e7e-11e6-930e-d563537c6d27","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:324","type":"CtMethodImpl","sourcecode":"public static boolean reflectionEquals(final java.lang.Object lhs, final java.lang.Object rhs, final boolean testTransients, final java.lang.Class<?> reflectUpToClass, final java.lang.String... excludeFields) {\n    if ((lhs == null) || (lhs == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (lhs == rhs) {\n                return true;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                return false;\n            } \n            final java.lang.Class<?> java.lang.Class<?> = lhs.getClass();\n            final java.lang.Class<?> java.lang.Class<?> = rhs.getClass();\n            java.lang.Class<?> java.lang.Class<?>;\n            if (lhsClass.isInstance(rhs)) {\n                testClass = lhsClass;\n                if (!(rhsClass.isInstance(lhs))) {\n                    testClass = rhsClass;\n                } \n            } else if (rhsClass.isInstance(lhs)) {\n                testClass = rhsClass;\n                if (!(lhsClass.isInstance(rhs))) {\n                    testClass = lhsClass;\n                } \n            } else {\n                return false;\n            }\n            final org.apache.commons.lang3.builder.EqualsBuilder org.apache.commons.lang3.builder.EqualsBuilder = new org.apache.commons.lang3.builder.EqualsBuilder();\n            try {\n                if (testClass.isArray()) {\n                    equalsBuilder.append(lhs, rhs);\n                } else {\n                    org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);\n                    while (((testClass.getSuperclass()) != null) && (testClass != reflectUpToClass)) {\n                        testClass = testClass.getSuperclass();\n                        org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);\n                    }\n                }\n            } catch (final java.lang.IllegalArgumentException e) {\n                return false;\n            }\n            return equalsBuilder.isEquals();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:854","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[33],"tindex":"a44d3944-2e7e-11e6-930e-9f052b1eb69f","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:847","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final byte[] lhs, final byte[] rhs) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6168","type":"CtBinaryOperatorImpl","sourcecode":"(cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))"},"failures":[34,35],"tindex":"a44d6055-2e7e-11e6-930e-6dd9af5c7acb","method":{"position":"org.apache.commons.lang3.StringUtils:1805","type":"CtMethodImpl","sourcecode":"public static boolean containsOnly(final java.lang.CharSequence cs, final char... valid) {\n    if ((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((valid == null) || (cs == null)) {\n                return false;\n            } \n            if ((cs.length()) == 0) {\n                return true;\n            } \n            if ((valid.int) == 0) {\n                return false;\n            } \n            return (org.apache.commons.lang3.StringUtils.indexOfAnyBut(cs, valid)) == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5780","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isTitleCase(ch)"},"failures":[36],"tindex":"a44d6056-2e7e-11e6-930e-45b2fe6f05fe","method":{"position":"org.apache.commons.lang3.CharUtils:535","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiAlphanumeric(final char ch) {\n    if (java.lang.Character.isTitleCase(ch)) {\n        {\n            return (org.apache.commons.lang3.CharUtils.isAsciiAlpha(ch)) || (org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1040","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[37,38,39,40],"tindex":"a44d8767-2e7e-11e6-930e-31abc88f083c","method":{"position":"org.apache.commons.lang3.text.StrBuilder:308","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic char charAt(final int index) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index >= (length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(index);\n            } \n            return char[][index];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2442","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"a44d8768-2e7e-11e6-930e-95c2060e25b9","method":{"position":"org.apache.commons.lang3.text.StrBuilder:495","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.text.StrBuilder append(final java.lang.CharSequence seq, final int startIndex, final int length) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (seq == null) {\n                return appendNull();\n            } \n            return append(seq.toString(), startIndex, length);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:173","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[41],"tindex":"a44d8769-2e7e-11e6-930e-d7489f4f0eb8","method":{"position":"org.apache.commons.lang3.StringUtils:2331","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringAfter(final java.lang.String str, final java.lang.String separator) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(separator)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            if (separator == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.indexOf(separator);\n            if (pos == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return str.substring((pos + (separator.length())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3184","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[42,43,44,45,46,47,48,48,49,50,51,52,53,53,54],"tindex":"a44dae7a-2e7e-11e6-930e-e796dc16791c","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:951","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object[] array) {\n    if (array == null) {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(valueDelimiter)"},"failures":[55,56],"tindex":"a44dae7b-2e7e-11e6-930e-136742dc691b","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1144","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setValueDelimiter(final java.lang.String valueDelimiter) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(valueDelimiter)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(valueDelimiter)) {\n                setValueDelimiterMatcher(null);\n                return org.apache.commons.lang3.text.StrSubstitutor.this;\n            } \n            return setValueDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(valueDelimiter));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueDelimiter":"valueDelimiter"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.NoSuchMethodException","condition":{"position":"org.apache.commons.lang3.ClassUtils:430","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[57],"tindex":"a44dd58c-2e7e-11e6-930e-b9fc0bab8bf5","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:316","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeExactStaticMethod(final java.lang.Class<?> cls, final java.lang.String methodName, java.lang.Object... args) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (cls == null) {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.toClass(args);\n            return org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(cls, methodName, args, parameterTypes);\n        }\n    } else {\n        throw new java.lang.NoSuchMethodException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:164","type":"CtBinaryOperatorImpl","sourcecode":"cs instanceof java.lang.String"},"failures":[58,59,60,61],"tindex":"a44dfc9d-2e7e-11e6-930e-33da97ea22bc","method":{"position":"org.apache.commons.lang3.StringUtils:6167","type":"CtMethodImpl","sourcecode":"public static boolean isAllUpperCase(final java.lang.CharSequence cs) {\n    if (cs instanceof java.lang.String) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isUpperCase(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:121","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[62,63],"tindex":"a44dfc9e-2e7e-11e6-930e-bf862f5b6c5b","method":{"position":"org.apache.commons.lang3.BooleanUtils:547","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean toBooleanObject(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == \"true\") {\n                return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } \n            if (str == null) {\n                return null;\n            } \n            switch (str.length()) {\n                case 1 :\n                    {\n                        final char char = str.charAt(0);\n                        if ((((ch0 == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T')) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        if ((((ch0 == 'n') || (ch0 == 'N')) || (ch0 == 'f')) || (ch0 == 'F')) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                case 2 :\n                    {\n                        final char char = str.charAt(0);\n                        final char char = str.charAt(1);\n                        if (((ch0 == 'o') || (ch0 == 'O')) && ((ch1 == 'n') || (ch1 == 'N'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        if (((ch0 == 'n') || (ch0 == 'N')) && ((ch1 == 'o') || (ch1 == 'O'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                case 3 :\n                    {\n                        final char char = str.charAt(0);\n                        final char char = str.charAt(1);\n                        final char char = str.charAt(2);\n                        if ((((ch0 == 'y') || (ch0 == 'Y')) && ((ch1 == 'e') || (ch1 == 'E'))) && ((ch2 == 's') || (ch2 == 'S'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        if ((((ch0 == 'o') || (ch0 == 'O')) && ((ch1 == 'f') || (ch1 == 'F'))) && ((ch2 == 'f') || (ch2 == 'F'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                case 4 :\n                    {\n                        final char char = str.charAt(0);\n                        final char char = str.charAt(1);\n                        final char char = str.charAt(2);\n                        final char char = str.charAt(3);\n                        if (((((ch0 == 't') || (ch0 == 'T')) && ((ch1 == 'r') || (ch1 == 'R'))) && ((ch2 == 'u') || (ch2 == 'U'))) && ((ch3 == 'e') || (ch3 == 'E'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                case 5 :\n                    {\n                        final char char = str.charAt(0);\n                        final char char = str.charAt(1);\n                        final char char = str.charAt(2);\n                        final char char = str.charAt(3);\n                        final char char = str.charAt(4);\n                        if ((((((ch0 == 'f') || (ch0 == 'F')) && ((ch1 == 'a') || (ch1 == 'A'))) && ((ch2 == 'l') || (ch2 == 'L'))) && ((ch3 == 's') || (ch3 == 'S'))) && ((ch4 == 'e') || (ch4 == 'E'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                default :\n                    break;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1072","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"a44e71cf-2e7e-11e6-930e-49aca47b60f4","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:474","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Method getMatchingAccessibleMethod(final java.lang.Class<?> cls, final java.lang.String methodName, final java.lang.Class<?>... parameterTypes) {\n    if (cls == null) {\n        {\n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(methodName, parameterTypes);\n                org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(method);\n                return method;\n            } catch (final java.lang.NoSuchMethodException e) {\n            }\n            java.lang.reflect.Method java.lang.reflect.Method = null;\n            final java.lang.reflect.Method[] java.lang.reflect.Method[] = cls.getMethods();\n            for (final java.lang.reflect.Method java.lang.reflect.Method : methods) {\n                if ((method.getName().equals(methodName)) && (org.apache.commons.lang3.ClassUtils.isAssignable(parameterTypes, method.getParameterTypes(), true))) {\n                    final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(method);\n                    if ((accessibleMethod != null) && ((bestMatch == null) || ((org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(accessibleMethod.getParameterTypes(), bestMatch.getParameterTypes(), parameterTypes)) < 0))) {\n                        bestMatch = accessibleMethod;\n                    } \n                } \n            }\n            if (bestMatch != null) {\n                org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(bestMatch);\n            } \n            return bestMatch;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:263","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[76],"tindex":"a44e98e0-2e7e-11e6-930e-198fa5c344bc","method":{"position":"org.apache.commons.lang3.CharUtils:149","type":"CtMethodImpl","sourcecode":"public static char toChar(final java.lang.Character ch, final char defaultValue) {\n    if (ch == null) {\n        {\n            if (ch == null) {\n                return defaultValue;\n            } \n            return ch.charValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1624","type":"CtBinaryOperatorImpl","sourcecode":"t instanceof java.lang.reflect.WildcardType"},"failures":[24,25],"tindex":"a44e98e1-2e7e-11e6-930e-cdeb511136fd","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1594","type":"CtMethodImpl","sourcecode":"private static boolean equals(java.lang.reflect.ParameterizedType p, java.lang.reflect.Type t) {\n    if (t instanceof java.lang.reflect.WildcardType) {\n        {\n            if (t instanceof java.lang.reflect.ParameterizedType) {\n                final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(t));\n                if ((org.apache.commons.lang3.reflect.TypeUtils.equals(p.getRawType(), other.getRawType())) && (org.apache.commons.lang3.reflect.TypeUtils.equals(p.getOwnerType(), other.getOwnerType()))) {\n                    return org.apache.commons.lang3.reflect.TypeUtils.equals(p.getActualTypeArguments(), other.getActualTypeArguments());\n                } \n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"t":"t"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:603","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[77],"tindex":"a44ebff2-2e7e-11e6-930e-7544525bcdd4","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:455","type":"CtMethodImpl","sourcecode":"public static void printRootCauseStackTrace(final java.lang.Throwable throwable, final java.io.PrintStream stream) {\n    if (throwable == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (throwable == null) {\n                {\n                    if (throwable == null) {\n                        return ;\n                    } \n                    if (stream == null) {\n                        throw new java.lang.IllegalArgumentException(\"The PrintStream must not be null\");\n                    } \n                    final java.lang.String[] java.lang.String[] = org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(throwable);\n                    for (final java.lang.String java.lang.String : trace) {\n                        stream.println(element);\n                    }\n                    stream.flush();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1028","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,24,25,26,64,65,67,68,69,71,72,74,75],"tindex":"a44ee703-2e7e-11e6-930e-8f62a86b66ec","method":{"position":"org.apache.commons.lang3.ClassUtils:624","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(java.lang.Class<?> cls, final java.lang.Class<?> toClass, final boolean autoboxing) {\n    if (cls == null) {\n        {\n            if (toClass == null) {\n                return false;\n            } \n            if (cls == null) {\n                return !(toClass.isPrimitive());\n            } \n            if (autoboxing) {\n                if ((cls.isPrimitive()) && (!(toClass.isPrimitive()))) {\n                    cls = org.apache.commons.lang3.ClassUtils.primitiveToWrapper(cls);\n                    if (cls == null) {\n                        return false;\n                    } \n                } \n                if ((toClass.isPrimitive()) && (!(cls.isPrimitive()))) {\n                    cls = org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(cls);\n                    if (cls == null) {\n                        return false;\n                    } \n                } \n            } \n            if (cls.equals(toClass)) {\n                return true;\n            } \n            if (cls.isPrimitive()) {\n                if ((toClass.isPrimitive()) == false) {\n                    return false;\n                } \n                if (java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>.equals(cls)) {\n                    return ((java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>.equals(toClass)) || (java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>.equals(toClass))) || (java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>.equals(toClass));\n                } \n                if (java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>.equals(cls)) {\n                    return (java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>.equals(toClass)) || (java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>.equals(toClass));\n                } \n                if (java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>.equals(cls)) {\n                    return false;\n                } \n                if (java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>.equals(cls)) {\n                    return false;\n                } \n                if (java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>.equals(cls)) {\n                    return java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>.equals(toClass);\n                } \n                if (java.lang.Character.java.lang.Character.java.lang.Class<java.lang.Character>.equals(cls)) {\n                    return (((java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>.equals(toClass)) || (java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>.equals(toClass))) || (java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>.equals(toClass))) || (java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>.equals(toClass));\n                } \n                if (java.lang.Short.java.lang.Short.java.lang.Class<java.lang.Short>.equals(cls)) {\n                    return (((java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>.equals(toClass)) || (java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>.equals(toClass))) || (java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>.equals(toClass))) || (java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>.equals(toClass));\n                } \n                if (java.lang.Byte.java.lang.Byte.java.lang.Class<java.lang.Byte>.equals(cls)) {\n                    return ((((java.lang.Short.java.lang.Short.java.lang.Class<java.lang.Short>.equals(toClass)) || (java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>.equals(toClass))) || (java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>.equals(toClass))) || (java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>.equals(toClass))) || (java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>.equals(toClass));\n                } \n                return false;\n            } \n            return toClass.isAssignableFrom(cls);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:253","type":"CtBinaryOperatorImpl","sourcecode":"style == null"},"failures":[125,126,127,128,128,129,130,131,132,48,49,50,51,52,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,53,186,187,188,189,190,191,192,193],"tindex":"a44f3524-2e7e-11e6-930e-9b9e7c8e0487","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:284","type":"CtMethodImpl","sourcecode":"public static <T>java.lang.String toString(final T object, final org.apache.commons.lang3.builder.ToStringStyle style, final boolean outputTransients, final boolean outputStatics, final java.lang.Class<? super T> reflectUpToClass) {\n    if (style == null) {\n        {\n            return new org.apache.commons.lang3.builder.ReflectionToStringBuilder(object , style , null , reflectUpToClass , outputTransients , outputStatics).toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"style":"style"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:194","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"a44f5c35-2e7e-11e6-930e-09a483bd37fa","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:447","type":"CtMethodImpl","sourcecode":"private void seekNonWs(final java.lang.String pattern, final java.text.ParsePosition pos) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            final char[] char[] = pattern.toCharArray();\n            do {\n                len = org.apache.commons.lang3.text.StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());\n                pos.setIndex(((pos.getIndex()) + len));\n            } while ((len > 0) && ((pos.getIndex()) < (pattern.length())) );\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1223","type":"CtBinaryOperatorImpl","sourcecode":"b > a"},"failures":[194],"tindex":"a44f5c36-2e7e-11e6-930e-c90c4fb9b195","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1116","type":"CtMethodImpl","sourcecode":"public static int min(int a, final int b, final int c) {\n    if (c > a) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (b < a) {\n                a = b;\n            } \n            if (c < a) {\n                a = c;\n            } \n            return a;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"c"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4533","type":"CtBinaryOperatorImpl","sourcecode":"(--max) == 0"},"failures":[195,196,197,198,199,200,201,202,203,204],"tindex":"a44f8347-2e7e-11e6-930e-fdcddc75ac56","method":{"position":"org.apache.commons.lang3.StringUtils:4516","type":"CtMethodImpl","sourcecode":"public static java.lang.String replace(final java.lang.String text, final java.lang.String searchString, final java.lang.String replacement, int max) {\n    if ((--max) == 0) {\n        {\n            if ((((org.apache.commons.lang3.StringUtils.isEmpty(text)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchString))) || (replacement == null)) || (max == 0)) {\n                return text;\n            } \n            int int = 0;\n            int int = text.indexOf(searchString, start);\n            if (end == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return text;\n            } \n            final int int = searchString.length();\n            int int = (replacement.length()) - replLength;\n            increase = increase < 0 ? 0 : increase;\n            increase *= max < 0 ? 16 : max > 64 ? 64 : max;\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((text.length()) + increase));\n            while (end != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                buf.append(text.substring(start, end)).append(replacement);\n                start = end + replLength;\n                if ((--max) == 0) {\n                    break;\n                } \n                end = text.indexOf(searchString, start);\n            }\n            buf.append(text.substring(start));\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"max":"max"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[205],"tindex":"a44faa58-2e7e-11e6-930e-8d6a8b19f459","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:728","type":"CtMethodImpl","sourcecode":"public static java.lang.String escapeXml11(final java.lang.String input) {\n    if (input != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"(str.charAt(3)) != '_'"},"failures":[206],"tindex":"a44faa59-2e7e-11e6-930e-5fa5cabbafe7","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2981","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(final java.lang.String str, final int off, final int len) {\n    if ((str.charAt(3)) != '_') {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.text.StrBuilder.this.append(str, off, len);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3821","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[207],"tindex":"a44faa5a-2e7e-11e6-930e-498984424ff2","method":{"position":"org.apache.commons.lang3.ArrayUtils:1317","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final byte[] array1, final byte[] array2) {\n    if (array2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:360","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Modifier.isPublic(cls.getModifiers())"},"failures":[208,209,210,211,212,42,213,43,44,214,215,216,217,218,45,219,46,47,48,48,49,50,51,52,53,53,54],"tindex":"a44fd16b-2e7e-11e6-930e-2d17d7bd3f0b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1589","type":"CtMethodImpl","sourcecode":"protected java.lang.String getShortClassName(final java.lang.Class<?> cls) {\n    if (java.lang.reflect.Modifier.isPublic(cls.getModifiers())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.getShortClassName(cls);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:603","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[],"tindex":"a44fd16c-2e7e-11e6-930e-b523c4338c35","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:602","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] getStackFrames(final java.lang.Throwable throwable) {\n    if (throwable == null) {\n        {\n            if (throwable == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            return org.apache.commons.lang3.exception.ExceptionUtils.getStackFrames(org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(throwable));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7035","type":"CtBinaryOperatorImpl","sourcecode":"(first.length()) > (second.length())"},"failures":[220],"tindex":"a44fd16d-2e7e-11e6-930e-e3f665ec09fe","method":{"position":"org.apache.commons.lang3.StringUtils:7112","type":"CtMethodImpl","sourcecode":"private static int transpositions(java.lang.CharSequence first, java.lang.CharSequence second) {\n    if ((first.length()) > (first.length())) {\n        {\n            int int = 0;\n            for (int int = 0 ; i < (first.length()) ; i++) {\n                if ((first.charAt(i)) != (second.charAt(i))) {\n                    transpositions++;\n                } \n            }\n            return transpositions / 2;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"first","second":"first"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1496","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[221,222],"tindex":"a44fd16e-2e7e-11e6-930e-311c6a578bb8","method":{"position":"org.apache.commons.lang3.text.WordUtils:535","type":"CtMethodImpl","sourcecode":"public static java.lang.String initials(final java.lang.String str, final char... delimiters) {\n    if (str == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            if ((delimiters != null) && ((delimiters.int) == 0)) {\n                return \"\";\n            } \n            final int int = str.length();\n            final char[] char[] = new char[(strLen / 2) + 1];\n            int int = 0;\n            boolean boolean = true;\n            for (int int = 0 ; i < strLen ; i++) {\n                final char char = str.charAt(i);\n                if (org.apache.commons.lang3.text.WordUtils.isDelimiter(ch, delimiters)) {\n                    lastWasGap = true;\n                } else if (lastWasGap) {\n                    buf[(count++)] = ch;\n                    lastWasGap = false;\n                } else {\n                    continue;\n                }\n            }\n            return new java.lang.String(buf , 0 , count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1115","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[223,224,225,226],"tindex":"a44ff87f-2e7e-11e6-930e-cfea7f2000ee","method":{"position":"org.apache.commons.lang3.ArrayUtils:2558","type":"CtMethodImpl","sourcecode":"public static int indexOf(final double[] array, final double valueToFind, int startIndex) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1648","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"a44ff880-2e7e-11e6-930e-3198a227d849","method":{"position":"org.apache.commons.lang3.time.DateUtils:584","type":"CtMethodImpl","sourcecode":"public static java.util.Date setHours(final java.util.Date date, final int amount) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2917","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[227,228,229,230,231,232,233,234,235,236,237,37,238,239,240],"tindex":"a4501f91-2e7e-11e6-930e-37c2d61017da","method":{"position":"org.apache.commons.lang3.text.StrBuilder:411","type":"CtMethodImpl","sourcecode":"public void getChars(final int startIndex, final int endIndex, final char[] destination, final int destinationIndex) {\n    if (destinationIndex < 0) {\n        {\n            if (startIndex < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n            } \n            if ((endIndex < 0) || (endIndex > (length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(endIndex);\n            } \n            if (startIndex > endIndex) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n            } \n            java.lang.System.arraycopy(char[], startIndex, destination, destinationIndex, (endIndex - startIndex));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"destinationIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[241],"tindex":"a4501f92-2e7e-11e6-930e-7b82792e67d1","method":{"position":"org.apache.commons.lang3.BooleanUtils:140","type":"CtMethodImpl","sourcecode":"public static boolean isNotFalse(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            return !(org.apache.commons.lang3.BooleanUtils.isFalse(bool));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:357","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"a4501f93-2e7e-11e6-930e-23538c8d9b4b","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:488","type":"CtMethodImpl","sourcecode":"public static void writeStaticField(final java.lang.reflect.Field field, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (value == null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(field, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:395","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.builder.ToStringStyle.this.fieldSeparatorAtEnd) == false"},"failures":[],"tindex":"a45046a4-2e7e-11e6-930e-d3aae913cdcc","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setFieldSeparatorAtEnd(final boolean fieldSeparatorAtEnd) {\n    if (fieldSeparatorAtEnd == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setFieldSeparatorAtEnd(fieldSeparatorAtEnd);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldSeparatorAtEnd":"fieldSeparatorAtEnd"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2949","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[242],"tindex":"a45046a5-2e7e-11e6-930e-41ee952e32eb","method":{"position":"org.apache.commons.lang3.StringUtils:2118","type":"CtMethodImpl","sourcecode":"public static java.lang.String substring(final java.lang.String str, int start, int end) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (end < 0) {\n                end = (str.length()) + end;\n            } \n            if (start < 0) {\n                start = (str.length()) + start;\n            } \n            if (end > (str.length())) {\n                end = str.length();\n            } \n            if (start > end) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            if (start < 0) {\n                start = 0;\n            } \n            if (end < 0) {\n                end = 0;\n            } \n            return str.substring(start, end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2333","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[243,91],"tindex":"a45046a6-2e7e-11e6-930e-b1cfb07e48e1","method":{"position":"org.apache.commons.lang3.ArrayUtils:3001","type":"CtMethodImpl","sourcecode":"public static java.lang.Character[] toObject(final char[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Character[];\n            } \n            final java.lang.Character[] java.lang.Character[] = new java.lang.Character[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Character.valueOf(array[i]);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:525","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[244],"tindex":"a4506db7-2e7e-11e6-930e-811a29370661","method":{"position":"org.apache.commons.lang3.StringUtils:5481","type":"CtMethodImpl","sourcecode":"public static java.lang.String center(final java.lang.String str, final int size) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.center(str, size, ' ');\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:804","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[245],"tindex":"a4506db8-2e7e-11e6-930e-a77869468c44","method":{"position":"org.apache.commons.lang3.time.DateUtils:599","type":"CtMethodImpl","sourcecode":"public static java.util.Date setMinutes(final java.util.Date date, final int amount) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:290","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[246],"tindex":"a4506db9-2e7e-11e6-930e-a7da4cb3a74f","method":{"position":"org.apache.commons.lang3.mutable.MutableFloat:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        {\n            org.apache.commons.lang3.mutable.MutableFloat.this.float = value.floatValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5122","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"a4506dba-2e7e-11e6-930e-49e4b7ff26d7","method":{"position":"org.apache.commons.lang3.StringUtils:6219","type":"CtMethodImpl","sourcecode":"public static java.lang.String defaultString(final java.lang.String str, final java.lang.String defaultStr) {\n    if (defaultStr == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return str == null ? defaultStr : str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"defaultStr"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:551","type":"CtBinaryOperatorImpl","sourcecode":"(causeFrames == null) || (wrapperFrames == null)"},"failures":[77,247,248],"tindex":"a45094cb-2e7e-11e6-930e-b315dab23ac4","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:550","type":"CtMethodImpl","sourcecode":"public static void removeCommonFrames(final java.util.List<java.lang.String> causeFrames, final java.util.List<java.lang.String> wrapperFrames) {\n    if ((causeFrames == null) || (causeFrames == null)) {\n        {\n            if ((causeFrames == null) || (wrapperFrames == null)) {\n                throw new java.lang.IllegalArgumentException(\"The List must not be null\");\n            } \n            int int = (causeFrames.size()) - 1;\n            int int = (wrapperFrames.size()) - 1;\n            while ((causeFrameIndex >= 0) && (wrapperFrameIndex >= 0)) {\n                final java.lang.String java.lang.String = causeFrames.get(causeFrameIndex);\n                final java.lang.String java.lang.String = wrapperFrames.get(wrapperFrameIndex);\n                if (causeFrame.equals(wrapperFrame)) {\n                    causeFrames.remove(causeFrameIndex);\n                } \n                causeFrameIndex--;\n                wrapperFrameIndex--;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"causeFrames":"causeFrames","wrapperFrames":"causeFrames"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:631","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[249],"tindex":"a45094cc-2e7e-11e6-930e-3999cdccb50a","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:473","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final java.lang.StringBuffer source) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(source.length()).append(source);\n            substitute(buf, 0, buf.length());\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:435","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"a45094cd-2e7e-11e6-930e-adbb16a3f5a5","method":{"position":"org.apache.commons.lang3.StringUtils:3906","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final float[] array, final char separator, final int startIndex, final int endIndex) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:106","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(b)"},"failures":[250],"tindex":"a450bbde-2e7e-11e6-930e-ed9d5af3e766","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:89","type":"CtMethodImpl","sourcecode":"public static double min(final double a, final double b, final double c) {\n    if (java.lang.Double.isNaN(b)) {\n        {\n            return org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1548","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"a450bbdf-2e7e-11e6-930e-d38dac2dce19","method":{"position":"org.apache.commons.lang3.ArrayUtils:5974","type":"CtMethodImpl","sourcecode":"public static boolean[] removeElements(final boolean[] array, final boolean... values) {\n    if (array == null) {\n        {\n            if (array == null) {\n                {\n                    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                        return org.apache.commons.lang3.ArrayUtils.clone(array);\n                    } \n                    final java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt>(2);\n                    for (final boolean boolean : values) {\n                        final java.lang.Boolean java.lang.Boolean = java.lang.Boolean.valueOf(v);\n                        final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                        if (count == null) {\n                            occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                        } else {\n                            count.increment();\n                        }\n                    }\n                    final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n                    for (final java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                        final java.lang.Boolean java.lang.Boolean = e.getKey();\n                        int int = 0;\n                        for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                            found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.booleanValue(), found);\n                            if (found < 0) {\n                                break;\n                            } \n                            toRemove.set((found++));\n                        }\n                    }\n                    return ((boolean[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:424","type":"CtBinaryOperatorImpl","sourcecode":"value instanceof java.lang.StringBuilder"},"failures":[],"tindex":"a450e2f0-2e7e-11e6-930e-3b108d533e5d","method":{"position":"org.apache.commons.lang3.AnnotationUtils:91","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, java.lang.Object value) {\n    if (value instanceof java.lang.StringBuilder) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value instanceof java.lang.annotation.Annotation) {\n                value = org.apache.commons.lang3.AnnotationUtils.toString(((java.lang.annotation.Annotation)(value)));\n            } \n            super.appendDetail(buffer, fieldName, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3336","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[251,252,253,254,255,256],"tindex":"a450e2f1-2e7e-11e6-930e-33d2677e5a6c","method":{"position":"org.apache.commons.lang3.ArrayUtils:338","type":"CtMethodImpl","sourcecode":"public static long[] clone(final long[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1886","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isHighSurrogate(ch)"},"failures":[],"tindex":"a450e2f2-2e7e-11e6-930e-9fa0565a0092","method":{"position":"org.apache.commons.lang3.StringUtils:5209","type":"CtMethodImpl","sourcecode":"public static java.lang.String repeat(final char ch, final int repeat) {\n    if (java.lang.Character.isHighSurrogate(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final char[] char[] = new char[repeat];\n            for (int int = repeat - 1 ; i >= 0 ; i--) {\n                buf[i] = ch;\n            }\n            return new java.lang.String(buf);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[257,258,259,260,261,262,263,264,265,266,267,268],"tindex":"a4510a03-2e7e-11e6-930e-95d16fbd052b","method":{"position":"org.apache.commons.lang3.ClassUtils:369","type":"CtMethodImpl","sourcecode":"private static void getAllInterfaces(java.lang.Class<?> cls, final java.util.HashSet<java.lang.Class<?>> interfacesFound) {\n    if (cls == null) {\n        {\n            while (cls != null) {\n                final java.lang.Class<?>[] java.lang.Class<?>[] = cls.getInterfaces();\n                for (final java.lang.Class<?> java.lang.Class<?> : interfaces) {\n                    if (interfacesFound.add(i)) {\n                        org.apache.commons.lang3.ClassUtils.getAllInterfaces(i, interfacesFound);\n                    } \n                }\n                cls = cls.getSuperclass();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:222","type":"CtBinaryOperatorImpl","sourcecode":"method == null"},"failures":[],"tindex":"a4510a04-2e7e-11e6-930e-ab1d55abfd84","method":{"position":"org.apache.commons.lang3.event.EventUtils:127","type":"CtMethodImpl","sourcecode":"private boolean hasMatchingParametersMethod(final java.lang.reflect.Method method) {\n    if (method == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.Object.getClass(), java.lang.String, method.getParameterTypes())) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"method"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:387","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[269],"tindex":"a4510a05-2e7e-11e6-930e-6f3dbd53aba2","method":{"position":"org.apache.commons.lang3.StringUtils:3463","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final char[] array, final char separator) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:975","type":"CtBinaryOperatorImpl","sourcecode":"prefixMatcher == null"},"failures":[270],"tindex":"a4513116-2e7e-11e6-930e-77a80e627934","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:974","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setVariablePrefixMatcher(final org.apache.commons.lang3.text.StrMatcher prefixMatcher) {\n    if (prefixMatcher == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (prefixMatcher == null) {\n                throw new java.lang.IllegalArgumentException(\"Variable prefix matcher must not be null!\");\n            } \n            org.apache.commons.lang3.text.StrSubstitutor.this.org.apache.commons.lang3.text.StrMatcher = prefixMatcher;\n            return org.apache.commons.lang3.text.StrSubstitutor.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prefixMatcher":"prefixMatcher"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:640","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[271,272,273,274,275,276],"tindex":"a4513117-2e7e-11e6-930e-8194b3088a4e","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:462","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final long lhs, final long rhs) {\n    if (lhs != rhs) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = lhs < rhs ? -1 : lhs > rhs ? 1 : 0;\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1558","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[277,278],"tindex":"a4513118-2e7e-11e6-930e-fdaaf86b04f3","method":{"position":"org.apache.commons.lang3.text.StrBuilder:199","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder setLength(final int length) {\n    if (length > 0) {\n        {\n            if (length < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(length);\n            } \n            if (length < (int)) {\n                int = length;\n            } else if (length > (int)) {\n                ensureCapacity(length);\n                final int int = int;\n                final int int = length;\n                int = length;\n                for (int int = oldEnd ; i < newEnd ; i++) {\n                    char[][i] = '\u0000';\n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1609","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[279,95],"tindex":"a4515829-2e7e-11e6-930e-7d2d95781019","method":{"position":"org.apache.commons.lang3.ArrayUtils:3273","type":"CtMethodImpl","sourcecode":"public static java.lang.Byte[] toObject(final byte[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Byte[];\n            } \n            final java.lang.Byte[] java.lang.Byte[] = new java.lang.Byte[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Byte.valueOf(array[i]);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1040","type":"CtBinaryOperatorImpl","sourcecode":"suffixMatcher == null"},"failures":[227,280,281,228,282,229,230,283,231,284,285,286,232,233,287,288,289,290,249,291,292,293,234,55,294,235,295,236,296,56,297,237,298,299,300,270,301,302,303],"tindex":"a451582a-2e7e-11e6-930e-b79959808ca0","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1039","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setVariableSuffixMatcher(final org.apache.commons.lang3.text.StrMatcher suffixMatcher) {\n    if (suffixMatcher == null) {\n        {\n            if (suffixMatcher == null) {\n                throw new java.lang.IllegalArgumentException(\"Variable suffix matcher must not be null!\");\n            } \n            org.apache.commons.lang3.text.StrSubstitutor.this.org.apache.commons.lang3.text.StrMatcher = suffixMatcher;\n            return org.apache.commons.lang3.text.StrSubstitutor.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suffixMatcher":"suffixMatcher"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:339","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[253],"tindex":"a4517f3b-2e7e-11e6-930e-71d2f8bc1681","method":{"position":"org.apache.commons.lang3.ArrayUtils:5711","type":"CtMethodImpl","sourcecode":"public static long[] removeElements(final long[] array, final long... values) {\n    if (values == null) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final long long : values) {\n                final java.lang.Long java.lang.Long = java.lang.Long.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Long java.lang.Long = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.longValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((long[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"values"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:762","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[304,305,306,307],"tindex":"a4517f3c-2e7e-11e6-930e-e5e041343d17","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:164","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrTokenizer getCSVInstance(final java.lang.String input) {\n    if (input == null) {\n        {\n            final org.apache.commons.lang3.text.StrTokenizer org.apache.commons.lang3.text.StrTokenizer = org.apache.commons.lang3.text.StrTokenizer.getCSVClone();\n            tok.reset(input);\n            return tok;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2980","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[308],"tindex":"a4517f3d-2e7e-11e6-930e-91514644402d","method":{"position":"org.apache.commons.lang3.ArrayUtils:2979","type":"CtMethodImpl","sourcecode":"public static char[] toPrimitive(final java.lang.Character[] array, final char valueForNull) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            final char[] char[] = new char[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Character java.lang.Character = array[i];\n                result[i] = b == null ? valueForNull : b.charValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:762","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[309,310,311,312,313],"tindex":"a451a64e-2e7e-11e6-930e-83d8ac98ed15","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:455","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeJava(final java.lang.String input) {\n    if (input == null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1035","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[314],"tindex":"a451a64f-2e7e-11e6-930e-bfbd6952443c","method":{"position":"org.apache.commons.lang3.ArrayUtils:2404","type":"CtMethodImpl","sourcecode":"public static boolean contains(final char[] array, final char valueToFind) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2132","type":"CtBinaryOperatorImpl","sourcecode":"startIndex > endIndex"},"failures":[315],"tindex":"a451a650-2e7e-11e6-930e-b7a227e8c0ff","method":{"position":"org.apache.commons.lang3.StringUtils:3661","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final int[] array, final char separator, final int startIndex, final int endIndex) {\n    if (endIndex > startIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"endIndex","endIndex":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:172","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(field))"},"failures":[],"tindex":"a451cd61-2e7e-11e6-930e-6ff5dea90ced","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:573","type":"CtMethodImpl","sourcecode":"protected java.lang.Object getValue(final java.lang.reflect.Field field) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException {\n    if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(field))) {\n        {\n            return field.get(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getObject());\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:829","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[316,317,92,93,94,96,97,100,318,319,103,104,320,105,107,108,321,322,323,324],"tindex":"a451cd62-2e7e-11e6-930e-c31b6799257d","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:825","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final double[] lhs, final double[] rhs) {\n    if (lhs == lhs) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[325,326],"tindex":"a451cd63-2e7e-11e6-930e-bb4be1c7f521","method":{"position":"org.apache.commons.lang3.math.NumberUtils:788","type":"CtMethodImpl","sourcecode":"public static long min(final long[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            long long = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if ((array[i]) < min) {\n                    min = array[i];\n                } \n            }\n            return min;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:820","type":"CtInvocationImpl","sourcecode":"object.getClass().isArray()"},"failures":[50],"tindex":"a451f474-2e7e-11e6-930e-5b12d99118b3","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:164","type":"CtMethodImpl","sourcecode":"public static java.lang.String reflectionToString(final java.lang.Object object, final org.apache.commons.lang3.builder.ToStringStyle style) {\n    if (object.getClass().isArray()) {\n        {\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(object, style);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:363","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isBlank(cs)"},"failures":[327,328,329,330],"tindex":"a451f475-2e7e-11e6-930e-05d34a47661b","method":{"position":"org.apache.commons.lang3.StringUtils:5452","type":"CtMethodImpl","sourcecode":"public static int length(final java.lang.CharSequence cs) {\n    if (org.apache.commons.lang3.StringUtils.isBlank(cs)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return cs == null ? 0 : cs.length();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1609","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"a451f476-2e7e-11e6-930e-2508e420cff9","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1195","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte[] array) {\n    if (array == null) {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:294","type":"CtBinaryOperatorImpl","sourcecode":"falseValue == null"},"failures":[],"tindex":"a451f477-2e7e-11e6-930e-45d5ba4cd902","method":{"position":"org.apache.commons.lang3.BooleanUtils:485","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer toIntegerObject(final boolean bool, final java.lang.Integer trueValue, final java.lang.Integer falseValue) {\n    if (falseValue == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bool ? trueValue : falseValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseValue":"falseValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:816","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[50],"tindex":"a4521b88-2e7e-11e6-930e-2b8fb942ab9e","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:178","type":"CtMethodImpl","sourcecode":"public static java.lang.String reflectionToString(final java.lang.Object object, final org.apache.commons.lang3.builder.ToStringStyle style, final boolean outputTransients) {\n    if (object == null) {\n        {\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(object, style, outputTransients, false, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:629","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[331],"tindex":"a4521b89-2e7e-11e6-930e-a103e1e84a87","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:146","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Field getDeclaredField(final java.lang.Class<?> cls, final java.lang.String fieldName) {\n    if (cls == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(cls, fieldName, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2559","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[332],"tindex":"a4521b8a-2e7e-11e6-930e-a7eebb798518","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:689","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final double[] array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final double double : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1031","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[333,334,335],"tindex":"a4521b8b-2e7e-11e6-930e-255a5876c3b8","method":{"position":"org.apache.commons.lang3.ArrayUtils:2106","type":"CtMethodImpl","sourcecode":"public static int indexOf(final int[] array, final int valueToFind) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3910","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[336],"tindex":"a4521b8c-2e7e-11e6-930e-c146bd8dca15","method":{"position":"org.apache.commons.lang3.ArrayUtils:1245","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final long[] array1, final long[] array2) {\n    if (array2 == null) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1083","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[337],"tindex":"a452429d-2e7e-11e6-930e-d1d385efd551","method":{"position":"org.apache.commons.lang3.Validate:943","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void inclusiveBetween(long start, long end, long value) {\n    if ((value <= end) || (value >= value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value < start) || (value > end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"value","value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:762","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[310,313],"tindex":"a452429e-2e7e-11e6-930e-d5fe641c2ae4","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:524","type":"CtMethodImpl","sourcecode":"public static final java.lang.String unescapeJava(final java.lang.String input) {\n    if (input == null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:489","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[],"tindex":"a452429f-2e7e-11e6-930e-e74c7f29133d","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:455","type":"CtMethodImpl","sourcecode":"public static void printRootCauseStackTrace(final java.lang.Throwable throwable, final java.io.PrintStream stream) {\n    if (throwable == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (throwable == null) {\n                {\n                    if (throwable == null) {\n                        return ;\n                    } \n                    if (stream == null) {\n                        throw new java.lang.IllegalArgumentException(\"The PrintStream must not be null\");\n                    } \n                    final java.lang.String[] java.lang.String[] = org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(throwable);\n                    for (final java.lang.String java.lang.String : trace) {\n                        stream.println(element);\n                    }\n                    stream.flush();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5882","type":"CtBinaryOperatorImpl","sourcecode":"cs == null"},"failures":[338,339,340,341,342,343,344,221,345,222,346,347,348,349,56,350,351,352,353,354,355,356,357,358,359,360,361,362,363,197,364,365,366,367,368,369,370,371,372,373,374,375,376,198,199,377,378,379,380,381,382,383,384,200,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,41,409,410,411,39,40],"tindex":"a45269b0-2e7e-11e6-930e-cf6df0668295","method":{"position":"org.apache.commons.lang3.StringUtils:218","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (cs == null) || ((cs.length()) == 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:208","type":"CtBinaryOperatorImpl","sourcecode":"value != null"},"failures":[412,413],"tindex":"a45269b1-2e7e-11e6-930e-95040ac26f65","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:790","type":"CtMethodImpl","sourcecode":"public static void writeDeclaredField(final java.lang.Object target, final java.lang.String fieldName, final java.lang.Object value, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (value != null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((target != null), \"target object must not be null\");\n            final java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate declared field %s.%s\", cls.getName(), fieldName);\n            org.apache.commons.lang3.reflect.FieldUtils.writeField(field, target, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:884","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[414,415],"tindex":"a45269b2-2e7e-11e6-930e-bbfce347ffdd","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:262","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Date date, final java.lang.String pattern, final java.util.Locale locale) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(date, pattern, null, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3434","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[416],"tindex":"a45290c3-2e7e-11e6-930e-ff4484e2a549","method":{"position":"org.apache.commons.lang3.ArrayUtils:832","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean[] nullToEmpty(final java.lang.Boolean[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Boolean[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2562","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[417,418,419,420,421,422,423],"tindex":"a45290c4-2e7e-11e6-930e-9b1905b4ae41","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1969","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replace(final org.apache.commons.lang3.text.StrMatcher matcher, final java.lang.String replaceStr, final int startIndex, int endIndex, final int replaceCount) {\n    if (replaceCount < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            return replaceImpl(matcher, replaceStr, startIndex, endIndex, replaceCount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"replaceCount"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}