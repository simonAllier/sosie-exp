{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":325,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthBoolean":176,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":309,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":126,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":222,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":311,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":122,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":98,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":305,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":308,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":161,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":234,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":53,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_String":353,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":226,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":121,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":207,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentExceptionCauseNull":74,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayBoolean":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":99,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringChar":332,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayInt":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":103,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":285,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":217,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithCalendar":345,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":60,"org.apache.commons.lang3.CharUtilsTest.testToChar_Character":48,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":219,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":240,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiCharArray":37,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiShortArray":47,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":238,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":41,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":233,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":280,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":132,"org.apache.commons.lang3.StringUtilsTest.testIsAllUpperCase":88,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":235,"org.apache.commons.lang3.mutable.MutableBooleanTest.testEquals":96,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":223,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiLongArray":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":116,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":130,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder_int_int":341,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringInt":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":313,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":297,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":139,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":101,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompareEx1":177,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMixedArray":43,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissingIgnoreCase":4,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLong":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":301,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredField":32,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_double":340,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":322,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder_int_int":342,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":193,"org.apache.commons.lang3.StringUtilsTest.testChomp":328,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":118,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":281,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArray":169,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":347,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":291,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithCalendar":343,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":91,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":54,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":173,"org.apache.commons.lang3.RandomUtilsTest.testNextIntLowerGreaterUpper":25,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntString":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":268,"org.apache.commons.lang3.math.FractionTest.testFactory_String":337,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":58,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":204,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":304,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":57,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":356,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayObject":17,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":185,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentUncheckedException":78,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":286,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":279,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArray":36,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":89,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringInt":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":245,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":318,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentExceptionCauseError":73,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":335,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":83,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiFloatArray":42,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleTolerance":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":283,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":115,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":210,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentRuntimeExceptionCauseNull":79,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":181,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetAllFieldsList":358,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":257,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithIgnoreCase":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":105,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseChecked":71,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":182,"org.apache.commons.lang3.StringUtilsTest.testAbbreviateMiddle":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":252,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentRuntimeExceptionCauseError":80,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":229,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":276,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":317,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":307,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":136,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":244,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":258,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":294,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":265,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":220,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayChar":13,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_Char":164,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyShort":94,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiIntArray":44,"org.apache.commons.lang3.RandomUtilsTest.testNextIntMinimalRange":27,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":22,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":237,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntChar":149,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissing":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":275,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWith":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":260,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":351,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":290,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetInterruptedException":70,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":212,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":270,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_char_char":158,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":216,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":293,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":312,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":324,"org.apache.commons.lang3.RangeTest.testContainsRange":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":284,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":87,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":208,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":263,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayByte":12,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testBugzilla38401":143,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_nullInput":333,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":100,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_int":330,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":218,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayShort":11,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":84,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":62,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":224,"org.apache.commons.lang3.math.FractionTest.testFactory_String_improper":338,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":320,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":271,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":241,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":300,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":256,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":254,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedChecked":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":295,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":278,"org.apache.commons.lang3.RandomUtilsTest.testExtremeRangeInt":24,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":253,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":215,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":243,"org.apache.commons.lang3.ClassUtilsTest.testGetPublicMethod":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":114,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":191,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":321,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":259,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithCalender":348,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":303,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":261,"org.apache.commons.lang3.ValidateTest.testIsInstanceOf_withMessage":334,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_4":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":123,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testJiraLang281":145,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":178,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArrayHiddenByObject":39,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodInaccessible":352,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringInt":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":274,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":273,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":127,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":184,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithCalendar":344,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":228,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntChar":154,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":231,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":262,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":135,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_String":163,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":190,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":319,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadField":28,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":64,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":242,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringStringInt":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":296,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":110,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":128,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":157,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyShortEmptyArray":93,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":113,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":282,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":205,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":247,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":211,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":117,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":355,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetAllFields":359,"org.apache.commons.lang3.ArrayUtilsTest.testToString":203,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":323,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseChecked":72,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testInitializeUncheckedEx":82,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":144,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":6,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadFieldForceAccess":33,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_short_short":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":119,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":248,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiByteArray":40,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":183,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":102,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":336,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":236,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":302,"org.apache.commons.lang3.StringUtilsTest.testRemoveEnd":329,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":172,"org.apache.commons.lang3.text.StrBuilderTest.testChaining":171,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastOrdinalIndexOf":18,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":2,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException1":29,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentExceptionCauseUnchecked":81,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":299,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":331,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException4":31,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException3":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":272,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":310,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfInts":51,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":56,"org.apache.commons.lang3.RandomUtilsTest.testNextIntNegative":23,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":209,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":125,"org.apache.commons.lang3.text.StrBuilderTest.testContains_String":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":251,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":137,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":232,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":298,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArrayHiddenByObject":168,"org.apache.commons.lang3.text.StrTokenizerTest.test8":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":287,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentRuntimeExceptionCauseUnchecked":77,"org.apache.commons.lang3.text.StrTokenizerTest.test5":199,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":188,"org.apache.commons.lang3.text.StrTokenizerTest.test4":198,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumDouble":97,"org.apache.commons.lang3.text.StrTokenizerTest.test7":201,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":288,"org.apache.commons.lang3.text.StrTokenizerTest.test6":200,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":289,"org.apache.commons.lang3.text.StrTokenizerTest.test1":195,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntChar":152,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":85,"org.apache.commons.lang3.text.StrTokenizerTest.test3":197,"org.apache.commons.lang3.text.StrTokenizerTest.test2":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":264,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":180,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":227,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayLong":14,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":326,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedFieldForceAccess":162,"org.apache.commons.lang3.text.StrBuilderTest.testSetCharAt":170,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":59,"org.apache.commons.lang3.ConversionTest.testByteToBinary":354,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":142,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiDoubleArray":46,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":189,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":187,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":250,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_nullInput":95,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntString":156,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":20,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":292,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":120,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithCalendar":349,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_Object":194,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":206,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":230,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":221,"org.apache.commons.lang3.ConversionTest.testShortToBinary":357,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayFloat":10,"org.apache.commons.lang3.mutable.MutableLongTest.testGetSet":1,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithCalendar":350,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":306,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":249,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCause_Throwable":92,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateDouble":68,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":339,"org.apache.commons.lang3.builder.CompareToBuilderTest.testRaggedArray":38,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedChecked":75,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":90,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":160,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":277,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":314,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":267,"org.apache.commons.lang3.StringUtilsTest.testDefault_String":174,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":129,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementCharArray":165,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":213,"org.apache.commons.lang3.builder.CompareToBuilderTest.testIntArray":52,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringInt":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":315,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":214,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":269,"org.apache.commons.lang3.StringUtilsTest.testRemoveStartIgnoreCase":5,"org.apache.commons.lang3.StringUtilsIsTest.testIsAsciiPrintable_String":49,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":133,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":327,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithCalendar":346,"org.apache.commons.lang3.RandomUtilsTest.testNextInt":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":111,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayDouble":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":255,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":246,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":266,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":140,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":316,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":107,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":239},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:332","type":"CtBinaryOperatorImpl","sourcecode":"otherRange == null"},"failures":[0],"tindex":"7ace520c-2ea2-11e6-bac8-e560747e070b","method":{"position":"org.apache.commons.lang3.Range:314","type":"CtMethodImpl","sourcecode":"public boolean containsRange(final org.apache.commons.lang3.Range<T> otherRange) {\n    if (otherRange == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (otherRange == null) {\n                return false;\n            } \n            return (contains(otherRange.T)) && (contains(otherRange.T));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"otherRange":"otherRange"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:357","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[1],"tindex":"7acf155d-2ea2-11e6-bac8-d5c35af17020","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    org.apache.commons.lang3.mutable.MutableLong.this.long = value.longValue();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3342","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[2],"tindex":"7acf3c6e-2ea2-11e6-bac8-871f263ca857","method":{"position":"org.apache.commons.lang3.ArrayUtils:3665","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final double[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[3,4,5,6,7,8],"tindex":"7acf3c6f-2ea2-11e6-bac8-c1548152bfbb","method":{"position":"org.apache.commons.lang3.StringUtils:7202","type":"CtMethodImpl","sourcecode":"private static boolean startsWith(final java.lang.CharSequence str, final java.lang.CharSequence prefix, final boolean ignoreCase) {\n    if (str == null) {\n        {\n            if ((str == null) || (prefix == null)) {\n                return (str == null) && (prefix == null);\n            } \n            if ((prefix.length()) > (str.length())) {\n                return false;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, ignoreCase, 0, prefix, 0, prefix.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1819","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[9,10,11,12,13,14,15,16,17],"tindex":"7ad026d0-2ea2-11e6-bac8-872a52a137a2","method":{"position":"org.apache.commons.lang3.ArrayUtils:4247","type":"CtMethodImpl","sourcecode":"private static java.lang.Object copyArrayGrow1(final java.lang.Object array, final java.lang.Class<?> newArrayComponentType) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array != null) {\n                final int int = java.lang.reflect.Array.getLength(array);\n                final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (arrayLength + 1));\n                java.lang.System.arraycopy(array, 0, newArray, 0, arrayLength);\n                return newArray;\n            } \n            return java.lang.reflect.Array.newInstance(newArrayComponentType, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:765","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isBlank(str)"},"failures":[18],"tindex":"7ad04de1-2ea2-11e6-bac8-b561d49af335","method":{"position":"org.apache.commons.lang3.StringUtils:1262","type":"CtMethodImpl","sourcecode":"public static int lastOrdinalIndexOf(final java.lang.CharSequence str, final java.lang.CharSequence searchStr, final int ordinal) {\n    if ((searchStr.length()) == 1) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isBlank(str)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, true);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:470","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == 0"},"failures":[19,20],"tindex":"7ad074f2-2ea2-11e6-bac8-dfe273a419f2","method":{"position":"org.apache.commons.lang3.math.Fraction:172","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(final int whole, final int numerator, final int denominator) {\n    if (whole == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (denominator == 0) {\n                throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n            } \n            if (denominator < 0) {\n                throw new java.lang.ArithmeticException(\"The denominator must not be negative\");\n            } \n            if (numerator < 0) {\n                throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n            } \n            long long;\n            if (whole < 0) {\n                numeratorValue = (whole * ((long)(denominator))) - numerator;\n            } else {\n                numeratorValue = (whole * ((long)(denominator))) + numerator;\n            }\n            if ((numeratorValue < (java.lang.Integer.java.lang.Integer.int)) || (numeratorValue > (java.lang.Integer.java.lang.Integer.int))) {\n                throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\");\n            } \n            return new org.apache.commons.lang3.math.Fraction(((int)(numeratorValue)) , denominator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"whole"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.NoSuchMethodException","condition":{"position":"org.apache.commons.lang3.ClassUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[21],"tindex":"7ad09c03-2ea2-11e6-bac8-4d2899e495eb","method":{"position":"org.apache.commons.lang3.ClassUtils:921","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Method getPublicMethod(final java.lang.Class<?> cls, final java.lang.String methodName, final java.lang.Class<?>... parameterTypes) throws java.lang.NoSuchMethodException, java.lang.SecurityException {\n    if (cls == null) {\n        {\n            final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(methodName, parameterTypes);\n            if (java.lang.reflect.Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())) {\n                return declaredMethod;\n            } \n            final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>();\n            candidateClasses.addAll(org.apache.commons.lang3.ClassUtils.getAllInterfaces(cls));\n            candidateClasses.addAll(org.apache.commons.lang3.ClassUtils.getAllSuperclasses(cls));\n            for (final java.lang.Class<?> java.lang.Class<?> : candidateClasses) {\n                if (!(java.lang.reflect.Modifier.isPublic(candidateClass.getModifiers()))) {\n                    continue;\n                } \n                java.lang.reflect.Method java.lang.reflect.Method;\n                try {\n                    candidateMethod = candidateClass.getMethod(methodName, parameterTypes);\n                } catch (final java.lang.NoSuchMethodException ex) {\n                    continue;\n                }\n                if (java.lang.reflect.Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())) {\n                    return candidateMethod;\n                } \n            }\n            throw new java.lang.NoSuchMethodException((((\"Can't find a public method for \" + methodName) + \" \") + (org.apache.commons.lang3.ArrayUtils.toString(parameterTypes))));\n        }\n    } else {\n        throw new java.lang.NoSuchMethodException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:464","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isTitleCase(ch)"},"failures":[],"tindex":"7ad0c314-2ea2-11e6-bac8-714b87f74537","method":{"position":"org.apache.commons.lang3.text.StrMatcher:163","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrMatcher charMatcher(final char ch) {\n    if (java.lang.Character.isTitleCase(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(ch);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:848","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.lang3.math.Fraction) == false"},"failures":[],"tindex":"7ad0c315-2ea2-11e6-bac8-c5c40fa8f660","method":{"position":"org.apache.commons.lang3.CharSet:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.lang3.math.Fraction) == false) {\n        {\n            if (obj == (org.apache.commons.lang3.CharSet.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.lang3.CharSet) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = ((org.apache.commons.lang3.CharSet)(obj));\n            return java.util.Set<org.apache.commons.lang3.CharRange>.equals(other.java.util.Set<org.apache.commons.lang3.CharRange>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:201","type":"CtBinaryOperatorImpl","sourcecode":"(locale.getCountry().length()) > 0"},"failures":[22],"tindex":"7ad0ea26-2ea2-11e6-bac8-b715fbfc0492","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:250","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern, final java.util.Locale locale) {\n    if ((locale.getCountry().length()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, null, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:89","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endExclusive"},"failures":[23,24,25,26,27],"tindex":"7ad11137-2ea2-11e6-bac8-55333e803a78","method":{"position":"org.apache.commons.lang3.RandomUtils:84","type":"CtMethodImpl","sourcecode":"public static int nextInt(int startInclusive, int endExclusive) {\n    if (startInclusive == startInclusive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((endExclusive >= startInclusive), \"Start value must be smaller or equal to end value.\");\n            org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\");\n            if (startInclusive == endExclusive) {\n                return startInclusive;\n            } \n            return startInclusive + (org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextInt((endExclusive - startInclusive)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"startInclusive","endExclusive":"startInclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:759","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[28,29,30,31,32,33],"tindex":"7ad13848-2ea2-11e6-bac8-e79653b52551","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:146","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Field getDeclaredField(final java.lang.Class<?> cls, final java.lang.String fieldName) {\n    if (fieldName == null) {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(cls, fieldName, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:222","type":"CtUnaryOperatorImpl","sourcecode":"!(obj instanceof org.apache.commons.lang3.time.FastDateParser)"},"failures":[],"tindex":"7ad13849-2ea2-11e6-bac8-f38fab8f03d2","method":{"position":"org.apache.commons.lang3.text.CompositeFormat:67","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.lang.Object obj, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) {\n    if (!(obj instanceof org.apache.commons.lang3.time.FastDateParser)) {\n        {\n            return java.text.Format.format(obj, toAppendTo, pos);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:39","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[34],"tindex":"7ad15f5a-2ea2-11e6-bac8-7d943e6c9d2b","method":{"position":"org.apache.commons.lang3.ArrayUtils:2540","type":"CtMethodImpl","sourcecode":"public static int indexOf(final double[] array, final double valueToFind, final double tolerance) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3184","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[35],"tindex":"7ad15f5b-2ea2-11e6-bac8-3b287df2fc20","method":{"position":"org.apache.commons.lang3.ArrayUtils:3183","type":"CtMethodImpl","sourcecode":"public static short[] toPrimitive(final java.lang.Short[] array, final short valueForNull) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            final short[] short[] = new short[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Short java.lang.Short = array[i];\n                result[i] = b == null ? valueForNull : b.shortValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:654","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"7ad1866c-2ea2-11e6-bac8-138510cdbfd9","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:647","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final java.lang.Object[] lhs, final java.lang.Object[] rhs, final java.util.Comparator<?> comparator) {\n    if (lhs == null) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i], comparator);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:934","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[],"tindex":"7ad1d48d-2ea2-11e6-bac8-3b790b6a979c","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:199","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs, final java.util.Collection<java.lang.String> excludeFields) {\n    if (rhs == null) {\n        {\n            return org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:332","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[48],"tindex":"7ad1d48e-2ea2-11e6-bac8-3951c19e5be6","method":{"position":"org.apache.commons.lang3.CharUtils:129","type":"CtMethodImpl","sourcecode":"public static char toChar(final java.lang.Character ch) {\n    if (ch == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                throw new java.lang.IllegalArgumentException(\"The Character must not be null\");\n            } \n            return ch.charValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6034","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(cs)"},"failures":[49],"tindex":"7ad1fb9f-2ea2-11e6-bac8-11461adcfd78","method":{"position":"org.apache.commons.lang3.StringUtils:5990","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiPrintable(final java.lang.CharSequence cs) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cs == null) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((org.apache.commons.lang3.CharUtils.isAsciiPrintable(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2653","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[50],"tindex":"7ad221b0-2ea2-11e6-bac8-39033c2ea308","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:155","type":"CtMethodImpl","sourcecode":"public static double max(final double[] array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } else if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n            } \n            double double = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                max = org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max);\n            }\n            return max;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[51],"tindex":"7ad248c1-2ea2-11e6-bac8-bf41fdc262a0","method":{"position":"org.apache.commons.lang3.StringUtils:3367","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final int[] array, final char separator) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:738","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[52],"tindex":"7ad248c2-2ea2-11e6-bac8-3fd7249d934a","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:727","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final int[] lhs, final int[] rhs) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:518","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[53],"tindex":"7ad26fd3-2ea2-11e6-bac8-a55372a82143","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:165","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatUTC(final java.util.Date date, final java.lang.String pattern, final java.util.Locale locale) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(date, pattern, org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.java.util.TimeZone, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:357","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"7ad296e4-2ea2-11e6-bac8-b509928f6de6","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    org.apache.commons.lang3.mutable.MutableLong.this.long = value.longValue();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1766","type":"CtBinaryOperatorImpl","sourcecode":"arrayEnd == null"},"failures":[54,55,56,57,58,59,60,61],"tindex":"7ad296e5-2ea2-11e6-bac8-cbcc197a0822","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setArrayEnd(final java.lang.String arrayEnd) {\n    if (arrayEnd == null) {\n        {\n            super.setArrayEnd(arrayEnd);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arrayEnd":"arrayEnd"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[62,63,64,65,66,67,68],"tindex":"7ad2bdf6-2ea2-11e6-bac8-1776cb10b862","method":{"position":"org.apache.commons.lang3.math.NumberUtils:671","type":"CtMethodImpl","sourcecode":"public static java.lang.Double createDouble(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            return java.lang.Double.valueOf(str);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:159","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.RuntimeException"},"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"7ad2bdf7-2ea2-11e6-bac8-6de3c36d1cb8","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:143","type":"CtMethodImpl","sourcecode":"static java.lang.Throwable checkedException(final java.lang.Throwable ex) {\n    if ((ex.getCause()) instanceof java.lang.RuntimeException) {\n        {\n            if (((ex != null) && (!(ex instanceof java.lang.RuntimeException))) && (!(ex instanceof java.lang.Error))) {\n                return ex;\n            } else {\n                throw new java.lang.IllegalArgumentException((\"Not a checked exception: \" + ex));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(cs)"},"failures":[85,86,87,88],"tindex":"7ad2e508-2ea2-11e6-bac8-cbccb2ec94bb","method":{"position":"org.apache.commons.lang3.StringUtils:6167","type":"CtMethodImpl","sourcecode":"public static boolean isAllUpperCase(final java.lang.CharSequence cs) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n        {\n            if ((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isUpperCase(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:196","type":"CtBinaryOperatorImpl","sourcecode":"locale != null"},"failures":[],"tindex":"7ad2e509-2ea2-11e6-bac8-ddcb5ebe03b1","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:288","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getTimeInstance(final int style, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (locale != null) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(style, timeZone, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:222","type":"CtBinaryOperatorImpl","sourcecode":"method == null"},"failures":[],"tindex":"7ad30c1a-2ea2-11e6-bac8-513baeb955ae","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:512","type":"CtMethodImpl","sourcecode":"public static java.util.Set<java.lang.reflect.Method> getOverrideHierarchy(final java.lang.reflect.Method method, org.apache.commons.lang3.ClassUtils.Interfaces interfacesBehavior) {\n    if (method == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(method);\n            final java.util.Set<java.lang.reflect.Method> java.util.Set<java.lang.reflect.Method> = new java.util.LinkedHashSet<java.lang.reflect.Method>();\n            result.add(method);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = method.getParameterTypes();\n            final java.lang.Class<?> java.lang.Class<?> = method.getDeclaringClass();\n            final java.util.Iterator<java.lang.Class<?>> java.util.Iterator<java.lang.Class<?>> = org.apache.commons.lang3.ClassUtils.hierarchy(declaringClass, interfacesBehavior).iterator();\n            hierarchy.next();\n            hierarchyTraversal : while (hierarchy.hasNext()) {\n                final java.lang.Class<?> java.lang.Class<?> = hierarchy.next();\n                final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(c, method.getName(), parameterTypes);\n                if (m == null) {\n                    continue;\n                } \n                if (java.util.Arrays.equals(m.getParameterTypes(), parameterTypes)) {\n                    result.add(m);\n                    continue;\n                } \n                final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(declaringClass, m.getDeclaringClass());\n                for (int int = 0 ; i < (parameterTypes.int) ; i++) {\n                    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, method.getGenericParameterTypes()[i]);\n                    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, m.getGenericParameterTypes()[i]);\n                    if (!(org.apache.commons.lang3.reflect.TypeUtils.equals(childType, parentType))) {\n                        continue hierarchyTraversal;\n                    } \n                }\n                result.add(m);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"method"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2949","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"7ad3332b-2ea2-11e6-bac8-5f3a3985ae67","method":{"position":"org.apache.commons.lang3.StringUtils:6219","type":"CtMethodImpl","sourcecode":"public static java.lang.String defaultString(final java.lang.String str, final java.lang.String defaultStr) {\n    if (defaultStr == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return str == null ? defaultStr : str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"defaultStr"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3858","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[89],"tindex":"7ad3332c-2ea2-11e6-bac8-b93af5b0fe22","method":{"position":"org.apache.commons.lang3.ArrayUtils:5889","type":"CtMethodImpl","sourcecode":"public static double[] removeElements(final double[] array, final double... values) {\n    if (values == null) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final double double : values) {\n                final java.lang.Double java.lang.Double = java.lang.Double.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Double java.lang.Double = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.doubleValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((double[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"values"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1189","type":"CtBinaryOperatorImpl","sourcecode":"0 == nInts"},"failures":[90],"tindex":"7ad3332d-2ea2-11e6-bac8-7f9d868bb4ee","method":{"position":"org.apache.commons.lang3.Conversion:1188","type":"CtMethodImpl","sourcecode":"public static int[] longToIntArray(final long src, final int srcPos, final int[] dst, final int dstPos, final int nInts) {\n    if (0 == nInts) {\n        {\n            if (0 == nInts) {\n                return dst;\n            } \n            if ((((nInts - 1) * 32) + srcPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+srcPos is greather or equal to than 64\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nInts ; i++) {\n                shift = (i * 32) + srcPos;\n                dst[(dstPos + i)] = ((int)(-1 & (src >> shift)));\n            }\n            return dst;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nInts":"nInts"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:517","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[91,92],"tindex":"7ad35a3e-2ea2-11e6-bac8-fbb75789e62d","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:179","type":"CtMethodImpl","sourcecode":"public static java.lang.Throwable getRootCause(final java.lang.Throwable throwable) {\n    if (throwable == null) {\n        {\n            if (throwable == null) {\n                {\n                    final java.util.List<java.lang.Throwable> java.util.List<java.lang.Throwable> = org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(throwable);\n                    return (list.size()) < 2 ? null : ((java.lang.Throwable)(list.get(((list.size()) - 1))));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1102","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"7ad35a3f-2ea2-11e6-bac8-fbff99c50633","method":{"position":"org.apache.commons.lang3.time.FastDateParser:434","type":"CtMethodImpl","sourcecode":"void setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n    if (value == null) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:894","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[93,94],"tindex":"7ad35a40-2ea2-11e6-bac8-cd226daac08e","method":{"position":"org.apache.commons.lang3.ArrayUtils:572","type":"CtMethodImpl","sourcecode":"public static short[] nullToEmpty(final short[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3478","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[95],"tindex":"7ad38151-2ea2-11e6-bac8-75ddf6de9ab0","method":{"position":"org.apache.commons.lang3.BooleanUtils:972","type":"CtMethodImpl","sourcecode":"public static boolean or(final boolean... array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            for (final boolean boolean : array) {\n                if (element) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[],"tindex":"7ad38152-2ea2-11e6-bac8-dd096dd38744","method":{"position":"org.apache.commons.lang3.time.DateUtils:1726","type":"CtMethodImpl","sourcecode":"public static boolean truncatedEquals(final java.util.Calendar cal1, final java.util.Calendar cal2, final int field) {\n    if ((cal1 == null) || (cal2 == null)) {\n        {\n            return (org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(cal1, cal2, field)) == 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"cal2","cal1":"cal1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:110","type":"CtUnaryOperatorImpl","sourcecode":"!(obj instanceof org.apache.commons.lang3.concurrent.ConstantInitializer<?>)"},"failures":[96],"tindex":"7ad38153-2ea2-11e6-bac8-1789f20e607b","method":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:172","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (!(obj instanceof org.apache.commons.lang3.concurrent.ConstantInitializer<?>)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof org.apache.commons.lang3.mutable.MutableBoolean) {\n                return (boolean) == (((org.apache.commons.lang3.mutable.MutableBoolean)(obj)).booleanValue());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:106","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(b)"},"failures":[97,98],"tindex":"7ad3a864-2ea2-11e6-bac8-033046dde76a","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1280","type":"CtMethodImpl","sourcecode":"public static double max(final double a, final double b, final double c) {\n    if (java.lang.Double.isNaN(b)) {\n        {\n            return java.lang.Math.max(java.lang.Math.max(a, b), c);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:69","type":"CtBinaryOperatorImpl","sourcecode":"start > end"},"failures":[],"tindex":"7ad3a865-2ea2-11e6-bac8-4721c5cfdf02","method":{"position":"org.apache.commons.lang3.CharRange:126","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.CharRange isNotIn(final char start, final char end) {\n    if (end > end) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.CharRange(start , end , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:694","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"tindex":"7ad3a866-2ea2-11e6-bac8-9d4c3ff392ff","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:693","type":"CtMethodImpl","sourcecode":"public boolean replaceIn(final org.apache.commons.lang3.text.StrBuilder source) {\n    if (source == null) {\n        {\n            if (source == null) {\n                return false;\n            } \n            return substitute(source, 0, source.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:705","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[99,100,116,101,117,102,103,118,104,119,120,121,105,106,122,123,124,125,107,126,108,109,127,110,111,128,112,113,129,114,130,115,131,132],"tindex":"7ad3a867-2ea2-11e6-bac8-bb35122de26d","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:734","type":"CtMethodImpl","sourcecode":"protected boolean substitute(final org.apache.commons.lang3.text.StrBuilder buf, final int offset, final int length) {\n    if (offset > 0) {\n        {\n            return (substitute(buf, offset, length, null)) > 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"offset"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:461","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isUpperCase(ch)"},"failures":[133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"7ad3cf78-2ea2-11e6-bac8-6772a2c80d8a","method":{"position":"org.apache.commons.lang3.StringUtils:5209","type":"CtMethodImpl","sourcecode":"public static java.lang.String repeat(final char ch, final int repeat) {\n    if (java.lang.Character.isUpperCase(ch)) {\n        {\n            if (java.lang.Character.isUpperCase(ch)) {\n                {\n                    final char[] char[] = new char[repeat];\n                    for (int int = repeat - 1 ; i >= 0 ; i--) {\n                        buf[i] = ch;\n                    }\n                    return new java.lang.String(buf);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1870","type":"CtBinaryOperatorImpl","sourcecode":"search != replace"},"failures":[158],"tindex":"7ad3cf79-2ea2-11e6-bac8-37e502b7143c","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1850","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replaceAll(final char search, final char replace) {\n    if (search != replace) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (search != replace) {\n                for (int int = 0 ; i < (int) ; i++) {\n                    if ((char[][i]) == search) {\n                        char[][i] = replace;\n                    } \n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"search":"search","replace":"replace"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1099","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[],"tindex":"7ad3f68a-2ea2-11e6-bac8-7bf3f179694f","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1204","type":"CtMethodImpl","sourcecode":"public static long max(long a, final long b, final long c) {\n    if (b < b) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:549","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[159,160,161,162],"tindex":"7ad3f68b-2ea2-11e6-bac8-8bfb83760d0d","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:424","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readField(final java.lang.Object target, final java.lang.String fieldName, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (target == null) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((target != null), \"target object must not be null\");\n            final java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate field %s on %s\", fieldName, cls);\n            return org.apache.commons.lang3.reflect.FieldUtils.readField(field, target, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"target"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1303","type":"CtBinaryOperatorImpl","sourcecode":"(seq == null) || (searchSeq == null)"},"failures":[163,164],"tindex":"7ad3f68c-2ea2-11e6-bac8-7981e441b5be","method":{"position":"org.apache.commons.lang3.StringUtils:1444","type":"CtMethodImpl","sourcecode":"public static boolean contains(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq) {\n    if ((searchSeq == null) || (seq == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return false;\n            } \n            return (org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchSeq, 0)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchSeq":"seq","seq":"searchSeq"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1035","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[165],"tindex":"7ad3f68d-2ea2-11e6-bac8-9569f2d6c354","method":{"position":"org.apache.commons.lang3.ArrayUtils:4836","type":"CtMethodImpl","sourcecode":"public static char[] removeElement(final char[] array, final char element) {\n    if (array == null) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3076","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[166],"tindex":"7ad41d9e-2ea2-11e6-bac8-4d4bc926b003","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2263","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(str, 0)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:640","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[38,167,168,43,169,45],"tindex":"7ad41d9f-2ea2-11e6-bac8-b37f34e3c8af","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:462","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final long lhs, final long rhs) {\n    if (lhs != rhs) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = lhs < rhs ? -1 : lhs > rhs ? 1 : 0;\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false"},"failures":[170,171],"tindex":"7ad41da0-2ea2-11e6-bac8-13559eb6349a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:325","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder setCharAt(final int index, final char ch) {\n    if ((org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index >= (length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(index);\n            } \n            char[][index] = ch;\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:896","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(seq)"},"failures":[],"tindex":"7ad444b1-2ea2-11e6-bac8-e168a617d99f","method":{"position":"org.apache.commons.lang3.text.FormattableUtils:116","type":"CtMethodImpl","sourcecode":"public static java.util.Formatter append(final java.lang.CharSequence seq, final java.util.Formatter formatter, final int flags, final int width, final int precision, final java.lang.CharSequence ellipsis) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(ellipsis)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.FormattableUtils.append(seq, formatter, flags, width, precision, ' ', ellipsis);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"ellipsis"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:762","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"7ad444b2-2ea2-11e6-bac8-45651eb7e2ad","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:728","type":"CtMethodImpl","sourcecode":"public static java.lang.String escapeXml11(final java.lang.String input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:73","type":"CtBinaryOperatorImpl","sourcecode":"timeZone == null"},"failures":[172,173],"tindex":"7ad444b3-2ea2-11e6-bac8-1dcac17a8e73","method":{"position":"org.apache.commons.lang3.time.FormatCache:159","type":"CtMethodImpl","sourcecode":"F getDateInstance(final int dateStyle, final java.util.TimeZone timeZone, java.util.Locale locale) {\n    if (timeZone == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getDateTimeInstance(java.lang.Integer.valueOf(dateStyle), null, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeZone":"timeZone"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:452","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[174,91,175],"tindex":"7ad46bc4-2ea2-11e6-bac8-c9a7cc7a66b3","method":{"position":"org.apache.commons.lang3.StringUtils:6198","type":"CtMethodImpl","sourcecode":"public static java.lang.String defaultString(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            return str == null ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String : str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3763","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[176],"tindex":"7ad46bc5-2ea2-11e6-bac8-b7027ebc583f","method":{"position":"org.apache.commons.lang3.ArrayUtils:1371","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final boolean[] array1, final boolean[] array2) {\n    if (array2 == null) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:451","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[5],"tindex":"7ad50806-2ea2-11e6-bac8-9147fc411b96","method":{"position":"org.apache.commons.lang3.StringUtils:4249","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeStartIgnoreCase(final java.lang.String str, final java.lang.String remove) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            if (org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(str, remove)) {\n                return str.substring(remove.length());\n            } \n            return str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:894","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[177],"tindex":"7ad50807-2ea2-11e6-bac8-67b639d6780b","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:268","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs, final boolean compareTransients, final java.lang.Class<?> reflectUpToClass, final java.lang.String... excludeFields) {\n    if ((rhs == null) || (rhs == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (lhs == rhs) {\n                return 0;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                throw new java.lang.NullPointerException();\n            } \n            java.lang.Class<?> java.lang.Class<?> = lhs.getClass();\n            if (!(lhsClazz.isInstance(rhs))) {\n                throw new java.lang.ClassCastException();\n            } \n            final org.apache.commons.lang3.builder.CompareToBuilder org.apache.commons.lang3.builder.CompareToBuilder = new org.apache.commons.lang3.builder.CompareToBuilder();\n            org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields);\n            while (((lhsClazz.getSuperclass()) != null) && (lhsClazz != reflectUpToClass)) {\n                lhsClazz = lhsClazz.getSuperclass();\n                org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields);\n            }\n            return compareToBuilder.toComparison();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:423","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[178,179,180],"tindex":"7ad52f18-2ea2-11e6-bac8-f3fd9363eb9e","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:606","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.util.Collection<?> coll) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:974","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[],"tindex":"7ad52f19-2ea2-11e6-bac8-5de25a5cf660","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:134","type":"CtMethodImpl","sourcecode":"static org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> getRegisterPair(final java.lang.Object lhs, final java.lang.Object rhs) {\n    if (lhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.builder.IDKey org.apache.commons.lang3.builder.IDKey = new org.apache.commons.lang3.builder.IDKey(lhs);\n            final org.apache.commons.lang3.builder.IDKey org.apache.commons.lang3.builder.IDKey = new org.apache.commons.lang3.builder.IDKey(rhs);\n            return org.apache.commons.lang3.tuple.Pair.of(left, right);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:814","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[],"tindex":"7ad52f1a-2ea2-11e6-bac8-279ee9c158b8","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:134","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs) {\n    if (lhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:201","type":"CtBinaryOperatorImpl","sourcecode":"(locale.getCountry().length()) > 0"},"failures":[53,181,182,183,184,185,22,186,187,188,189,190,191,192,193],"tindex":"7ad5562b-2ea2-11e6-bac8-d397a5450905","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:164","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getInstance(final java.lang.String pattern, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if ((locale.getCountry().length()) > 0) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(pattern, timeZone, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2034","type":"CtBinaryOperatorImpl","sourcecode":"sizeEndText == null"},"failures":[54,55,56,57,58,59,60,61],"tindex":"7ad5562c-2ea2-11e6-bac8-05c60d9c5d68","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2033","type":"CtMethodImpl","sourcecode":"protected void setSizeEndText(java.lang.String sizeEndText) {\n    if (sizeEndText == null) {\n        {\n            if (sizeEndText == null) {\n                sizeEndText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = sizeEndText;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeEndText":"sizeEndText"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"7ad5562d-2ea2-11e6-bac8-7b42a70e4d64","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1036","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        {\n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:816","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[194],"tindex":"7ad57d3e-2ea2-11e6-bac8-774dfea0e3a1","method":{"position":"org.apache.commons.lang3.ClassUtils:1057","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPackageCanonicalName(final java.lang.Object object, final java.lang.String valueIfNull) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return valueIfNull;\n            } \n            return org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(object.getClass().getName());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1574","type":"CtBinaryOperatorImpl","sourcecode":"fullDetailRequest == null"},"failures":[195,196,197,198,199,200,201,202,203,54,57,58,59,60,61,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,245,246,246,247,247,248,249,249,250,250,251,251,252,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,260,261,261,262,263,264,265,266,267,268,269,270,271,272,272,273,273,274,275,276,277,277,278,278,279,279,280,281,282,283,283,284,284,285,286,287,288,289,290,291,291,292,293,293,294,294,295,295,296,296,297,297,298,299,300,300,301,301,302,303,304,304,305,306,306,307,308,308,309,309,310,310,311,311,312,313,314,315,315,316,316,317,317,318,319,320,178,179,180,321,322,323,324,325,326,327],"tindex":"7ad57d3f-2ea2-11e6-bac8-3f8ad73a99ce","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1573","type":"CtMethodImpl","sourcecode":"protected boolean isFullDetail(final java.lang.Boolean fullDetailRequest) {\n    if (fullDetailRequest == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fullDetailRequest == null) {\n                return boolean;\n            } \n            return fullDetailRequest.booleanValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fullDetailRequest":"fullDetailRequest"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:383","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Calendar"},"failures":[],"tindex":"7ad5a450-2ea2-11e6-bac8-c97283fb4ab5","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1385","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadLeft(final java.lang.Object obj, final int width, final char padChar) {\n    if (obj instanceof java.util.Calendar) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (width > 0) {\n                ensureCapacity(((int) + width));\n                java.lang.String java.lang.String = obj == null ? getNullText() : obj.toString();\n                if (str == null) {\n                    str = \"\";\n                } \n                final int int = str.length();\n                if (strLen >= width) {\n                    str.getChars((strLen - width), strLen, char[], int);\n                } else {\n                    final int int = width - strLen;\n                    for (int int = 0 ; i < padLen ; i++) {\n                        char[][((int) + i)] = padChar;\n                    }\n                    str.getChars(0, strLen, char[], ((int) + padLen));\n                }\n                int += width;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2245","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[328,329],"tindex":"7ad5a451-2ea2-11e6-bac8-9dcab6c2a5d3","method":{"position":"org.apache.commons.lang3.StringUtils:4283","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeEnd(final java.lang.String str, final java.lang.String remove) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            if (str.endsWith(remove)) {\n                return str.substring(0, ((str.length()) - (remove.length())));\n            } \n            return str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3094","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[330],"tindex":"7ad5cb62-2ea2-11e6-bac8-93c651bf40df","method":{"position":"org.apache.commons.lang3.ArrayUtils:3093","type":"CtMethodImpl","sourcecode":"public static int[] toPrimitive(final java.lang.Integer[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int[];\n            } \n            final int[] int[] = new int[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].intValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:121","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 15"},"failures":[331],"tindex":"7ad5cb63-2ea2-11e6-bac8-1fd4b2be1652","method":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:121","type":"CtMethodImpl","sourcecode":"public static java.lang.String hex(final int codepoint) {\n    if (codepoint > 15) {\n        {\n            return java.lang.Integer.toHexString(codepoint).toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepoint"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:768","type":"CtInvocationImpl","sourcecode":"str.trim().startsWith(\"--\")"},"failures":[332],"tindex":"7ad5cb64-2ea2-11e6-bac8-1bb325697336","method":{"position":"org.apache.commons.lang3.StringUtils:2930","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitPreserveAllTokens(final java.lang.String str, final char separatorChar) {\n    if (str.trim().startsWith(\"--\")) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChar, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:585","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[333],"tindex":"7ad5f275-2ea2-11e6-bac8-f382dd827ae6","method":{"position":"org.apache.commons.lang3.BooleanUtils:1040","type":"CtMethodImpl","sourcecode":"public static boolean xor(final boolean... array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            boolean boolean = false;\n            for (final boolean boolean : array) {\n                result ^= element;\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:692","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.TypeVariable<?>"},"failures":[334],"tindex":"7ad5f276-2ea2-11e6-bac8-fdabc4dd69d4","method":{"position":"org.apache.commons.lang3.Validate:1199","type":"CtMethodImpl","sourcecode":"public static void isInstanceOf(final java.lang.Class<?> type, final java.lang.Object obj, final java.lang.String message, final java.lang.Object... values) {\n    if (obj instanceof java.lang.reflect.TypeVariable<?>) {\n        {\n            if ((type.isInstance(obj)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2069","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"7ad5f277-2ea2-11e6-bac8-45f117ce912a","method":{"position":"org.apache.commons.lang3.RandomStringUtils:186","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count, final int start, final int end, final boolean letters, final boolean numbers, final char... chars) {\n    if (start < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, start, end, letters, numbers, chars, org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.java.util.Random);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"7ad61988-2ea2-11e6-bac8-f17dd23f567f","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:447","type":"CtMethodImpl","sourcecode":"private void seekNonWs(final java.lang.String pattern, final java.text.ParsePosition pos) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            final char[] char[] = pattern.toCharArray();\n            do {\n                len = org.apache.commons.lang3.text.StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());\n                pos.setIndex(((pos.getIndex()) + len));\n            } while ((len > 0) && ((pos.getIndex()) < (pattern.length())) );\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5001","type":"CtBinaryOperatorImpl","sourcecode":"(str.length()) == 1"},"failures":[],"tindex":"7ad61989-2ea2-11e6-bac8-b5a6d5c27e2f","method":{"position":"org.apache.commons.lang3.StringUtils:1262","type":"CtMethodImpl","sourcecode":"public static int lastOrdinalIndexOf(final java.lang.CharSequence str, final java.lang.CharSequence searchStr, final int ordinal) {\n    if ((searchStr.length()) == 1) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isBlank(str)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, true);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"searchStr"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:397","type":"CtVariableReadImpl","sourcecode":"subclass"},"failures":[335,336],"tindex":"7ad6198a-2ea2-11e6-bac8-5bc4e1af679d","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:386","type":"CtMethodImpl","sourcecode":"private static int indexOf(final java.lang.Throwable throwable, final java.lang.Class<?> type, int fromIndex, final boolean subclass) {\n    if (subclass) {\n        {\n            if ((throwable == null) || (type == null)) {\n                return -1;\n            } \n            if (fromIndex < 0) {\n                fromIndex = 0;\n            } \n            final java.lang.Throwable[] java.lang.Throwable[] = org.apache.commons.lang3.exception.ExceptionUtils.getThrowables(throwable);\n            if (fromIndex >= (throwables.int)) {\n                return -1;\n            } \n            if (subclass) {\n                for (int int = fromIndex ; i < (throwables.int) ; i++) {\n                    if (type.isAssignableFrom(throwables[i].getClass())) {\n                        return i;\n                    } \n                }\n            } else {\n                for (int int = fromIndex ; i < (throwables.int) ; i++) {\n                    if (type.equals(throwables[i].getClass())) {\n                        return i;\n                    } \n                }\n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"subclass":"subclass"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3225","type":"CtInvocationImpl","sourcecode":"str.isEmpty()"},"failures":[337,338,339,20],"tindex":"7ad6409b-2ea2-11e6-bac8-9797d191374b","method":{"position":"org.apache.commons.lang3.math.Fraction:319","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(java.lang.String str) {\n    if (str.isEmpty()) {\n        {\n            if (str == null) {\n                throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n            } \n            int int = str.indexOf('.');\n            if (pos >= 0) {\n                return org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Double.parseDouble(str));\n            } \n            pos = str.indexOf(' ');\n            if (pos > 0) {\n                final int int = java.lang.Integer.parseInt(str.substring(0, pos));\n                str = str.substring((pos + 1));\n                pos = str.indexOf('/');\n                if (pos < 0) {\n                    throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\");\n                } else {\n                    final int int = java.lang.Integer.parseInt(str.substring(0, pos));\n                    final int int = java.lang.Integer.parseInt(str.substring((pos + 1)));\n                    return org.apache.commons.lang3.math.Fraction.getFraction(whole, numer, denom);\n                }\n            } \n            pos = str.indexOf('/');\n            if (pos < 0) {\n                return org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Integer.parseInt(str), 1);\n            } else {\n                final int int = java.lang.Integer.parseInt(str.substring(0, pos));\n                final int int = java.lang.Integer.parseInt(str.substring((pos + 1)));\n                return org.apache.commons.lang3.math.Fraction.getFraction(numer, denom);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3298","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[340],"tindex":"7ad6409c-2ea2-11e6-bac8-1bf4bcb05c76","method":{"position":"org.apache.commons.lang3.ArrayUtils:3297","type":"CtMethodImpl","sourcecode":"public static double[] toPrimitive(final java.lang.Double[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.double[];\n            } \n            final double[] double[] = new double[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].doubleValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1364","type":"CtBinaryOperatorImpl","sourcecode":"length >= 0"},"failures":[99,101,102,103,104,105,106,109,111,112,114,341,342],"tindex":"7ad667ad-2ea2-11e6-bac8-a9c0d308dc1a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:695","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final org.apache.commons.lang3.text.StrBuilder str, final int startIndex, final int length) {\n    if (startIndex >= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return appendNull();\n            } \n            if ((startIndex < 0) || (startIndex > (str.length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\");\n            } \n            if ((length < 0) || ((startIndex + length) > (str.length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\");\n            } \n            if (length > 0) {\n                final int int = length();\n                ensureCapacity((len + length));\n                str.getChars(startIndex, (startIndex + length), char[], len);\n                int += length;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[343,344,345,346,347,348,349,350],"tindex":"7ad667ae-2ea2-11e6-bac8-99258c5998ab","method":{"position":"org.apache.commons.lang3.time.DateUtils:1479","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMilliseconds(final java.util.Calendar calendar, final int fragment) {\n    if (calendar == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1957","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"7ad667af-2ea2-11e6-bac8-839a6df004cb","method":{"position":"org.apache.commons.lang3.ArrayUtils:2124","type":"CtMethodImpl","sourcecode":"public static int indexOf(final int[] array, final int valueToFind, int startIndex) {\n    if (valueToFind < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"valueToFind"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5445","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[351],"tindex":"7ad68ec0-2ea2-11e6-bac8-77d1d3ed3286","method":{"position":"org.apache.commons.lang3.ArrayUtils:5444","type":"CtMethodImpl","sourcecode":"public static short[] removeElements(final short[] array, final short... values) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(array))) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final short short : values) {\n                final java.lang.Short java.lang.Short = java.lang.Short.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Short java.lang.Short = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.shortValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array","values":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:355","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(method))"},"failures":[352],"tindex":"7ad68ec1-2ea2-11e6-bac8-77a0667fbc76","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:354","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Method getAccessibleMethod(java.lang.reflect.Method method) {\n    if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(method))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(method))) {\n                return null;\n            } \n            final java.lang.Class<?> java.lang.Class<?> = method.getDeclaringClass();\n            if (java.lang.reflect.Modifier.isPublic(cls.getModifiers())) {\n                return method;\n            } \n            final java.lang.String java.lang.String = method.getName();\n            final java.lang.Class<?>[] java.lang.Class<?>[] = method.getParameterTypes();\n            method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(cls, methodName, parameterTypes);\n            if (method == null) {\n                method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(cls, methodName, parameterTypes);\n            } \n            return method;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"method"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:70","type":"CtBinaryOperatorImpl","sourcecode":"cs instanceof java.lang.String"},"failures":[353],"tindex":"7ad6b5d2-2ea2-11e6-bac8-83648909b1d3","method":{"position":"org.apache.commons.lang3.StringUtils:1927","type":"CtMethodImpl","sourcecode":"public static boolean containsNone(final java.lang.CharSequence cs, final java.lang.String invalidChars) {\n    if (cs instanceof java.lang.String) {\n        {\n            if ((cs == null) || (invalidChars == null)) {\n                return true;\n            } \n            return org.apache.commons.lang3.StringUtils.containsNone(cs, invalidChars.toCharArray());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:456","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[],"tindex":"7ad6b5d3-2ea2-11e6-bac8-71e3650b69da","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:179","type":"CtMethodImpl","sourcecode":"public static java.lang.Throwable getRootCause(final java.lang.Throwable throwable) {\n    if (throwable == null) {\n        {\n            if (throwable == null) {\n                {\n                    final java.util.List<java.lang.Throwable> java.util.List<java.lang.Throwable> = org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(throwable);\n                    return (list.size()) < 2 ? null : ((java.lang.Throwable)(list.get(((list.size()) - 1))));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1648","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"7ad6b5d4-2ea2-11e6-bac8-3b650aff1ab4","method":{"position":"org.apache.commons.lang3.time.DateUtils:614","type":"CtMethodImpl","sourcecode":"public static java.util.Date setSeconds(final java.util.Date date, final int amount) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MemberUtils:154","type":"CtBinaryOperatorImpl","sourcecode":"srcClass == null"},"failures":[],"tindex":"7ad6dce5-2ea2-11e6-bac8-c1eb4fe32ec1","method":{"position":"org.apache.commons.lang3.reflect.MemberUtils:167","type":"CtMethodImpl","sourcecode":"private static float getPrimitivePromotionCost(final java.lang.Class<?> srcClass, final java.lang.Class<?> destClass) {\n    if (destClass == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            float float = 0.0F;\n            java.lang.Class<?> java.lang.Class<?> = srcClass;\n            if (!(cls.isPrimitive())) {\n                cost += 0.1F;\n                cls = org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(cls);\n            } \n            for (int int = 0 ; (cls != destClass) && (i < (org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[].int)) ; i++) {\n                if (cls == (org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][i])) {\n                    cost += 0.1F;\n                    if (i < ((org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[].int) - 1)) {\n                        cls = org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][(i + 1)];\n                    } \n                } \n            }\n            return cost;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcClass":"destClass"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:549","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[249,249,250,275,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,305,306,307,308,309,310,311,312,313,314,315,316,317,317,318],"tindex":"7ad6dce6-2ea2-11e6-bac8-1366d2d4647b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:801","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:446","type":"CtArrayReadImpl","sourcecode":"src[(srcPos + 2)]"},"failures":[354],"tindex":"7ad72b07-2ea2-11e6-bac8-a963b25f7367","method":{"position":"org.apache.commons.lang3.Conversion:1653","type":"CtMethodImpl","sourcecode":"public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (dst[(dstPos + 2)]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 8) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"dstPos","src":"dst"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:955","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[355],"tindex":"7ad72b08-2ea2-11e6-bac8-f9e6a0af0581","method":{"position":"org.apache.commons.lang3.ArrayUtils:4559","type":"CtMethodImpl","sourcecode":"private static java.lang.Object add(final java.lang.Object array, final int index, final java.lang.Object element, final java.lang.Class<?> clss) {\n    if (element == null) {\n        {\n            if (array == null) {\n                if (index != 0) {\n                    throw new java.lang.IndexOutOfBoundsException(((\"Index: \" + index) + \", Length: 0\"));\n                } \n                final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(clss, 1);\n                java.lang.reflect.Array.set(joinedArray, 0, element);\n                return joinedArray;\n            } \n            final int int = java.lang.reflect.Array.getLength(array);\n            if ((index > length) || (index < 0)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Length: \") + length));\n            } \n            final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(clss, (length + 1));\n            java.lang.System.arraycopy(array, 0, result, 0, index);\n            java.lang.reflect.Array.set(result, index, element);\n            if (index < length) {\n                java.lang.System.arraycopy(array, index, result, (index + 1), (length - index));\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"element"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:461","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isUpperCase(ch)"},"failures":[],"tindex":"7ad75219-2ea2-11e6-bac8-0102f1d38304","method":{"position":"org.apache.commons.lang3.StringUtils:5209","type":"CtMethodImpl","sourcecode":"public static java.lang.String repeat(final char ch, final int repeat) {\n    if (java.lang.Character.isUpperCase(ch)) {\n        {\n            if (java.lang.Character.isUpperCase(ch)) {\n                {\n                    final char[] char[] = new char[repeat];\n                    for (int int = repeat - 1 ; i >= 0 ; i--) {\n                        buf[i] = ch;\n                    }\n                    return new java.lang.String(buf);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2426","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[99,116,101,117,102,103,118,104,119,120,121,105,106,122,123,125,107,126,109,127,111,128,112,113,129,114,130,131,356],"tindex":"7ad7521a-2ea2-11e6-bac8-6f36f50c7d16","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1834","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replace(final int startIndex, int endIndex, final java.lang.String replaceStr) {\n    if (startIndex < 0) {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            final int int = replaceStr == null ? 0 : replaceStr.length();\n            replaceImpl(startIndex, endIndex, (endIndex - startIndex), replaceStr, insertLen);\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:611","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[99,100,101,102,103,104,105,106,107,109,111,112,114],"tindex":"7ad7521b-2ea2-11e6-bac8-854f20ff05f9","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:473","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final java.lang.StringBuffer source) {\n    if (source == null) {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(source.length()).append(source);\n            substitute(buf, 0, buf.length());\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:438","type":"CtArrayReadImpl","sourcecode":"src[srcPos]"},"failures":[357],"tindex":"7ad7792c-2ea2-11e6-bac8-698889bb5f8f","method":{"position":"org.apache.commons.lang3.Conversion:1618","type":"CtMethodImpl","sourcecode":"public static boolean[] shortToBinary(final short src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (dst[dstPos]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 16\");\n            } \n            int int = 0;\n            assert ((nBools - 1) * 1) < (16 - srcPos);\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"dstPos","src":"dst"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1150","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"7ad7792d-2ea2-11e6-bac8-157fb339761e","method":{"position":"org.apache.commons.lang3.Validate:1148","type":"CtMethodImpl","sourcecode":"public static void exclusiveBetween(double start, double end, double value, java.lang.String message) {\n    if ((start <= start) || (value >= start)) {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"start","value":"start"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1028","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[358,359],"tindex":"7ad7792e-2ea2-11e6-bac8-ad098622214b","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:211","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.reflect.Field> getAllFieldsList(java.lang.Class<?> cls) {\n    if (cls == null) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((cls != null), \"The class must not be null\");\n            final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>();\n            java.lang.Class<?> java.lang.Class<?> = cls;\n            while (currentClass != null) {\n                final java.lang.reflect.Field[] java.lang.reflect.Field[] = currentClass.getDeclaredFields();\n                for (java.lang.reflect.Field java.lang.reflect.Field : declaredFields) {\n                    allFields.add(field);\n                }\n                currentClass = currentClass.getSuperclass();\n            }\n            return allFields;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.mutable.MutableLong:236","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.mutable.MutableLong"},"failures":[],"tindex":"7ad7792f-2ea2-11e6-bac8-1b1fa8dac993","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.lang3.mutable.MutableLong) {\n        {\n            return (obj == (org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.this)) || ((obj instanceof java.lang.reflect.GenericArrayType) && (org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.this, ((java.lang.reflect.GenericArrayType)(obj)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}