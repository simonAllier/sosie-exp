{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":10,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":266,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":45,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":286,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds":166,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":11,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":70,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":73,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":81,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":276,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedField":256,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":290,"org.apache.commons.lang3.ArrayUtilsTest.testContainsLong":3,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticField":214,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":216,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":257,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":104,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":294,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":198,"org.apache.commons.lang3.text.StrBuilderTest.testContains_StrMatcher":201,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfLong":5,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":238,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUuuuu":168,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":235,"org.apache.commons.lang3.builder.CompareToBuilderTest.testByteArrayHiddenByObject":263,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":19,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":188,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":281,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":196,"org.apache.commons.lang3.math.NumberUtilsTest.testMinByte_nullArray":65,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":292,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":8,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":68,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":236,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":88,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":130,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":186,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":44,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetContextValues":59,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":282,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":248,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":116,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_double":1,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":128,"org.apache.commons.lang3.text.FormattableUtilsTest.testAlternatePadCharacter":218,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":95,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":107,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":224,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":295,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":185,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":229,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumShort":29,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher_int":200,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrimToEmpty":298,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":233,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":41,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":50,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":51,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":38,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":103,"org.apache.commons.lang3.text.FormattableUtilsTest.testDefaultAppend":217,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":232,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":237,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEqualsIgnoreCase":67,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":76,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithCalendar":221,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":61,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":180,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":182,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticFieldForceAccess":151,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":71,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":291,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":136,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithCalendar":222,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementLongArray":6,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":197,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithIgnoreCase":253,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":15,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":179,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":72,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":137,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":106,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":139,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":140,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":184,"org.apache.commons.lang3.LocaleUtilsTest.testThreeCharsLocale":246,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":272,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":249,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_NullString":146,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfLongWithStartIndex":4,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":203,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":20,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":259,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":296,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEquals":49,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameLocalTime_Cal":66,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":173,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_float":0,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":24,"org.apache.commons.lang3.RandomUtilsTest.testNextIntMinimalRange":244,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":170,"org.apache.commons.lang3.text.FormattableUtilsTest.testAlternatePadCharAndEllipsis":219,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_char":305,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":77,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":83,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUPlus":167,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":243,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":84,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":32,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":40,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":13,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":27,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":215,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNotSupportedException":115,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":176,"org.apache.commons.lang3.text.StrBuilderTest.testStartsWith":211,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringNull":147,"org.apache.commons.lang3.SystemUtilsTest.testJavaVersionMatches":268,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":274,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":17,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":97,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEqualsOnStrings":48,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithCalendar":226,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfShort":300,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":250,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testSetContextValue":57,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":178,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":43,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":87,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":189,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":288,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":42,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":143,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":90,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":271,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":155,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfByte":148,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":193,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":194,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":275,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":14,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testLessThanFour":169,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithCalendar":227,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":285,"org.apache.commons.lang3.math.NumberUtilsTest.testToIntString":212,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testAddContextValue":55,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":187,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":7,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithCalendar":225,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticField":150,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":9,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":160,"org.apache.commons.lang3.StringUtilsTest.testIsAllLowerCase":251,"org.apache.commons.lang3.StringUtilsTest.testIsNotEmpty":36,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArray":2,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":25,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":269,"org.apache.commons.lang3.builder.CompareToBuilderTest.testByteArray":264,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":105,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":277,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":22,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":31,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementFloatArray":254,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":75,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNull":119,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":80,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":153,"org.apache.commons.lang3.text.FormattableUtilsTest.testEllipsis":220,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_String":302,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":161,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":191,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":152,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG971":156,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG972":157,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":21,"org.apache.commons.lang3.LocaleUtilsTest.testLang328":245,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":172,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":78,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetFirstContextValue":58,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":204,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":239,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":183,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":141,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":175,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":142,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfShortWithStartIndex":299,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":74,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":207,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiByteArray":265,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":69,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char_int":262,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":18,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":273,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_String":241,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":171,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":287,"org.apache.commons.lang3.text.StrBuilderTest.testChaining":35,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":208,"org.apache.commons.lang3.text.StrTokenizerTest.testGetContent":85,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":100,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":101,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":240,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":205,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":267,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":93,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":56,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_char_int":303,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":231,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":102,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":63,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":92,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":86,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG992":158,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":117,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":16,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":242,"org.apache.commons.lang3.text.StrTokenizerTest.test8":127,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":190,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":270,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_String_int":304,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":297,"org.apache.commons.lang3.time.DateUtilsTest.testRound":278,"org.apache.commons.lang3.text.StrTokenizerTest.test5":124,"org.apache.commons.lang3.text.StrTokenizerTest.test4":123,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedField":255,"org.apache.commons.lang3.text.StrTokenizerTest.test7":126,"org.apache.commons.lang3.text.StrTokenizerTest.test6":125,"org.apache.commons.lang3.text.StrTokenizerTest.test1":120,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":96,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":118,"org.apache.commons.lang3.text.StrTokenizerTest.test3":122,"org.apache.commons.lang3.BooleanUtilsTest.test_toIntegerObject_Boolean":213,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":247,"org.apache.commons.lang3.text.StrTokenizerTest.test2":121,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":199,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":23,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":53,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":261,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":28,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":283,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":98,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping":164,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":99,"org.apache.commons.lang3.text.StrBuilderTest.testSetCharAt":34,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsNotEmpty":37,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":94,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":234,"org.apache.commons.lang3.ConversionTest.testByteToBinary":258,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":54,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":181,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":301,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":210,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":64,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":174,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":26,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":60,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":163,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithCalendar":228,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":192,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":12,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":47,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":284,"org.apache.commons.lang3.ConversionTest.testShortToBinary":30,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBooleanArray":154,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":108,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":79,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":110,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":109,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":112,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":111,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":114,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":113,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":135,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithCalendar":223,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":293,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfByteWithStartIndex":149,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":230,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":145,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":279,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":129,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":133,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":132,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":39,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":134,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher":202,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":131,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":46,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementCharArray":91,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":82,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":206,"org.apache.commons.lang3.StringUtilsTest.testRemoveStartIgnoreCase":252,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":289,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":195,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":62,"org.apache.commons.lang3.ArrayUtilsTest.testCloneChar":89,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":209,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":260,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":144,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":159,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":280,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":162},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"toClass == null"},"failures":[],"tindex":"4e0a1fe9-2ec5-11e6-bf8b-07a41c6a6b51","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:844","type":"CtMethodImpl","sourcecode":"private static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(final java.lang.reflect.ParameterizedType parameterizedType, final java.lang.Class<?> toClass, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> subtypeVarAssigns) {\n    if (toClass == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.getRawType(parameterizedType);\n            if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, toClass))) {\n                return null;\n            } \n            final java.lang.reflect.Type java.lang.reflect.Type = parameterizedType.getOwnerType();\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n            if (ownerType instanceof java.lang.reflect.ParameterizedType) {\n                final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(ownerType));\n                typeVarAssigns = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(parameterizedOwnerType, org.apache.commons.lang3.reflect.TypeUtils.getRawType(parameterizedOwnerType), subtypeVarAssigns);\n            } else {\n                typeVarAssigns = subtypeVarAssigns == null ? new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>() : new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(subtypeVarAssigns);\n            }\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = parameterizedType.getActualTypeArguments();\n            final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = cls.getTypeParameters();\n            for (int int = 0 ; i < (typeParams.int) ; i++) {\n                final java.lang.reflect.Type java.lang.reflect.Type = typeArgs[i];\n                typeVarAssigns.put(typeParams[i], (typeVarAssigns.containsKey(typeArg) ? typeVarAssigns.get(typeArg) : typeArg));\n            }\n            if (toClass.equals(cls)) {\n                return typeVarAssigns;\n            } \n            return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(cls, toClass), toClass, typeVarAssigns);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"toClass"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3388","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[0,1],"tindex":"4e0ae33a-2ec5-11e6-bf8b-77cf9ce703cc","method":{"position":"org.apache.commons.lang3.ArrayUtils:3365","type":"CtMethodImpl","sourcecode":"public static float[] toPrimitive(final java.lang.Float[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.float[];\n            } \n            final float[] float[] = new float[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].floatValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2594","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"4e0b0a4b-2ec5-11e6-bf8b-e10572e1ba0e","method":{"position":"org.apache.commons.lang3.text.StrBuilder:968","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final org.apache.commons.lang3.text.StrBuilder str, final int startIndex, final int length) {\n    if (length < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(str, startIndex, length).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"length"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:267","type":"CtBinaryOperatorImpl","sourcecode":"(o1 == null) || (o2 == null)"},"failures":[],"tindex":"4e0b0a4c-2ec5-11e6-bf8b-a181c08cfe79","method":{"position":"org.apache.commons.lang3.AnnotationUtils:287","type":"CtMethodImpl","sourcecode":"private static boolean arrayMemberEquals(final java.lang.Class<?> componentType, final java.lang.Object o1, final java.lang.Object o2) {\n    if ((o1 == null) || (o1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (componentType.isAnnotation()) {\n                return org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(((java.lang.annotation.Annotation[])(o1)), ((java.lang.annotation.Annotation[])(o2)));\n            } \n            if (componentType.equals(java.lang.Byte.java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n                return java.util.Arrays.equals(((byte[])(o1)), ((byte[])(o2)));\n            } \n            if (componentType.equals(java.lang.Short.java.lang.Short.java.lang.Class<java.lang.Short>)) {\n                return java.util.Arrays.equals(((short[])(o1)), ((short[])(o2)));\n            } \n            if (componentType.equals(java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n                return java.util.Arrays.equals(((int[])(o1)), ((int[])(o2)));\n            } \n            if (componentType.equals(java.lang.Character.java.lang.Character.java.lang.Class<java.lang.Character>)) {\n                return java.util.Arrays.equals(((char[])(o1)), ((char[])(o2)));\n            } \n            if (componentType.equals(java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>)) {\n                return java.util.Arrays.equals(((long[])(o1)), ((long[])(o2)));\n            } \n            if (componentType.equals(java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>)) {\n                return java.util.Arrays.equals(((float[])(o1)), ((float[])(o2)));\n            } \n            if (componentType.equals(java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>)) {\n                return java.util.Arrays.equals(((double[])(o1)), ((double[])(o2)));\n            } \n            if (componentType.equals(java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>)) {\n                return java.util.Arrays.equals(((boolean[])(o1)), ((boolean[])(o2)));\n            } \n            return java.util.Arrays.equals(((java.lang.Object[])(o1)), ((java.lang.Object[])(o2)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"o1","o2":"o1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"4e0b586d-2ec5-11e6-bf8b-518133492f8b","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:176","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:955","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[2],"tindex":"4e0b586e-2ec5-11e6-bf8b-23cd514a2416","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:757","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final int[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final int int : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"4e0b7f7f-2ec5-11e6-bf8b-0567e995652d","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:584","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final byte[] array) {\n    if (fieldName == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:970","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[3,4,5,6],"tindex":"4e0b7f80-2ec5-11e6-bf8b-550a437592a8","method":{"position":"org.apache.commons.lang3.ArrayUtils:2021","type":"CtMethodImpl","sourcecode":"public static int indexOf(final long[] array, final long valueToFind, int startIndex) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1106","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"4e0ba691-2ec5-11e6-bf8b-3f8f1bca30c5","method":{"position":"org.apache.commons.lang3.Validate:1104","type":"CtMethodImpl","sourcecode":"public static void exclusiveBetween(long start, long end, long value, java.lang.String message) {\n    if ((end <= end) || (value >= start)) {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"start","value":"end"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:381","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"4e0bcda2-2ec5-11e6-bf8b-0bfd4fb40edd","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:715","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final short lhs, final short rhs) {\n    if (fieldName == null) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Short>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Short getLeft() {\n                        return java.lang.Short.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Short getRight() {\n                        return java.lang.Short.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5001","type":"CtBinaryOperatorImpl","sourcecode":"(str.length()) == 1"},"failures":[28],"tindex":"4e0bf4b3-2ec5-11e6-bf8b-67a4a4dab0e9","method":{"position":"org.apache.commons.lang3.StringUtils:5724","type":"CtMethodImpl","sourcecode":"public static java.lang.String uncapitalize(final java.lang.String str) {\n    if ((str.length()) == 1) {\n        {\n            int int;\n            if ((str == null) || ((strLen = str.length()) == 0)) {\n                return str;\n            } \n            char char = str.charAt(0);\n            if (java.lang.Character.isLowerCase(firstChar)) {\n                return str;\n            } \n            return new java.lang.StringBuilder(strLen).append(java.lang.Character.toLowerCase(firstChar)).append(str.substring(1)).toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:360","type":"CtBinaryOperatorImpl","sourcecode":"locale == null"},"failures":[],"tindex":"4e0c1bc4-2ec5-11e6-bf8b-afe59b11a4ce","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:288","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getTimeInstance(final int style, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (locale == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(style, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:274","type":"CtBinaryOperatorImpl","sourcecode":"count == 0"},"failures":[],"tindex":"4e0c1bc5-2ec5-11e6-bf8b-558cdab3a67b","method":{"position":"org.apache.commons.lang3.RandomStringUtils:110","type":"CtMethodImpl","sourcecode":"public static java.lang.String randomAlphanumeric(final int count) {\n    if (count == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, true, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1138","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[29],"tindex":"4e0c42d6-2ec5-11e6-bf8b-ef9057f8fe3e","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1240","type":"CtMethodImpl","sourcecode":"public static short max(short a, final short b, final short c) {\n    if (a < c) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"c","c":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:431","type":"CtArrayReadImpl","sourcecode":"src[(srcPos + 1)]"},"failures":[30],"tindex":"4e0c42d7-2ec5-11e6-bf8b-371f4b805335","method":{"position":"org.apache.commons.lang3.Conversion:1618","type":"CtMethodImpl","sourcecode":"public static boolean[] shortToBinary(final short src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (dst[(dstPos + 1)]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 16\");\n            } \n            int int = 0;\n            assert ((nBools - 1) * 1) < (16 - srcPos);\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"dstPos","src":"dst"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3368","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"4e0c69e8-2ec5-11e6-bf8b-bd56a21656b0","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1053","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[],"tindex":"4e0c69e9-2ec5-11e6-bf8b-0d8db678bc7a","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:600","type":"CtMethodImpl","sourcecode":"protected java.lang.StringBuffer applyRules(final java.util.Calendar calendar, final java.lang.StringBuffer buf) {\n    if (calendar == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.applyRules(calendar, buf);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:770","type":"CtVariableReadImpl","sourcecode":"value"},"failures":[31,31,32,33],"tindex":"4e0c90fa-2ec5-11e6-bf8b-6582140081ab","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:275","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final boolean value) {\n    if (value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:461","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isUpperCase(ch)"},"failures":[34,35],"tindex":"4e0c90fb-2ec5-11e6-bf8b-331884fb48fc","method":{"position":"org.apache.commons.lang3.text.StrBuilder:325","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder setCharAt(final int index, final char ch) {\n    if (java.lang.Character.isUpperCase(ch)) {\n        {\n            if ((index < 0) || (index >= (length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(index);\n            } \n            char[][index] = ch;\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6071","type":"CtBinaryOperatorImpl","sourcecode":"cs == null"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"4e0cb80c-2ec5-11e6-bf8b-d7622d1f18b0","method":{"position":"org.apache.commons.lang3.StringUtils:237","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        {\n            return !(org.apache.commons.lang3.StringUtils.isEmpty(cs));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:421","type":"CtBinaryOperatorImpl","sourcecode":"lhs instanceof short[]"},"failures":[],"tindex":"4e0cdf1d-2ec5-11e6-bf8b-51d13a4912d4","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:232","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs, final java.lang.String... excludeFields) {\n    if (rhs instanceof short[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null, excludeFields);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6544","type":"CtBinaryOperatorImpl","sourcecode":"(cs1 == null) || (cs2 == null)"},"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"4e0cdf1e-2ec5-11e6-bf8b-13af196c1eea","method":{"position":"org.apache.commons.lang3.StringUtils:794","type":"CtMethodImpl","sourcecode":"public static boolean equals(final java.lang.CharSequence cs1, final java.lang.CharSequence cs2) {\n    if ((cs1 == null) || (cs1 == null)) {\n        {\n            if (cs1 == cs2) {\n                return true;\n            } \n            if ((cs1 == null) || (cs2 == null)) {\n                return false;\n            } \n            if ((cs1 instanceof java.lang.String) && (cs2 instanceof java.lang.String)) {\n                return cs1.equals(cs2);\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, java.lang.Math.max(cs1.length(), cs2.length()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs1":"cs1","cs2":"cs1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:414","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"4e0d062f-2ec5-11e6-bf8b-2d2737edf2a1","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object parseObject(final java.lang.String source, final java.text.ParsePosition pos) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateParser.parseObject(source, pos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3274","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[65],"tindex":"4e0d0630-2ec5-11e6-bf8b-8dd05be90d84","method":{"position":"org.apache.commons.lang3.math.NumberUtils:857","type":"CtMethodImpl","sourcecode":"public static byte min(final byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            byte byte = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if ((array[i]) < min) {\n                    min = array[i];\n                } \n            }\n            return min;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1364","type":"CtBinaryOperatorImpl","sourcecode":"length >= 0"},"failures":[],"tindex":"4e0d2d41-2ec5-11e6-bf8b-19a9556fcada","method":{"position":"org.apache.commons.lang3.text.StrBuilder:994","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final char[] chars, final int startIndex, final int length) {\n    if (length >= 0) {\n        {\n            return append(chars, startIndex, length).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:219","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[66],"tindex":"4e0d2d42-2ec5-11e6-bf8b-11e5bc44feae","method":{"position":"org.apache.commons.lang3.time.DateUtils:238","type":"CtMethodImpl","sourcecode":"public static boolean isSameLocalTime(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if ((cal2 == null) || (cal2 == null)) {\n        {\n            if ((cal1 == null) || (cal2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return ((((((((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.getClass()) == (cal2.getClass()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"cal2","cal1":"cal2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6505","type":"CtBinaryOperatorImpl","sourcecode":"str2 == null"},"failures":[67],"tindex":"4e0d2d43-2ec5-11e6-bf8b-272e2e1fda3a","method":{"position":"org.apache.commons.lang3.StringUtils:828","type":"CtMethodImpl","sourcecode":"public static boolean equalsIgnoreCase(final java.lang.CharSequence str1, final java.lang.CharSequence str2) {\n    if (str1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((str1 == null) || (str2 == null)) {\n                return str1 == str2;\n            } else if (str1 == str2) {\n                return true;\n            } else if ((str1.length()) != (str2.length())) {\n                return false;\n            } else {\n                return org.apache.commons.lang3.CharSequenceUtils.regionMatches(str1, true, 0, str2, 0, str1.length());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str2":"str1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[68],"tindex":"4e0d5454-2ec5-11e6-bf8b-d31fa42185a0","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:698","type":"CtMethodImpl","sourcecode":"public static java.lang.String escapeXml10(final java.lang.String input) {\n    if (input != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2073","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[69],"tindex":"4e0d5455-2ec5-11e6-bf8b-198dfa3ea01c","method":{"position":"org.apache.commons.lang3.text.WordUtils:96","type":"CtMethodImpl","sourcecode":"public static java.lang.String wrap(final java.lang.String str, final int wrapLength) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.WordUtils.wrap(str, wrapLength, null, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:282","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[70,71,72,73,74,75,76,77],"tindex":"4e0d5456-2ec5-11e6-bf8b-6d660b3fd3d6","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:302","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Date date, final java.lang.String pattern, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (date == null) {\n        {\n            final org.apache.commons.lang3.time.FastDateFormat org.apache.commons.lang3.time.FastDateFormat = org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale);\n            return df.format(date);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1644","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91],"tindex":"4e0d7b67-2ec5-11e6-bf8b-0334d4eee313","method":{"position":"org.apache.commons.lang3.ArrayUtils:386","type":"CtMethodImpl","sourcecode":"public static char[] clone(final char[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[92,93,94,95,96,97],"tindex":"4e0d7b68-2ec5-11e6-bf8b-cd5cba979620","method":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:75","type":"CtMethodImpl","sourcecode":"public final void translate(final java.lang.CharSequence input, final java.io.Writer out) throws java.io.IOException {\n    if (input != null) {\n        {\n            if (out == null) {\n                throw new java.lang.IllegalArgumentException(\"The Writer must not be null\");\n            } \n            if (input == null) {\n                return ;\n            } \n            int int = 0;\n            final int int = input.length();\n            while (pos < len) {\n                final int int = translate(input, pos, out);\n                if (consumed == 0) {\n                    final char[] char[] = java.lang.Character.toChars(java.lang.Character.codePointAt(input, pos));\n                    out.write(c);\n                    pos += c.int;\n                    continue;\n                } \n                for (int int = 0 ; pt < consumed ; pt++) {\n                    pos += java.lang.Character.charCount(java.lang.Character.codePointAt(input, pos));\n                }\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:913","type":"CtBinaryOperatorImpl","sourcecode":"quote != null"},"failures":[78,98,99,100,101,79,80,102,103,104,81,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,82,83,84,131,132,133,134,135,136,137,138,139,140,85,86,141,142,87,143],"tindex":"4e0d7b69-2ec5-11e6-bf8b-c15a1b68a986","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:912","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setQuoteMatcher(final org.apache.commons.lang3.text.StrMatcher quote) {\n    if (quote != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (quote != null) {\n                org.apache.commons.lang3.text.StrTokenizer.this.org.apache.commons.lang3.text.StrMatcher = quote;\n            } \n            return org.apache.commons.lang3.text.StrTokenizer.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"quote":"quote"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"(ch >= 56192) && (ch <= 56319)"},"failures":[],"tindex":"4e0da27a-2ec5-11e6-bf8b-c1ac224b2515","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2247","type":"CtMethodImpl","sourcecode":"public boolean contains(final char ch) {\n    if ((ch >= 56192) && (ch <= 56319)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final char[] char[] = char[];\n            for (int int = 0 ; i < (org.apache.commons.lang3.text.StrBuilder.this.int) ; i++) {\n                if ((thisBuf[i]) == ch) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:591","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[144,144,145],"tindex":"4e0da27b-2ec5-11e6-bf8b-5b150d8f1795","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:717","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short value) {\n    if (fieldName == null) {\n        {\n            buffer.append(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:173","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.mutable.MutableBoolean"},"failures":[],"tindex":"4e0dc98c-2ec5-11e6-bf8b-e9671b9c9bf0","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.lang3.mutable.MutableBoolean) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof org.apache.commons.lang3.mutable.MutableLong) {\n                return (long) == (((org.apache.commons.lang3.mutable.MutableLong)(obj)).longValue());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:110","type":"CtUnaryOperatorImpl","sourcecode":"!(obj instanceof org.apache.commons.lang3.concurrent.ConstantInitializer<?>)"},"failures":[],"tindex":"4e0dc98d-2ec5-11e6-bf8b-f5b6346409d3","method":{"position":"org.apache.commons.lang3.tuple.Triple:110","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\n@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (!(obj instanceof org.apache.commons.lang3.concurrent.ConstantInitializer<?>)) {\n        {\n            if (obj == (org.apache.commons.lang3.tuple.Triple.this)) {\n                return true;\n            } \n            if (obj instanceof org.apache.commons.lang3.tuple.Triple<?, ?, ?>) {\n                final org.apache.commons.lang3.tuple.Triple<?, ?, ?> org.apache.commons.lang3.tuple.Triple<?, ?, ?> = ((org.apache.commons.lang3.tuple.Triple<?, ?, ?>)(obj));\n                return ((org.apache.commons.lang3.ObjectUtils.equals(getLeft(), other.getLeft())) && (org.apache.commons.lang3.ObjectUtils.equals(getMiddle(), other.getMiddle()))) && (org.apache.commons.lang3.ObjectUtils.equals(getRight(), other.getRight()));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6850","type":"CtBinaryOperatorImpl","sourcecode":"(s == null) || (t == null)"},"failures":[146,147],"tindex":"4e0dc98e-2ec5-11e6-bf8b-0d81bb93a1cc","method":{"position":"org.apache.commons.lang3.StringUtils:6740","type":"CtMethodImpl","sourcecode":"public static int getLevenshteinDistance(java.lang.CharSequence s, java.lang.CharSequence t) {\n    if ((s == null) || (t == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((s == null) || (t == null)) {\n                throw new java.lang.IllegalArgumentException(\"Strings must not be null\");\n            } \n            int int = s.length();\n            int int = t.length();\n            if (n == 0) {\n                return m;\n            } else if (m == 0) {\n                return n;\n            } \n            if (n > m) {\n                final java.lang.CharSequence java.lang.CharSequence = s;\n                s = t;\n                t = tmp;\n                n = m;\n                m = t.length();\n            } \n            int[] int[] = new int[n + 1];\n            int[] int[] = new int[n + 1];\n            int[] int[];\n            int int;\n            int int;\n            char char;\n            int int;\n            for (i = 0 ; i <= n ; i++) {\n                p[i] = i;\n            }\n            for (j = 1 ; j <= m ; j++) {\n                t_j = t.charAt((j - 1));\n                d[0] = j;\n                for (i = 1 ; i <= n ; i++) {\n                    cost = (s.charAt((i - 1))) == t_j ? 0 : 1;\n                    d[i] = java.lang.Math.min(java.lang.Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)), ((p[(i - 1)]) + cost));\n                }\n                _d = p;\n                p = d;\n                d = _d;\n            }\n            return p[n];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"s":"s","t":"t"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:391","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"4e0df09f-2ec5-11e6-bf8b-e9defceb91db","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:494","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Date parse(final java.lang.String source, final java.text.ParsePosition pos) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateParser.parse(source, pos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:403","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[148,149],"tindex":"4e0df0a0-2ec5-11e6-bf8b-178352b4fa1e","method":{"position":"org.apache.commons.lang3.ArrayUtils:2481","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final byte[] array, final byte valueToFind, int startIndex) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:653","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"4e0e17b1-2ec5-11e6-bf8b-8fd9a381afe9","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:180","type":"CtMethodImpl","sourcecode":"public static <V>java.lang.String replace(final java.lang.Object source, final java.util.Map<java.lang.String, V> valueMap) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.text.StrSubstitutor(valueMap).replace(source);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.ClassUtils:636","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[150,151],"tindex":"4e0e17b2-2ec5-11e6-bf8b-c7f0ad428e0f","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:296","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (cls == null) {\n        {\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate field '%s' on %s\", fieldName, cls);\n            return org.apache.commons.lang3.reflect.FieldUtils.readStaticField(field, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:346","type":"CtBinaryOperatorImpl","sourcecode":"pos < 0"},"failures":[],"tindex":"4e0e17b3-2ec5-11e6-bf8b-11cc27b74bc8","method":{"position":"org.apache.commons.lang3.text.StrMatcher:333","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n    if (pos < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (char) == (buffer[pos]) ? 1 : 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"pos"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:115","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 65535"},"failures":[152,153],"tindex":"4e0e3ec4-2ec5-11e6-bf8b-e57279f12398","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean translate(final int codepoint, final java.io.Writer out) throws java.io.IOException {\n    if (codepoint > 65535) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (boolean) {\n                if ((codepoint < (int)) || (codepoint > (int))) {\n                    return false;\n                } \n            } else {\n                if ((codepoint >= (int)) && (codepoint <= (int))) {\n                    return false;\n                } \n            }\n            out.write(\"&#\");\n            out.write(java.lang.Integer.toString(codepoint, 10));\n            out.write(';');\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepoint"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:974","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[154],"tindex":"4e0e3ec5-2ec5-11e6-bf8b-1b773ba0ccb0","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:887","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final boolean[] lhs, final boolean[] rhs) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.NumberFormatException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:761","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[155,156,157,158,159,160,161,162,163],"tindex":"4e0e3ec6-2ec5-11e6-bf8b-35fe39f44463","method":{"position":"org.apache.commons.lang3.math.NumberUtils:450","type":"CtMethodImpl","sourcecode":"public static java.lang.Number createNumber(final java.lang.String str) throws java.lang.NumberFormatException {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (org.apache.commons.lang3.StringUtils.isBlank(str)) {\n                throw new java.lang.NumberFormatException(\"A blank string is not a valid number\");\n            } \n            final java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"0x\" , \"0X\" , \"-0x\" , \"-0X\" , \"#\" , \"-#\" };\n            int int = 0;\n            for (final java.lang.String java.lang.String : hex_prefixes) {\n                if (str.startsWith(pfx)) {\n                    pfxLen += pfx.length();\n                    break;\n                } \n            }\n            if (pfxLen > 0) {\n                char char = 0;\n                for (int int = pfxLen ; i < (str.length()) ; i++) {\n                    firstSigDigit = str.charAt(i);\n                    if (firstSigDigit == '0') {\n                        pfxLen++;\n                    } else {\n                        break;\n                    }\n                }\n                final int int = (str.length()) - pfxLen;\n                if ((hexDigits > 16) || ((hexDigits == 16) && (firstSigDigit > '7'))) {\n                    return org.apache.commons.lang3.math.NumberUtils.createBigInteger(str);\n                } \n                if ((hexDigits > 8) || ((hexDigits == 8) && (firstSigDigit > '7'))) {\n                    return org.apache.commons.lang3.math.NumberUtils.createLong(str);\n                } \n                return org.apache.commons.lang3.math.NumberUtils.createInteger(str);\n            } \n            final char char = str.charAt(((str.length()) - 1));\n            java.lang.String java.lang.String;\n            java.lang.String java.lang.String;\n            java.lang.String java.lang.String;\n            final int int = str.indexOf('.');\n            final int int = ((str.indexOf('e')) + (str.indexOf('E'))) + 1;\n            int int = 0;\n            if (decPos > (-1)) {\n                if (expPos > (-1)) {\n                    if ((expPos < decPos) || (expPos > (str.length()))) {\n                        throw new java.lang.NumberFormatException((str + \" is not a valid number.\"));\n                    } \n                    dec = str.substring((decPos + 1), expPos);\n                } else {\n                    dec = str.substring((decPos + 1));\n                }\n                mant = str.substring(0, decPos);\n                numDecimals = dec.length();\n            } else {\n                if (expPos > (-1)) {\n                    if (expPos > (str.length())) {\n                        throw new java.lang.NumberFormatException((str + \" is not a valid number.\"));\n                    } \n                    mant = str.substring(0, expPos);\n                } else {\n                    mant = str;\n                }\n                dec = null;\n            }\n            if ((!(java.lang.Character.isDigit(lastChar))) && (lastChar != '.')) {\n                if ((expPos > (-1)) && (expPos < ((str.length()) - 1))) {\n                    exp = str.substring((expPos + 1), ((str.length()) - 1));\n                } else {\n                    exp = null;\n                }\n                final java.lang.String java.lang.String = str.substring(0, ((str.length()) - 1));\n                final boolean boolean = (org.apache.commons.lang3.math.NumberUtils.isAllZeros(mant)) && (org.apache.commons.lang3.math.NumberUtils.isAllZeros(exp));\n                switch (lastChar) {\n                    case 'l' :\n                    case 'L' :\n                        if (((dec == null) && (exp == null)) && ((((numeric.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))) {\n                            try {\n                                return org.apache.commons.lang3.math.NumberUtils.createLong(numeric);\n                            } catch (final java.lang.NumberFormatException nfe) {\n                            }\n                            return org.apache.commons.lang3.math.NumberUtils.createBigInteger(numeric);\n                        } \n                        throw new java.lang.NumberFormatException((str + \" is not a valid number.\"));\n                    case 'f' :\n                    case 'F' :\n                        try {\n                            final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.createFloat(numeric);\n                            if (!((f.isInfinite()) || (((f.floatValue()) == 0.0F) && (!allZeros)))) {\n                                return f;\n                            } \n                        } catch (final java.lang.NumberFormatException nfe) {\n                        }\n                    case 'd' :\n                    case 'D' :\n                        try {\n                            final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.createDouble(numeric);\n                            if (!((d.isInfinite()) || (((d.floatValue()) == 0.0) && (!allZeros)))) {\n                                return d;\n                            } \n                        } catch (final java.lang.NumberFormatException nfe) {\n                        }\n                        try {\n                            return org.apache.commons.lang3.math.NumberUtils.createBigDecimal(numeric);\n                        } catch (final java.lang.NumberFormatException e) {\n                        }\n                    default :\n                        throw new java.lang.NumberFormatException((str + \" is not a valid number.\"));\n                }\n            } \n            if ((expPos > (-1)) && (expPos < ((str.length()) - 1))) {\n                exp = str.substring((expPos + 1), str.length());\n            } else {\n                exp = null;\n            }\n            if ((dec == null) && (exp == null)) {\n                try {\n                    return org.apache.commons.lang3.math.NumberUtils.createInteger(str);\n                } catch (final java.lang.NumberFormatException nfe) {\n                }\n                try {\n                    return org.apache.commons.lang3.math.NumberUtils.createLong(str);\n                } catch (final java.lang.NumberFormatException nfe) {\n                }\n                return org.apache.commons.lang3.math.NumberUtils.createBigInteger(str);\n            } \n            final boolean boolean = (org.apache.commons.lang3.math.NumberUtils.isAllZeros(mant)) && (org.apache.commons.lang3.math.NumberUtils.isAllZeros(exp));\n            try {\n                if (numDecimals <= 7) {\n                    final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.createFloat(str);\n                    if (!((f.isInfinite()) || (((f.floatValue()) == 0.0F) && (!allZeros)))) {\n                        return f;\n                    } \n                } \n            } catch (final java.lang.NumberFormatException nfe) {\n            }\n            try {\n                if (numDecimals <= 16) {\n                    final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.createDouble(str);\n                    if (!((d.isInfinite()) || (((d.doubleValue()) == 0.0) && (!allZeros)))) {\n                        return d;\n                    } \n                } \n            } catch (final java.lang.NumberFormatException nfe) {\n            }\n            return org.apache.commons.lang3.math.NumberUtils.createBigDecimal(str);\n        }\n    } else {\n        throw new java.lang.NumberFormatException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:762","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[164,165,166,167,168,169,170,171,172,173,152,174,175,176,177,178,179,180,181,92,182,183,184,93,94,185,68,186,153,187,188,189,190,95,191,192,193,194,195,196,197,198,199],"tindex":"4e0e8ce7-2ec5-11e6-bf8b-91450208600d","method":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:53","type":"CtMethodImpl","sourcecode":"public final java.lang.String translate(final java.lang.CharSequence input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.io.StringWriter java.io.StringWriter = new java.io.StringWriter(((input.length()) * 2));\n                translate(input, writer);\n                return writer.toString();\n            } catch (final java.io.IOException ioe) {\n                throw new java.lang.RuntimeException(ioe);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2171","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[200,201,202],"tindex":"4e0eb3f8-2ec5-11e6-bf8b-499736aa27f1","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2391","type":"CtMethodImpl","sourcecode":"public int indexOf(final org.apache.commons.lang3.text.StrMatcher matcher, int startIndex) {\n    if (startIndex < 0) {\n        {\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            if ((matcher == null) || (startIndex >= (int))) {\n                return -1;\n            } \n            final int int = int;\n            final char[] char[] = char[];\n            for (int int = startIndex ; i < len ; i++) {\n                if ((matcher.isMatch(buf, i, startIndex, len)) > 0) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:796","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[3,5,6],"tindex":"4e0eb3f9-2ec5-11e6-bf8b-05e17114c39e","method":{"position":"org.apache.commons.lang3.ArrayUtils:2003","type":"CtMethodImpl","sourcecode":"public static int indexOf(final long[] array, final long valueToFind) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1886","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isHighSurrogate(ch)"},"failures":[203,204,205,206,207,208,209,210],"tindex":"4e0eb3fa-2ec5-11e6-bf8b-49ccbbb49d71","method":{"position":"org.apache.commons.lang3.text.WordUtils:569","type":"CtMethodImpl","sourcecode":"private static boolean isDelimiter(final char ch, final char[] delimiters) {\n    if (java.lang.Character.isHighSurrogate(ch)) {\n        {\n            if (delimiters == null) {\n                return java.lang.Character.isWhitespace(ch);\n            } \n            for (final char char : delimiters) {\n                if (ch == delimiter) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:227","type":"CtBinaryOperatorImpl","sourcecode":"count < 0"},"failures":[],"tindex":"4e0edb0b-2ec5-11e6-bf8b-c3db563b1019","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:461","type":"CtMethodImpl","sourcecode":"private static java.lang.String paddedValue(final long value, final boolean padWithZeros, final int count) {\n    if (count < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.String java.lang.String = java.lang.Long.toString(value);\n            return padWithZeros ? org.apache.commons.lang3.StringUtils.leftPad(longString, count, '0') : longString;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3222","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[211],"tindex":"4e0edb0c-2ec5-11e6-bf8b-bf5fb6676ea6","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2072","type":"CtMethodImpl","sourcecode":"public boolean startsWith(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return false;\n            } \n            final int int = str.length();\n            if (len == 0) {\n                return true;\n            } \n            if (len > (int)) {\n                return false;\n            } \n            for (int int = 0 ; i < len ; i++) {\n                if ((char[][i]) != (str.charAt(i))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5770","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[212],"tindex":"4e0edb0d-2ec5-11e6-bf8b-23659f306b7f","method":{"position":"org.apache.commons.lang3.math.NumberUtils:99","type":"CtMethodImpl","sourcecode":"public static int toInt(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toInt(str, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[213],"tindex":"4e0f021e-2ec5-11e6-bf8b-5d45c026a55e","method":{"position":"org.apache.commons.lang3.BooleanUtils:426","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer toIntegerObject(final java.lang.Boolean bool) {\n    if (bool == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bool == null) {\n                return null;\n            } \n            return bool.booleanValue() ? org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.java.lang.Integer : org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.java.lang.Integer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:549","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[214],"tindex":"4e0f021f-2ec5-11e6-bf8b-5d1ab5677536","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:318","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readDeclaredStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName) throws java.lang.IllegalAccessException {\n    if (fieldName == null) {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readDeclaredStaticField(cls, fieldName, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3400","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[215,216],"tindex":"4e0f0220-2ec5-11e6-bf8b-1b3ffe0f620a","method":{"position":"org.apache.commons.lang3.ArrayUtils:3531","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final short[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1386","type":"CtBinaryOperatorImpl","sourcecode":"width > 0"},"failures":[217,218,219,220],"tindex":"4e0f0221-2ec5-11e6-bf8b-21e4d6f352ea","method":{"position":"org.apache.commons.lang3.text.FormattableUtils:134","type":"CtMethodImpl","sourcecode":"public static java.util.Formatter append(final java.lang.CharSequence seq, final java.util.Formatter formatter, final int flags, final int width, final int precision, final char padChar, final java.lang.CharSequence ellipsis) {\n    if (flags > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((((ellipsis == null) || (precision < 0)) || ((ellipsis.length()) <= precision)), \"Specified ellipsis '%1$s' exceeds precision of %2$s\", ellipsis, java.lang.Integer.valueOf(precision));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(seq);\n            if ((precision >= 0) && (precision < (seq.length()))) {\n                final java.lang.CharSequence java.lang.CharSequence = org.apache.commons.lang3.ObjectUtils.defaultIfNull(ellipsis, org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String);\n                buf.replace((precision - (_ellipsis.length())), seq.length(), _ellipsis.toString());\n            } \n            final boolean boolean = (flags & (java.util.FormattableFlags.java.util.FormattableFlags.int)) == (java.util.FormattableFlags.java.util.FormattableFlags.int);\n            for (int int = buf.length() ; i < width ; i++) {\n                buf.insert((leftJustify ? i : 0), padChar);\n            }\n            formatter.format(buf.toString());\n            return formatter;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"width":"flags"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[221,222,223,224,225,226,227,228],"tindex":"4e0f2832-2ec5-11e6-bf8b-7ba3e13bd715","method":{"position":"org.apache.commons.lang3.time.DateUtils:1592","type":"CtMethodImpl","sourcecode":"public static long getFragmentInHours(final java.util.Calendar calendar, final int fragment) {\n    if (calendar == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:542","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"4e0f2833-2ec5-11e6-bf8b-fbf1b5857054","method":{"position":"org.apache.commons.lang3.Validate:1225","type":"CtMethodImpl","sourcecode":"public static void isAssignableFrom(final java.lang.Class<?> superType, final java.lang.Class<?> type) {\n    if (type == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((superType.isAssignableFrom(type)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, (type == null ? \"null\" : type.getName()), superType.getName()));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:448","type":"CtBinaryOperatorImpl","sourcecode":"(nullText) == null"},"failures":[229,230,231,232,233,234,235,236],"tindex":"4e0f2834-2ec5-11e6-bf8b-ed367e30242b","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:430","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setNullText(final java.lang.String nullText) {\n    if (nullText == null) {\n        {\n            super.setNullText(nullText);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"nullText"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3937","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[90],"tindex":"4e0f4f45-2ec5-11e6-bf8b-95a88d7bec3d","method":{"position":"org.apache.commons.lang3.ArrayUtils:3936","type":"CtMethodImpl","sourcecode":"public static float[] addAll(final float[] array1, final float... array2) {\n    if (array1 == null) {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final float[] float[] = new float[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:121","type":"CtBinaryOperatorImpl","sourcecode":"locale == null"},"failures":[237,238,239],"tindex":"4e0f4f46-2ec5-11e6-bf8b-09072828d9e7","method":{"position":"org.apache.commons.lang3.time.FormatCache:142","type":"CtMethodImpl","sourcecode":"F getDateTimeInstance(final int dateStyle, final int timeStyle, final java.util.TimeZone timeZone, java.util.Locale locale) {\n    if (timeZone == null) {\n        {\n            if (locale == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return getDateTimeInstance(java.lang.Integer.valueOf(dateStyle), java.lang.Integer.valueOf(timeStyle), timeZone, locale);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:39","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[240],"tindex":"4e0f4f47-2ec5-11e6-bf8b-79f4966f6f66","method":{"position":"org.apache.commons.lang3.ArrayUtils:3665","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final double[] array) {\n    if (array == null) {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1499","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(seq)"},"failures":[241],"tindex":"4e0f7658-2ec5-11e6-bf8b-b9162bb1a61f","method":{"position":"org.apache.commons.lang3.StringUtils:1221","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(searchSeq)) {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"searchSeq"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3765","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[90],"tindex":"4e0f7659-2ec5-11e6-bf8b-1776847638ec","method":{"position":"org.apache.commons.lang3.ArrayUtils:3762","type":"CtMethodImpl","sourcecode":"public static boolean[] addAll(final boolean[] array1, final boolean... array2) {\n    if (array2 == null) {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final boolean[] boolean[] = new boolean[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:83","type":"CtBinaryOperatorImpl","sourcecode":"(ex == null) || ((ex.getCause()) == null)"},"failures":[],"tindex":"4e0f765a-2ec5-11e6-bf8b-c9a15a5b616a","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:143","type":"CtMethodImpl","sourcecode":"static java.lang.Throwable checkedException(final java.lang.Throwable ex) {\n    if ((ex == null) || ((ex.getCause()) == null)) {\n        {\n            if (((ex != null) && (!(ex instanceof java.lang.RuntimeException))) && (!(ex instanceof java.lang.Error))) {\n                return ex;\n            } else {\n                throw new java.lang.IllegalArgumentException((\"Not a checked exception: \" + ex));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:705","type":"CtBinaryOperatorImpl","sourcecode":"(((type instanceof java.lang.Class<?>) || (type instanceof java.lang.reflect.ParameterizedType)) || (type instanceof java.lang.reflect.GenericArrayType)) || (type instanceof java.lang.reflect.WildcardType)"},"failures":[],"tindex":"4e0f9d6b-2ec5-11e6-bf8b-3530fb795295","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:795","type":"CtMethodImpl","sourcecode":"private static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(final java.lang.reflect.Type type, final java.lang.Class<?> toClass, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> subtypeVarAssigns) {\n    if ((((type instanceof java.lang.Class<?>) || (type instanceof java.lang.reflect.ParameterizedType)) || (type instanceof java.lang.reflect.GenericArrayType)) || (type instanceof java.lang.reflect.WildcardType)) {\n        {\n            if (type instanceof java.lang.Class<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.Class<?>)(type)), toClass, subtypeVarAssigns);\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.reflect.ParameterizedType)(type)), toClass, subtypeVarAssigns);\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType(), (toClass.isArray() ? toClass.getComponentType() : toClass), subtypeVarAssigns);\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(((java.lang.reflect.WildcardType)(type)))) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toClass)) {\n                        return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(bound, toClass, subtypeVarAssigns);\n                    } \n                }\n                return null;\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(type)))) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toClass)) {\n                        return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(bound, toClass, subtypeVarAssigns);\n                    } \n                }\n                return null;\n            } \n            throw new java.lang.IllegalStateException((\"found an unhandled type: \" + type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1226","type":"CtBinaryOperatorImpl","sourcecode":"(((nShorts - 1) * 16) + srcPos) >= 64"},"failures":[242],"tindex":"4e0f9d6c-2ec5-11e6-bf8b-9b59977e22bb","method":{"position":"org.apache.commons.lang3.Conversion:759","type":"CtMethodImpl","sourcecode":"public static int shortArrayToInt(final short[] src, final int srcPos, final int dstInit, final int dstPos, final int nShorts) {\n    if ((((dstPos - 1) * 16) + nShorts) >= 64) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nShorts)) {\n                return dstInit;\n            } \n            if ((((nShorts - 1) * 16) + dstPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 32\");\n            } \n            int int = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nShorts ; i++) {\n                shift = (i * 16) + dstPos;\n                final int int = (65535 & (src[(i + srcPos)])) << shift;\n                final int int = 65535 << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"nShorts","nShorts":"dstPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:176","type":"CtVariableReadImpl","sourcecode":"suppressLeadingZeroElements"},"failures":[243],"tindex":"4e0fc47d-2ec5-11e6-bf8b-b5d86e54146d","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:167","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatDurationWords(final long durationMillis, final boolean suppressLeadingZeroElements, final boolean suppressTrailingZeroElements) {\n    if (suppressTrailingZeroElements) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String = org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(durationMillis, \"d' days 'H' hours 'm' minutes 's' seconds'\");\n            if (suppressLeadingZeroElements) {\n                duration = \" \" + duration;\n                java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 days\", \"\");\n                if ((tmp.length()) != (duration.length())) {\n                    duration = tmp;\n                    tmp = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 hours\", \"\");\n                    if ((tmp.length()) != (duration.length())) {\n                        duration = tmp;\n                        tmp = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 minutes\", \"\");\n                        duration = tmp;\n                        if ((tmp.length()) != (duration.length())) {\n                            duration = org.apache.commons.lang3.StringUtils.replaceOnce(tmp, \" 0 seconds\", \"\");\n                        } \n                    } \n                } \n                if ((duration.length()) != 0) {\n                    duration = duration.substring(1);\n                } \n            } \n            if (suppressTrailingZeroElements) {\n                java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 seconds\", \"\");\n                if ((tmp.length()) != (duration.length())) {\n                    duration = tmp;\n                    tmp = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 minutes\", \"\");\n                    if ((tmp.length()) != (duration.length())) {\n                        duration = tmp;\n                        tmp = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 hours\", \"\");\n                        if ((tmp.length()) != (duration.length())) {\n                            duration = org.apache.commons.lang3.StringUtils.replaceOnce(tmp, \" 0 days\", \"\");\n                        } \n                    } \n                } \n            } \n            duration = \" \" + duration;\n            duration = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 1 seconds\", \" 1 second\");\n            duration = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 1 minutes\", \" 1 minute\");\n            duration = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 1 hours\", \" 1 hour\");\n            duration = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 1 days\", \" 1 day\");\n            return duration.trim();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suppressLeadingZeroElements":"suppressTrailingZeroElements"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:89","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endExclusive"},"failures":[244],"tindex":"4e0fc47e-2ec5-11e6-bf8b-a72a6d22b366","method":{"position":"org.apache.commons.lang3.RandomUtils:84","type":"CtMethodImpl","sourcecode":"public static int nextInt(int startInclusive, int endExclusive) {\n    if (endExclusive == startInclusive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((endExclusive >= startInclusive), \"Start value must be smaller or equal to end value.\");\n            org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\");\n            if (startInclusive == endExclusive) {\n                return startInclusive;\n            } \n            return startInclusive + (org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextInt((endExclusive - startInclusive)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"endExclusive","endExclusive":"startInclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.NoSuchMethodException","condition":{"position":"org.apache.commons.lang3.ClassUtils:629","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[],"tindex":"4e0feb8f-2ec5-11e6-bf8b-c57ce9b4955f","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:253","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeStaticMethod(final java.lang.Class<?> cls, final java.lang.String methodName, java.lang.Object... args) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (cls == null) {\n        throw new java.lang.NoSuchMethodException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.toClass(args);\n            return org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(cls, methodName, args, parameterTypes);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6034","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(cs)"},"failures":[245,246,247,248,249,250,251],"tindex":"4e0feb90-2ec5-11e6-bf8b-55fc00bc8671","method":{"position":"org.apache.commons.lang3.StringUtils:6135","type":"CtMethodImpl","sourcecode":"public static boolean isAllLowerCase(final java.lang.CharSequence cs) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n        {\n            if ((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isLowerCase(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.tuple.Pair:134","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry<?, ?>"},"failures":[],"tindex":"4e0feb91-2ec5-11e6-bf8b-9b64b0a3435e","method":{"position":"org.apache.commons.lang3.time.FastDateParser:221","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj instanceof org.apache.commons.lang3.time.FastDateParser)) {\n                return false;\n            } \n            final org.apache.commons.lang3.time.FastDateParser org.apache.commons.lang3.time.FastDateParser = ((org.apache.commons.lang3.time.FastDateParser)(obj));\n            return ((java.lang.String.equals(other.java.lang.String)) && (java.util.TimeZone.equals(other.java.util.TimeZone))) && (java.util.Locale.equals(other.java.util.Locale));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:472","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))"},"failures":[],"tindex":"4e1012a2-2ec5-11e6-bf8b-0db4f363d39f","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:568","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final float lhs, final float rhs) {\n    if ((java.lang.Float.floatToIntBits(rhs)) != (java.lang.Float.floatToIntBits(rhs))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = java.lang.Float.compare(lhs, rhs);\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"rhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:242","type":"CtBinaryOperatorImpl","sourcecode":"strings != null"},"failures":[41,42,44,46,47],"tindex":"4e1012a3-2ec5-11e6-bf8b-598f0e5671e1","method":{"position":"org.apache.commons.lang3.CharSetUtils:241","type":"CtMethodImpl","sourcecode":"private static boolean deepEmpty(final java.lang.String[] strings) {\n    if (strings != null) {\n        {\n            if (strings != null) {\n                for (final java.lang.String java.lang.String : strings) {\n                    if (org.apache.commons.lang3.StringUtils.isNotEmpty(s)) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strings":"strings"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5588","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[252,253],"tindex":"4e1012a4-2ec5-11e6-bf8b-a5cf4e841eb9","method":{"position":"org.apache.commons.lang3.StringUtils:7187","type":"CtMethodImpl","sourcecode":"public static boolean startsWithIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence prefix) {\n    if (prefix == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.startsWith(str, prefix, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"prefix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3496","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[254],"tindex":"4e1039b5-2ec5-11e6-bf8b-5b262e6c5e5e","method":{"position":"org.apache.commons.lang3.ArrayUtils:4966","type":"CtMethodImpl","sourcecode":"public static float[] removeElement(final float[] array, final float element) {\n    if (array == null) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[255,256],"tindex":"4e1039b6-2ec5-11e6-bf8b-4f7ea2b1ff1d","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:446","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readDeclaredField(final java.lang.Object target, final java.lang.String fieldName) throws java.lang.IllegalAccessException {\n    if (target == null) {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readDeclaredField(target, fieldName, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"target"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1558","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[257],"tindex":"4e1039b7-2ec5-11e6-bf8b-f905f8eea411","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:413","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final java.lang.String source, final int offset, final int length) {\n    if (offset > 0) {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            if ((substitute(buf, 0, length)) == false) {\n                return source.substring(offset, (offset + length));\n            } \n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"offset"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:381","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[150],"tindex":"4e1039b8-2ec5-11e6-bf8b-afb93e184526","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:274","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName) throws java.lang.IllegalAccessException {\n    if (fieldName == null) {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readStaticField(cls, fieldName, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:591","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"4e1060c9-2ec5-11e6-bf8b-29afd2bc65b2","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:696","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final double[] array, final boolean fullDetail) {\n    if (fieldName == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:309","type":"CtArrayReadImpl","sourcecode":"src[srcPos]"},"failures":[258],"tindex":"4e1060ca-2ec5-11e6-bf8b-0df89c9cc7d2","method":{"position":"org.apache.commons.lang3.Conversion:1653","type":"CtMethodImpl","sourcecode":"public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (dst[nBools]) {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 8) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"nBools","src":"dst"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:534","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[28],"tindex":"4e1060cb-2ec5-11e6-bf8b-6de1183ac08e","method":{"position":"org.apache.commons.lang3.StringUtils:5610","type":"CtMethodImpl","sourcecode":"public static java.lang.String upperCase(final java.lang.String str, final java.util.Locale locale) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            return str.toUpperCase(locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:465","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[259,259],"tindex":"4e1060cc-2ec5-11e6-bf8b-4f52f1559003","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:815","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:605","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[260,261],"tindex":"4e1087dd-2ec5-11e6-bf8b-df9a98665bd9","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1547","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final char[] chars, final int offset, final int length) {\n    if (offset > 0) {\n        {\n            validateIndex(index);\n            if (chars == null) {\n                return insert(index, java.lang.String);\n            } \n            if ((offset < 0) || (offset > (chars.int))) {\n                throw new java.lang.StringIndexOutOfBoundsException((\"Invalid offset: \" + offset));\n            } \n            if ((length < 0) || ((offset + length) > (chars.int))) {\n                throw new java.lang.StringIndexOutOfBoundsException((\"Invalid length: \" + length));\n            } \n            if (length > 0) {\n                ensureCapacity(((int) + length));\n                java.lang.System.arraycopy(char[], index, char[], (index + length), ((int) - index));\n                java.lang.System.arraycopy(chars, offset, char[], index, length);\n                int += length;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"offset"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:395","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.builder.ToStringStyle.this.fieldSeparatorAtEnd) == false"},"failures":[],"tindex":"4e1087de-2ec5-11e6-bf8b-41bbdaa23003","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setFieldSeparatorAtEnd(final boolean fieldSeparatorAtEnd) {\n    if (fieldSeparatorAtEnd == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setFieldSeparatorAtEnd(fieldSeparatorAtEnd);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldSeparatorAtEnd":"fieldSeparatorAtEnd"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1349","type":"CtBinaryOperatorImpl","sourcecode":"loopIndex > 0"},"failures":[262],"tindex":"4e1087df-2ec5-11e6-bf8b-b126b24fc216","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1348","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final char separator, final int loopIndex) {\n    if (loopIndex > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (loopIndex > 0) {\n                append(separator);\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"loopIndex":"loopIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:801","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[263,264,265],"tindex":"4e10aef0-2ec5-11e6-bf8b-af64101a770e","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:847","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final byte[] lhs, final byte[] rhs) {\n    if ((lhs == null) || (rhs == null)) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:371","type":"CtBinaryOperatorImpl","sourcecode":"method == null"},"failures":[266,267],"tindex":"4e10aef1-2ec5-11e6-bf8b-49e551e7762a","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:512","type":"CtMethodImpl","sourcecode":"public static java.util.Set<java.lang.reflect.Method> getOverrideHierarchy(final java.lang.reflect.Method method, org.apache.commons.lang3.ClassUtils.Interfaces interfacesBehavior) {\n    if (method == null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(method);\n            final java.util.Set<java.lang.reflect.Method> java.util.Set<java.lang.reflect.Method> = new java.util.LinkedHashSet<java.lang.reflect.Method>();\n            result.add(method);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = method.getParameterTypes();\n            final java.lang.Class<?> java.lang.Class<?> = method.getDeclaringClass();\n            final java.util.Iterator<java.lang.Class<?>> java.util.Iterator<java.lang.Class<?>> = org.apache.commons.lang3.ClassUtils.hierarchy(declaringClass, interfacesBehavior).iterator();\n            hierarchy.next();\n            hierarchyTraversal : while (hierarchy.hasNext()) {\n                final java.lang.Class<?> java.lang.Class<?> = hierarchy.next();\n                final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(c, method.getName(), parameterTypes);\n                if (m == null) {\n                    continue;\n                } \n                if (java.util.Arrays.equals(m.getParameterTypes(), parameterTypes)) {\n                    result.add(m);\n                    continue;\n                } \n                final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(declaringClass, m.getDeclaringClass());\n                for (int int = 0 ; i < (parameterTypes.int) ; i++) {\n                    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, method.getGenericParameterTypes()[i]);\n                    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, m.getGenericParameterTypes()[i]);\n                    if (!(org.apache.commons.lang3.reflect.TypeUtils.equals(childType, parentType))) {\n                        continue hierarchyTraversal;\n                    } \n                }\n                result.add(m);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"method"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.SystemUtils:1429","type":"CtBinaryOperatorImpl","sourcecode":"version == null"},"failures":[268],"tindex":"4e10d602-2ec5-11e6-bf8b-0139e086c75b","method":{"position":"org.apache.commons.lang3.SystemUtils:1428","type":"CtMethodImpl","sourcecode":"static boolean isJavaVersionMatch(final java.lang.String version, final java.lang.String versionPrefix) {\n    if (version == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (version == null) {\n                return false;\n            } \n            return version.startsWith(versionPrefix);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"version"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:255","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[231,269,270,271,272,273,274,274,275,276],"tindex":"4e10d603-2ec5-11e6-bf8b-f7f29126b75e","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:647","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final long value) {\n    if (fieldName == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:73","type":"CtBinaryOperatorImpl","sourcecode":"timeZone == null"},"failures":[],"tindex":"4e10fd14-2ec5-11e6-bf8b-fb35f43f497d","method":{"position":"org.apache.commons.lang3.time.FormatCache:142","type":"CtMethodImpl","sourcecode":"F getDateTimeInstance(final int dateStyle, final int timeStyle, final java.util.TimeZone timeZone, java.util.Locale locale) {\n    if (timeZone == null) {\n        {\n            if (locale == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return getDateTimeInstance(java.lang.Integer.valueOf(dateStyle), java.lang.Integer.valueOf(timeStyle), timeZone, locale);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeZone":"timeZone"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:265","type":"CtBinaryOperatorImpl","sourcecode":"count == 0"},"failures":[],"tindex":"4e10fd15-2ec5-11e6-bf8b-0f78f2e3f991","method":{"position":"org.apache.commons.lang3.RandomStringUtils:309","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count, final java.lang.String chars) {\n    if (count == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (chars == null) {\n                return org.apache.commons.lang3.RandomStringUtils.random(count, 0, 0, false, false, null, org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.java.util.Random);\n            } \n            return org.apache.commons.lang3.RandomStringUtils.random(count, chars.toCharArray());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:168","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endInclusive"},"failures":[],"tindex":"4e10fd16-2ec5-11e6-bf8b-bbcadfa4e36c","method":{"position":"org.apache.commons.lang3.RandomUtils:163","type":"CtMethodImpl","sourcecode":"public static float nextFloat(float startInclusive, float endInclusive) {\n    if (startInclusive == startInclusive) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((endInclusive >= startInclusive), \"Start value must be smaller or equal to end value.\");\n            org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\");\n            if (startInclusive == endInclusive) {\n                return startInclusive;\n            } \n            return startInclusive + ((endInclusive - startInclusive) * (org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextFloat()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"startInclusive","endInclusive":"startInclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:518","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297],"tindex":"4e10fd17-2ec5-11e6-bf8b-1f6f770706e9","method":{"position":"org.apache.commons.lang3.time.DateUtils:700","type":"CtMethodImpl","sourcecode":"public static java.util.Date round(final java.util.Date date, final int field) {\n    if (date == null) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            gval.setTime(date);\n            org.apache.commons.lang3.time.DateUtils.modify(gval, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return gval.getTime();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5262","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[298],"tindex":"4e112428-2ec5-11e6-bf8b-8d1cb2d864a6","method":{"position":"org.apache.commons.lang3.StringUtils:469","type":"CtMethodImpl","sourcecode":"public static java.lang.String trimToEmpty(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return str == null ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String : str.trim();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:294","type":"CtBinaryOperatorImpl","sourcecode":"falseValue == null"},"failures":[],"tindex":"4e112429-2ec5-11e6-bf8b-d7b1512837dc","method":{"position":"org.apache.commons.lang3.BooleanUtils:485","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer toIntegerObject(final boolean bool, final java.lang.Integer trueValue, final java.lang.Integer falseValue) {\n    if (trueValue == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bool ? trueValue : falseValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseValue":"trueValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2228","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[299,300],"tindex":"4e11242a-2ec5-11e6-bf8b-19359c0c0c29","method":{"position":"org.apache.commons.lang3.ArrayUtils:2252","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final short[] array, final short valueToFind) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7389","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(string)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchStrings))"},"failures":[301],"tindex":"4e11242b-2ec5-11e6-bf8b-45c659be9924","method":{"position":"org.apache.commons.lang3.StringUtils:7388","type":"CtMethodImpl","sourcecode":"public static boolean endsWithAny(final java.lang.CharSequence string, final java.lang.CharSequence... searchStrings) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(string)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchStrings))) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(string)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchStrings))) {\n                return false;\n            } \n            for (final java.lang.CharSequence java.lang.CharSequence : searchStrings) {\n                if (org.apache.commons.lang3.StringUtils.endsWith(string, searchString)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"string":"string","searchStrings":"searchStrings"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2562","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[302,303,304,305],"tindex":"4e114b3c-2ec5-11e6-bf8b-09e125c99fc6","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2424","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final char ch, int startIndex) {\n    if (startIndex < 0) {\n        {\n            startIndex = startIndex >= (int) ? (int) - 1 : startIndex;\n            if (startIndex < 0) {\n                return -1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if ((char[][i]) == ch) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}