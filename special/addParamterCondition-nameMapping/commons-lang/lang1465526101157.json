{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":125,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":344,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":339,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayDouble":375,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":69,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":70,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":126,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":102,"org.apache.commons.lang3.ValidateTest.testIsTrue4":211,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":188,"org.apache.commons.lang3.ValidateTest.testIsTrue3":210,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":215,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":12,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgBlankStringWithWhitespacesShouldThrow":367,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":7,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":320,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":221,"org.apache.commons.lang3.ArrayUtilsTest.testSameType":86,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":165,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":133,"org.apache.commons.lang3.text.StrBuilderTest.testGetSetNewLineText":159,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":60,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":123,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringNull":391,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":108,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_withoutCause":265,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetContextValues":245,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":3,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":332,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":4,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":103,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgEmptyStringShouldThrow":356,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":336,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":107,"org.apache.commons.lang3.StringUtilsTest.testChomp":212,"org.apache.commons.lang3.mutable.MutableShortTest.testGetSet":68,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":303,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":149,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArray":230,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":237,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":338,"org.apache.commons.lang3.ValidateTest.testNotBlankNotBlankStringShouldNotThrow":362,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBooleanInt":175,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":321,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_withCause":256,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":314,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":258,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":196,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer":73,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder":113,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableCount_Throwable":263,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":59,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":13,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphaLower_char":226,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":180,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":311,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":14,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":200,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":97,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":377,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":64,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":238,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyByteObject":386,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_recursiveCause":266,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayChar":279,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithNullText":111,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgBlankStringShouldThrow":357,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphanumeric_char":224,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":184,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentEnd":74,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":197,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":310,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":295,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":325,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":345,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_jdkNoCause":269,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":281,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":298,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":384,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":75,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":56,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":195,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanMultiArray":231,"org.apache.commons.lang3.ValidateTest.testNotBlankBlankStringWithWhitespacesShouldThrow":369,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":38,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":141,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":129,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":261,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":170,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthLong":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":169,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_charArray":370,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":294,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":206,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":309,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":376,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":308,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":23,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNull":106,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":297,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":76,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":207,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringStringInt":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":331,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":372,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":198,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":214,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":287,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":389,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNotBlankStringWithWhitespacesShouldNotThrow":361,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":6,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":132,"org.apache.commons.lang3.ValidateTest.testMatchesPattern_withMessage":37,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArrayAsObject":232,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":158,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable":36,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":55,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":118,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_nested":255,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":85,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":334,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":173,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":249,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":291,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":104,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":131,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_char_char":179,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":192,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":373,"org.apache.commons.lang3.builder.DiffTest.testToString":119,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":378,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":96,"org.apache.commons.lang3.ValidateTest.testNotBlankNullStringShouldThrow":355,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_withoutCause":260,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":162,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":240,"org.apache.commons.lang3.ConversionTest.testIntToByteArray":95,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":190,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":205,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":138,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_NullNull":388,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":327,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":11,"org.apache.commons.lang3.ValidateTest.testNotBlankEmptyStringShouldThrow":364,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":127,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":52,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotFalse_Boolean":94,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":276,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":340,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":61,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCause_Throwable":271,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateInteger":44,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":219,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":312,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":347,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":302,"org.apache.commons.lang3.text.StrBuilderTest.testEquals":71,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":78,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":29,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":109,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":148,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":282,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":248,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":286,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayLong":35,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":209,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":349,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":19,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":352,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":81,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":343,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":342,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":54,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":58,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_StringInt":91,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":284,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":142,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":163,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":203,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":222,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":1,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiDoubleArray":382,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":280,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":49,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":315,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":34,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthFloat":273,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":50,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":146,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":201,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_String":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":346,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String":112,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":316,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":326,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":63,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleWithStartIndexTolerance":99,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":189,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":252,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":259,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":80,"org.apache.commons.lang3.ValidateTest.testInclusiveBetween_withMessage":217,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":236,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":101,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":186,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":220,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":247,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":194,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_ThrowableArray":264,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray":353,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":285,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":351,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":208,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNotBlankStringShouldNotThrow":363,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":379,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":278,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthByte":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":318,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":32,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":292,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":130,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendNewLine":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":350,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":341,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringsBetween_StringStringString":83,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":199,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":293,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":329,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":300,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":120,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEquals":235,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":283,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":262,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBoolean":229,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":187,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_jdkNoCause":254,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":136,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":0,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":110,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":183,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissing":216,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDouble":161,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":191,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":77,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyByteObjectEmptyArray":385,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":79,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":128,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":139,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNotBlankStringWithNewlinesShouldNotThrow":366,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":82,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":193,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":202,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":277,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":305,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":328,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":319,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":157,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEqualsOnStrings":234,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":22,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testSetContextValue":243,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":371,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":275,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":2,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":387,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":306,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":144,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringAppendable":213,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_Throwable":257,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":335,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":172,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":27,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterizeWithOwner":147,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_NullString":390,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testAddContextValue":241,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":330,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":313,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":374,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":124,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":30,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":137,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":337,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":296,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":16,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArray":383,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArray":154,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":135,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":177,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":267,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_String":90,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":140,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":42,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":167,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":26,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":89,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG971":39,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringArray":92,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArray":218,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG972":40,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":134,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":317,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":145,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":5,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":223,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetFirstContextValue":244,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":288,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":181,"org.apache.commons.lang3.ValidateTest.testNotBlankBlankStringWithNewlinesShouldThrow":360,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":233,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArrayHiddenByObject":155,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendPadding":117,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":98,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_recursiveCause":268,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":242,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":307,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_StrMatcher":176,"org.apache.commons.lang3.ValidateTest.testNotBlankNotBlankStringWithWhitespacesShouldNotThrow":368,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDouble":380,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":18,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNullStringShouldThrow":365,"org.apache.commons.lang3.builder.DiffTest.testGetType":121,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_String":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":333,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":322,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":65,"org.apache.commons.lang3.time.DateUtilsTest.testRound":46,"org.apache.commons.lang3.StringUtilsTest.testJoin_IteratorChar":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":323,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":324,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":299,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":274,"org.apache.commons.lang3.ConversionTest.testByteArrayToInt":84,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":239,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":185,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":290,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":250,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArrayHiddenByObject":381,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":251,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":246,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":228,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_char_char":272,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":289,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":21,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":47,"org.apache.commons.lang3.ValidateTest.testNotBlankNotBlankStringWithNewlinesShouldNotThrow":354,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":164,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_byte_byte":88,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlpha_char":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":348,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":304,"org.apache.commons.lang3.StringUtilsTest.testJoin_IterableChar":115,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":57,"org.apache.commons.lang3.ValidateTest.testNotBlankReturnValues2":359,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_nested":253,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_withCause":270,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":25,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":204,"org.apache.commons.lang3.ValidateTest.testNotBlankReturnValues1":358,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":301,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":48,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":43},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MemberUtils:170","type":"CtUnaryOperatorImpl","sourcecode":"!(cls.isPrimitive())"},"failures":[],"tindex":"ee356939-2eb3-11e6-83a5-818a9e19dd16","method":{"position":"org.apache.commons.lang3.ClassUtils:1071","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPackageCanonicalName(final java.lang.Class<?> cls) {\n    if (!(cls.isPrimitive())) {\n        {\n            if (cls == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(cls.getName());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"ch < 256"},"failures":[0],"tindex":"ee362c8a-2eb3-11e6-83a5-619086ac7825","method":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:77","type":"CtMethodImpl","sourcecode":"private boolean isZeroToThree(char ch) {\n    if (ch < 256) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch >= '0') && (ch <= '3');\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2180","type":"CtBinaryOperatorImpl","sourcecode":"length <= 0"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"ee36539b-2eb3-11e6-83a5-29d8f4178b64","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:734","type":"CtMethodImpl","sourcecode":"protected boolean substitute(final org.apache.commons.lang3.text.StrBuilder buf, final int offset, final int length) {\n    if (offset <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (substitute(buf, offset, length, null)) > 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"offset"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1038","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[35],"tindex":"ee367aac-2eb3-11e6-83a5-f9dd52716cf0","method":{"position":"org.apache.commons.lang3.ArrayUtils:914","type":"CtMethodImpl","sourcecode":"public static long[] subarray(final long[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.long[];\n            } \n            final long[] long[] = new long[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"startIndexInclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:353","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[36],"tindex":"ee367aad-2eb3-11e6-83a5-a1ada16c4a3a","method":{"position":"org.apache.commons.lang3.ClassUtils:593","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(final java.lang.Class<?> cls, final java.lang.Class<?> toClass) {\n    if (cls == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.isAssignable(cls, toClass, org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[37],"tindex":"ee36a1be-2eb3-11e6-83a5-1d2c2dbee8c3","method":{"position":"org.apache.commons.lang3.Validate:872","type":"CtMethodImpl","sourcecode":"public static void matchesPattern(final java.lang.CharSequence input, final java.lang.String pattern, final java.lang.String message, final java.lang.Object... values) {\n    if (message != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.regex.Pattern.matches(pattern, input)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"message"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:690","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[38,39,40,41,42,43,44],"tindex":"ee36c8cf-2eb3-11e6-83a5-b11412aeab19","method":{"position":"org.apache.commons.lang3.math.NumberUtils:689","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer createInteger(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            return java.lang.Integer.decode(str);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:701","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"ee36c8d0-2eb3-11e6-83a5-f5edaba3a9cf","method":{"position":"org.apache.commons.lang3.time.DateUtils:700","type":"CtMethodImpl","sourcecode":"public static java.util.Date round(final java.util.Date date, final int field) {\n    if (date == null) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            gval.setTime(date);\n            org.apache.commons.lang3.time.DateUtils.modify(gval, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return gval.getTime();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3910","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[66],"tindex":"ee36eee1-2eb3-11e6-83a5-c7f59f2fc8a7","method":{"position":"org.apache.commons.lang3.ArrayUtils:1245","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final long[] array1, final long[] array2) {\n    if (array1 == null) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:195","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[67],"tindex":"ee3715f2-2eb3-11e6-83a5-4719735e58e8","method":{"position":"org.apache.commons.lang3.StringUtils:3013","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitPreserveAllTokens(final java.lang.String str, final java.lang.String separatorChars) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChars, (-1), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:290","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[68],"tindex":"ee3715f3-2eb3-11e6-83a5-1bc69374a268","method":{"position":"org.apache.commons.lang3.mutable.MutableShort:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    org.apache.commons.lang3.mutable.MutableShort.this.short = value.shortValue();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:76","type":"CtBinaryOperatorImpl","sourcecode":"locale == null"},"failures":[69,70],"tindex":"ee373d04-2eb3-11e6-83a5-d31665fec0ed","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:153","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatUTC(final long millis, final java.lang.String pattern, final java.util.Locale locale) {\n    if (locale == null) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.java.util.TimeZone, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.mutable.MutableLong:236","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.mutable.MutableLong"},"failures":[71],"tindex":"ee373d05-2eb3-11e6-83a5-c75257f29dd0","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2702","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.lang3.mutable.MutableLong) {\n        {\n            if (obj instanceof org.apache.commons.lang3.text.StrBuilder) {\n                return equals(((org.apache.commons.lang3.text.StrBuilder)(obj)));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrMatcher:190","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(chars)"},"failures":[72],"tindex":"ee376416-2eb3-11e6-83a5-cb9146269d36","method":{"position":"org.apache.commons.lang3.text.StrMatcher:189","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrMatcher charSetMatcher(final java.lang.String chars) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(chars)) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(chars)) {\n                return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher;\n            } \n            if ((chars.length()) == 1) {\n                return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(chars.charAt(0));\n            } \n            return new org.apache.commons.lang3.text.StrMatcher.CharSetMatcher(chars.toCharArray());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"chars"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:357","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[73],"tindex":"ee378b27-2eb3-11e6-83a5-119d58dbc222","method":{"position":"org.apache.commons.lang3.BooleanUtils:238","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean toBooleanObject(final java.lang.Integer value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                return null;\n            } \n            return (value.intValue()) == 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"ee378b28-2eb3-11e6-83a5-af66afc92a28","method":{"position":"org.apache.commons.lang3.mutable.MutableShort:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    org.apache.commons.lang3.mutable.MutableShort.this.short = value.shortValue();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1844","type":"CtBinaryOperatorImpl","sourcecode":"contentEnd == null"},"failures":[74],"tindex":"ee378b29-2eb3-11e6-83a5-1be2d260faff","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1843","type":"CtMethodImpl","sourcecode":"protected void setContentEnd(java.lang.String contentEnd) {\n    if (contentEnd == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (contentEnd == null) {\n                contentEnd = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = contentEnd;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"contentEnd":"contentEnd"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2381","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"ee37b23a-2eb3-11e6-83a5-fdb3501ca4e0","method":{"position":"org.apache.commons.lang3.StringUtils:3808","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final char[] array, final char separator, final int startIndex, final int endIndex) {\n    if (endIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"endIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1049","type":"CtInvocationImpl","sourcecode":"superClass.isInterface()"},"failures":[75,76,77,78,79,80,81],"tindex":"ee37b23b-2eb3-11e6-83a5-95a22c87ab86","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1047","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Type getClosestParentType(final java.lang.Class<?> cls, final java.lang.Class<?> superClass) {\n    if (superClass.isInterface()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (superClass.isInterface()) {\n                final java.lang.reflect.Type[] java.lang.reflect.Type[] = cls.getGenericInterfaces();\n                java.lang.reflect.Type java.lang.reflect.Type = null;\n                for (final java.lang.reflect.Type java.lang.reflect.Type : interfaceTypes) {\n                    java.lang.Class<?> java.lang.Class<?> = null;\n                    if (midType instanceof java.lang.reflect.ParameterizedType) {\n                        midClass = org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(midType)));\n                    } else if (midType instanceof java.lang.Class<?>) {\n                        midClass = ((java.lang.Class<?>)(midType));\n                    } else {\n                        throw new java.lang.IllegalStateException(((\"Unexpected generic\" + \" interface type found: \") + midType));\n                    }\n                    if ((org.apache.commons.lang3.reflect.TypeUtils.isAssignable(midClass, superClass)) && (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(genericInterface, ((java.lang.reflect.Type)(midClass))))) {\n                        genericInterface = midType;\n                    } \n                }\n                if (genericInterface != null) {\n                    return genericInterface;\n                } \n            } \n            return cls.getGenericSuperclass();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superClass":"superClass"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.lang3.math.Fraction:593","type":"CtBinaryOperatorImpl","sourcecode":"v > 0"},"failures":[82],"tindex":"ee37d94c-2eb3-11e6-83a5-efbb67442c4f","method":{"position":"org.apache.commons.lang3.ObjectUtils:787","type":"CtMethodImpl","sourcecode":"public static byte CONST_BYTE(final int v) throws java.lang.IllegalArgumentException {\n    if (v > 0) {\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            if ((v < (java.lang.Byte.java.lang.Byte.byte)) || (v > (java.lang.Byte.java.lang.Byte.byte))) {\n                throw new java.lang.IllegalArgumentException(((\"Supplied value must be a valid byte literal between -128 and 127: [\" + v) + \"]\"));\n            } \n            return ((byte)(v));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"v":"v"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[83],"tindex":"ee37d94d-2eb3-11e6-83a5-a3d46bc30a24","method":{"position":"org.apache.commons.lang3.StringUtils:2516","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] substringsBetween(final java.lang.String str, final java.lang.String open, final java.lang.String close) {\n    if (open == null) {\n        {\n            if (((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(open))) || (org.apache.commons.lang3.StringUtils.isEmpty(close))) {\n                return null;\n            } \n            final int int = str.length();\n            if (strLen == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            final int int = close.length();\n            final int int = open.length();\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = 0;\n            while (pos < (strLen - closeLen)) {\n                int int = str.indexOf(open, pos);\n                if (start < 0) {\n                    break;\n                } \n                start += openLen;\n                final int int = str.indexOf(close, start);\n                if (end < 0) {\n                    break;\n                } \n                list.add(str.substring(start, end));\n                pos = end + closeLen;\n            }\n            if (list.isEmpty()) {\n                return null;\n            } \n            return list.toArray(new java.lang.String[list.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"open"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"ee38005e-2eb3-11e6-83a5-4ff028bc73c8","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1511","type":"CtMethodImpl","sourcecode":"protected void appendFieldSeparator(final java.lang.StringBuffer buffer) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1324","type":"CtBinaryOperatorImpl","sourcecode":"0 == nBytes"},"failures":[84],"tindex":"ee38005f-2eb3-11e6-83a5-21a038db67c8","method":{"position":"org.apache.commons.lang3.Conversion:833","type":"CtMethodImpl","sourcecode":"public static int byteArrayToInt(final byte[] src, final int srcPos, final int dstInit, final int dstPos, final int nBytes) {\n    if (0 == dstPos) {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBytes)) {\n                return dstInit;\n            } \n            if ((((nBytes - 1) * 8) + dstPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 32\");\n            } \n            int int = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + dstPos;\n                final int int = (255 & (src[(i + srcPos)])) << shift;\n                final int int = 255 << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"dstPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:339","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[85],"tindex":"ee380060-2eb3-11e6-83a5-ffb998e4f2c2","method":{"position":"org.apache.commons.lang3.ArrayUtils:3610","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final long[] array) {\n    if (array == null) {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:297","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"ee382771-2eb3-11e6-83a5-296742c875a6","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:834","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final long[] array, final boolean fullDetail) {\n    if (fieldName == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3850","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[86],"tindex":"ee382772-2eb3-11e6-83a5-ad530cb7e77a","method":{"position":"org.apache.commons.lang3.ArrayUtils:1417","type":"CtMethodImpl","sourcecode":"public static boolean isSameType(final java.lang.Object array1, final java.lang.Object array2) {\n    if (array2 == null) {\n        {\n            if ((array1 == null) || (array2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            return array1.getClass().getName().equals(array2.getClass().getName());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:227","type":"CtInvocationImpl","sourcecode":"type.isArray()"},"failures":[],"tindex":"ee382773-2eb3-11e6-83a5-81d547982167","method":{"position":"org.apache.commons.lang3.ClassUtils:1149","type":"CtMethodImpl","sourcecode":"public static java.lang.Iterable<java.lang.Class<?>> hierarchy(final java.lang.Class<?> type) {\n    if (type.isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.hierarchy(type, org.apache.commons.lang3.ClassUtils.Interfaces.org.apache.commons.lang3.ClassUtils.Interfaces.org.apache.commons.lang3.ClassUtils.Interfaces);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3823","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[87],"tindex":"ee384e84-2eb3-11e6-83a5-579b550a0d58","method":{"position":"org.apache.commons.lang3.ArrayUtils:1317","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final byte[] array1, final byte[] array2) {\n    if (array1 == null) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3230","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[88],"tindex":"ee384e85-2eb3-11e6-83a5-b37a41b1f667","method":{"position":"org.apache.commons.lang3.ArrayUtils:3251","type":"CtMethodImpl","sourcecode":"public static byte[] toPrimitive(final java.lang.Byte[] array, final byte valueForNull) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.byte[];\n            } \n            final byte[] byte[] = new byte[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Byte java.lang.Byte = array[i];\n                result[i] = b == null ? valueForNull : b.byteValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5262","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[89],"tindex":"ee384e86-2eb3-11e6-83a5-fd20328eba6e","method":{"position":"org.apache.commons.lang3.StringUtils:5549","type":"CtMethodImpl","sourcecode":"public static java.lang.String center(java.lang.String str, final int size, java.lang.String padStr) {\n    if (str == null) {\n        {\n            if ((str == null) || (size <= 0)) {\n                return str;\n            } \n            if (org.apache.commons.lang3.StringUtils.isEmpty(padStr)) {\n                padStr = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.length();\n            final int int = size - strLen;\n            if (pads <= 0) {\n                return str;\n            } \n            str = org.apache.commons.lang3.StringUtils.leftPad(str, (strLen + (pads / 2)), padStr);\n            str = org.apache.commons.lang3.StringUtils.rightPad(str, size, padStr);\n            return str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1810","type":"CtBinaryOperatorImpl","sourcecode":"(cs.length()) == 0"},"failures":[90,91,92,93],"tindex":"ee387597-2eb3-11e6-83a5-eb77f2a5b1be","method":{"position":"org.apache.commons.lang3.CharSequenceUtils:94","type":"CtMethodImpl","sourcecode":"static int indexOf(final java.lang.CharSequence cs, final java.lang.CharSequence searchChar, final int start) {\n    if ((cs.length()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return cs.toString().indexOf(searchChar.toString(), start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:427","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[94],"tindex":"ee387598-2eb3-11e6-83a5-fdcc7413c38f","method":{"position":"org.apache.commons.lang3.BooleanUtils:140","type":"CtMethodImpl","sourcecode":"public static boolean isNotFalse(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            return !(org.apache.commons.lang3.BooleanUtils.isFalse(bool));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:874","type":"CtBinaryOperatorImpl","sourcecode":"(((nBytes - 1) * 8) + dstPos) >= 16"},"failures":[95],"tindex":"ee387599-2eb3-11e6-83a5-ef7837a6fb7b","method":{"position":"org.apache.commons.lang3.Conversion:1323","type":"CtMethodImpl","sourcecode":"public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n    if ((((src - 1) * 8) + src) >= 16) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBytes) {\n                return dst;\n            } \n            if ((((nBytes - 1) * 8) + srcPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + srcPos;\n                dst[(dstPos + i)] = ((byte)(255 & (src >> shift)));\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"src","nBytes":"src"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtBinaryOperatorImpl","sourcecode":"index != 0"},"failures":[96],"tindex":"ee389caa-2eb3-11e6-83a5-55294273e27a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1647","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final float value) {\n    if (index != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return insert(index, java.lang.String.valueOf(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:109","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[97,98],"tindex":"ee389cab-2eb3-11e6-83a5-7bdc9c16abb0","method":{"position":"org.apache.commons.lang3.text.WordUtils:284","type":"CtMethodImpl","sourcecode":"public static java.lang.String capitalize(final java.lang.String str, final char... delimiters) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = delimiters == null ? -1 : delimiters.int;\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (delimLen == 0)) {\n                return str;\n            } \n            final char[] char[] = str.toCharArray();\n            boolean boolean = true;\n            for (int int = 0 ; i < (buffer.int) ; i++) {\n                final char char = buffer[i];\n                if (org.apache.commons.lang3.text.WordUtils.isDelimiter(ch, delimiters)) {\n                    capitalizeNext = true;\n                } else if (capitalizeNext) {\n                    buffer[i] = java.lang.Character.toTitleCase(ch);\n                    capitalizeNext = false;\n                } \n            }\n            return new java.lang.String(buffer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1630","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isHighSurrogate(ch)"},"failures":[],"tindex":"ee389cac-2eb3-11e6-83a5-9fddb5facb94","method":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:68","type":"CtMethodImpl","sourcecode":"private boolean isOctalDigit(char ch) {\n    if (java.lang.Character.isLowerCase(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (java.lang.Character.isHighSurrogate(ch)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (ch >= '0') && (ch <= '7');\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2769","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[99],"tindex":"ee38c3bd-2eb3-11e6-83a5-c5847f30f476","method":{"position":"org.apache.commons.lang3.ArrayUtils:2686","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final double[] array, final double valueToFind, int startIndex, final double tolerance) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            final double double = valueToFind - tolerance;\n            final double double = valueToFind + tolerance;\n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (((array[i]) >= min) && ((array[i]) <= max)) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:225","type":"CtBinaryOperatorImpl","sourcecode":"count == 0"},"failures":[100,101,102,103,104,105,106,107,108,109,110],"tindex":"ee38c3be-2eb3-11e6-83a5-ab8c1147830c","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:635","type":"CtMethodImpl","sourcecode":"protected java.util.List<java.lang.String> tokenize(final char[] srcChars, final int offset, final int count) {\n    if (count == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((srcChars == null) || (count == 0)) {\n                return java.util.Collections.emptyList();\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder();\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = offset;\n            while ((pos >= 0) && (pos < count)) {\n                pos = readNextToken(srcChars, pos, count, buf, tokenList);\n                if (pos >= count) {\n                    addToken(tokenList, \"\");\n                } \n            }\n            return tokenList;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1499","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[111,112,113],"tindex":"ee38c3bf-2eb3-11e6-83a5-690fe1d701e6","method":{"position":"org.apache.commons.lang3.text.StrBuilder:509","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final java.lang.String str) {\n    if (str != null) {\n        {\n            if (str == null) {\n                return appendNull();\n            } \n            final int int = str.length();\n            if (strLen > 0) {\n                final int int = length();\n                ensureCapacity((len + strLen));\n                str.getChars(0, strLen, char[], len);\n                int += strLen;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2591","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[114],"tindex":"ee38ead0-2eb3-11e6-83a5-057435a3c5e4","method":{"position":"org.apache.commons.lang3.ArrayUtils:5889","type":"CtMethodImpl","sourcecode":"public static double[] removeElements(final double[] array, final double... values) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(values)) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final double double : values) {\n                final java.lang.Double java.lang.Double = java.lang.Double.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Double java.lang.Double = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.doubleValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((double[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"values"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4084","type":"CtUnaryOperatorImpl","sourcecode":"!(iterator.hasNext())"},"failures":[115,116],"tindex":"ee3911e1-2eb3-11e6-83a5-631d504b3dfc","method":{"position":"org.apache.commons.lang3.StringUtils:4032","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.util.Iterator<?> iterator, final char separator) {\n    if (!(iterator.hasNext())) {\n        {\n            if (iterator == null) {\n                return null;\n            } \n            if (!(iterator.hasNext())) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.Object java.lang.Object = iterator.next();\n            if (!(iterator.hasNext())) {\n                @java.lang.SuppressWarnings(value = \"deprecation\")\n                java.lang.String java.lang.String = org.apache.commons.lang3.ObjectUtils.toString(first);\n                return result;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(256);\n            if (first != null) {\n                buf.append(first);\n            } \n            while (iterator.hasNext()) {\n                buf.append(separator);\n                final java.lang.Object java.lang.Object = iterator.next();\n                if (obj != null) {\n                    buf.append(obj);\n                } \n            }\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1558","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[117],"tindex":"ee3911e2-2eb3-11e6-83a5-5bbe04856aba","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1363","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendPadding(final int length, final char padChar) {\n    if (length > 0) {\n        {\n            if (length >= 0) {\n                ensureCapacity(((int) + length));\n                for (int int = 0 ; i < length ; i++) {\n                    char[][((int)++)] = padChar;\n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:568","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.ParameterizedType"},"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,75,76,147,77,78,79,80,148,149,150,151,81,152],"tindex":"ee3911e3-2eb3-11e6-83a5-73269210d848","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:357","type":"CtMethodImpl","sourcecode":"private static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.Class<?> toClass) {\n    if (type instanceof java.lang.reflect.ParameterizedType) {\n        {\n            if (type == null) {\n                return (toClass == null) || (!(toClass.isPrimitive()));\n            } \n            if (toClass == null) {\n                return false;\n            } \n            if (toClass.equals(type)) {\n                return true;\n            } \n            if (type instanceof java.lang.Class<?>) {\n                return org.apache.commons.lang3.ClassUtils.isAssignable(((java.lang.Class<?>)(type)), toClass);\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(type))), toClass);\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : ((java.lang.reflect.TypeVariable<?>)(type)).getBounds()) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toClass)) {\n                        return true;\n                    } \n                }\n                return false;\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return (toClass.equals(java.lang.Object.java.lang.Object.java.lang.Class)) || ((toClass.isArray()) && (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType(), toClass.getComponentType())));\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                return false;\n            } \n            throw new java.lang.IllegalStateException((\"found an unhandled type: \" + type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:978","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[153,154,155],"tindex":"ee3938f4-2eb3-11e6-83a5-39a9524fd1ff","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:967","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final boolean[] lhs, final boolean[] rhs) {\n    if (lhs == null) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.ClassNotFoundException","condition":{"position":"org.apache.commons.lang3.ClassUtils:963","type":"CtInvocationImpl","sourcecode":"className.endsWith(\"[]\")"},"failures":[],"tindex":"ee396005-2eb3-11e6-83a5-574e4cbbb917","method":{"position":"org.apache.commons.lang3.ClassUtils:861","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getClass(final java.lang.ClassLoader classLoader, final java.lang.String className) throws java.lang.ClassNotFoundException {\n    if (className.endsWith(\"[]\")) {\n        throw new java.lang.ClassNotFoundException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.getClass(classLoader, className, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"className"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:724","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[156,157],"tindex":"ee396006-2eb3-11e6-83a5-c7e5d3062e18","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:62","type":"CtMethodImpl","sourcecode":"public static float min(final float[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } else if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n            } \n            float float = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                min = org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min);\n            }\n            return min;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffResult:92","type":"CtBinaryOperatorImpl","sourcecode":"style == null"},"failures":[158],"tindex":"ee396007-2eb3-11e6-83a5-0960a499cd5d","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:135","type":"CtMethodImpl","sourcecode":"public static void setDefaultStyle(final org.apache.commons.lang3.builder.ToStringStyle style) {\n    if (style == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (style == null) {\n                throw new java.lang.IllegalArgumentException(\"The style must not be null\");\n            } \n            org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringStyle = style;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"style":"style"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:435","type":"CtBinaryOperatorImpl","sourcecode":"(newLine) == null"},"failures":[159,160],"tindex":"ee398718-2eb3-11e6-83a5-35e422485fea","method":{"position":"org.apache.commons.lang3.text.StrBuilder:151","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder setNewLineText(final java.lang.String newLine) {\n    if (newLine == null) {\n        {\n            org.apache.commons.lang3.text.StrBuilder.this.java.lang.String = newLine;\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newLine":"newLine"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2274","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[161],"tindex":"ee398719-2eb3-11e6-83a5-b3786c3fb7d9","method":{"position":"org.apache.commons.lang3.ArrayUtils:2558","type":"CtMethodImpl","sourcecode":"public static int indexOf(final double[] array, final double valueToFind, int startIndex) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[162,163,164,165,166,167,168,168,169,170,171,172,173,173,174],"tindex":"ee39871a-2eb3-11e6-83a5-0f6707c24fd7","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:618","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.util.Map<?, ?> map) {\n    if (fieldName == null) {\n        {\n            buffer.append(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:634","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[175],"tindex":"ee39ae2b-2eb3-11e6-83a5-05c8ea3b0440","method":{"position":"org.apache.commons.lang3.StringUtils:2723","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByWholeSeparator(final java.lang.String str, final java.lang.String separator, final int max) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(str, separator, max, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"ee39ae2c-2eb3-11e6-83a5-275144ea360d","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:514","type":"CtMethodImpl","sourcecode":"private void getQuotedString(final java.lang.String pattern, final java.text.ParsePosition pos, final boolean escapingOn) {\n    if (pattern == null) {\n        {\n            appendQuotedString(pattern, pos, null, escapingOn);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":true,"status":0},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:391","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"ee39ae2d-2eb3-11e6-83a5-254584027c59","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:486","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Date parse(final java.lang.String source) throws java.text.ParseException {\n    if (source == null) {\n        throw new java.text.ParseException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateParser.parse(source);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2005","type":"CtBinaryOperatorImpl","sourcecode":"replaceCount > 0"},"failures":[176,177,178],"tindex":"ee39ae2e-2eb3-11e6-83a5-8f38cc0f1038","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1991","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.text.StrBuilder replaceImpl(final org.apache.commons.lang3.text.StrMatcher matcher, final java.lang.String replaceStr, final int from, int to, int replaceCount) {\n    if (replaceCount > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((matcher == null) || ((int) == 0)) {\n                return org.apache.commons.lang3.text.StrBuilder.this;\n            } \n            final int int = replaceStr == null ? 0 : replaceStr.length();\n            final char[] char[] = char[];\n            for (int int = from ; (i < to) && (replaceCount != 0) ; i++) {\n                final int int = matcher.isMatch(buf, i, from, to);\n                if (removeLen > 0) {\n                    replaceImpl(i, (i + removeLen), removeLen, replaceStr, replaceLen);\n                    to = (to - removeLen) + replaceLen;\n                    i = (i + replaceLen) - 1;\n                    if (replaceCount > 0) {\n                        replaceCount--;\n                    } \n                } \n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replaceCount":"replaceCount"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1870","type":"CtBinaryOperatorImpl","sourcecode":"search != replace"},"failures":[179],"tindex":"ee39d53f-2eb3-11e6-83a5-358913749842","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1869","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replaceFirst(final char search, final char replace) {\n    if (replace != search) {\n        {\n            if (search != replace) {\n                for (int int = 0 ; i < (int) ; i++) {\n                    if ((char[][i]) == search) {\n                        char[][i] = replace;\n                        break;\n                    } \n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"search":"replace","replace":"search"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4997","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"ee39d540-2eb3-11e6-83a5-57db30b7b421","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2981","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(final java.lang.String str, final int off, final int len) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.text.StrBuilder.this.append(str, off, len);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:770","type":"CtVariableReadImpl","sourcecode":"value"},"failures":[69,180,70,181,182,183,184,185,186,187,188,189,190,191,55,56,57,58,59,192,193,60,194,61,62,63,195,196,197,65,198,199,200,201,202,203,204,205,206,207,208,209,210,211],"tindex":"ee39d541-2eb3-11e6-83a5-f51f665eaf61","method":{"position":"org.apache.commons.lang3.Validate:104","type":"CtMethodImpl","sourcecode":"public static void isTrue(final boolean expression, final java.lang.String message, final long value) {\n    if (expression) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, java.lang.Long.valueOf(value)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"expression"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5637","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[212],"tindex":"ee39fc52-2eb3-11e6-83a5-c3a8af328a54","method":{"position":"org.apache.commons.lang3.StringUtils:4996","type":"CtMethodImpl","sourcecode":"public static java.lang.String chomp(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            if ((str.length()) == 1) {\n                final char char = str.charAt(0);\n                if ((ch == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) || (ch == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char))) {\n                    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n                } \n                return str;\n            } \n            int int = (str.length()) - 1;\n            final char char = str.charAt(lastIdx);\n            if (last == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) {\n                if ((str.charAt((lastIdx - 1))) == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) {\n                    lastIdx--;\n                } \n            } else if (last != (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) {\n                lastIdx++;\n            } \n            return str.substring(0, lastIdx);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[213],"tindex":"ee39fc53-2eb3-11e6-83a5-b3d0fc846ebb","method":{"position":"org.apache.commons.lang3.ObjectUtils:292","type":"CtMethodImpl","sourcecode":"public static void identityToString(final java.lang.Appendable appendable, final java.lang.Object object) throws java.io.IOException {\n    if (org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(object)) {\n        {\n            if (object == null) {\n                {\n                    if (object == null) {\n                        throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n                    } \n                    appendable.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.StringUtils:525","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"ee39fc54-2eb3-11e6-83a5-85cc60c7fd99","method":{"position":"org.apache.commons.lang3.time.DateUtils:332","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDateStrictly(final java.lang.String str, final java.util.Locale locale, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(str, null, parsePatterns, false);\n        }\n    } else {\n        throw new java.text.ParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:403","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[214,215],"tindex":"ee3a2365-2eb3-11e6-83a5-019a75bf4965","method":{"position":"org.apache.commons.lang3.ArrayUtils:3553","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2805","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[216],"tindex":"ee3a2366-2eb3-11e6-83a5-090a46ae3767","method":{"position":"org.apache.commons.lang3.StringUtils:7560","type":"CtMethodImpl","sourcecode":"public static java.lang.String prependIfMissing(final java.lang.String str, final java.lang.CharSequence prefix, final java.lang.CharSequence... prefixes) {\n    if (prefix == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.prependIfMissing(str, prefix, false, prefixes);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"prefix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1102","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[217],"tindex":"ee3a2367-2eb3-11e6-83a5-2f413561a044","method":{"position":"org.apache.commons.lang3.Validate:922","type":"CtMethodImpl","sourcecode":"public static <T>void inclusiveBetween(final T start, final T end, final java.lang.Comparable<T> value, final java.lang.String message, final java.lang.Object... values) {\n    if (message == null) {\n        {\n            if (message == null) {\n                {\n                    if (((value.compareTo(start)) < 0) || ((value.compareTo(end)) > 0)) {\n                        throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n                    } \n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"message"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:395","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.builder.ToStringStyle.this.fieldSeparatorAtEnd) == false"},"failures":[],"tindex":"ee3a2368-2eb3-11e6-83a5-a1eb6a902176","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1946","type":"CtMethodImpl","sourcecode":"protected void setFieldSeparatorAtEnd(final boolean fieldSeparatorAtEnd) {\n    if (fieldSeparatorAtEnd == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = fieldSeparatorAtEnd;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldSeparatorAtEnd":"fieldSeparatorAtEnd"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1534","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[218],"tindex":"ee3a4a79-2eb3-11e6-83a5-371c8547b210","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:723","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final float[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final float float : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:76","type":"CtBinaryOperatorImpl","sourcecode":"locale == null"},"failures":[219,220,221,222,223],"tindex":"ee3a4a7a-2eb3-11e6-83a5-e14723e1e6c7","method":{"position":"org.apache.commons.lang3.time.FormatCache:142","type":"CtMethodImpl","sourcecode":"F getDateTimeInstance(final int dateStyle, final int timeStyle, final java.util.TimeZone timeZone, java.util.Locale locale) {\n    if (locale == null) {\n        {\n            return getDateTimeInstance(java.lang.Integer.valueOf(dateStyle), java.lang.Integer.valueOf(timeStyle), timeZone, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:831","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof byte[]"},"failures":[],"tindex":"ee3a4a7b-2eb3-11e6-83a5-a5b0c5000f39","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:153","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeExactMethod(final java.lang.Object object, final java.lang.String methodName, java.lang.Object... args) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (object instanceof byte[]) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.toClass(args);\n            return org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(object, methodName, args, parameterTypes);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:461","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isUpperCase(ch)"},"failures":[224,225,226],"tindex":"ee3a718c-2eb3-11e6-83a5-b1c41ca5b5c8","method":{"position":"org.apache.commons.lang3.CharUtils:497","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiAlphaLower(final char ch) {\n    if (java.lang.Character.isUpperCase(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch >= 'a') && (ch <= 'z');\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeLiteral:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.lang3.reflect.TypeLiteral) == false"},"failures":[],"tindex":"ee3a718d-2eb3-11e6-83a5-15b8965285b2","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:528","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.lang3.reflect.TypeLiteral) == false) {\n        {\n            if ((obj instanceof org.apache.commons.lang3.time.FastDatePrinter) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.time.FastDatePrinter org.apache.commons.lang3.time.FastDatePrinter = ((org.apache.commons.lang3.time.FastDatePrinter)(obj));\n            return ((java.lang.String.equals(other.java.lang.String)) && (java.util.TimeZone.equals(other.java.util.TimeZone))) && (java.util.Locale.equals(other.java.util.Locale));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:934","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[],"tindex":"ee3a718e-2eb3-11e6-83a5-334e7a0342bf","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:195","type":"CtMethodImpl","sourcecode":"static void unregister(final java.lang.Object lhs, final java.lang.Object rhs) {\n    if (lhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> = org.apache.commons.lang3.builder.EqualsBuilder.getRegistry();\n            if (registry != null) {\n                final org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.EqualsBuilder.getRegisterPair(lhs, rhs);\n                registry.remove(pair);\n                synchronized(org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.java.lang.Class) {\n                    registry = org.apache.commons.lang3.builder.EqualsBuilder.getRegistry();\n                    if ((registry != null) && (registry.isEmpty())) {\n                        org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>>>.remove();\n                    } \n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:467","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(ch)"},"failures":[],"tindex":"ee3a989f-2eb3-11e6-83a5-ffc99c8b662a","method":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:68","type":"CtMethodImpl","sourcecode":"private boolean isOctalDigit(char ch) {\n    if (java.lang.Character.isLowerCase(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (java.lang.Character.isHighSurrogate(ch)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (ch >= '0') && (ch <= '7');\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4835","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[227],"tindex":"ee3a98a0-2eb3-11e6-83a5-29c45b6bd49f","method":{"position":"org.apache.commons.lang3.StringUtils:5178","type":"CtMethodImpl","sourcecode":"public static java.lang.String repeat(final java.lang.String str, final java.lang.String separator, final int repeat) {\n    if (separator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((str == null) || (separator == null)) {\n                return org.apache.commons.lang3.StringUtils.repeat(str, repeat);\n            } \n            final java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.repeat((str + separator), repeat);\n            return org.apache.commons.lang3.StringUtils.removeEnd(result, separator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:770","type":"CtVariableReadImpl","sourcecode":"value"},"failures":[228,229,230,231,232],"tindex":"ee3a98a1-2eb3-11e6-83a5-7772a7a63c07","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:570","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final boolean value) {\n    if (value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int = ((int) * (int)) + (value ? 0 : 1);\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:390","type":"CtBinaryOperatorImpl","sourcecode":"fromIndex < 0"},"failures":[233],"tindex":"ee3abfb2-2eb3-11e6-83a5-3d813de1412d","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:327","type":"CtMethodImpl","sourcecode":"public static int indexOfThrowable(final java.lang.Throwable throwable, final java.lang.Class<?> clazz, final int fromIndex) {\n    if (fromIndex < 0) {\n        {\n            return org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, fromIndex, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fromIndex":"fromIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"ee3abfb3-2eb3-11e6-83a5-61c24bdfdd3c","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:171","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final boolean[] lhs, final boolean[] rhs) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Boolean[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Boolean[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Boolean[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:798","type":"CtBinaryOperatorImpl","sourcecode":"(cs1 == null) || (cs2 == null)"},"failures":[234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"tindex":"ee3abfb4-2eb3-11e6-83a5-17ac58fcf249","method":{"position":"org.apache.commons.lang3.StringUtils:794","type":"CtMethodImpl","sourcecode":"public static boolean equals(final java.lang.CharSequence cs1, final java.lang.CharSequence cs2) {\n    if ((cs2 == null) || (cs2 == null)) {\n        {\n            if (cs1 == cs2) {\n                return true;\n            } \n            if ((cs1 == null) || (cs2 == null)) {\n                return false;\n            } \n            if ((cs1 instanceof java.lang.String) && (cs2 instanceof java.lang.String)) {\n                return cs1.equals(cs2);\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, java.lang.Math.max(cs1.length(), cs2.length()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs1":"cs2","cs2":"cs2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:631","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"ee3ae6c5-2eb3-11e6-83a5-691a01e87e96","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:209","type":"CtMethodImpl","sourcecode":"public static java.lang.String replace(final java.lang.Object source, final java.util.Properties valueProperties) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (valueProperties == null) {\n                return source.toString();\n            } \n            final java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>();\n            final java.util.Enumeration<?> java.util.Enumeration<?> = valueProperties.propertyNames();\n            while (propNames.hasMoreElements()) {\n                final java.lang.String java.lang.String = ((java.lang.String)(propNames.nextElement()));\n                final java.lang.String java.lang.String = valueProperties.getProperty(propName);\n                valueMap.put(propName, propValue);\n            }\n            return org.apache.commons.lang3.text.StrSubstitutor.replace(source, valueMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:146","type":"CtBinaryOperatorImpl","sourcecode":"methodNames == null"},"failures":[251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,233,266,267,268,269,270,271],"tindex":"ee3ae6c6-2eb3-11e6-83a5-0fa1c03e361f","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:141","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.Throwable getCause(final java.lang.Throwable throwable, java.lang.String[] methodNames) {\n    if (methodNames == null) {\n        {\n            if (throwable == null) {\n                return null;\n            } \n            if (methodNames == null) {\n                methodNames = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[];\n            } \n            for (final java.lang.String java.lang.String : methodNames) {\n                if (methodName != null) {\n                    final java.lang.Throwable java.lang.Throwable = org.apache.commons.lang3.exception.ExceptionUtils.getCauseUsingMethodName(throwable, methodName);\n                    if (cause != null) {\n                        return cause;\n                    } \n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodNames":"methodNames"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2980","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[272],"tindex":"ee3ae6c7-2eb3-11e6-83a5-81c129264c5b","method":{"position":"org.apache.commons.lang3.ArrayUtils:2979","type":"CtMethodImpl","sourcecode":"public static char[] toPrimitive(final java.lang.Character[] array, final char valueForNull) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            final char[] char[] = new char[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Character java.lang.Character = array[i];\n                result[i] = b == null ? valueForNull : b.charValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3939","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[273],"tindex":"ee3b0dd8-2eb3-11e6-83a5-5bbb64327b47","method":{"position":"org.apache.commons.lang3.ArrayUtils:1353","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final float[] array1, final float[] array2) {\n    if (array1 == null) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:377","type":"CtBinaryOperatorImpl","sourcecode":"object != null"},"failures":[274,275,276,277,278],"tindex":"ee3b0dd9-2eb3-11e6-83a5-6feb32edd059","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:380","type":"CtMethodImpl","sourcecode":"public static int reflectionHashCode(final java.lang.Object object, final boolean testTransients) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(17, 37, object, testTransients, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:657","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[279],"tindex":"ee3b0dda-2eb3-11e6-83a5-dfd75d39684f","method":{"position":"org.apache.commons.lang3.ArrayUtils:4097","type":"CtMethodImpl","sourcecode":"public static char[] add(final char[] array, final char element) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final char[] char[] = ((char[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Character.java.lang.Character.java.lang.Class<java.lang.Character>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:549","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[280,281,282,283,284,285,286,287,287,288,289,290,291,168,169,170,171,172,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,158,337,338,339,340,341,342,343,173,344,345,346,347,348,349,350,351,141,352],"tindex":"ee3b34eb-2eb3-11e6-83a5-ebaaaff89a5f","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:843","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean value) {\n    if (fieldName == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4805","type":"CtUnaryOperatorImpl","sourcecode":"!repeat"},"failures":[353],"tindex":"ee3b34ec-2eb3-11e6-83a5-b1db77524017","method":{"position":"org.apache.commons.lang3.StringUtils:4684","type":"CtMethodImpl","sourcecode":"private static java.lang.String replaceEach(final java.lang.String text, final java.lang.String[] searchList, final java.lang.String[] replacementList, final boolean repeat, final int timeToLive) {\n    if (!repeat) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((((text == null) || (text.isEmpty())) || (searchList == null)) || ((searchList.int) == 0)) || (replacementList == null)) || ((replacementList.int) == 0)) {\n                return text;\n            } \n            if (timeToLive < 0) {\n                throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"));\n            } \n            final int int = searchList.int;\n            final int int = replacementList.int;\n            if (searchLength != replacementLength) {\n                throw new java.lang.IllegalArgumentException((((\"Search and Replace array lengths don't match: \" + searchLength) + \" vs \") + replacementLength));\n            } \n            final boolean[] boolean[] = new boolean[searchLength];\n            int int = -1;\n            int int = -1;\n            int int = -1;\n            for (int int = 0 ; i < searchLength ; i++) {\n                if ((((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)) || (searchList[i].isEmpty())) || ((replacementList[i]) == null)) {\n                    continue;\n                } \n                tempIndex = text.indexOf(searchList[i]);\n                if (tempIndex == (-1)) {\n                    noMoreMatchesForReplIndex[i] = true;\n                } else {\n                    if ((textIndex == (-1)) || (tempIndex < textIndex)) {\n                        textIndex = tempIndex;\n                        replaceIndex = i;\n                    } \n                }\n            }\n            if (textIndex == (-1)) {\n                return text;\n            } \n            int int = 0;\n            int int = 0;\n            for (int int = 0 ; i < (searchList.int) ; i++) {\n                if (((searchList[i]) == null) || ((replacementList[i]) == null)) {\n                    continue;\n                } \n                final int int = (replacementList[i].length()) - (searchList[i].length());\n                if (greater > 0) {\n                    increase += 3 * greater;\n                } \n            }\n            increase = java.lang.Math.min(increase, ((text.length()) / 5));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((text.length()) + increase));\n            while (textIndex != (-1)) {\n                for (int int = start ; i < textIndex ; i++) {\n                    buf.append(text.charAt(i));\n                }\n                buf.append(replacementList[replaceIndex]);\n                start = textIndex + (searchList[replaceIndex].length());\n                textIndex = -1;\n                replaceIndex = -1;\n                tempIndex = -1;\n                for (int int = 0 ; i < searchLength ; i++) {\n                    if ((((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)) || (searchList[i].isEmpty())) || ((replacementList[i]) == null)) {\n                        continue;\n                    } \n                    tempIndex = text.indexOf(searchList[i], start);\n                    if (tempIndex == (-1)) {\n                        noMoreMatchesForReplIndex[i] = true;\n                    } else {\n                        if ((textIndex == (-1)) || (tempIndex < textIndex)) {\n                            textIndex = tempIndex;\n                            replaceIndex = i;\n                        } \n                    }\n                }\n            }\n            final int int = text.length();\n            for (int int = start ; i < textLength ; i++) {\n                buf.append(text.charAt(i));\n            }\n            final java.lang.String java.lang.String = buf.toString();\n            if (!repeat) {\n                return result;\n            } \n            return org.apache.commons.lang3.StringUtils.replaceEach(result, searchList, replacementList, repeat, (timeToLive - 1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"repeat":"repeat"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrMatcher:193","type":"CtBinaryOperatorImpl","sourcecode":"(chars.length()) == 1"},"failures":[354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369],"tindex":"ee3b5bfd-2eb3-11e6-83a5-ad69dafbde47","method":{"position":"org.apache.commons.lang3.Validate:446","type":"CtMethodImpl","sourcecode":"public static <T extends java.lang.CharSequence>T notBlank(final T chars, final java.lang.String message, final java.lang.Object... values) {\n    if ((message.length()) == 1) {\n        {\n            if (chars == null) {\n                throw new java.lang.NullPointerException(java.lang.String.format(message, values));\n            } \n            if (org.apache.commons.lang3.StringUtils.isBlank(chars)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n            return chars;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"message"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"ee3b5bfe-2eb3-11e6-83a5-e3bbc4ef5eb4","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:328","type":"CtMethodImpl","sourcecode":"private int readArgumentIndex(final java.lang.String pattern, final java.text.ParsePosition pos) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = pos.getIndex();\n            seekNonWs(pattern, pos);\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            boolean boolean = false;\n            for ( ; (!error) && ((pos.getIndex()) < (pattern.length())) ; next(pos)) {\n                char char = pattern.charAt(pos.getIndex());\n                if (java.lang.Character.isWhitespace(c)) {\n                    seekNonWs(pattern, pos);\n                    c = pattern.charAt(pos.getIndex());\n                    if ((c != (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char)) && (c != (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char))) {\n                        error = true;\n                        continue;\n                    } \n                } \n                if (((c == (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char)) || (c == (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char))) && ((result.length()) > 0)) {\n                    try {\n                        return java.lang.Integer.parseInt(result.toString());\n                    } catch (final java.lang.NumberFormatException e) {\n                    }\n                } \n                error = !(java.lang.Character.isDigit(c));\n                result.append(c);\n            }\n            if (error) {\n                throw new java.lang.IllegalArgumentException((((\"Invalid format argument index at position \" + start) + \": \") + (pattern.substring(start, pos.getIndex()))));\n            } \n            throw new java.lang.IllegalArgumentException((\"Unterminated format element at position \" + start));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:329","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[370],"tindex":"ee3b830f-2eb3-11e6-83a5-6f62b9ee9f5b","method":{"position":"org.apache.commons.lang3.text.StrMatcher:173","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrMatcher charSetMatcher(final char... chars) {\n    if (chars == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((chars == null) || ((chars.int) == 0)) {\n                return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher;\n            } \n            if ((chars.int) == 1) {\n                return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(chars[0]);\n            } \n            return new org.apache.commons.lang3.text.StrMatcher.CharSetMatcher(chars);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"chars"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:37","type":"CtBinaryOperatorImpl","sourcecode":"(((input.charAt(index)) == '\\\\') && ((index + 1) < (input.length()))) && ((input.charAt((index + 1))) == 'u')"},"failures":[371,372,373],"tindex":"ee3b8310-2eb3-11e6-83a5-dd24f9d1d78f","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if ((((input.charAt(index)) == '\\\\') && ((index + 1) < (input.length()))) && ((input.charAt((index + 1))) == 'u')) {\n        {\n            if (index != 0) {\n                throw new java.lang.IllegalStateException(\"CsvEscaper should never reach the [1] index\");\n            } \n            if (org.apache.commons.lang3.StringUtils.containsNone(input.toString(), org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char[])) {\n                out.write(input.toString());\n            } else {\n                out.write(org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char);\n                out.write(org.apache.commons.lang3.StringUtils.replace(input.toString(), org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.java.lang.String, ((org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.java.lang.String) + (org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.java.lang.String))));\n                out.write(org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char);\n            }\n            return java.lang.Character.codePointCount(input, 0, input.length());\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:388","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.doubleToLongBits(lhs)) != (java.lang.Double.doubleToLongBits(rhs))"},"failures":[374,375,123,124,125,127,128,131,376,377,134,135,378,136,138,379,380,381,382,383],"tindex":"ee3baa21-2eb3-11e6-83a5-4bd7a3b8d853","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:587","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final double lhs, final double rhs) {\n    if ((java.lang.Double.doubleToLongBits(rhs)) != (java.lang.Double.doubleToLongBits(lhs))) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            return append(java.lang.Double.doubleToLongBits(lhs), java.lang.Double.doubleToLongBits(rhs));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"ee3baa22-2eb3-11e6-83a5-4159bd27241a","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:790","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendTo(buffer, ((calendar.get(java.util.Calendar.java.util.Calendar.int)) + 1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:656","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"ee3bd133-2eb3-11e6-83a5-e9f7b941c50e","method":{"position":"org.apache.commons.lang3.StringUtils:2752","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByWholeSeparatorPreserveAllTokens(final java.lang.String str, final java.lang.String separator) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(str, separator, (-1), true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:173","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(object)"},"failures":[],"tindex":"ee3bd134-2eb3-11e6-83a5-ef43facf61e2","method":{"position":"org.apache.commons.lang3.ObjectUtils:292","type":"CtMethodImpl","sourcecode":"public static void identityToString(final java.lang.Appendable appendable, final java.lang.Object object) throws java.io.IOException {\n    if (org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(object)) {\n        {\n            if (object == null) {\n                {\n                    if (object == null) {\n                        throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n                    } \n                    appendable.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.tuple.Triple:114","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.tuple.Triple<?, ?, ?>"},"failures":[],"tindex":"ee3bd135-2eb3-11e6-83a5-fb8f8c8aa47a","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:471","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.lang3.tuple.Triple<?, ?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, obj, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:1001","type":"CtBinaryOperatorImpl","sourcecode":"trimmer != null"},"failures":[384],"tindex":"ee3bd136-2eb3-11e6-83a5-633f73223c89","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:1000","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setTrimmerMatcher(final org.apache.commons.lang3.text.StrMatcher trimmer) {\n    if (trimmer != null) {\n        {\n            if (trimmer != null) {\n                org.apache.commons.lang3.text.StrTokenizer.this.org.apache.commons.lang3.text.StrMatcher = trimmer;\n            } \n            return org.apache.commons.lang3.text.StrTokenizer.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trimmer":"trimmer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3252","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[385,386],"tindex":"ee3bf847-2eb3-11e6-83a5-159b489116e2","method":{"position":"org.apache.commons.lang3.ArrayUtils:772","type":"CtMethodImpl","sourcecode":"public static java.lang.Byte[] nullToEmpty(final java.lang.Byte[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Byte[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:383","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Calendar"},"failures":[],"tindex":"ee3bf848-2eb3-11e6-83a5-07bb61a492de","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:267","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (obj instanceof java.util.Calendar) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (obj == (org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.this)) || ((obj instanceof java.lang.reflect.WildcardType) && (org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.this, ((java.lang.reflect.WildcardType)(obj)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:518","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"ee3bf849-2eb3-11e6-83a5-7b13a4187c71","method":{"position":"org.apache.commons.lang3.time.DateUtils:418","type":"CtMethodImpl","sourcecode":"public static java.util.Date addMonths(final java.util.Date date, final int amount) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1102","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"ee3bf84a-2eb3-11e6-83a5-731388e05ba3","method":{"position":"org.apache.commons.lang3.Validate:922","type":"CtMethodImpl","sourcecode":"public static <T>void inclusiveBetween(final T start, final T end, final java.lang.Comparable<T> value, final java.lang.String message, final java.lang.Object... values) {\n    if (message == null) {\n        {\n            if (message == null) {\n                {\n                    if (((value.compareTo(start)) < 0) || ((value.compareTo(end)) > 0)) {\n                        throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n                    } \n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"message"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3821","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[387],"tindex":"ee3c1f5b-2eb3-11e6-83a5-1564b6c3317f","method":{"position":"org.apache.commons.lang3.ArrayUtils:3820","type":"CtMethodImpl","sourcecode":"public static byte[] addAll(final byte[] array1, final byte... array2) {\n    if (array2 == null) {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final byte[] byte[] = new byte[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7035","type":"CtBinaryOperatorImpl","sourcecode":"(first.length()) > (second.length())"},"failures":[388,389,390,391],"tindex":"ee3c1f5c-2eb3-11e6-83a5-2562345a93e2","method":{"position":"org.apache.commons.lang3.StringUtils:7010","type":"CtMethodImpl","sourcecode":"public static double getJaroWinklerDistance(final java.lang.CharSequence first, final java.lang.CharSequence second) {\n    if ((second.length()) > (second.length())) {\n        {\n            final double double = 0.1;\n            if ((first == null) || (second == null)) {\n                throw new java.lang.IllegalArgumentException(\"Strings must not be null\");\n            } \n            final double double = org.apache.commons.lang3.StringUtils.score(first, second);\n            final int int = org.apache.commons.lang3.StringUtils.commonPrefixLength(first, second);\n            final double double = (java.lang.Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0;\n            return matchScore;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"second","second":"second"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}