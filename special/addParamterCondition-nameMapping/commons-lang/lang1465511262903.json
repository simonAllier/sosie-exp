{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":75,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":69,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":378,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":291,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":138,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":166,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":190,"org.apache.commons.lang3.ValidateTest.testIsTrue4":384,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":237,"org.apache.commons.lang3.ValidateTest.testIsTrue3":383,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteStaticFieldForceAccess":347,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticField":279,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":49,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":217,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":123,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":200,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":125,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":144,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":137,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":214,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":111,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":233,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":139,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":234,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArrayWithSupplementaryChars":336,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_withoutCause":370,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetContextValues":183,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":128,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiLongArray":270,"org.apache.commons.lang3.math.NumberUtilsTest.testToLongString":250,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayRemoveNone":257,"org.apache.commons.lang3.ConversionTest.testHexToByte":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":61,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":130,"org.apache.commons.lang3.StringUtilsTest.testLang623":350,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyIntObject":312,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMixedArray":268,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":65,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":331,"org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemoverTest.testInvalidCharacters":232,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloat":310,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":32,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":68,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthShort":344,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":206,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":108,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":43,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_withCause":361,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceNullParentNullChild":351,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":363,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":221,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer":160,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticFieldForceAccess":292,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableCount_Throwable":368,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":165,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringString":335,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":211,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldIllegalArgumentException2":287,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":191,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementIntArray":252,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":40,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":226,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":148,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":177,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":219,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":314,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_recursiveCause":372,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":170,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiIntArray":269,"org.apache.commons.lang3.reflect.FieldUtilsTest.testAmbig":281,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":222,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccessIllegalArgumentException2":282,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":39,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":0,"org.apache.commons.lang3.ArrayUtilsTest.testCloneShort":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":54,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":119,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":193,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":76,"org.apache.commons.lang3.ArrayUtilsTest.testReverseInt":91,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":157,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_jdkNoCause":375,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":27,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBefore_StringString":84,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":315,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":208,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":220,"org.apache.commons.lang3.StringUtilsIsTest.testIsNumeric":385,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":150,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticFieldForceAccess":276,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":145,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":366,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":17,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":147,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":23,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":245,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":37,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":168,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":132,"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":346,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":26,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":316,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":246,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithCalendar":328,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":60,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":224,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":11,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":113,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":118,"org.apache.commons.lang3.StringUtilsTest.testIsNotBlank":300,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":90,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadFieldForceAccess":298,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiByteArray":265,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArrayHiddenByObject":311,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":66,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":196,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":207,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_nested":360,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_String":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":63,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":230,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetField":278,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":74,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":15,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithIgnoreCase":341,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsNotBlank":301,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArray":258,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":212,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":153,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedFieldForceAccess":299,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_withoutCause":365,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":110,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":194,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":179,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiDoubleArray":271,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":240,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":243,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":259,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticFieldForceAccess":294,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArray":338,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":56,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithCalendar":334,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":134,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":253,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":126,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":304,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceNullParent":352,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":70,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":216,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCause_Throwable":377,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":286,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":31,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":318,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_char":323,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":382,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":6,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":195,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":285,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":185,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":19,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceEqual":353,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":10,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":80,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":83,"org.apache.commons.lang3.StringUtilsTest.testReplaceChars_StringCharChar":349,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":321,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":73,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":164,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_double_double":251,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":72,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":202,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedField":295,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":210,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":8,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":115,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":198,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":201,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":241,"org.apache.commons.lang3.time.DateUtilsTest.testAddSeconds":379,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":4,"org.apache.commons.lang3.RandomUtilsTest.testNextFloatMinimalRange":188,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiCharArray":262,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":142,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiShortArray":272,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":266,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":44,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":229,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":205,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":77,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfLong":87,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfLongWithStartIndex":88,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredField":296,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":45,"org.apache.commons.lang3.StringUtilsTest.testRemoveEndIgnoreCase":339,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":55,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":218,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":239,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":357,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":364,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":107,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":320,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":199,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayOutOfBoundsIndex":256,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceEqualObject":354,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":109,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":325,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":112,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":235,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_char":260,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":197,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":184,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArray":309,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":215,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullIntArray":96,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_ThrowableArray":369,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArray":261,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":82,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":173,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiFloatArray":267,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":306,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":47,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":117,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithCalendar":330,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithCalendar":332,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":21,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_nullInput":163,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringWithSupplementaryChars":337,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":16,"org.apache.commons.lang3.BooleanUtilsTest.test_toInteger_Boolean_int_int_int":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":71,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":29,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":7,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":367,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":236,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_jdkNoCause":359,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":192,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":141,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthInt":189,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":172,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":317,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccess":273,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":319,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":213,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":228,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":34,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":305,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":48,"org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemoverTest.testValidCharacters":231,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithCalendar":333,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testSetContextValue":181,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":238,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":381,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":303,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":124,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":161,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":2,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":129,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyIntObjectEmptyArray":313,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":35,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_Throwable":362,"org.apache.commons.lang3.ArrayUtilsTest.testReverseShort":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":42,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":283,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":121,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticField":275,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":67,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedFieldForceAccess":284,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":25,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArrayHiddenByObject":264,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":373,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticField":293,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldForceAccess":297,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":135,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Date":343,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":149,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":146,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadField":289,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_byte":308,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":203,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":46,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":86,"org.apache.commons.lang3.ArrayUtilsTest.testToString":106,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":156,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetFirstContextValue":182,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":204,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":249,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":12,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":167,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":371,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastOrdinalIndexOf":345,"org.apache.commons.lang3.ArrayUtilsTest.testReverseChar":307,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissingIgnoreCase":340,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":92,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":95,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_recursiveCause":374,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":36,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":180,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":94,"org.apache.commons.lang3.ConversionTest.testBinaryToLong":254,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":116,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":3,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":62,"org.apache.commons.lang3.StringUtilsTest.testReplaceChars_StringStringString":326,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":51,"org.apache.commons.lang3.text.StrTokenizerTest.test8":105,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":223,"org.apache.commons.lang3.text.StrTokenizerTest.test5":102,"org.apache.commons.lang3.text.StrTokenizerTest.test4":101,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedField":274,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":52,"org.apache.commons.lang3.text.StrTokenizerTest.test7":104,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":342,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":53,"org.apache.commons.lang3.text.StrTokenizerTest.test6":103,"org.apache.commons.lang3.text.StrTokenizerTest.test1":98,"org.apache.commons.lang3.text.StrTokenizerTest.test3":100,"org.apache.commons.lang3.text.StrTokenizerTest.test2":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":28,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":302,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":131,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticFieldForceAccess":280,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":158,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":178,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":171,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteStaticField":348,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":14,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":248,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullDate":97,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":187,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":356,"org.apache.commons.lang3.StringUtilsTest.testAbbreviate_StringInt":355,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayNegativeIndex":255,"org.apache.commons.lang3.math.FractionTest.testPow":386,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":114,"org.apache.commons.lang3.time.DateUtilsTest.testAddMinutes":380,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_Character":322,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":13,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccess":288,"org.apache.commons.lang3.builder.CompareToBuilderTest.testRaggedArray":263,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveIntArray":324,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":244,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticField":290,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":120,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":247,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithCalendar":329,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":33,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":209,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":159,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_nested":358,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_withCause":376,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedFieldForceAccess":277,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithCalendar":327,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":242,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":30,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":143},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1478","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[0,1,2,3],"tindex":"61ebaeea-2e91-11e6-a038-ab1a5306f792","method":{"position":"org.apache.commons.lang3.ArrayUtils:370","type":"CtMethodImpl","sourcecode":"public static short[] clone(final short[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[],"tindex":"61ec4b2b-2e91-11e6-a038-371c6ea621e8","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:435","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String format(final java.util.Calendar calendar) {\n    if (calendar == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return format(calendar, new java.lang.StringBuffer(int)).toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:264","type":"CtBinaryOperatorImpl","sourcecode":"(ch >= 56320) && (ch <= 57343)"},"failures":[],"tindex":"61ec723c-2e91-11e6-a038-ff29a7327f89","method":{"position":"org.apache.commons.lang3.CharUtils:516","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiNumeric(final char ch) {\n    if ((ch >= 56320) && (ch <= 57343)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch >= '0') && (ch <= '9');\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:675","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[4,5,6,7,8,9,10,11,11,12,13,14,15,16,17,18,19,20,21,22,23,24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"61ec723d-2e91-11e6-a038-7bc966fc66e1","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:755","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final int value) {\n    if (fieldName == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:549","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"61ec994e-2e91-11e6-a038-217b8757af8e","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1114","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short[] array) {\n    if (fieldName == null) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[84],"tindex":"61ecc05f-2e91-11e6-a038-71115fdd9164","method":{"position":"org.apache.commons.lang3.StringUtils:2289","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringBefore(final java.lang.String str, final java.lang.String separator) {\n    if (separator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (separator == null)) {\n                return str;\n            } \n            if (separator.isEmpty()) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.indexOf(separator);\n            if (pos == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return str;\n            } \n            return str.substring(0, pos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6104","type":"CtBinaryOperatorImpl","sourcecode":"cs == null"},"failures":[85],"tindex":"61ece770-2e91-11e6-a038-2706545684c8","method":{"position":"org.apache.commons.lang3.StringUtils:1842","type":"CtMethodImpl","sourcecode":"public static boolean containsOnly(final java.lang.CharSequence cs, final java.lang.String validChars) {\n    if (cs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cs == null) || (validChars == null)) {\n                return false;\n            } \n            return org.apache.commons.lang3.StringUtils.containsOnly(cs, validChars.toCharArray());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2228","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[86],"tindex":"61ece771-2e91-11e6-a038-214676e7828c","method":{"position":"org.apache.commons.lang3.ArrayUtils:4482","type":"CtMethodImpl","sourcecode":"public static long[] add(final long[] array, final int index, final long element) {\n    if (index < 0) {\n        {\n            return ((long[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Long.valueOf(element), java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2812","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[87,88],"tindex":"61ed0e82-2e91-11e6-a038-b7663d6d8a6b","method":{"position":"org.apache.commons.lang3.ArrayUtils:2064","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final long[] array, final long valueToFind, int startIndex) {\n    if (startIndex < 0) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:194","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"61ed0e83-2e91-11e6-a038-0b6ebcbc7194","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:298","type":"CtMethodImpl","sourcecode":"protected java.lang.String parseToken(final java.lang.String pattern, final int[] indexRef) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            int int = indexRef[0];\n            final int int = pattern.length();\n            char char = pattern.charAt(i);\n            if (((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z'))) {\n                buf.append(c);\n                while ((i + 1) < length) {\n                    final char char = pattern.charAt((i + 1));\n                    if (peek == c) {\n                        buf.append(c);\n                        i++;\n                    } else {\n                        break;\n                    }\n                }\n            } else {\n                buf.append('\\'');\n                boolean boolean = false;\n                for ( ; i < length ; i++) {\n                    c = pattern.charAt(i);\n                    if (c == '\\'') {\n                        if (((i + 1) < length) && ((pattern.charAt((i + 1))) == '\\'')) {\n                            i++;\n                            buf.append(c);\n                        } else {\n                            inLiteral = !inLiteral;\n                        }\n                    } else if ((!inLiteral) && (((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z')))) {\n                        i--;\n                        break;\n                    } else {\n                        buf.append(c);\n                    }\n                }\n            }\n            indexRef[0] = i;\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrMatcher:190","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(chars)"},"failures":[],"tindex":"61ed5ca4-2e91-11e6-a038-376b91f3fb21","method":{"position":"org.apache.commons.lang3.Validate:393","type":"CtMethodImpl","sourcecode":"public static <T extends java.lang.CharSequence>T notEmpty(final T chars, final java.lang.String message, final java.lang.Object... values) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(message)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (chars == null) {\n                throw new java.lang.NullPointerException(java.lang.String.format(message, values));\n            } \n            if ((chars.length()) == 0) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n            return chars;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"message"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:383","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Calendar"},"failures":[],"tindex":"61ed5ca5-2e91-11e6-a038-bf5379b799c7","method":{"position":"org.apache.commons.lang3.time.FastDateParser:221","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Calendar) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj instanceof org.apache.commons.lang3.time.FastDateParser)) {\n                return false;\n            } \n            final org.apache.commons.lang3.time.FastDateParser org.apache.commons.lang3.time.FastDateParser = ((org.apache.commons.lang3.time.FastDateParser)(obj));\n            return ((java.lang.String.equals(other.java.lang.String)) && (java.util.TimeZone.equals(other.java.util.TimeZone))) && (java.util.Locale.equals(other.java.util.Locale));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:905","type":"CtBinaryOperatorImpl","sourcecode":"0 == nHex"},"failures":[89],"tindex":"61ed83b6-2e91-11e6-a038-c1a671db57b5","method":{"position":"org.apache.commons.lang3.Conversion:1006","type":"CtMethodImpl","sourcecode":"public static byte hexToByte(final java.lang.String src, final int srcPos, final byte dstInit, final int dstPos, final int nHex) {\n    if (0 == dstPos) {\n        {\n            if (0 == nHex) {\n                return dstInit;\n            } \n            if ((((nHex - 1) * 4) + dstPos) >= 8) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 8\");\n            } \n            byte byte = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nHex ; i++) {\n                shift = (i * 4) + dstPos;\n                final int int = (15 & (org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))) << shift;\n                final int int = 15 << shift;\n                out = ((byte)((out & (~mask)) | bits));\n            }\n            return out;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nHex":"dstPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7013","type":"CtBinaryOperatorImpl","sourcecode":"(first == null) || (second == null)"},"failures":[90],"tindex":"61edaac7-2e91-11e6-a038-99b70937df6a","method":{"position":"org.apache.commons.lang3.StringUtils:7129","type":"CtMethodImpl","sourcecode":"private static int commonPrefixLength(java.lang.CharSequence first, java.lang.CharSequence second) {\n    if ((first == null) || (second == null)) {\n        {\n            final int int = org.apache.commons.lang3.StringUtils.getCommonPrefix(first.toString(), second.toString()).length();\n            return result > 4 ? 4 : result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"first","second":"second"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:955","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[91],"tindex":"61edaac8-2e91-11e6-a038-e5763015c952","method":{"position":"org.apache.commons.lang3.ArrayUtils:1463","type":"CtMethodImpl","sourcecode":"public static void reverse(final int[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:653","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"61edd1d9-2e91-11e6-a038-a1dab30d557d","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:652","type":"CtMethodImpl","sourcecode":"public boolean replaceIn(java.lang.StringBuilder source) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return false;\n            } \n            return replaceIn(source, 0, source.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:247","type":"CtBinaryOperatorImpl","sourcecode":"value instanceof java.lang.annotation.Annotation"},"failures":[92],"tindex":"61edd1da-2e91-11e6-a038-e37d03ec6a72","method":{"position":"org.apache.commons.lang3.AnnotationUtils:242","type":"CtMethodImpl","sourcecode":"private static int hashMember(final java.lang.String name, final java.lang.Object value) {\n    if (value instanceof java.lang.annotation.Annotation) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = (name.hashCode()) * 127;\n            if (value.getClass().isArray()) {\n                return part1 ^ (org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(value.getClass().getComponentType(), value));\n            } \n            if (value instanceof java.lang.annotation.Annotation) {\n                return part1 ^ (org.apache.commons.lang3.AnnotationUtils.hashCode(((java.lang.annotation.Annotation)(value))));\n            } \n            return part1 ^ (value.hashCode());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2271","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[93],"tindex":"61edf8eb-2e91-11e6-a038-1d44b33a30ee","method":{"position":"org.apache.commons.lang3.ArrayUtils:1477","type":"CtMethodImpl","sourcecode":"public static void reverse(final short[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1123","type":"CtBinaryOperatorImpl","sourcecode":"focus == null"},"failures":[94,95],"tindex":"61edf8ec-2e91-11e6-a038-437cb474e30f","method":{"position":"org.apache.commons.lang3.time.DateUtils:1122","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<java.util.Calendar> iterator(final java.util.Date focus, final int rangeStyle) {\n    if (focus == null) {\n        {\n            if (focus == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            gval.setTime(focus);\n            return org.apache.commons.lang3.time.DateUtils.iterator(gval, rangeStyle);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"focus":"focus"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:758","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[96],"tindex":"61ee1ffd-2e91-11e6-a038-a321c8b46940","method":{"position":"org.apache.commons.lang3.ArrayUtils:5502","type":"CtMethodImpl","sourcecode":"public static int[] removeAll(final int[] array, final int... indices) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((int[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:804","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[97],"tindex":"61ee470e-2e91-11e6-a038-8b3e1c4f91d7","method":{"position":"org.apache.commons.lang3.time.DateUtils:1289","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMilliseconds(final java.util.Date date, final int fragment) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,4,111,112,113,114,115,5,116,117,118,119,120,6,121,122,123,124,125,7,126,127,128,129,130,8,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,9,9,10,10,11,11,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,25,25,26,26,27,27,28,29,30,31,31,32,33,34,35,35,36,36,37,37,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,52,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,67,67,68,68,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,79,79,80,80,81,81,82,82,149,150,151,152,153,154,155,156,157,83,158,159],"tindex":"61ee470f-2e91-11e6-a038-01ab605e3c02","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:171","type":"CtMethodImpl","sourcecode":"static boolean isRegistered(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final java.util.Map<java.lang.Object, java.lang.Object> java.util.Map<java.lang.Object, java.lang.Object> = org.apache.commons.lang3.builder.ToStringStyle.getRegistry();\n            return (m != null) && (m.containsKey(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:357","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[160],"tindex":"61ee6e20-2e91-11e6-a038-8de042c80553","method":{"position":"org.apache.commons.lang3.BooleanUtils:238","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean toBooleanObject(final java.lang.Integer value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                return null;\n            } \n            return (value.intValue()) == 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:557","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[161,162],"tindex":"61ee9531-2e91-11e6-a038-490e284e6580","method":{"position":"org.apache.commons.lang3.CharSetUtils:140","type":"CtMethodImpl","sourcecode":"public static int count(final java.lang.String str, final java.lang.String... set) {\n    if (str == null) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return 0;\n            } \n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            int int = 0;\n            for (final char char : str.toCharArray()) {\n                if (chars.contains(c)) {\n                    count++;\n                } \n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:360","type":"CtBinaryOperatorImpl","sourcecode":"locale == null"},"failures":[],"tindex":"61ee9532-2e91-11e6-a038-6143014e8c62","method":{"position":"org.apache.commons.lang3.LocaleUtils:246","type":"CtMethodImpl","sourcecode":"public static boolean isAvailableLocale(final java.util.Locale locale) {\n    if (locale == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.LocaleUtils.availableLocaleList().contains(locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.Throwable","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:355","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(method))"},"failures":[],"tindex":"61eebc43-2e91-11e6-a038-594864d5bef4","method":{"position":"org.apache.commons.lang3.event.EventListenerSupport:315","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object invoke(final java.lang.Object unusedProxy, final java.lang.reflect.Method method, final java.lang.Object[] args) throws java.lang.Throwable {\n    if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(unusedProxy))) {\n        throw new java.lang.Throwable();\n    } else {\n        {\n            for (final L L : java.util.List<L>) {\n                method.invoke(listener, args);\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"unusedProxy"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1397","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[163],"tindex":"61eebc44-2e91-11e6-a038-4dea27c8d97c","method":{"position":"org.apache.commons.lang3.BooleanUtils:904","type":"CtMethodImpl","sourcecode":"public static boolean and(final boolean... array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            for (final boolean boolean : array) {\n                if (!element) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"61eebc45-2e91-11e6-a038-65cc67ab265a","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1195","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte[] array) {\n    if (fieldName == null) {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:106","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(b)"},"failures":[164],"tindex":"61eebc46-2e91-11e6-a038-3b2aa61e5393","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:102","type":"CtMethodImpl","sourcecode":"public static double min(final double a, final double b) {\n    if (java.lang.Double.isNaN(b)) {\n        {\n            if (java.lang.Double.isNaN(a)) {\n                return b;\n            } else if (java.lang.Double.isNaN(b)) {\n                return a;\n            } else {\n                return java.lang.Math.min(a, b);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[165,166,167,168,169,170,171,172,173,174],"tindex":"61eee357-2e91-11e6-a038-f955594363bd","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1194","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (calendar == null) {\n        {\n            int int = (calendar.get(java.util.Calendar.java.util.Calendar.int)) + (calendar.get(java.util.Calendar.java.util.Calendar.int));\n            if (offset < 0) {\n                buffer.append('-');\n                offset = -offset;\n            } else {\n                buffer.append('+');\n            }\n            final int int = offset / ((60 * 60) * 1000);\n            buffer.append(((char)((hours / 10) + '0')));\n            buffer.append(((char)((hours % 10) + '0')));\n            if (boolean) {\n                buffer.append(':');\n            } \n            final int int = (offset / (60 * 1000)) - (60 * hours);\n            buffer.append(((char)((minutes / 10) + '0')));\n            buffer.append(((char)((minutes % 10) + '0')));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:461","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isUpperCase(ch)"},"failures":[],"tindex":"61eee358-2e91-11e6-a038-299834b8a2ea","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2413","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final char ch) {\n    if (java.lang.Character.isUpperCase(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return lastIndexOf(ch, ((int) - 1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[175],"tindex":"61eee359-2e91-11e6-a038-d77dd19dd122","method":{"position":"org.apache.commons.lang3.BooleanUtils:465","type":"CtMethodImpl","sourcecode":"public static int toInteger(final java.lang.Boolean bool, final int trueValue, final int falseValue, final int nullValue) {\n    if (bool == null) {\n        {\n            if (bool == null) {\n                return nullValue;\n            } \n            return bool.booleanValue() ? trueValue : falseValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1378","type":"CtBinaryOperatorImpl","sourcecode":"startPos < 0"},"failures":[],"tindex":"61ef0a6a-2e91-11e6-a038-879b4b2c9db2","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:918","type":"CtMethodImpl","sourcecode":"protected java.lang.String resolveVariable(final java.lang.String variableName, final org.apache.commons.lang3.text.StrBuilder buf, final int startPos, final int endPos) {\n    if (endPos < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.text.StrLookup<?> org.apache.commons.lang3.text.StrLookup<?> = getVariableResolver();\n            if (resolver == null) {\n                return null;\n            } \n            return resolver.lookup(variableName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startPos":"endPos"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:501","type":"CtBinaryOperatorImpl","sourcecode":"value instanceof int[]"},"failures":[176,177,178,179,180,181,182,183,184,185,186,187],"tindex":"61ef0a6b-2e91-11e6-a038-078a462ffb0d","method":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:62","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.exception.DefaultExceptionContext setContextValue(final java.lang.String label, final java.lang.Object value) {\n    if (value instanceof int[]) {\n        {\n            for (final java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>> java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>> = java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.iterator() ; iter.hasNext() ; ) {\n                final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> = iter.next();\n                if (org.apache.commons.lang3.StringUtils.equals(label, p.getKey())) {\n                    iter.remove();\n                } \n            }\n            addContextValue(label, value);\n            return org.apache.commons.lang3.exception.DefaultExceptionContext.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:675","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"61ef0a6c-2e91-11e6-a038-9ffcf9473be8","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1134","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"61ef317d-2e91-11e6-a038-d78b1d4f61f0","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1036","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        {\n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:168","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endInclusive"},"failures":[188],"tindex":"61ef317e-2e91-11e6-a038-15cf8231e1d9","method":{"position":"org.apache.commons.lang3.RandomUtils:163","type":"CtMethodImpl","sourcecode":"public static float nextFloat(float startInclusive, float endInclusive) {\n    if (endInclusive == startInclusive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((endInclusive >= startInclusive), \"Start value must be smaller or equal to end value.\");\n            org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\");\n            if (startInclusive == endInclusive) {\n                return startInclusive;\n            } \n            return startInclusive + ((endInclusive - startInclusive) * (org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextFloat()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"endInclusive","endInclusive":"startInclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3881","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[189],"tindex":"61ef317f-2e91-11e6-a038-d11cab16ffce","method":{"position":"org.apache.commons.lang3.ArrayUtils:1263","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final int[] array1, final int[] array2) {\n    if (array1 == null) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:73","type":"CtBinaryOperatorImpl","sourcecode":"timeZone == null"},"failures":[190,165,191,166,167,168,169,192,193,170,171,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,174],"tindex":"61ef5890-2e91-11e6-a038-271760d7807e","method":{"position":"org.apache.commons.lang3.time.FormatCache:69","type":"CtMethodImpl","sourcecode":"public F getInstance(final java.lang.String pattern, java.util.TimeZone timeZone, java.util.Locale locale) {\n    if (timeZone == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (pattern == null) {\n                throw new java.lang.NullPointerException(\"pattern must not be null\");\n            } \n            if (timeZone == null) {\n                timeZone = java.util.TimeZone.getDefault();\n            } \n            if (locale == null) {\n                locale = java.util.Locale.getDefault();\n            } \n            final org.apache.commons.lang3.time.FormatCache.MultipartKey org.apache.commons.lang3.time.FormatCache.MultipartKey = new org.apache.commons.lang3.time.FormatCache.MultipartKey(pattern , timeZone , locale);\n            F F = java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, F>.get(key);\n            if (format == null) {\n                format = createInstance(pattern, timeZone, locale);\n                final F F = java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, F>.putIfAbsent(key, format);\n                if (previousValue != null) {\n                    format = previousValue;\n                } \n            } \n            return format;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeZone":"timeZone"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:121","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 15"},"failures":[230],"tindex":"61ef5891-2e91-11e6-a038-895f4f7dfad2","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean translate(final int codepoint, final java.io.Writer out) throws java.io.IOException {\n    if (codepoint > 15) {\n        {\n            if (boolean) {\n                if ((codepoint < (int)) || (codepoint > (int))) {\n                    return false;\n                } \n            } else {\n                if ((codepoint >= (int)) && (codepoint <= (int))) {\n                    return false;\n                } \n            }\n            if (codepoint > 65535) {\n                out.write(toUtf16Escape(codepoint));\n            } else if (codepoint > 4095) {\n                out.write((\"\\\\u\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))));\n            } else if (codepoint > 255) {\n                out.write((\"\\\\u0\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))));\n            } else if (codepoint > 15) {\n                out.write((\"\\\\u00\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))));\n            } else {\n                out.write((\"\\\\u000\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))));\n            }\n            return true;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepoint"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:121","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 15"},"failures":[231,232,233,234],"tindex":"61ef7fa2-2e91-11e6-a038-05b5787a018e","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover:33","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean translate(int codepoint, java.io.Writer out) throws java.io.IOException {\n    if (codepoint > 15) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((codepoint >= (java.lang.Character.java.lang.Character.char)) && (codepoint <= (java.lang.Character.java.lang.Character.char))) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepoint"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[190,191,166,167,169,192,170,171,235,236,237,238,239,240,172,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,241,242,243,244,245,246,173,174],"tindex":"61ef7fa3-2e91-11e6-a038-b5b9a0e0057f","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:850","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (buffer == null) {\n                {\n                    if (value < 100) {\n                        for (int int = int ; (--i) >= 2 ; ) {\n                            buffer.append('0');\n                        }\n                        buffer.append(((char)((value / 10) + '0')));\n                        buffer.append(((char)((value % 10) + '0')));\n                    } else {\n                        int int;\n                        if (value < 1000) {\n                            digits = 3;\n                        } else {\n                            org.apache.commons.lang3.Validate.isTrue((value > (-1)), \"Negative values should not be possible\", value);\n                            digits = java.lang.Integer.toString(value).length();\n                        }\n                        for (int int = int ; (--i) >= digits ; ) {\n                            buffer.append('0');\n                        }\n                        buffer.append(java.lang.Integer.toString(value));\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5588","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[247,248],"tindex":"61ef7fa4-2e91-11e6-a038-d151fb75f5bf","method":{"position":"org.apache.commons.lang3.text.WordUtils:353","type":"CtMethodImpl","sourcecode":"public static java.lang.String capitalizeFully(java.lang.String str, final char... delimiters) {\n    if (str == null) {\n        {\n            final int int = delimiters == null ? -1 : delimiters.int;\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (delimLen == 0)) {\n                return str;\n            } \n            str = str.toLowerCase();\n            return org.apache.commons.lang3.text.WordUtils.capitalize(str, delimiters);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSet:139","type":"CtBinaryOperatorImpl","sourcecode":"setStrs == null"},"failures":[249],"tindex":"61efa6b5-2e91-11e6-a038-6560ac191547","method":{"position":"org.apache.commons.lang3.CharSet:138","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.CharSet getInstance(final java.lang.String... setStrs) {\n    if (setStrs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (setStrs == null) {\n                return null;\n            } \n            if ((setStrs.int) == 1) {\n                final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.org.apache.commons.lang3.CharSet.java.util.Map<java.lang.String, org.apache.commons.lang3.CharSet>.get(setStrs[0]);\n                if (common != null) {\n                    return common;\n                } \n            } \n            return new org.apache.commons.lang3.CharSet(setStrs);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"setStrs":"setStrs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:194","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[191,192],"tindex":"61efa6b6-2e91-11e6-a038-75012ba33080","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:187","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Date date, final java.lang.String pattern) {\n    if (pattern == null) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(date, pattern, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:726","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[250],"tindex":"61efa6b7-2e91-11e6-a038-5598a5b0186b","method":{"position":"org.apache.commons.lang3.math.NumberUtils:148","type":"CtMethodImpl","sourcecode":"public static long toLong(final java.lang.String str) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toLong(str, 0L);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3298","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[251],"tindex":"61efcdc8-2e91-11e6-a038-b9ce1b14734d","method":{"position":"org.apache.commons.lang3.ArrayUtils:3319","type":"CtMethodImpl","sourcecode":"public static double[] toPrimitive(final java.lang.Double[] array, final double valueForNull) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.double[];\n            } \n            final double[] double[] = new double[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Double java.lang.Double = array[i];\n                result[i] = b == null ? valueForNull : b.doubleValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1464","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[252],"tindex":"61efcdc9-2e91-11e6-a038-3bba0484cdfa","method":{"position":"org.apache.commons.lang3.ArrayUtils:5031","type":"CtMethodImpl","sourcecode":"public static int[] removeElement(final int[] array, final int element) {\n    if (array == null) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1648","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[253,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228],"tindex":"61efcdca-2e91-11e6-a038-97cb8bda7e92","method":{"position":"org.apache.commons.lang3.time.DateUtils:502","type":"CtMethodImpl","sourcecode":"public static java.util.Date addMilliseconds(final java.util.Date date, final int amount) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1655","type":"CtBinaryOperatorImpl","sourcecode":"0 == nBools"},"failures":[254],"tindex":"61efcdcb-2e91-11e6-a038-75afbaefe0f3","method":{"position":"org.apache.commons.lang3.Conversion:1042","type":"CtMethodImpl","sourcecode":"public static long binaryToLong(final boolean[] src, final int srcPos, final long dstInit, final int dstPos, final int nBools) {\n    if (0 == dstPos) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBools)) {\n                return dstInit;\n            } \n            if (((nBools - 1) + dstPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 64\");\n            } \n            long long = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + dstPos;\n                final long long = (src[(i + srcPos)] ? 1L : 0) << shift;\n                final long long = 1L << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"dstPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[12,51,52,53],"tindex":"61eff4dc-2e91-11e6-a038-27ba17d5e975","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:376","type":"CtMethodImpl","sourcecode":"public void appendStart(final java.lang.StringBuffer buffer, final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object != null) {\n                appendClassName(buffer, object);\n                appendIdentityHashCode(buffer, object);\n                appendContentStart(buffer);\n                if (boolean) {\n                    appendFieldSeparator(buffer);\n                } \n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:154","type":"CtBinaryOperatorImpl","sourcecode":"expression == false"},"failures":[],"tindex":"61eff4dd-2e91-11e6-a038-d3236834222a","method":{"position":"org.apache.commons.lang3.Validate:802","type":"CtMethodImpl","sourcecode":"public static void validState(final boolean expression) {\n    if (expression == false) {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalStateException(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expression":"expression"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:399","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"61eff4de-2e91-11e6-a038-31514b618894","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1363","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeArguments, final java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (typeArguments == null) {\n                typeArguments = java.util.Collections.<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>emptyMap();\n            } \n            if (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(type)) {\n                if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                    return org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, typeArguments.get(type));\n                } \n                if (type instanceof java.lang.reflect.ParameterizedType) {\n                    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(type));\n                    final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n                    if ((p.getOwnerType()) == null) {\n                        parameterizedTypeArguments = typeArguments;\n                    } else {\n                        parameterizedTypeArguments = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(typeArguments);\n                        parameterizedTypeArguments.putAll(org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(p));\n                    }\n                    final java.lang.reflect.Type[] java.lang.reflect.Type[] = p.getActualTypeArguments();\n                    for (int int = 0 ; i < (args.int) ; i++) {\n                        final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(parameterizedTypeArguments, args[i]);\n                        if (unrolled != null) {\n                            args[i] = unrolled;\n                        } \n                    }\n                    return org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(p.getOwnerType(), ((java.lang.Class<?>)(p.getRawType())), args);\n                } \n                if (type instanceof java.lang.reflect.WildcardType) {\n                    final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(type));\n                    return org.apache.commons.lang3.reflect.TypeUtils.wildcardType().withUpperBounds(org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(typeArguments, wild.getUpperBounds())).withLowerBounds(org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(typeArguments, wild.getLowerBounds())).build();\n                } \n            } \n            return type;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[32,32],"tindex":"61f01bef-2e91-11e6-a038-513bba920fcb","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:731","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte value) {\n    if (fieldName == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3907","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[255,256,257,258],"tindex":"61f01bf0-2e91-11e6-a038-c9435f7cff66","method":{"position":"org.apache.commons.lang3.ArrayUtils:5769","type":"CtMethodImpl","sourcecode":"public static float[] removeAll(final float[] array, final int... indices) {\n    if (array == null) {\n        {\n            return ((float[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:119","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 255"},"failures":[259],"tindex":"61f04301-2e91-11e6-a038-0bbe5a334487","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:73","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.UnicodeEscaper above(final int codepoint) {\n    if (codepoint > 255) {\n        {\n            return org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, codepoint);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepoint"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:496","type":"CtBinaryOperatorImpl","sourcecode":"seq == null"},"failures":[260],"tindex":"61f04302-2e91-11e6-a038-ad167062e13b","method":{"position":"org.apache.commons.lang3.StringUtils:1153","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final int searchChar) {\n    if (seq == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"seq"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:646","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[261,262,263,264,265,266,267,268,269,270,271,272],"tindex":"61f04303-2e91-11e6-a038-2f3a865363b4","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:647","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final java.lang.Object[] lhs, final java.lang.Object[] rhs, final java.util.Comparator<?> comparator) {\n    if ((rhs == null) || (lhs == null)) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i], comparator);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:363","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isBlank(cs)"},"failures":[273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301],"tindex":"61f06a14-2e91-11e6-a038-7f0128e07c7b","method":{"position":"org.apache.commons.lang3.StringUtils:336","type":"CtMethodImpl","sourcecode":"public static boolean isNotBlank(final java.lang.CharSequence cs) {\n    if (org.apache.commons.lang3.StringUtils.isBlank(cs)) {\n        {\n            return !(org.apache.commons.lang3.StringUtils.isBlank(cs));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.mutable.MutableInt:236","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.mutable.MutableInt"},"failures":[],"tindex":"61f06a15-2e91-11e6-a038-353e452a54d0","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:862","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final java.lang.Object obj, final boolean fullDetail) {\n    if (obj instanceof org.apache.commons.lang3.mutable.MutableInt) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, obj, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:244","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map.Entry<?, ?>"},"failures":[302,303,304,305,306],"tindex":"61f06a16-2e91-11e6-a038-857e3f4016a4","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:380","type":"CtMethodImpl","sourcecode":"public static int reflectionHashCode(final java.lang.Object object, final boolean testTransients) {\n    if (object instanceof java.util.Map.Entry<?, ?>) {\n        {\n            return org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(17, 37, object, testTransients, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:346","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"61f09127-2e91-11e6-a038-21d19a5e34b0","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:305","type":"CtMethodImpl","sourcecode":"private static void reflectionAppend(final java.lang.Object lhs, final java.lang.Object rhs, final java.lang.Class<?> clazz, final org.apache.commons.lang3.builder.CompareToBuilder builder, final boolean useTransients, final java.lang.String[] excludeFields) {\n    if (!(java.util.Arrays.equals(rhs, rhs))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.reflect.Field[] java.lang.reflect.Field[] = clazz.getDeclaredFields();\n            java.lang.reflect.AccessibleObject.setAccessible(fields, true);\n            for (int int = 0 ; (i < (fields.int)) && ((builder.int) == 0) ; i++) {\n                final java.lang.reflect.Field java.lang.reflect.Field = fields[i];\n                if ((((!(org.apache.commons.lang3.ArrayUtils.contains(excludeFields, f.getName()))) && ((f.getName().indexOf('$')) == (-1))) && (useTransients || (!(java.lang.reflect.Modifier.isTransient(f.getModifiers()))))) && (!(java.lang.reflect.Modifier.isStatic(f.getModifiers())))) {\n                    try {\n                        builder.append(f.get(lhs), f.get(rhs));\n                    } catch (final java.lang.IllegalAccessException e) {\n                        throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n                    }\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"rhs"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1644","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[307],"tindex":"61f09128-2e91-11e6-a038-01b684b2cf27","method":{"position":"org.apache.commons.lang3.ArrayUtils:1491","type":"CtMethodImpl","sourcecode":"public static void reverse(final char[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3711","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[308],"tindex":"61f09129-2e91-11e6-a038-bda6793ba439","method":{"position":"org.apache.commons.lang3.ArrayUtils:3273","type":"CtMethodImpl","sourcecode":"public static java.lang.Byte[] toObject(final byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Byte[];\n            } \n            final java.lang.Byte[] java.lang.Byte[] = new java.lang.Byte[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Byte.valueOf(array[i]);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:472","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))"},"failures":[309,310,267,311],"tindex":"61f0b83a-2e91-11e6-a038-01ace23d1868","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:568","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final float lhs, final float rhs) {\n    if ((java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = java.lang.Float.compare(lhs, rhs);\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3094","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[312,313],"tindex":"61f0b83b-2e91-11e6-a038-639992f2e0d7","method":{"position":"org.apache.commons.lang3.ArrayUtils:712","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer[] nullToEmpty(final java.lang.Integer[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Integer[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6071","type":"CtBinaryOperatorImpl","sourcecode":"cs == null"},"failures":[314],"tindex":"61f0b83c-2e91-11e6-a038-ebfcb7cffd23","method":{"position":"org.apache.commons.lang3.StringUtils:1676","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.lang.CharSequence cs, final java.lang.CharSequence searchChars) {\n    if (cs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (searchChars == null) {\n                return false;\n            } \n            return org.apache.commons.lang3.StringUtils.containsAny(cs, org.apache.commons.lang3.CharSequenceUtils.toCharArray(searchChars));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1323","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.WildcardType"},"failures":[315,316,317,318,319,320,321],"tindex":"61f0df4d-2e91-11e6-a038-95ae05032397","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:311","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.Type toType) {\n    if (toType instanceof java.lang.reflect.WildcardType) {\n        {\n            return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, toType, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"toType"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1630","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isHighSurrogate(ch)"},"failures":[322,323],"tindex":"61f0df4e-2e91-11e6-a038-e31b21c3adef","method":{"position":"org.apache.commons.lang3.CharUtils:352","type":"CtMethodImpl","sourcecode":"public static java.lang.String unicodeEscaped(final char ch) {\n    if (java.lang.Character.isHighSurrogate(ch)) {\n        {\n            if (ch < 16) {\n                return \"\\\\u000\" + (java.lang.Integer.toHexString(ch));\n            } else if (ch < 256) {\n                return \"\\\\u00\" + (java.lang.Integer.toHexString(ch));\n            } else if (ch < 4096) {\n                return \"\\\\u0\" + (java.lang.Integer.toHexString(ch));\n            } \n            return \"\\\\u\" + (java.lang.Integer.toHexString(ch));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtBinaryOperatorImpl","sourcecode":"index != 0"},"failures":[252,324],"tindex":"61f0df4f-2e91-11e6-a038-2f4012e16094","method":{"position":"org.apache.commons.lang3.ArrayUtils:5002","type":"CtMethodImpl","sourcecode":"public static int[] remove(final int[] array, final int index) {\n    if (index != 0) {\n        {\n            return ((int[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:975","type":"CtBinaryOperatorImpl","sourcecode":"prefixMatcher == null"},"failures":[325],"tindex":"61f0df50-2e91-11e6-a038-812ef6147b28","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:974","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setVariablePrefixMatcher(final org.apache.commons.lang3.text.StrMatcher prefixMatcher) {\n    if (prefixMatcher == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (prefixMatcher == null) {\n                throw new java.lang.IllegalArgumentException(\"Variable prefix matcher must not be null!\");\n            } \n            org.apache.commons.lang3.text.StrSubstitutor.this.org.apache.commons.lang3.text.StrMatcher = prefixMatcher;\n            return org.apache.commons.lang3.text.StrSubstitutor.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prefixMatcher":"prefixMatcher"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5080","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[326],"tindex":"61f10661-2e91-11e6-a038-f75f217ea452","method":{"position":"org.apache.commons.lang3.StringUtils:4877","type":"CtMethodImpl","sourcecode":"public static java.lang.String replaceChars(final java.lang.String str, final java.lang.String searchChars, java.lang.String replaceChars) {\n    if (str == null) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))) {\n                return str;\n            } \n            if (replaceChars == null) {\n                replaceChars = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            boolean boolean = false;\n            final int int = replaceChars.length();\n            final int int = str.length();\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(strLength);\n            for (int int = 0 ; i < strLength ; i++) {\n                final char char = str.charAt(i);\n                final int int = searchChars.indexOf(ch);\n                if (index >= 0) {\n                    modified = true;\n                    if (index < replaceCharsLength) {\n                        buf.append(replaceChars.charAt(index));\n                    } \n                } else {\n                    buf.append(ch);\n                }\n            }\n            if (modified) {\n                return buf.toString();\n            } \n            return str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[327,328,329,330,331,332,333,334],"tindex":"61f10662-2e91-11e6-a038-b1f68bc15bbd","method":{"position":"org.apache.commons.lang3.time.DateUtils:1516","type":"CtMethodImpl","sourcecode":"public static long getFragmentInSeconds(final java.util.Calendar calendar, final int fragment) {\n    if (calendar == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1875","type":"CtBinaryOperatorImpl","sourcecode":"(cs == null) || (searchChars == null)"},"failures":[335,336,337,338],"tindex":"61f10663-2e91-11e6-a038-7f5a04c7eff8","method":{"position":"org.apache.commons.lang3.StringUtils:1536","type":"CtMethodImpl","sourcecode":"public static int indexOfAny(final java.lang.CharSequence cs, final char... searchChars) {\n    if ((cs == null) || (searchChars == null)) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchChars))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            final int int = cs.length();\n            final int int = csLen - 1;\n            final int int = searchChars.int;\n            final int int = searchLen - 1;\n            for (int int = 0 ; i < csLen ; i++) {\n                final char char = cs.charAt(i);\n                for (int int = 0 ; j < searchLen ; j++) {\n                    if ((searchChars[j]) == ch) {\n                        if (((i < csLast) && (j < searchLast)) && (java.lang.Character.isHighSurrogate(ch))) {\n                            if ((searchChars[(j + 1)]) == (cs.charAt((i + 1)))) {\n                                return i;\n                            } \n                        } else {\n                            return i;\n                        }\n                    } \n                }\n            }\n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs","searchChars":"searchChars"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:204","type":"CtUnaryOperatorImpl","sourcecode":"!ignoreCase"},"failures":[339,340,341],"tindex":"61f12d74-2e91-11e6-a038-193fb958e3b1","method":{"position":"org.apache.commons.lang3.StringUtils:7311","type":"CtMethodImpl","sourcecode":"private static boolean endsWith(final java.lang.CharSequence str, final java.lang.CharSequence suffix, final boolean ignoreCase) {\n    if (!ignoreCase) {\n        {\n            if ((str == null) || (suffix == null)) {\n                return (str == null) && (suffix == null);\n            } \n            if ((suffix.length()) > (str.length())) {\n                return false;\n            } \n            final int int = (str.length()) - (suffix.length());\n            return org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, ignoreCase, strOffset, suffix, 0, suffix.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ignoreCase":"ignoreCase"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1312","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[342],"tindex":"61f12d75-2e91-11e6-a038-5b217dd0897c","method":{"position":"org.apache.commons.lang3.StringUtils:5811","type":"CtMethodImpl","sourcecode":"public static int countMatches(final java.lang.CharSequence str, final java.lang.CharSequence sub) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(sub))) {\n                return 0;\n            } \n            int int = 0;\n            int int = 0;\n            while ((idx = org.apache.commons.lang3.CharSequenceUtils.indexOf(str, sub, idx)) != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                count++;\n                idx += sub.length();\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:201","type":"CtBinaryOperatorImpl","sourcecode":"(date1 == null) || (date2 == null)"},"failures":[343],"tindex":"61f12d76-2e91-11e6-a038-a100cad32982","method":{"position":"org.apache.commons.lang3.time.DateUtils:155","type":"CtMethodImpl","sourcecode":"public static boolean isSameDay(final java.util.Date date1, final java.util.Date date2) {\n    if ((date2 == null) || (date1 == null)) {\n        {\n            if ((date1 == null) || (date2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            cal1.setTime(date1);\n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            cal2.setTime(date2);\n            return org.apache.commons.lang3.time.DateUtils.isSameDay(cal1, cal2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date2":"date1","date1":"date2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"61f15487-2e91-11e6-a038-d739539a03cb","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:850","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (buffer == null) {\n                {\n                    if (value < 100) {\n                        for (int int = int ; (--i) >= 2 ; ) {\n                            buffer.append('0');\n                        }\n                        buffer.append(((char)((value / 10) + '0')));\n                        buffer.append(((char)((value % 10) + '0')));\n                    } else {\n                        int int;\n                        if (value < 1000) {\n                            digits = 3;\n                        } else {\n                            org.apache.commons.lang3.Validate.isTrue((value > (-1)), \"Negative values should not be possible\", value);\n                            digits = java.lang.Integer.toString(value).length();\n                        }\n                        for (int int = int ; (--i) >= digits ; ) {\n                            buffer.append('0');\n                        }\n                        buffer.append(java.lang.Integer.toString(value));\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:255","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[286],"tindex":"61f15488-2e91-11e6-a038-99b1e07e6c00","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:403","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readField(final java.lang.Object target, final java.lang.String fieldName) throws java.lang.IllegalAccessException {\n    if (target == null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readField(target, fieldName, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"target"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3852","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[344],"tindex":"61f15489-2e91-11e6-a038-0b0c3eee9372","method":{"position":"org.apache.commons.lang3.ArrayUtils:1281","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final short[] array1, final short[] array2) {\n    if (array2 == null) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2413","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[345],"tindex":"61f17b9a-2e91-11e6-a038-bbb1e9b4c04f","method":{"position":"org.apache.commons.lang3.StringUtils:1262","type":"CtMethodImpl","sourcecode":"public static int lastOrdinalIndexOf(final java.lang.CharSequence str, final java.lang.CharSequence searchStr, final int ordinal) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            return org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:101","type":"CtBinaryOperatorImpl","sourcecode":"len < 2"},"failures":[346],"tindex":"61f17b9b-2e91-11e6-a038-29ded1795575","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2873","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(final char[] b, final int off, int len) {\n    if (off < 2) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((((off < 0) || (len < 0)) || (off > (b.int))) || ((off + len) > (b.int))) || ((off + len) < 0)) {\n                throw new java.lang.IndexOutOfBoundsException();\n            } \n            if (len == 0) {\n                return 0;\n            } \n            if ((int) >= (org.apache.commons.lang3.text.StrBuilder.this.size())) {\n                return -1;\n            } \n            if (((int) + len) > (size())) {\n                len = (org.apache.commons.lang3.text.StrBuilder.this.size()) - (int);\n            } \n            org.apache.commons.lang3.text.StrBuilder.this.getChars(int, ((int) + len), b, off);\n            int += len;\n            return len;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"off"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:172","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(field))"},"failures":[280,285,290,347,348],"tindex":"61f17b9c-2e91-11e6-a038-53e383da7d90","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:508","type":"CtMethodImpl","sourcecode":"public static void writeStaticField(final java.lang.reflect.Field field, final java.lang.Object value, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(field))) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"The field must not be null\");\n            org.apache.commons.lang3.Validate.isTrue(java.lang.reflect.Modifier.isStatic(field.getModifiers()), \"The field %s.%s is not static\", field.getDeclaringClass().getName(), field.getName());\n            org.apache.commons.lang3.reflect.FieldUtils.writeField(field, ((java.lang.Object)(null)), value, forceAccess);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2413","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[349,350],"tindex":"61f1a2ad-2e91-11e6-a038-33a0d4f698c3","method":{"position":"org.apache.commons.lang3.StringUtils:4834","type":"CtMethodImpl","sourcecode":"public static java.lang.String replaceChars(final java.lang.String str, final char searchChar, final char replaceChar) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            if (str == null) {\n                return null;\n            } \n            return str.replace(searchChar, replaceChar);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:54","type":"CtInvocationImpl","sourcecode":"child.equals(parent)"},"failures":[351,352,353,354],"tindex":"61f1a2ae-2e91-11e6-a038-a782b737d09c","method":{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:49","type":"CtMethodImpl","sourcecode":"public static int distance(final java.lang.Class<?> child, final java.lang.Class<?> parent) {\n    if (parent.equals(child)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((child == null) || (parent == null)) {\n                return -1;\n            } \n            if (child.equals(parent)) {\n                return 0;\n            } \n            final java.lang.Class<?> java.lang.Class<?> = child.getSuperclass();\n            int int = org.apache.commons.lang3.BooleanUtils.toInteger(parent.equals(cParent));\n            if (d == 1) {\n                return d;\n            } else {\n                d += org.apache.commons.lang3.reflect.InheritanceUtils.distance(cParent, parent);\n                return d > 0 ? d + 1 : -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"child","child":"parent"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:634","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[355],"tindex":"61f1a2af-2e91-11e6-a038-bf1e368de06a","method":{"position":"org.apache.commons.lang3.StringUtils:6353","type":"CtMethodImpl","sourcecode":"public static java.lang.String abbreviate(final java.lang.String str, final int maxWidth) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.abbreviate(str, 0, maxWidth);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:675","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[4,5,6,7,8,9,10,11,11,12,13,14,15,16,17,18,19,20,21,22,23,24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"61f1a2b0-2e91-11e6-a038-cbd9749b4cae","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:675","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int value) {\n    if (fieldName == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:304","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[],"tindex":"61f1c9c1-2e91-11e6-a038-ab356fad7ae5","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:510","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final char lhs, final char rhs) {\n    if (lhs != lhs) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = lhs < rhs ? -1 : lhs > rhs ? 1 : 0;\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"lhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"61f1c9c2-2e91-11e6-a038-0967e89fdcfa","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(((char)((value / 10) + '0')));\n            buffer.append(((char)((value % 10) + '0')));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:833","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof double[]"},"failures":[],"tindex":"61f1c9c3-2e91-11e6-a038-5341e3cf2551","method":{"position":"org.apache.commons.lang3.ClassUtils:267","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPackageName(final java.lang.Object object, final java.lang.String valueIfNull) {\n    if (object instanceof double[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return valueIfNull;\n            } \n            return org.apache.commons.lang3.ClassUtils.getPackageName(object.getClass());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.ClassUtils:650","type":"CtInvocationImpl","sourcecode":"cls.isPrimitive()"},"failures":[],"tindex":"61f1f0d4-2e91-11e6-a038-d3c8fff85ec7","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:553","type":"CtMethodImpl","sourcecode":"public static void writeStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final java.lang.Object value, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (cls.isPrimitive()) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate field %s on %s\", fieldName, cls);\n            org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(field, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:874","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[],"tindex":"61f1f0d5-2e91-11e6-a038-e14784aaa47a","method":{"position":"org.apache.commons.lang3.ArrayUtils:954","type":"CtMethodImpl","sourcecode":"public static int[] subarray(final int[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int[];\n            } \n            final int[] int[] = new int[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"endIndexExclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:603","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377],"tindex":"61f1f0d6-2e91-11e6-a038-19f73f7b10fe","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:141","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.Throwable getCause(final java.lang.Throwable throwable, java.lang.String[] methodNames) {\n    if (throwable == null) {\n        {\n            if (throwable == null) {\n                return null;\n            } \n            if (methodNames == null) {\n                methodNames = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[];\n            } \n            for (final java.lang.String java.lang.String : methodNames) {\n                if (methodName != null) {\n                    final java.lang.Throwable java.lang.Throwable = org.apache.commons.lang3.exception.ExceptionUtils.getCauseUsingMethodName(throwable, methodName);\n                    if (cause != null) {\n                        return cause;\n                    } \n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:121","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[378],"tindex":"61f217e7-2e91-11e6-a038-e3c73239382e","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2145","type":"CtMethodImpl","sourcecode":"public java.lang.String substring(final int start) {\n    if (start < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return substring(start, int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1648","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[379],"tindex":"61f217e8-2e91-11e6-a038-0d9973951e2e","method":{"position":"org.apache.commons.lang3.time.DateUtils:488","type":"CtMethodImpl","sourcecode":"public static java.util.Date addSeconds(final java.util.Date date, final int amount) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:884","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[380],"tindex":"61f217e9-2e91-11e6-a038-edb5388bc5e5","method":{"position":"org.apache.commons.lang3.time.DateUtils:474","type":"CtMethodImpl","sourcecode":"public static java.util.Date addMinutes(final java.util.Date date, final int amount) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2245","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[381,382],"tindex":"61f217ea-2e91-11e6-a038-53f7c1f0e1d7","method":{"position":"org.apache.commons.lang3.CharSetUtils:107","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.lang.String str, final java.lang.String... set) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return false;\n            } \n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            for (final char char : str.toCharArray()) {\n                if (chars.contains(c)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:130","type":"CtBinaryOperatorImpl","sourcecode":"expression == false"},"failures":[190,191,166,167,169,192,170,171,235,236,237,239,240,172,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,241,242,243,245,246,173,174,383,384],"tindex":"61f23efb-2e91-11e6-a038-1bd29df51ac2","method":{"position":"org.apache.commons.lang3.Validate:104","type":"CtMethodImpl","sourcecode":"public static void isTrue(final boolean expression, final java.lang.String message, final long value) {\n    if (expression == false) {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, java.lang.Long.valueOf(value)));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expression":"expression"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5917","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(cs)"},"failures":[385],"tindex":"61f23efc-2e91-11e6-a038-5197f1680021","method":{"position":"org.apache.commons.lang3.StringUtils:6033","type":"CtMethodImpl","sourcecode":"public static boolean isNumeric(final java.lang.CharSequence cs) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isDigit(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:558","type":"CtBinaryOperatorImpl","sourcecode":"(power % 2) == 0"},"failures":[386],"tindex":"61f23efd-2e91-11e6-a038-1793a8d37a8e","method":{"position":"org.apache.commons.lang3.math.Fraction:546","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.math.Fraction pow(final int power) {\n    if ((power % 2) == 0) {\n        {\n            if (power == 1) {\n                return org.apache.commons.lang3.math.Fraction.this;\n            } else if (power == 0) {\n                return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n            } else if (power < 0) {\n                if (power == (java.lang.Integer.java.lang.Integer.int)) {\n                    return org.apache.commons.lang3.math.Fraction.this.invert().pow(2).pow((-(power / 2)));\n                } \n                return org.apache.commons.lang3.math.Fraction.this.invert().pow((-power));\n            } else {\n                final org.apache.commons.lang3.math.Fraction org.apache.commons.lang3.math.Fraction = org.apache.commons.lang3.math.Fraction.this.multiplyBy(org.apache.commons.lang3.math.Fraction.this);\n                if ((power % 2) == 0) {\n                    return f.pow((power / 2));\n                } else {\n                    return f.pow((power / 2)).multiplyBy(org.apache.commons.lang3.math.Fraction.this);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"power":"power"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}