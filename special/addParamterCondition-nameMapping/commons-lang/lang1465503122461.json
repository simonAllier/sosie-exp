{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":177,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_String":183,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":241,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":299,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":160,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":161,"org.apache.commons.lang3.math.NumberUtilsTest.testToByteStringI":235,"org.apache.commons.lang3.time.DateUtilsTest.testSetMilliseconds":216,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":159,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":222,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":91,"org.apache.commons.lang3.ClassUtilsTest.testWrappersToPrimitivesNull":180,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":242,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":174,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":83,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":9,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":261,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfIgnoreCase_String":189,"org.apache.commons.lang3.ValidateTest.testIsTrue1":317,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":137,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":74,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":6,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":11,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":37,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":99,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":250,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":95,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":90,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOfLang294":181,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":132,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":7,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":34,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":239,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":187,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":35,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":92,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfIgnoreCase_String":211,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":81,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":219,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":265,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":281,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":162,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":149,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException3":200,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException4":201,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException1":198,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException2":199,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":301,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":153,"org.apache.commons.lang3.BooleanUtilsTest.test_isFalse_Boolean":195,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":175,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":143,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":33,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":273,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":286,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":0,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":297,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":120,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":4,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":271,"org.apache.commons.lang3.time.DateUtilsTest.testSetMinutes":217,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":155,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":266,"org.apache.commons.lang3.math.NumberUtilsTest.testToByteString":236,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":3,"org.apache.commons.lang3.ValidateTest.testValidIndex_charSequence":212,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":138,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":131,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":274,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":166,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":79,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumShort":278,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":215,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":309,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":135,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":208,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":64,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_nullElementInput":302,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsIgnoreCase_LocaleIndependence":289,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringString":275,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":109,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldIllegalArgumentException2":203,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":308,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":246,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":14,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithDate":229,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":128,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":158,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_char":43,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":102,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":252,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":117,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEquals":205,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":292,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":76,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":23,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":257,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfLongs":319,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":94,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":42,"org.apache.commons.lang3.reflect.FieldUtilsTest.testAmbig":202,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentEnd":283,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":296,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithDate":231,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":127,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccess":196,"org.apache.commons.lang3.text.StrBuilderTest.testLang295":182,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":244,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":260,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":112,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":142,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":27,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":122,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":248,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":71,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithDate":228,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":136,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":287,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":115,"org.apache.commons.lang3.LocaleUtilsTest.testLanguagesByCountry":285,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":294,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfAny_StringStringArray":320,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":75,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":97,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":73,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":232,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":304,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":82,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":123,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":245,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":263,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_3items":306,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":152,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":221,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrimToNull":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":18,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":147,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":238,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":15,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":70,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":101,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":240,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":111,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":59,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":258,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":272,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":113,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":169,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":254,"org.apache.commons.lang3.ValidateTest.testValidIndex_collection":279,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":126,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":251,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":173,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticField":204,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":125,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsIgnoreCase_StringString":288,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":85,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":88,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":36,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":262,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":114,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":167,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":295,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":148,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayCharSeparator":209,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":24,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_charInt":44,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":253,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":134,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":22,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":190,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_nullElementInput":307,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":67,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":264,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":41,"org.apache.commons.lang3.CharUtilsTest.testToString_Character":234,"org.apache.commons.lang3.ArrayUtilsTest.testToString":56,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":176,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":26,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":65,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":206,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":105,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char_int":47,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":98,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":249,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiPrintable_char":313,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_2items":305,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":269,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":303,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":191,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":21,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable":316,"org.apache.commons.lang3.math.FractionTest.testAdd":276,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":290,"org.apache.commons.lang3.builder.DiffBuilderTest.testSameObjectIgnoresAppends":256,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_boolean":311,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithDate":230,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":315,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":300,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":151,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetField":197,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":124,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_nullElementInput":310,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":2,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":63,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":30,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":237,"org.apache.commons.lang3.StringUtilsTest.testNormalizeSpace":282,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":108,"org.apache.commons.lang3.builder.DiffTest.testGetType":293,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":89,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":247,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":150,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":188,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":38,"org.apache.commons.lang3.text.StrTokenizerTest.test8":55,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":139,"org.apache.commons.lang3.text.StrTokenizerTest.test5":52,"org.apache.commons.lang3.text.StrTokenizerTest.test4":51,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":270,"org.apache.commons.lang3.text.StrTokenizerTest.test7":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":140,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":223,"org.apache.commons.lang3.text.StrTokenizerTest.test6":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":141,"org.apache.commons.lang3.text.StrTokenizerTest.test1":48,"org.apache.commons.lang3.ConversionTest.testIntToShortArray":184,"org.apache.commons.lang3.text.StrTokenizerTest.test3":50,"org.apache.commons.lang3.text.StrTokenizerTest.test2":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":116,"org.apache.commons.lang3.builder.DiffTest.testToString":291,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":171,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":84,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithDate":224,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":178,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":255,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":40,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":220,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":32,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":5,"org.apache.commons.lang3.math.FractionTest.testSubtract":277,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":107,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":207,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullDate":284,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":25,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":214,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":233,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":259,"org.apache.commons.lang3.BooleanUtilsTest.test_toIntegerObject_Boolean_Integer_Integer_Integer":318,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":144,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":243,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":61,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":87,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":267,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotFalse_Boolean":194,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":77,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBooleanArray":186,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithDate":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":106,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateDouble":268,"org.apache.commons.lang3.ValidateTest.testExclusiveBetweenLong_withMessage":185,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":193,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt_nullArray":280,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":119,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":45,"org.apache.commons.lang3.StringUtilsTest.testDefault_String":314,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":10,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithDate":225,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":298,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":163,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":121,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":179,"org.apache.commons.lang3.StringUtilsIsTest.testIsAsciiPrintable_String":312,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayInt":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":118,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithDate":226,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":164,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":218,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":96},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.tuple.Triple:114","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.tuple.Triple<?, ?, ?>"},"failures":[],"tindex":"6dd74461-2e7e-11e6-bace-7b163e4b5463","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.lang3.tuple.Triple<?, ?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof org.apache.commons.lang3.mutable.MutableInt) {\n                return (int) == (((org.apache.commons.lang3.mutable.MutableInt)(obj)).intValue());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1766","type":"CtBinaryOperatorImpl","sourcecode":"arrayEnd == null"},"failures":[0,1,2,3,4,5,6,7],"tindex":"6dd82ec2-2e7e-11e6-bace-258ee67dde0a","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setArrayEnd(final java.lang.String arrayEnd) {\n    if (arrayEnd == null) {\n        {\n            super.setArrayEnd(arrayEnd);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arrayEnd":"arrayEnd"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:471","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.builder.ToStringStyle.isRegistered(value)) && (!(((value instanceof java.lang.Number) || (value instanceof java.lang.Boolean)) || (value instanceof java.lang.Character)))"},"failures":[],"tindex":"6dd855d3-2e7e-11e6-bace-a5b3b2e74536","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:576","type":"CtMethodImpl","sourcecode":"public static void writeDeclaredStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if ((org.apache.commons.lang3.builder.ToStringStyle.isRegistered(value)) && (!(((value instanceof java.lang.Number) || (value instanceof java.lang.Boolean)) || (value instanceof java.lang.Character)))) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredStaticField(cls, fieldName, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1118","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[],"tindex":"6dd855d4-2e7e-11e6-bace-99a7a97dcfb4","method":{"position":"org.apache.commons.lang3.ArrayUtils:1748","type":"CtMethodImpl","sourcecode":"public static void reverse(final int[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            int int;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"endIndexExclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2703","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.text.StrBuilder"},"failures":[],"tindex":"6dd87ce5-2e7e-11e6-bace-737f31cd9fcd","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:400","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.lang.Object obj, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) {\n    if (obj instanceof org.apache.commons.lang3.text.StrBuilder) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(obj, toAppendTo, pos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:452","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[8],"tindex":"6dd8a3f6-2e7e-11e6-bace-23bb014fcfdf","method":{"position":"org.apache.commons.lang3.StringUtils:443","type":"CtMethodImpl","sourcecode":"public static java.lang.String trimToNull(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.trim(str);\n            return org.apache.commons.lang3.StringUtils.isEmpty(ts) ? null : ts;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:945","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"6dd8a3f7-2e7e-11e6-bace-59fadc28a8d5","method":{"position":"org.apache.commons.lang3.Validate:966","type":"CtMethodImpl","sourcecode":"public static void inclusiveBetween(long start, long end, long value, java.lang.String message) {\n    if ((value < start) || (value > end)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((end < value) || (value > start)) {\n                {\n                    if ((value < start) || (value > end)) {\n                        throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n                    } \n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"value","end":"start","value":"end"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:549","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[5,9,10,11,12,13,14,14,15,16,17,18,19,19,20],"tindex":"6dd8cb08-2e7e-11e6-bace-472ca80cf9c4","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1502","type":"CtMethodImpl","sourcecode":"protected void appendNullText(final java.lang.StringBuffer buffer, final java.lang.String fieldName) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                {\n                    buffer.append(java.lang.String);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:253","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"6dd8cb09-2e7e-11e6-bace-996b10b93c56","method":{"position":"org.apache.commons.lang3.text.translate.CodePointTranslator:36","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (input != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            final int int = java.lang.Character.codePointAt(input, index);\n            final boolean boolean = translate(codepoint, out);\n            return consumed ? 1 : 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2228","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[40],"tindex":"6dd8f21a-2e7e-11e6-bace-49669175e85b","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1521","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final char[] chars) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validateIndex(index);\n            if (chars == null) {\n                return insert(index, java.lang.String);\n            } \n            final int int = chars.int;\n            if (len > 0) {\n                ensureCapacity(((int) + len));\n                java.lang.System.arraycopy(char[], index, char[], (index + len), ((int) - index));\n                java.lang.System.arraycopy(chars, 0, char[], index, len);\n                int += len;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:549","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"6dd8f21b-2e7e-11e6-bace-1b0c87b98e14","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1053","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int[] array) {\n    if (fieldName == null) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:507","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"6dd9192c-2e7e-11e6-bace-4f55a22d0272","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1134","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short[] array) {\n    if (fieldName == null) {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtBinaryOperatorImpl","sourcecode":"index != 0"},"failures":[41],"tindex":"6dd9192d-2e7e-11e6-bace-b1d92a95c9bc","method":{"position":"org.apache.commons.lang3.ArrayUtils:4513","type":"CtMethodImpl","sourcecode":"public static float[] add(final float[] array, final int index, final float element) {\n    if (index != 0) {\n        {\n            return ((float[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Float.valueOf(element), java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:197","type":"CtVariableReadImpl","sourcecode":"suppressTrailingZeroElements"},"failures":[42],"tindex":"6dd9403e-2e7e-11e6-bace-0dbaace13c1c","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:167","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatDurationWords(final long durationMillis, final boolean suppressLeadingZeroElements, final boolean suppressTrailingZeroElements) {\n    if (suppressTrailingZeroElements) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String = org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(durationMillis, \"d' days 'H' hours 'm' minutes 's' seconds'\");\n            if (suppressLeadingZeroElements) {\n                duration = \" \" + duration;\n                java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 days\", \"\");\n                if ((tmp.length()) != (duration.length())) {\n                    duration = tmp;\n                    tmp = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 hours\", \"\");\n                    if ((tmp.length()) != (duration.length())) {\n                        duration = tmp;\n                        tmp = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 minutes\", \"\");\n                        duration = tmp;\n                        if ((tmp.length()) != (duration.length())) {\n                            duration = org.apache.commons.lang3.StringUtils.replaceOnce(tmp, \" 0 seconds\", \"\");\n                        } \n                    } \n                } \n                if ((duration.length()) != 0) {\n                    duration = duration.substring(1);\n                } \n            } \n            if (suppressTrailingZeroElements) {\n                java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 seconds\", \"\");\n                if ((tmp.length()) != (duration.length())) {\n                    duration = tmp;\n                    tmp = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 minutes\", \"\");\n                    if ((tmp.length()) != (duration.length())) {\n                        duration = tmp;\n                        tmp = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 hours\", \"\");\n                        if ((tmp.length()) != (duration.length())) {\n                            duration = org.apache.commons.lang3.StringUtils.replaceOnce(tmp, \" 0 days\", \"\");\n                        } \n                    } \n                } \n            } \n            duration = \" \" + duration;\n            duration = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 1 seconds\", \" 1 second\");\n            duration = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 1 minutes\", \" 1 minute\");\n            duration = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 1 hours\", \" 1 hour\");\n            duration = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 1 days\", \" 1 day\");\n            return duration.trim();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suppressTrailingZeroElements":"suppressTrailingZeroElements"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:164","type":"CtBinaryOperatorImpl","sourcecode":"cs instanceof java.lang.String"},"failures":[43,44],"tindex":"6dd98e5f-2e7e-11e6-bace-038b57923673","method":{"position":"org.apache.commons.lang3.CharSequenceUtils:69","type":"CtMethodImpl","sourcecode":"static int indexOf(final java.lang.CharSequence cs, final int searchChar, int start) {\n    if (cs instanceof java.lang.String) {\n        {\n            if (cs instanceof java.lang.String) {\n                return ((java.lang.String)(cs)).indexOf(searchChar, start);\n            } else {\n                final int int = cs.length();\n                if (start < 0) {\n                    start = 0;\n                } \n                for (int int = start ; i < sz ; i++) {\n                    if ((cs.charAt(i)) == searchChar) {\n                        return i;\n                    } \n                }\n                return -1;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2271","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"6dd98e60-2e7e-11e6-bace-830f944c6221","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:921","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final short[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:426","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"6dd9b571-2e7e-11e6-bace-0364b9334001","method":{"position":"org.apache.commons.lang3.Validate:1174","type":"CtMethodImpl","sourcecode":"public static void isInstanceOf(final java.lang.Class<?> type, final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((type.isInstance(obj)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, type.getName(), (obj == null ? \"null\" : obj.getClass().getName())));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1298","type":"CtBinaryOperatorImpl","sourcecode":"typeVarAssigns == null"},"failures":[45],"tindex":"6dd9b572-2e7e-11e6-bace-1b6dca6a088e","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1214","type":"CtMethodImpl","sourcecode":"public static boolean typesSatisfyVariables(final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (typeVarAssigns == null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(typeVarAssigns, \"typeVarAssigns is null\");\n            for (final java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> : typeVarAssigns.entrySet()) {\n                final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = entry.getKey();\n                final java.lang.reflect.Type java.lang.reflect.Type = entry.getValue();\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(typeVar)) {\n                    if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(bound, typeVarAssigns), typeVarAssigns))) {\n                        return false;\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeVarAssigns":"typeVarAssigns"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1031","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[46],"tindex":"6dd9dc83-2e7e-11e6-bace-49a118f9c1fd","method":{"position":"org.apache.commons.lang3.ArrayUtils:954","type":"CtMethodImpl","sourcecode":"public static int[] subarray(final int[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int[];\n            } \n            final int[] int[] = new int[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1349","type":"CtBinaryOperatorImpl","sourcecode":"loopIndex > 0"},"failures":[47],"tindex":"6dda0394-2e7e-11e6-bace-19fdc6eb0ac2","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1348","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final char separator, final int loopIndex) {\n    if (loopIndex > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (loopIndex > 0) {\n                append(separator);\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"loopIndex":"loopIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:825","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof int[]"},"failures":[48,49,50,51,52,53,54,55,56,0,1,2,3,4,5,6,7,57,58,59,60,61,9,62,63,64,65,66,67,68,10,69,70,71,72,73,74,75,11,76,77,78,79,80,81,82,12,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,13,101,102,103,104,105,106,107,108,14,15,16,17,18,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,19,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,20,177,178,179],"tindex":"6dda2aa5-2e7e-11e6-bace-4380c8bc3db4","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:376","type":"CtMethodImpl","sourcecode":"public void appendStart(final java.lang.StringBuffer buffer, final java.lang.Object object) {\n    if (object instanceof int[]) {\n        {\n            if (object != null) {\n                appendClassName(buffer, object);\n                appendIdentityHashCode(buffer, object);\n                appendContentStart(buffer);\n                if (boolean) {\n                    appendFieldSeparator(buffer);\n                } \n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:778","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[180],"tindex":"6dda51b6-2e7e-11e6-bace-e5103dcbc6d4","method":{"position":"org.apache.commons.lang3.ClassUtils:777","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?>[] wrappersToPrimitives(final java.lang.Class<?>... classes) {\n    if (classes == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classes == null) {\n                return null;\n            } \n            if ((classes.int) == 0) {\n                return classes;\n            } \n            final java.lang.Class<?>[] java.lang.Class<?>[] = new java.lang.Class[classes.int];\n            for (int int = 0 ; i < (classes.int) ; i++) {\n                convertedClasses[i] = org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(classes[i]);\n            }\n            return convertedClasses;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"classes"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1338","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[181,182,183],"tindex":"6dda51b7-2e7e-11e6-bace-7f86b8d55710","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1760","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder deleteFirst(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            final int int = str == null ? 0 : str.length();\n            if (len > 0) {\n                final int int = indexOf(str, 0);\n                if (index >= 0) {\n                    deleteImpl(index, (index + len), len);\n                } \n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:219","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[],"tindex":"6dda78c8-2e7e-11e6-bace-936dbb7dd117","method":{"position":"org.apache.commons.lang3.time.DateUtils:1726","type":"CtMethodImpl","sourcecode":"public static boolean truncatedEquals(final java.util.Calendar cal1, final java.util.Calendar cal2, final int field) {\n    if ((cal1 == null) || (cal2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cal1 == null) || (cal1 == null)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(cal1, cal2, field)) == 0;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"cal1","cal1":"cal1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:764","type":"CtBinaryOperatorImpl","sourcecode":"(((nShorts - 1) * 16) + dstPos) >= 32"},"failures":[184],"tindex":"6dda78c9-2e7e-11e6-bace-29a5f6507b5f","method":{"position":"org.apache.commons.lang3.Conversion:1255","type":"CtMethodImpl","sourcecode":"public static short[] intToShortArray(final int src, final int srcPos, final short[] dst, final int dstPos, final int nShorts) {\n    if ((((src - 1) * 16) + srcPos) >= 64) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((dstPos - 1) * 16) + src) >= 32) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (0 == nShorts) {\n                        return dst;\n                    } \n                    if ((((nShorts - 1) * 16) + srcPos) >= 32) {\n                        throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 32\");\n                    } \n                    int int = 0;\n                    for (int int = 0 ; i < nShorts ; i++) {\n                        shift = (i * 16) + srcPos;\n                        dst[(dstPos + i)] = ((short)(65535 & (src >> shift)));\n                    }\n                    return dst;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"src","nShorts":"dstPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"6dda78ca-2e7e-11e6-bace-c1f4e8c4d11e","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:276","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Calendar calendar, final java.lang.String pattern, final java.util.Locale locale) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(calendar, pattern, null, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:945","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[185],"tindex":"6dda9fdb-2e7e-11e6-bace-a76c869893d4","method":{"position":"org.apache.commons.lang3.Validate:1104","type":"CtMethodImpl","sourcecode":"public static void exclusiveBetween(long start, long end, long value, java.lang.String message) {\n    if ((end < end) || (value > end)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end","value":"end"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:974","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[186],"tindex":"6dda9fdc-2e7e-11e6-bace-cbdc535da95b","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:887","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final boolean[] lhs, final boolean[] rhs) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:76","type":"CtBinaryOperatorImpl","sourcecode":"locale == null"},"failures":[187],"tindex":"6ddac6ed-2e7e-11e6-bace-65b19819d847","method":{"position":"org.apache.commons.lang3.time.FormatCache:176","type":"CtMethodImpl","sourcecode":"F getTimeInstance(final int timeStyle, final java.util.TimeZone timeZone, java.util.Locale locale) {\n    if (locale == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getDateTimeInstance(null, java.lang.Integer.valueOf(timeStyle), timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:884","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[188],"tindex":"6ddac6ee-2e7e-11e6-bace-e985fb403d97","method":{"position":"org.apache.commons.lang3.time.DateUtils:883","type":"CtMethodImpl","sourcecode":"public static java.util.Date ceiling(final java.util.Date date, final int field) {\n    if (date == null) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            gval.setTime(date);\n            org.apache.commons.lang3.time.DateUtils.modify(gval, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return gval.getTime();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5611","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[189],"tindex":"6ddac6ef-2e7e-11e6-bace-03c90f4cdcfe","method":{"position":"org.apache.commons.lang3.StringUtils:1332","type":"CtMethodImpl","sourcecode":"public static int lastIndexOfIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence searchStr) {\n    if (str == null) {\n        {\n            if ((str == null) || (searchStr == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(str, searchStr, str.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:968","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"6ddac6f0-2e7e-11e6-bace-19ec10ed1b62","method":{"position":"org.apache.commons.lang3.Validate:966","type":"CtMethodImpl","sourcecode":"public static void inclusiveBetween(long start, long end, long value, java.lang.String message) {\n    if ((value < start) || (value > end)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((end < value) || (value > start)) {\n                {\n                    if ((value < start) || (value > end)) {\n                        throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n                    } \n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"end","value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:480","type":"CtBinaryOperatorImpl","sourcecode":"value instanceof java.util.Collection<?>"},"failures":[48,49,50,51,52,53,54,55,56,0,1,2,3,4,5,6,7,57,58,59,60,61,9,62,63,64,65,66,67,68,10,69,70,71,72,73,74,75,11,76,77,78,79,80,81,82,12,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,13,101,102,103,103,104,104,190,190,105,106,106,107,107,108,108,14,14,15,15,16,16,17,17,18,18,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,191,154,154,155,155,156,156,157,157,158,158,159,159,160,160,19,19,161,161,192,192,162,162,193,163,163,164,164,165,165,166,166,167,168,172,173,174,175,176,20,177,178,179],"tindex":"6dddad21-2e7e-11e6-bace-c98dc50e2887","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:207","type":"CtMethodImpl","sourcecode":"static void unregister(final java.lang.Object value) {\n    if (value instanceof java.util.Collection<?>) {\n        {\n            if (value != null) {\n                final java.util.Map<java.lang.Object, java.lang.Object> java.util.Map<java.lang.Object, java.lang.Object> = org.apache.commons.lang3.builder.ToStringStyle.getRegistry();\n                if (m != null) {\n                    m.remove(value);\n                    if (m.isEmpty()) {\n                        org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.remove();\n                    } \n                } \n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:121","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 15"},"failures":[28,37,38],"tindex":"6dddfb42-2e7e-11e6-bace-1f2344f6c995","method":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.String toUtf16Escape(final int codepoint) {\n    if (codepoint > 15) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final char[] char[] = java.lang.Character.toChars(codepoint);\n            return ((\"\\\\u\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + \"\\\\u\") + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepoint"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1386","type":"CtBinaryOperatorImpl","sourcecode":"width > 0"},"failures":[],"tindex":"6dddfb43-2e7e-11e6-bace-435fb249817a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1464","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadRight(final int value, final int width, final char padChar) {\n    if (value > 0) {\n        {\n            return appendFixedWidthPadRight(java.lang.String.valueOf(value), width, padChar);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"width":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:505","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[194,195],"tindex":"6dde2254-2e7e-11e6-bace-1bd1a77b7630","method":{"position":"org.apache.commons.lang3.BooleanUtils:122","type":"CtMethodImpl","sourcecode":"public static boolean isFalse(final java.lang.Boolean bool) {\n    if (bool == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(bool);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MemberUtils:170","type":"CtUnaryOperatorImpl","sourcecode":"!(cls.isPrimitive())"},"failures":[196,197,198,199,200,201,202,203,204],"tindex":"6dde2255-2e7e-11e6-bace-e3c229223ec9","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:61","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Field getField(final java.lang.Class<?> cls, final java.lang.String fieldName) {\n    if (!(cls.isPrimitive())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getField(cls, fieldName, false);\n            org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(field);\n            return field;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"cs instanceof java.lang.String"},"failures":[205,206,207],"tindex":"6dde4966-2e7e-11e6-bace-27235914df8d","method":{"position":"org.apache.commons.lang3.CharSequenceUtils:187","type":"CtMethodImpl","sourcecode":"static boolean regionMatches(final java.lang.CharSequence cs, final boolean ignoreCase, final int thisStart, final java.lang.CharSequence substring, final int start, final int length) {\n    if (cs instanceof java.lang.String) {\n        {\n            if ((cs instanceof java.lang.String) && (substring instanceof java.lang.String)) {\n                return ((java.lang.String)(cs)).regionMatches(ignoreCase, thisStart, ((java.lang.String)(substring)), start, length);\n            } else {\n                int int = thisStart;\n                int int = start;\n                int int = length;\n                while ((tmpLen--) > 0) {\n                    char char = cs.charAt((index1++));\n                    char char = substring.charAt((index2++));\n                    if (c1 == c2) {\n                        continue;\n                    } \n                    if (!ignoreCase) {\n                        return false;\n                    } \n                    if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n                        return false;\n                    } \n                }\n                return true;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[],"tindex":"6dde7077-2e7e-11e6-bace-518ebb75a9db","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:36","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (input != null) {\n        {\n            if ((((input.charAt(index)) == '\\\\') && ((index + 1) < (input.length()))) && ((input.charAt((index + 1))) == 'u')) {\n                int int = 2;\n                while (((index + i) < (input.length())) && ((input.charAt((index + i))) == 'u')) {\n                    i++;\n                }\n                if (((index + i) < (input.length())) && ((input.charAt((index + i))) == '+')) {\n                    i++;\n                } \n                if (((index + i) + 4) <= (input.length())) {\n                    final java.lang.CharSequence java.lang.CharSequence = input.subSequence((index + i), ((index + i) + 4));\n                    try {\n                        final int int = java.lang.Integer.parseInt(unicode.toString(), 16);\n                        out.write(((char)(value)));\n                    } catch (final java.lang.NumberFormatException nfe) {\n                        throw new java.lang.IllegalArgumentException((\"Unable to parse unicode value: \" + unicode) , nfe);\n                    }\n                    return i + 4;\n                } else {\n                    throw new java.lang.IllegalArgumentException(((\"Less than 4 hex digits in unicode value: '\" + (input.subSequence(index, input.length()))) + \"' due to end of CharSequence\"));\n                }\n            } \n            return 0;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:412","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[208,209],"tindex":"6dde9788-2e7e-11e6-bace-03bf0908614c","method":{"position":"org.apache.commons.lang3.StringUtils:3561","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Object[] array, final char separator, final int startIndex, final int endIndex) {\n    if (endIndex < 0) {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                if ((array[i]) != null) {\n                    buf.append(array[i]);\n                } \n            }\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"endIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:593","type":"CtBinaryOperatorImpl","sourcecode":"v > 0"},"failures":[210],"tindex":"6ddebe99-2e7e-11e6-bace-53d88c199466","method":{"position":"org.apache.commons.lang3.ObjectUtils:877","type":"CtMethodImpl","sourcecode":"public static int CONST(final int v) {\n    if (v > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return v;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"v":"v"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:106","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(b)"},"failures":[],"tindex":"6ddebe9a-2e7e-11e6-bace-c101fa3bfc78","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:89","type":"CtMethodImpl","sourcecode":"public static double min(final double a, final double b, final double c) {\n    if (java.lang.Double.isNaN(c)) {\n        {\n            return org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"c"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6393","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[211],"tindex":"6ddee5ab-2e7e-11e6-bace-abcbece5e80b","method":{"position":"org.apache.commons.lang3.StringUtils:1073","type":"CtMethodImpl","sourcecode":"public static int indexOfIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence searchStr) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(str, searchStr, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:701","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"6ddee5ac-2e7e-11e6-bace-fd5be74fe7f9","method":{"position":"org.apache.commons.lang3.time.DateUtils:614","type":"CtMethodImpl","sourcecode":"public static java.util.Date setSeconds(final java.util.Date date, final int amount) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1913","type":"CtBinaryOperatorImpl","sourcecode":"index >= 0"},"failures":[212],"tindex":"6ddf0cbd-2e7e-11e6-bace-b93bbdb4c414","method":{"position":"org.apache.commons.lang3.Validate:776","type":"CtMethodImpl","sourcecode":"public static <T extends java.lang.CharSequence>T validIndex(final T chars, final int index) {\n    if (index >= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.Validate.validIndex(chars, index, org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, java.lang.Integer.valueOf(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:590","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[213,214,215],"tindex":"6ddf0cbe-2e7e-11e6-bace-b76b26115642","method":{"position":"org.apache.commons.lang3.AnnotationUtils:263","type":"CtMethodImpl","sourcecode":"private static boolean memberEquals(final java.lang.Class<?> type, final java.lang.Object o1, final java.lang.Object o2) {\n    if (o1 == null) {\n        {\n            if (o1 == o2) {\n                return true;\n            } \n            if ((o1 == null) || (o2 == null)) {\n                return false;\n            } \n            if (type.isArray()) {\n                return org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(type.getComponentType(), o1, o2);\n            } \n            if (type.isAnnotation()) {\n                return org.apache.commons.lang3.AnnotationUtils.equals(((java.lang.annotation.Annotation)(o1)), ((java.lang.annotation.Annotation)(o2)));\n            } \n            return o1.equals(o2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"o1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:701","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[216,217,218,219,220,221,222],"tindex":"6ddf33cf-2e7e-11e6-bace-edbbf1b9a81a","method":{"position":"org.apache.commons.lang3.time.DateUtils:646","type":"CtMethodImpl","sourcecode":"private static java.util.Date set(final java.util.Date date, final int calendarField, final int amount) {\n    if (date == null) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            c.setLenient(false);\n            c.setTime(date);\n            c.set(calendarField, amount);\n            return c.getTime();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:623","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[223],"tindex":"6ddf5ae0-2e7e-11e6-bace-317015fac2dc","method":{"position":"org.apache.commons.lang3.StringUtils:5811","type":"CtMethodImpl","sourcecode":"public static int countMatches(final java.lang.CharSequence str, final java.lang.CharSequence sub) {\n    if (sub == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(sub))) {\n                return 0;\n            } \n            int int = 0;\n            int int = 0;\n            while ((idx = org.apache.commons.lang3.CharSequenceUtils.indexOf(str, sub, idx)) != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                count++;\n                idx += sub.length();\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"sub"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1648","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[224,225,226,227,228,229,230,231],"tindex":"6ddf5ae1-2e7e-11e6-bace-bb169a3e1c62","method":{"position":"org.apache.commons.lang3.time.DateUtils:1403","type":"CtMethodImpl","sourcecode":"public static long getFragmentInHours(final java.util.Date date, final int fragment) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3908","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[232],"tindex":"6ddf81f2-2e7e-11e6-bace-3f25eb0f8026","method":{"position":"org.apache.commons.lang3.ArrayUtils:3907","type":"CtMethodImpl","sourcecode":"public static long[] addAll(final long[] array1, final long... array2) {\n    if (array1 == null) {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final long[] long[] = new long[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.StringUtils:2332","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"6ddf81f3-2e7e-11e6-bace-2bd540438046","method":{"position":"org.apache.commons.lang3.time.DateUtils:353","type":"CtMethodImpl","sourcecode":"private static java.util.Date parseDateWithLeniency(final java.lang.String str, final java.util.Locale locale, final java.lang.String[] parsePatterns, final boolean lenient) throws java.text.ParseException {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            if ((str == null) || (parsePatterns == null)) {\n                throw new java.lang.IllegalArgumentException(\"Date and Patterns must not be null\");\n            } \n            java.text.SimpleDateFormat java.text.SimpleDateFormat;\n            if (locale == null) {\n                parser = new java.text.SimpleDateFormat();\n            } else {\n                parser = new java.text.SimpleDateFormat(\"\" , locale);\n            }\n            parser.setLenient(lenient);\n            final java.text.ParsePosition java.text.ParsePosition = new java.text.ParsePosition(0);\n            for (final java.lang.String java.lang.String : parsePatterns) {\n                java.lang.String java.lang.String = parsePattern;\n                if (parsePattern.endsWith(\"ZZ\")) {\n                    pattern = pattern.substring(0, ((pattern.length()) - 1));\n                } \n                parser.applyPattern(pattern);\n                pos.setIndex(0);\n                java.lang.String java.lang.String = str;\n                if (parsePattern.endsWith(\"ZZ\")) {\n                    str2 = str.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\");\n                } \n                final java.util.Date java.util.Date = parser.parse(str2, pos);\n                if ((date != null) && ((pos.getIndex()) == (str2.length()))) {\n                    return date;\n                } \n            }\n            throw new java.text.ParseException((\"Unable to parse the date: \" + str) , (-1));\n        }\n    } else {\n        throw new java.text.ParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:542","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[233],"tindex":"6ddfa904-2e7e-11e6-bace-a5075b3098a9","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:347","type":"CtMethodImpl","sourcecode":"public static int indexOfType(final java.lang.Throwable throwable, final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            return org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, 0, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:829","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"6ddff725-2e7e-11e6-bace-4b5d633d4744","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:887","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final double[] lhs, final double[] rhs) {\n    if (rhs == rhs) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"rhs"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:478","type":"CtBinaryOperatorImpl","sourcecode":"lhs instanceof char[]"},"failures":[],"tindex":"6de04546-2e7e-11e6-bace-336bd62ad2e1","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:166","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs, final boolean compareTransients) {\n    if (lhs instanceof char[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, compareTransients, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:130","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[234],"tindex":"6de04547-2e7e-11e6-bace-d140efb4af5c","method":{"position":"org.apache.commons.lang3.CharUtils:331","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final java.lang.Character ch) {\n    if (ch == null) {\n        {\n            if (ch == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.CharUtils.toString(ch.charValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5122","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[235,236],"tindex":"6de06c58-2e7e-11e6-bace-cd0c5a7429f9","method":{"position":"org.apache.commons.lang3.math.NumberUtils:323","type":"CtMethodImpl","sourcecode":"public static byte toByte(final java.lang.String str, final byte defaultValue) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return defaultValue;\n            } \n            try {\n                return java.lang.Byte.parseByte(str);\n            } catch (final java.lang.NumberFormatException nfe) {\n                return defaultValue;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:675","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"6de06c59-2e7e-11e6-bace-f79832163258","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:421","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final double[] lhs, final double[] rhs) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Double[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Double[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Double[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3400","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[237],"tindex":"6de0ba7a-2e7e-11e6-bace-e5456dbe0872","method":{"position":"org.apache.commons.lang3.ArrayUtils:5161","type":"CtMethodImpl","sourcecode":"public static short[] removeElement(final short[] array, final short element) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,167,168,261,262,263,264,265],"tindex":"6de0e18b-2e7e-11e6-bace-6fb09b66bcaf","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:129","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final boolean lhs, final boolean rhs) {\n    if (fieldName == null) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Boolean>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Boolean getLeft() {\n                        return java.lang.Boolean.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Boolean getRight() {\n                        return java.lang.Boolean.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5001","type":"CtBinaryOperatorImpl","sourcecode":"(str.length()) == 1"},"failures":[266,267],"tindex":"6de1089c-2e7e-11e6-bace-558b1378a910","method":{"position":"org.apache.commons.lang3.CharSetUtils:64","type":"CtMethodImpl","sourcecode":"public static java.lang.String squeeze(final java.lang.String str, final java.lang.String... set) {\n    if ((str.length()) == 1) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return str;\n            } \n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(str.length());\n            final char[] char[] = str.toCharArray();\n            final int int = chrs.int;\n            char char = ' ';\n            char char = ' ';\n            for (int int = 0 ; i < sz ; i++) {\n                ch = chrs[i];\n                if (((ch == lastChar) && (i != 0)) && (chars.contains(ch))) {\n                    continue;\n                } \n                buffer.append(ch);\n                lastChar = ch;\n            }\n            return buffer.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3225","type":"CtInvocationImpl","sourcecode":"str.isEmpty()"},"failures":[268],"tindex":"6de17dcd-2e7e-11e6-bace-81536c46ff65","method":{"position":"org.apache.commons.lang3.math.NumberUtils:671","type":"CtMethodImpl","sourcecode":"public static java.lang.Double createDouble(final java.lang.String str) {\n    if (str.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            return java.lang.Double.valueOf(str);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:531","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[269,270,271,272,273],"tindex":"6de17dce-2e7e-11e6-bace-79f64719d839","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1658","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class<?>) {\n        {\n            org.apache.commons.lang3.Validate.notNull(type);\n            if (type instanceof java.lang.Class<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.classToString(((java.lang.Class<?>)(type)));\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(((java.lang.reflect.ParameterizedType)(type)));\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(((java.lang.reflect.WildcardType)(type)));\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(((java.lang.reflect.TypeVariable<?>)(type)));\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(((java.lang.reflect.GenericArrayType)(type)));\n            } \n            throw new java.lang.IllegalArgumentException(org.apache.commons.lang3.ObjectUtils.identityToString(type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[274],"tindex":"6de1a4df-2e7e-11e6-bace-496a1bf35a14","method":{"position":"org.apache.commons.lang3.ArrayUtils:5889","type":"CtMethodImpl","sourcecode":"public static double[] removeElements(final double[] array, final double... values) {\n    if (values == null) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final double double : values) {\n                final java.lang.Double java.lang.Double = java.lang.Double.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Double java.lang.Double = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.doubleValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((double[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"values"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1586","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))"},"failures":[275],"tindex":"6de1a4e0-2e7e-11e6-bace-712ee56e83ea","method":{"position":"org.apache.commons.lang3.StringUtils:1585","type":"CtMethodImpl","sourcecode":"public static int indexOfAny(final java.lang.CharSequence cs, final java.lang.String searchChars) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.StringUtils.indexOfAny(cs, searchChars.toCharArray());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs","searchChars":"searchChars"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:741","type":"CtBinaryOperatorImpl","sourcecode":"fraction == null"},"failures":[276,277],"tindex":"6de1cbf1-2e7e-11e6-bace-c35a33ce0277","method":{"position":"org.apache.commons.lang3.math.Fraction:740","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.math.Fraction addSub(final org.apache.commons.lang3.math.Fraction fraction, final boolean isAdd) {\n    if (fraction == null) {\n        {\n            if (fraction == null) {\n                throw new java.lang.IllegalArgumentException(\"The fraction must not be null\");\n            } \n            if ((int) == 0) {\n                return isAdd ? fraction : fraction.negate();\n            } \n            if ((fraction.int) == 0) {\n                return org.apache.commons.lang3.math.Fraction.this;\n            } \n            final int int = org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, fraction.int);\n            if (d1 == 1) {\n                final int int = org.apache.commons.lang3.math.Fraction.mulAndCheck(int, fraction.int);\n                final int int = org.apache.commons.lang3.math.Fraction.mulAndCheck(fraction.int, int);\n                return new org.apache.commons.lang3.math.Fraction((isAdd ? org.apache.commons.lang3.math.Fraction.addAndCheck(uvp, upv) : org.apache.commons.lang3.math.Fraction.subAndCheck(uvp, upv)) , org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int, fraction.int));\n            } \n            final java.math.BigInteger java.math.BigInteger = java.math.BigInteger.valueOf(int).multiply(java.math.BigInteger.valueOf(((fraction.int) / d1)));\n            final java.math.BigInteger java.math.BigInteger = java.math.BigInteger.valueOf(fraction.int).multiply(java.math.BigInteger.valueOf(((int) / d1)));\n            final java.math.BigInteger java.math.BigInteger = isAdd ? uvp.add(upv) : uvp.subtract(upv);\n            final int int = t.mod(java.math.BigInteger.valueOf(d1)).intValue();\n            final int int = tmodd1 == 0 ? d1 : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(tmodd1, d1);\n            final java.math.BigInteger java.math.BigInteger = t.divide(java.math.BigInteger.valueOf(d2));\n            if ((w.bitLength()) > 31) {\n                throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\");\n            } \n            return new org.apache.commons.lang3.math.Fraction(w.intValue() , org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((int) / d1), ((fraction.int) / d2)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fraction":"fraction"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:515","type":"CtBinaryOperatorImpl","sourcecode":"value instanceof byte[]"},"failures":[15,15,16,17,17,18,109,110,111,112,113,114,114,115,116,117,118,119,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,143,144,145,146,146,147,148,149,150,151,151,152,153,153,191,154,155,156,157,158,159,160,160,19,161,192,162,193,163,164,165,166],"tindex":"6de1f302-2e7e-11e6-bace-ff7062a10714","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:581","type":"CtMethodImpl","sourcecode":"protected void appendCyclicObject(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value) {\n    if (value instanceof byte[]) {\n        {\n            org.apache.commons.lang3.ObjectUtils.identityToString(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1135","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[278],"tindex":"6de1f303-2e7e-11e6-bace-d725b8992055","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1134","type":"CtMethodImpl","sourcecode":"public static short min(short a, final short b, final short c) {\n    if (c < b) {\n        {\n            if (b < a) {\n                a = b;\n            } \n            if (c < a) {\n                a = c;\n            } \n            return a;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"c"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:657","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"6de1f304-2e7e-11e6-bace-b570fc328861","method":{"position":"org.apache.commons.lang3.text.StrBuilder:863","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(str).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1764","type":"CtBinaryOperatorImpl","sourcecode":"index >= 0"},"failures":[279],"tindex":"6de21a15-2e7e-11e6-bace-43cf3045833c","method":{"position":"org.apache.commons.lang3.Validate:715","type":"CtMethodImpl","sourcecode":"public static <T extends java.util.Collection<?>>T validIndex(final T collection, final int index) {\n    if (index >= 0) {\n        {\n            return org.apache.commons.lang3.Validate.validIndex(collection, index, org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, java.lang.Integer.valueOf(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3662","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[280],"tindex":"6de21a16-2e7e-11e6-bace-afc0ff0159ee","method":{"position":"org.apache.commons.lang3.math.NumberUtils:959","type":"CtMethodImpl","sourcecode":"public static int max(final int[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            int int = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                if ((array[j]) > max) {\n                    max = array[j];\n                } \n            }\n            return max;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:496","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[281],"tindex":"6de26837-2e7e-11e6-bace-2b8042844dc9","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:209","type":"CtMethodImpl","sourcecode":"public static java.lang.String replace(final java.lang.Object source, final java.util.Properties valueProperties) {\n    if (source == null) {\n        {\n            if (valueProperties == null) {\n                return source.toString();\n            } \n            final java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>();\n            final java.util.Enumeration<?> java.util.Enumeration<?> = valueProperties.propertyNames();\n            while (propNames.hasMoreElements()) {\n                final java.lang.String java.lang.String = ((java.lang.String)(propNames.nextElement()));\n                final java.lang.String java.lang.String = valueProperties.getProperty(propName);\n                valueMap.put(propName, propValue);\n            }\n            return org.apache.commons.lang3.text.StrSubstitutor.replace(source, valueMap);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:656","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[282],"tindex":"6de30478-2e7e-11e6-bace-bdc3ffea7a86","method":{"position":"org.apache.commons.lang3.StringUtils:7363","type":"CtMethodImpl","sourcecode":"public static java.lang.String normalizeSpace(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.util.regex.Pattern.matcher(org.apache.commons.lang3.StringUtils.trim(str)).replaceAll(org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:465","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"6de32b89-2e7e-11e6-bace-f1af11c5c312","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:875","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final java.lang.Object[] lhs, final java.lang.Object[] rhs) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Object[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Object[] getLeft() {\n                        return lhs;\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Object[] getRight() {\n                        return rhs;\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1844","type":"CtBinaryOperatorImpl","sourcecode":"contentEnd == null"},"failures":[283],"tindex":"6de32b8a-2e7e-11e6-bace-55d125afe273","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1843","type":"CtMethodImpl","sourcecode":"protected void setContentEnd(java.lang.String contentEnd) {\n    if (contentEnd == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (contentEnd == null) {\n                contentEnd = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = contentEnd;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"contentEnd":"contentEnd"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:518","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[284],"tindex":"6de3529b-2e7e-11e6-bace-99dc50e6d258","method":{"position":"org.apache.commons.lang3.time.DateUtils:1289","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMilliseconds(final java.util.Date date, final int fragment) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:261","type":"CtBinaryOperatorImpl","sourcecode":"countryCode == null"},"failures":[285],"tindex":"6de3529c-2e7e-11e6-bace-edfbd77378a5","method":{"position":"org.apache.commons.lang3.LocaleUtils:260","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.util.Locale> languagesByCountry(final java.lang.String countryCode) {\n    if (countryCode == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (countryCode == null) {\n                return java.util.Collections.emptyList();\n            } \n            java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(countryCode);\n            if (langs == null) {\n                langs = new java.util.ArrayList<java.util.Locale>();\n                final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.availableLocaleList();\n                for (int int = 0 ; i < (locales.size()) ; i++) {\n                    final java.util.Locale java.util.Locale = locales.get(i);\n                    if ((countryCode.equals(locale.getCountry())) && (locale.getVariant().isEmpty())) {\n                        langs.add(locale);\n                    } \n                }\n                langs = java.util.Collections.unmodifiableList(langs);\n                org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.putIfAbsent(countryCode, langs);\n                langs = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(countryCode);\n            } \n            return langs;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"countryCode":"countryCode"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:518","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"6de3529d-2e7e-11e6-bace-138d0b5a27ef","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:461","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.util.Date date, final java.lang.StringBuffer buf) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(date, buf);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1740","type":"CtBinaryOperatorImpl","sourcecode":"arrayStart == null"},"failures":[0,1,2,3,4,5,6,7],"tindex":"6de379ae-2e7e-11e6-bace-e339b3012b64","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:203","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setArrayStart(final java.lang.String arrayStart) {\n    if (arrayStart == null) {\n        {\n            super.setArrayStart(arrayStart);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arrayStart":"arrayStart"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"th == null"},"failures":[286],"tindex":"6de379af-2e7e-11e6-bace-279d7dae6f9e","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:691","type":"CtMethodImpl","sourcecode":"public static java.lang.String getRootCauseMessage(final java.lang.Throwable th) {\n    if (th == null) {\n        {\n            java.lang.Throwable java.lang.Throwable = org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(th);\n            root = root == null ? th : root;\n            return org.apache.commons.lang3.exception.ExceptionUtils.getMessage(root);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"th":"th"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:435","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[287],"tindex":"6de379b0-2e7e-11e6-bace-81b84e4b4f85","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:180","type":"CtMethodImpl","sourcecode":"public static float max(final float[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } else if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n            } \n            float float = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                max = org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max);\n            }\n            return max;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3222","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[288,289],"tindex":"6de3a0c1-2e7e-11e6-bace-6b3d7db7011b","method":{"position":"org.apache.commons.lang3.StringUtils:1475","type":"CtMethodImpl","sourcecode":"public static boolean containsIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence searchStr) {\n    if (str == null) {\n        {\n            if ((str == null) || (searchStr == null)) {\n                return false;\n            } \n            final int int = searchStr.length();\n            final int int = (str.length()) - len;\n            for (int int = 0 ; i <= max ; i++) {\n                if (org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:804","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"6de3a0c2-2e7e-11e6-bace-8919d11f3887","method":{"position":"org.apache.commons.lang3.time.DateUtils:517","type":"CtMethodImpl","sourcecode":"private static java.util.Date add(final java.util.Date date, final int calendarField, final int amount) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            c.setTime(date);\n            c.add(calendarField, amount);\n            return c.getTime();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3368","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"6de3a0c3-2e7e-11e6-bace-6b6f6a484bb8","method":{"position":"org.apache.commons.lang3.ArrayUtils:5502","type":"CtMethodImpl","sourcecode":"public static int[] removeAll(final int[] array, final int... indices) {\n    if (indices == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((int[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"indices"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:180","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[],"tindex":"6de3a0c4-2e7e-11e6-bace-2b777b6f578d","method":{"position":"org.apache.commons.lang3.time.DateUtils:1726","type":"CtMethodImpl","sourcecode":"public static boolean truncatedEquals(final java.util.Calendar cal1, final java.util.Calendar cal2, final int field) {\n    if ((cal1 == null) || (cal2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cal1 == null) || (cal1 == null)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(cal1, cal2, field)) == 0;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"cal2","cal1":"cal1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:797","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[290,291,292,293,238,239,240,241,242,243,244,245,246,247,249,250,253,254,257,258,259,260,167,168,261,262,263,264,265,294,295,296,45,297,298,271,272,273,299,300],"tindex":"6de3c7d5-2e7e-11e6-bace-098515500c60","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:795","type":"CtMethodImpl","sourcecode":"private static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(final java.lang.reflect.Type type, final java.lang.Class<?> toClass, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> subtypeVarAssigns) {\n    if (type instanceof java.lang.Class<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type instanceof java.lang.Class<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.Class<?>)(type)), toClass, subtypeVarAssigns);\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.reflect.ParameterizedType)(type)), toClass, subtypeVarAssigns);\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType(), (toClass.isArray() ? toClass.getComponentType() : toClass), subtypeVarAssigns);\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(((java.lang.reflect.WildcardType)(type)))) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toClass)) {\n                        return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(bound, toClass, subtypeVarAssigns);\n                    } \n                }\n                return null;\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(type)))) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toClass)) {\n                        return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(bound, toClass, subtypeVarAssigns);\n                    } \n                }\n                return null;\n            } \n            throw new java.lang.IllegalStateException((\"found an unhandled type: \" + type));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:214","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[109,109,138,138,139,140,141,142,143,144,145,146,147,147,148,149,150,151,152,153,191,154,155,156,157,158,159,160,19,161,192,162,193,163,164,165,166],"tindex":"6de3c7d6-2e7e-11e6-bace-e1de8a0fb6e0","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1114","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:414","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"6de3eee7-2e7e-11e6-bace-a5e50d44a2a8","method":{"position":"org.apache.commons.lang3.time.FastDateParser:280","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Date parse(final java.lang.String source) throws java.text.ParseException {\n    if (source == null) {\n        {\n            final java.util.Date java.util.Date = parse(source, new java.text.ParsePosition(0));\n            if (date == null) {\n                if (java.util.Locale.equals(org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.java.util.Locale)) {\n                    throw new java.text.ParseException(((((((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\") + source) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n                } \n                throw new java.text.ParseException((((\"Unparseable date: \\\"\" + source) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n            } \n            return date;\n        }\n    } else {\n        throw new java.text.ParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"6de3eee8-2e7e-11e6-bace-2966bf4da297","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1502","type":"CtMethodImpl","sourcecode":"protected void appendNullText(final java.lang.StringBuffer buffer, final java.lang.String fieldName) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                {\n                    buffer.append(java.lang.String);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.mutable.MutableByte:246","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.mutable.MutableByte"},"failures":[301],"tindex":"6de3eee9-2e7e-11e6-bace-1b984f549d4e","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.lang3.mutable.MutableByte) {\n        {\n            if (obj == (org.apache.commons.lang3.text.ExtendedMessageFormat.this)) {\n                return true;\n            } \n            if (obj == null) {\n                return false;\n            } \n            if (!(super.equals(obj))) {\n                return false;\n            } \n            if (org.apache.commons.lang3.ObjectUtils.notEqual(getClass(), obj.getClass())) {\n                return false;\n            } \n            final org.apache.commons.lang3.text.ExtendedMessageFormat org.apache.commons.lang3.text.ExtendedMessageFormat = ((org.apache.commons.lang3.text.ExtendedMessageFormat)(obj));\n            if (org.apache.commons.lang3.ObjectUtils.notEqual(java.lang.String, rhs.java.lang.String)) {\n                return false;\n            } \n            if (org.apache.commons.lang3.ObjectUtils.notEqual(java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>, rhs.java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>)) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1009","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[302,303,304,305,306,307,308,309,310,311],"tindex":"6de415fa-2e7e-11e6-bace-b9188f65af6e","method":{"position":"org.apache.commons.lang3.ArrayUtils:3433","type":"CtMethodImpl","sourcecode":"public static boolean[] toPrimitive(final java.lang.Boolean[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.boolean[];\n            } \n            final boolean[] boolean[] = new boolean[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].booleanValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:461","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isUpperCase(ch)"},"failures":[312,313],"tindex":"6de415fb-2e7e-11e6-bace-cb465361fe7b","method":{"position":"org.apache.commons.lang3.CharUtils:421","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiPrintable(final char ch) {\n    if (java.lang.Character.isUpperCase(ch)) {\n        {\n            return (ch >= 32) && (ch < 127);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3076","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[314,286,315],"tindex":"6de415fc-2e7e-11e6-bace-5f4136463010","method":{"position":"org.apache.commons.lang3.StringUtils:6198","type":"CtMethodImpl","sourcecode":"public static java.lang.String defaultString(final java.lang.String str) {\n    if (str == null) {\n        {\n            return str == null ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String : str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1434","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"6de43d0d-2e7e-11e6-bace-cd6dcfab3d2c","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:675","type":"CtMethodImpl","sourcecode":"private static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.TypeVariable<?> toTypeVariable, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (type instanceof java.lang.reflect.ParameterizedType) {\n        {\n            if (type == null) {\n                return true;\n            } \n            if (toTypeVariable == null) {\n                return false;\n            } \n            if (toTypeVariable.equals(type)) {\n                return true;\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(type)));\n                for (final java.lang.reflect.Type java.lang.reflect.Type : bounds) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toTypeVariable, typeVarAssigns)) {\n                        return true;\n                    } \n                }\n            } \n            if ((((type instanceof java.lang.Class<?>) || (type instanceof java.lang.reflect.ParameterizedType)) || (type instanceof java.lang.reflect.GenericArrayType)) || (type instanceof java.lang.reflect.WildcardType)) {\n                return false;\n            } \n            throw new java.lang.IllegalStateException((\"found an unhandled type: \" + type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:640","type":"CtBinaryOperatorImpl","sourcecode":"(toClass.isPrimitive()) && (!(cls.isPrimitive()))"},"failures":[316,294,296],"tindex":"6de43d0e-2e7e-11e6-bace-d397a7e20586","method":{"position":"org.apache.commons.lang3.ClassUtils:593","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(final java.lang.Class<?> cls, final java.lang.Class<?> toClass) {\n    if ((cls.isPrimitive()) && (!(toClass.isPrimitive()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.isAssignable(cls, toClass, org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"cls","cls":"toClass"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:73","type":"CtBinaryOperatorImpl","sourcecode":"timeZone == null"},"failures":[],"tindex":"6de43d0f-2e7e-11e6-bace-fd66df0e528f","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:133","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getInstance(final java.lang.String pattern, final java.util.TimeZone timeZone) {\n    if (timeZone == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(pattern, timeZone, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeZone":"timeZone"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:154","type":"CtBinaryOperatorImpl","sourcecode":"expression == false"},"failures":[317],"tindex":"6de46420-2e7e-11e6-bace-4b49d7b62f78","method":{"position":"org.apache.commons.lang3.Validate:178","type":"CtMethodImpl","sourcecode":"public static void isTrue(final boolean expression) {\n    if (expression == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalArgumentException(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expression":"expression"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:466","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[318],"tindex":"6de46421-2e7e-11e6-bace-0580928e16e7","method":{"position":"org.apache.commons.lang3.BooleanUtils:504","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer toIntegerObject(final java.lang.Boolean bool, final java.lang.Integer trueValue, final java.lang.Integer falseValue, final java.lang.Integer nullValue) {\n    if (bool == null) {\n        {\n            if (bool == null) {\n                return nullValue;\n            } \n            return bool.booleanValue() ? trueValue : falseValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3070","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[319],"tindex":"6de46422-2e7e-11e6-bace-67231208908a","method":{"position":"org.apache.commons.lang3.StringUtils:3335","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final long[] array, final char separator) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:727","type":"CtBinaryOperatorImpl","sourcecode":"(((nShorts - 1) * 16) + dstPos) >= 64"},"failures":[],"tindex":"6de46423-2e7e-11e6-bace-f53fe02820bc","method":{"position":"org.apache.commons.lang3.Conversion:1255","type":"CtMethodImpl","sourcecode":"public static short[] intToShortArray(final int src, final int srcPos, final short[] dst, final int dstPos, final int nShorts) {\n    if ((((src - 1) * 16) + srcPos) >= 64) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((dstPos - 1) * 16) + src) >= 32) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (0 == nShorts) {\n                        return dst;\n                    } \n                    if ((((nShorts - 1) * 16) + srcPos) >= 32) {\n                        throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 32\");\n                    } \n                    int int = 0;\n                    for (int int = 0 ; i < nShorts ; i++) {\n                        shift = (i * 16) + srcPos;\n                        dst[(dstPos + i)] = ((short)(65535 & (src >> shift)));\n                    }\n                    return dst;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"srcPos","nShorts":"src"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:557","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[320],"tindex":"6de48b34-2e7e-11e6-bace-adda05730992","method":{"position":"org.apache.commons.lang3.StringUtils:2017","type":"CtMethodImpl","sourcecode":"public static int lastIndexOfAny(final java.lang.CharSequence str, final java.lang.CharSequence... searchStrs) {\n    if (str == null) {\n        {\n            if ((str == null) || (searchStrs == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            final int int = searchStrs.int;\n            int int = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            int int = 0;\n            for (int int = 0 ; i < sz ; i++) {\n                final java.lang.CharSequence java.lang.CharSequence = searchStrs[i];\n                if (search == null) {\n                    continue;\n                } \n                tmp = org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(str, search, str.length());\n                if (tmp > ret) {\n                    ret = tmp;\n                } \n            }\n            return ret;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}