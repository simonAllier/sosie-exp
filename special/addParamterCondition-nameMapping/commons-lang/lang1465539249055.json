{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":21,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":250,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":107,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfBoolean":330,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":109,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":307,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":279,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":106,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":141,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArrayOutOfBoundsIndex":297,"org.apache.commons.lang3.ConversionTest.testIntToBinary":308,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Cal":151,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementBooleanArray":336,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character":347,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":35,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":331,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":120,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":345,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":166,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfIgnoreCase_String":300,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":193,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArrayAsObject":262,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":83,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":222,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testNullArgument":257,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":124,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":41,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":126,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArrayRemoveNone":295,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":361,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterType":179,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays":229,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":24,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArray":236,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":145,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":78,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses2D":232,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":253,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":42,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort":287,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringNull":312,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":142,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":32,"org.apache.commons.lang3.math.NumberUtilsTest.testMinShort":278,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":111,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":249,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":95,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":200,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":320,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":167,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":318,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":99,"org.apache.commons.lang3.text.StrBuilderTest.testRightString":346,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredField":366,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":18,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":181,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":223,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":187,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":89,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":247,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":37,"org.apache.commons.lang3.EnumUtilsTest.test_getEnum":317,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":66,"org.apache.commons.lang3.math.NumberUtilsTest.testMinByte":284,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":39,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":183,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfInt":339,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort_emptyArray":271,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":117,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfIgnoreCase_StringInt":299,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":102,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthShort":265,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":199,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBooleanInt":238,"org.apache.commons.lang3.math.NumberUtilsTest.testToByteString":325,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":38,"org.apache.commons.lang3.math.FractionTest.testDivide":266,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble":280,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":341,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":77,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":306,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":116,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumShort":344,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":357,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":328,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":190,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":219,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":185,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":246,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":81,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":129,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":255,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":55,"org.apache.commons.lang3.math.NumberUtilsTest.testMinFloat":276,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray_int_int":178,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat_emptyArray":277,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":171,"org.apache.commons.lang3.ArrayUtilsTest.testContainsByte":2,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":192,"org.apache.commons.lang3.ClassUtilsTest.testHierarchyIncludingInterfaces":301,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":355,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":50,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":191,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementIntArray":337,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":74,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":182,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble_emptyArray":272,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":172,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":105,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfChar":259,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":28,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":326,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":63,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameLocalTime_Cal":237,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":127,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Iterator":314,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":155,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":197,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":360,"org.apache.commons.lang3.math.NumberUtilsTest.testMinShort_emptyArray":270,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":144,"org.apache.commons.lang3.ClassUtilsTest.testGetInnerClass":230,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":189,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":159,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":184,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDouble":304,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":58,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":215,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":88,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses":231,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_NoAutoboxing":244,"org.apache.commons.lang3.math.NumberUtilsTest.testMinDouble":281,"org.apache.commons.lang3.ArrayUtilsTest.testContainsInt":338,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":68,"org.apache.commons.lang3.math.NumberUtilsTest.testMinLong":285,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":123,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":208,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":82,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementBooleanArray":329,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String_int_int":350,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":121,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":173,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":242,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":251,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":61,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt_emptyArray":273,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":342,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":348,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":214,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":125,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":263,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":33,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":180,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":69,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":25,"org.apache.commons.lang3.text.StrBuilderTest.testMidString":352,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":98,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBooleanWithStartIndex":335,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":54,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":175,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_NullString":311,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":93,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt":291,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":76,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Date":293,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArrayNegativeIndex":298,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":51,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":196,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":134,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":27,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":176,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":221,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":57,"org.apache.commons.lang3.math.NumberUtilsTest.testMinLong_emptyArray":292,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":59,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":14,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":195,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":72,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong":283,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":71,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt":290,"org.apache.commons.lang3.math.NumberUtilsTest.testMinByte_emptyArray":289,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":135,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":138,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":205,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Date":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":60,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyShortObject":146,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":29,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":220,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeExternalExec":359,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":26,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissing":321,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":94,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArray":261,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":45,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":118,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfFloatWithStartIndex":148,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":130,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfBooleanWithStartIndex":334,"org.apache.commons.lang3.ArrayUtilsTest.testToString":13,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":19,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":310,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat":286,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":164,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":165,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray_int_int":177,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":170,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":168,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":198,"org.apache.commons.lang3.ValidateTest.testMatchesPattern_withMessage":241,"org.apache.commons.lang3.time.DateUtilsTest.testToCalendar":313,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":100,"org.apache.commons.lang3.math.FractionTest.testAdd":0,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendPadding":315,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":209,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException2":363,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException1":362,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":245,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":254,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":97,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException4":365,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException3":364,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":108,"org.apache.commons.lang3.ClassUtilsTest.testWithInterleavingWhitespace":233,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":194,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt_emptyArray":288,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":122,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_long":240,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Iterator":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":49,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":302,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":96,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArray":296,"org.apache.commons.lang3.text.StrTokenizerTest.test8":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":85,"org.apache.commons.lang3.text.StrTokenizerTest.test5":9,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":210,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":216,"org.apache.commons.lang3.text.StrTokenizerTest.test4":8,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":217,"org.apache.commons.lang3.text.StrTokenizerTest.test7":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":86,"org.apache.commons.lang3.text.StrTokenizerTest.test6":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":87,"org.apache.commons.lang3.text.StrTokenizerTest.test1":5,"org.apache.commons.lang3.ClassUtilsTest.test_getSimpleName_Object":260,"org.apache.commons.lang3.text.StrTokenizerTest.test3":7,"org.apache.commons.lang3.BooleanUtilsTest.test_toIntegerObject_Boolean":153,"org.apache.commons.lang3.text.StrTokenizerTest.test2":6,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":234,"org.apache.commons.lang3.math.NumberUtilsTest.testMinFloat_emptyArray":275,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":62,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":16,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyShortObjectEmptyArray":147,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":36,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDouble":305,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxByte":282,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleWithStartIndex":303,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":22,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":3,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":239,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":203,"org.apache.commons.lang3.ClassUtilsTest.testGetClassClassNotFound":235,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":258,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfIntWithStartIndex":340,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":252,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetAccessibleConstructorFromDescription":322,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":186,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":353,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":248,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":40,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetAccessibleConstructor":324,"org.apache.commons.lang3.math.FractionTest.testSubtract":1,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":218,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":48,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":212,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":294,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":202,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":327,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_NullNull":309,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":90,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":358,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":119,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":137,"org.apache.commons.lang3.ConversionTest.testBinaryToShort":316,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":354,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":128,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":351,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":156,"org.apache.commons.lang3.math.NumberUtilsTest.testMinDouble_emptyArray":268,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong_emptyArray":274,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":158,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":157,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeExactConstructor":323,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":104,"org.apache.commons.lang3.time.FastDateParserTest.testParses":201,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":47,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":112,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":204,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":65,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":224,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBoolean":332,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":161,"org.apache.commons.lang3.builder.EqualsBuilderTest.testLongArray":226,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":162,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":356,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_Autoboxing":243,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":160,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":132,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementCharArray":264,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxByte_emptyArray":269,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":343,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfFloat":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":67,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":133,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":4,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":256,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":207,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":319,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":174,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":206,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstring_StringIntInt":267,"org.apache.commons.lang3.ArrayUtilsTest.testContainsBoolean":333,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":53,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":64,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayLong":228,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":349,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":23},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:797","type":"CtBinaryOperatorImpl","sourcecode":"fraction == null"},"failures":[0,1],"tindex":"8af9b8be-2ed2-11e6-90f7-c916abcb4694","method":{"position":"org.apache.commons.lang3.math.Fraction:740","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.math.Fraction addSub(final org.apache.commons.lang3.math.Fraction fraction, final boolean isAdd) {\n    if (fraction == null) {\n        {\n            if (fraction == null) {\n                throw new java.lang.IllegalArgumentException(\"The fraction must not be null\");\n            } \n            if ((int) == 0) {\n                return isAdd ? fraction : fraction.negate();\n            } \n            if ((fraction.int) == 0) {\n                return org.apache.commons.lang3.math.Fraction.this;\n            } \n            final int int = org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, fraction.int);\n            if (d1 == 1) {\n                final int int = org.apache.commons.lang3.math.Fraction.mulAndCheck(int, fraction.int);\n                final int int = org.apache.commons.lang3.math.Fraction.mulAndCheck(fraction.int, int);\n                return new org.apache.commons.lang3.math.Fraction((isAdd ? org.apache.commons.lang3.math.Fraction.addAndCheck(uvp, upv) : org.apache.commons.lang3.math.Fraction.subAndCheck(uvp, upv)) , org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int, fraction.int));\n            } \n            final java.math.BigInteger java.math.BigInteger = java.math.BigInteger.valueOf(int).multiply(java.math.BigInteger.valueOf(((fraction.int) / d1)));\n            final java.math.BigInteger java.math.BigInteger = java.math.BigInteger.valueOf(fraction.int).multiply(java.math.BigInteger.valueOf(((int) / d1)));\n            final java.math.BigInteger java.math.BigInteger = isAdd ? uvp.add(upv) : uvp.subtract(upv);\n            final int int = t.mod(java.math.BigInteger.valueOf(d1)).intValue();\n            final int int = tmodd1 == 0 ? d1 : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(tmodd1, d1);\n            final java.math.BigInteger java.math.BigInteger = t.divide(java.math.BigInteger.valueOf(d2));\n            if ((w.bitLength()) > 31) {\n                throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\");\n            } \n            return new org.apache.commons.lang3.math.Fraction(w.intValue() , org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((int) / d1), ((fraction.int) / d2)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fraction":"fraction"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:623","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[2],"tindex":"8afaa31f-2ed2-11e6-90f7-05bd4cff6f47","method":{"position":"org.apache.commons.lang3.ArrayUtils:2507","type":"CtMethodImpl","sourcecode":"public static boolean contains(final byte[] array, final byte valueToFind) {\n    if (array == null) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1042","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"8afaa320-2ed2-11e6-90f7-a5a922a64bb1","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1419","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtBinaryOperatorImpl","sourcecode":"index != 0"},"failures":[3],"tindex":"8afaca31-2ed2-11e6-90f7-83c9088e283d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1575","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(int index, final boolean value) {\n    if (index != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validateIndex(index);\n            if (value) {\n                ensureCapacity(((int) + 4));\n                java.lang.System.arraycopy(char[], index, char[], (index + 4), ((int) - index));\n                char[][(index++)] = 't';\n                char[][(index++)] = 'r';\n                char[][(index++)] = 'u';\n                char[][index] = 'e';\n                int += 4;\n            } else {\n                ensureCapacity(((int) + 5));\n                java.lang.System.arraycopy(char[], index, char[], (index + 5), ((int) - index));\n                char[][(index++)] = 'f';\n                char[][(index++)] = 'a';\n                char[][(index++)] = 'l';\n                char[][(index++)] = 's';\n                char[][index] = 'e';\n                int += 5;\n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1574","type":"CtBinaryOperatorImpl","sourcecode":"fullDetailRequest == null"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,43,44,44,45,45,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,59,59,60,61,62,63,64,65,66,67,68,69,70,70,71,71,72,73,74,75,75,76,76,77,77,78,79,80,81,81,82,82,83,84,85,86,87,88,89,89,90,91,91,92,92,93,93,94,94,95,95,96,97,98,98,99,99,100,101,102,102,103,104,104,105,106,106,107,107,108,108,109,109,110,111,112,113,113,114,114,115,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"tindex":"8afaf142-2ed2-11e6-90f7-0fcfaba32bcf","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1573","type":"CtMethodImpl","sourcecode":"protected boolean isFullDetail(final java.lang.Boolean fullDetailRequest) {\n    if (fullDetailRequest == null) {\n        {\n            if (fullDetailRequest == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (fullDetailRequest == null) {\n                        return boolean;\n                    } \n                    return fullDetailRequest.booleanValue();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fullDetailRequest":"fullDetailRequest"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[67,67],"tindex":"8afb1853-2ed2-11e6-90f7-ebec6df9027c","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:759","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final char value) {\n    if (fieldName == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:796","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[19,25,33,39,91,91,92,119,125,131],"tindex":"8afb3f64-2ed2-11e6-90f7-031e452333d1","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:457","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final long[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"8afb3f65-2ed2-11e6-90f7-091725cae426","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:212","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern, final java.util.TimeZone timeZone) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, timeZone, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3162","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[146,147],"tindex":"8afb6676-2ed2-11e6-90f7-a730148dce3e","method":{"position":"org.apache.commons.lang3.ArrayUtils:732","type":"CtMethodImpl","sourcecode":"public static java.lang.Short[] nullToEmpty(final java.lang.Short[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Short[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1336","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[148,149],"tindex":"8afb6677-2ed2-11e6-90f7-8744727aaf7c","method":{"position":"org.apache.commons.lang3.ArrayUtils:2808","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final float[] array, final float valueToFind, int startIndex) {\n    if (array == null) {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:180","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[150,151],"tindex":"8afb8d88-2ed2-11e6-90f7-e7dc5146f529","method":{"position":"org.apache.commons.lang3.time.DateUtils:179","type":"CtMethodImpl","sourcecode":"public static boolean isSameDay(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if ((cal2 == null) || (cal2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cal2 == null) || (cal2 == null)) {\n                {\n                    if ((cal1 == null) || (cal2 == null)) {\n                        throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n                    } \n                    return (((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"cal2","cal1":"cal2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2335","type":"CtBinaryOperatorImpl","sourcecode":"separator == null"},"failures":[152],"tindex":"8afbb499-2ed2-11e6-90f7-a9a97ff063a0","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1179","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendWithSeparators(final java.util.Iterator<?> it, final java.lang.String separator) {\n    if (separator == null) {\n        {\n            if (it != null) {\n                @java.lang.SuppressWarnings(value = \"deprecation\")\n                final java.lang.String java.lang.String = org.apache.commons.lang3.ObjectUtils.toString(separator);\n                while (it.hasNext()) {\n                    append(it.next());\n                    if (it.hasNext()) {\n                        append(sep);\n                    } \n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"separator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:64","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[153],"tindex":"8afbb49a-2ed2-11e6-90f7-29bd308287d7","method":{"position":"org.apache.commons.lang3.BooleanUtils:426","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer toIntegerObject(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            if (bool == null) {\n                return null;\n            } \n            return bool.booleanValue() ? org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.java.lang.Integer : org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.java.lang.Integer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:998","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[],"tindex":"8afbdbab-2ed2-11e6-90f7-41e346a251cd","method":{"position":"org.apache.commons.lang3.ArrayUtils:1034","type":"CtMethodImpl","sourcecode":"public static char[] subarray(final char[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            final char[] char[] = new char[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"endIndexExclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:127","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[154],"tindex":"8afc02bc-2ed2-11e6-90f7-79603ab0c249","method":{"position":"org.apache.commons.lang3.text.WordUtils:504","type":"CtMethodImpl","sourcecode":"public static java.lang.String initials(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.text.WordUtils.initials(str, null);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:256","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[155,156,157,158,5,6,7,8,9,10,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"tindex":"8afc02bd-2ed2-11e6-90f7-c1b026f7295a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:744","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final char[] chars, final int startIndex, final int length) {\n    if (chars == null) {\n        {\n            if (chars == null) {\n                return appendNull();\n            } \n            if ((startIndex < 0) || (startIndex > (chars.int))) {\n                throw new java.lang.StringIndexOutOfBoundsException((\"Invalid startIndex: \" + length));\n            } \n            if ((length < 0) || ((startIndex + length) > (chars.int))) {\n                throw new java.lang.StringIndexOutOfBoundsException((\"Invalid length: \" + length));\n            } \n            if (length > 0) {\n                final int int = length();\n                ensureCapacity((len + length));\n                java.lang.System.arraycopy(chars, startIndex, char[], len, length);\n                int += length;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"chars"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4938","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[179,180],"tindex":"8afc29ce-2ed2-11e6-90f7-8b94a072ba50","method":{"position":"org.apache.commons.lang3.StringUtils:3221","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] splitByCharacterType(final java.lang.String str, final boolean camelCase) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (str.isEmpty()) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            final char[] char[] = str.toCharArray();\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = 0;\n            int int = java.lang.Character.getType(c[tokenStart]);\n            for (int int = tokenStart + 1 ; pos < (c.int) ; pos++) {\n                final int int = java.lang.Character.getType(c[pos]);\n                if (type == currentType) {\n                    continue;\n                } \n                if ((camelCase && (type == (java.lang.Character.java.lang.Character.byte))) && (currentType == (java.lang.Character.java.lang.Character.byte))) {\n                    final int int = pos - 1;\n                    if (newTokenStart != tokenStart) {\n                        list.add(new java.lang.String(c , tokenStart , (newTokenStart - tokenStart)));\n                        tokenStart = newTokenStart;\n                    } \n                } else {\n                    list.add(new java.lang.String(c , tokenStart , (pos - tokenStart)));\n                    tokenStart = pos;\n                }\n                currentType = type;\n            }\n            list.add(new java.lang.String(c , tokenStart , ((c.int) - tokenStart)));\n            return list.toArray(new java.lang.String[list.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1102","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225],"tindex":"8afc50df-2ed2-11e6-90f7-0539d8601950","method":{"position":"org.apache.commons.lang3.time.FastDateParser:675","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n    if (value == null) {\n        {\n            cal.set(int, modify(java.lang.Integer.parseInt(value)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:694","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[226],"tindex":"8afc76f0-2ed2-11e6-90f7-35bd859b5d58","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:670","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final long[] lhs, final long[] rhs) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:768","type":"CtInvocationImpl","sourcecode":"str.trim().startsWith(\"--\")"},"failures":[],"tindex":"8afc9e01-2ed2-11e6-90f7-0f612319a5dd","method":{"position":"org.apache.commons.lang3.StringUtils:7411","type":"CtMethodImpl","sourcecode":"private static java.lang.String appendIfMissing(final java.lang.String str, final java.lang.CharSequence suffix, final boolean ignoreCase, final java.lang.CharSequence... suffixes) {\n    if (suffix.trim().startsWith(\"--\")) {\n        {\n            if (((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(suffix))) || (org.apache.commons.lang3.StringUtils.endsWith(str, suffix, ignoreCase))) {\n                return str;\n            } \n            if ((suffixes != null) && ((suffixes.int) > 0)) {\n                for (final java.lang.CharSequence java.lang.CharSequence : suffixes) {\n                    if (org.apache.commons.lang3.StringUtils.endsWith(str, s, ignoreCase)) {\n                        return str;\n                    } \n                }\n            } \n            return str + (suffix.toString());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"suffix"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1574","type":"CtBinaryOperatorImpl","sourcecode":"fullDetailRequest == null"},"failures":[],"tindex":"8afc9e02-2ed2-11e6-90f7-ad147a4b3d9d","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1573","type":"CtMethodImpl","sourcecode":"protected boolean isFullDetail(final java.lang.Boolean fullDetailRequest) {\n    if (fullDetailRequest == null) {\n        {\n            if (fullDetailRequest == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (fullDetailRequest == null) {\n                        return boolean;\n                    } \n                    return fullDetailRequest.booleanValue();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fullDetailRequest":"fullDetailRequest"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7232","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(string)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchStrings))"},"failures":[227],"tindex":"8afcc513-2ed2-11e6-90f7-51cb7ab47551","method":{"position":"org.apache.commons.lang3.StringUtils:7231","type":"CtMethodImpl","sourcecode":"public static boolean startsWithAny(final java.lang.CharSequence string, final java.lang.CharSequence... searchStrings) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(string)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchStrings))) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(string)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchStrings))) {\n                return false;\n            } \n            for (final java.lang.CharSequence java.lang.CharSequence : searchStrings) {\n                if (org.apache.commons.lang3.StringUtils.startsWith(string, searchString)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"string":"string","searchStrings":"searchStrings"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3206","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"8afcc514-2ed2-11e6-90f7-2f61c5c2bd67","method":{"position":"org.apache.commons.lang3.ArrayUtils:5444","type":"CtMethodImpl","sourcecode":"public static short[] removeElements(final short[] array, final short... values) {\n    if (values == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final short short : values) {\n                final java.lang.Short java.lang.Short = java.lang.Short.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Short java.lang.Short = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.shortValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"values"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:339","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[228],"tindex":"8afcec25-2ed2-11e6-90f7-839e7dbc82c2","method":{"position":"org.apache.commons.lang3.ArrayUtils:914","type":"CtMethodImpl","sourcecode":"public static long[] subarray(final long[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.long[];\n            } \n            final long[] long[] = new long[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"ch < 256"},"failures":[],"tindex":"8afcec26-2ed2-11e6-90f7-a33f756c4f72","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1016","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final char ch) {\n    if (ch < 256) {\n        {\n            return append(ch).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:963","type":"CtInvocationImpl","sourcecode":"className.endsWith(\"[]\")"},"failures":[229,230,231,232,233,234,235],"tindex":"8afcec27-2ed2-11e6-90f7-f9244dbfa5cd","method":{"position":"org.apache.commons.lang3.ClassUtils:959","type":"CtMethodImpl","sourcecode":"private static java.lang.String toCanonicalName(java.lang.String className) {\n    if (className.endsWith(\"[]\")) {\n        {\n            className = org.apache.commons.lang3.StringUtils.deleteWhitespace(className);\n            if (className == null) {\n                throw new java.lang.NullPointerException(\"className must not be null.\");\n            } else if (className.endsWith(\"[]\")) {\n                final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n                while (className.endsWith(\"[]\")) {\n                    className = className.substring(0, ((className.length()) - 2));\n                    classNameBuffer.append(\"[\");\n                }\n                final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(className);\n                if (abbreviation != null) {\n                    classNameBuffer.append(abbreviation);\n                } else {\n                    classNameBuffer.append(\"L\").append(className).append(\";\");\n                }\n                className = classNameBuffer.toString();\n            } \n            return className;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"className"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1009","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[236],"tindex":"8afd1338-2ed2-11e6-90f7-adc8c7c6b955","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:859","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final java.lang.Object[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final java.lang.Object java.lang.Object : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.tuple.Pair:134","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry<?, ?>"},"failures":[],"tindex":"8afd1339-2ed2-11e6-90f7-f3926499368d","method":{"position":"org.apache.commons.lang3.mutable.MutableDouble:275","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (obj instanceof org.apache.commons.lang3.mutable.MutableDouble) && ((java.lang.Double.doubleToLongBits(((org.apache.commons.lang3.mutable.MutableDouble)(obj)).double)) == (java.lang.Double.doubleToLongBits(double)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:180","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[237],"tindex":"8afd3a4a-2ed2-11e6-90f7-3dc0b0cdd25c","method":{"position":"org.apache.commons.lang3.time.DateUtils:238","type":"CtMethodImpl","sourcecode":"public static boolean isSameLocalTime(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if ((cal2 == null) || (cal2 == null)) {\n        {\n            if ((cal1 == null) || (cal2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return ((((((((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.getClass()) == (cal2.getClass()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"cal2","cal1":"cal2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSet:174","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[238],"tindex":"8afd3a4b-2ed2-11e6-90f7-172046988a5c","method":{"position":"org.apache.commons.lang3.StringUtils:2723","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByWholeSeparator(final java.lang.String str, final java.lang.String separator, final int max) {\n    if (separator == null) {\n        {\n            if (str == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(str, separator, max, false);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5611","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[239],"tindex":"8afd3a4c-2ed2-11e6-90f7-7577560be671","method":{"position":"org.apache.commons.lang3.StringUtils:5636","type":"CtMethodImpl","sourcecode":"public static java.lang.String lowerCase(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            return str.toLowerCase();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3048","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[240],"tindex":"8afd615d-2ed2-11e6-90f7-410871bb9d6e","method":{"position":"org.apache.commons.lang3.ArrayUtils:3025","type":"CtMethodImpl","sourcecode":"public static long[] toPrimitive(final java.lang.Long[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.long[];\n            } \n            final long[] long[] = new long[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].longValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:762","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[241],"tindex":"8afd615e-2ed2-11e6-90f7-b5ef2fdca9fb","method":{"position":"org.apache.commons.lang3.Validate:872","type":"CtMethodImpl","sourcecode":"public static void matchesPattern(final java.lang.CharSequence input, final java.lang.String pattern, final java.lang.String message, final java.lang.Object... values) {\n    if (input == null) {\n        {\n            if ((java.util.regex.Pattern.matches(pattern, input)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:109","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"8afd615f-2ed2-11e6-90f7-d7ca3377e6aa","method":{"position":"org.apache.commons.lang3.text.WordUtils:504","type":"CtMethodImpl","sourcecode":"public static java.lang.String initials(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.text.WordUtils.initials(str, null);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:762","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[242],"tindex":"8afd8870-2ed2-11e6-90f7-8bbb26171e5e","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:604","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeHtml3(final java.lang.String input) {\n    if (input != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                {\n                    return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:514","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isSameLength(classArray, toClassArray)) == false"},"failures":[243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"tindex":"8afd8871-2ed2-11e6-90f7-67d47e6025b6","method":{"position":"org.apache.commons.lang3.ClassUtils:513","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(java.lang.Class<?>[] classArray, java.lang.Class<?>[] toClassArray, final boolean autoboxing) {\n    if ((org.apache.commons.lang3.ArrayUtils.isSameLength(classArray, classArray)) == false) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isSameLength(classArray, toClassArray)) == false) {\n                return false;\n            } \n            if (classArray == null) {\n                classArray = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Class<?>[];\n            } \n            if (toClassArray == null) {\n                toClassArray = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Class<?>[];\n            } \n            for (int int = 0 ; i < (classArray.int) ; i++) {\n                if ((org.apache.commons.lang3.ClassUtils.isAssignable(classArray[i], toClassArray[i], autoboxing)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClassArray":"classArray","classArray":"classArray"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2426","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"8afd8872-2ed2-11e6-90f7-ebebce2ffb01","method":{"position":"org.apache.commons.lang3.StringUtils:3710","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final byte[] array, final char separator, final int startIndex, final int endIndex) {\n    if (endIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"endIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3464","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[259],"tindex":"8afdaf83-2ed2-11e6-90f7-6708886cbe49","method":{"position":"org.apache.commons.lang3.ArrayUtils:2358","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final char[] array, final char valueToFind) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:121","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"8afdaf84-2ed2-11e6-90f7-fbf04676cfc1","method":{"position":"org.apache.commons.lang3.time.DateUtils:310","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDateStrictly(final java.lang.String str, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.parseDateStrictly(str, null, parsePatterns);\n        }\n    } else {\n        throw new java.text.ParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3994","type":"CtBinaryOperatorImpl","sourcecode":"separator == null"},"failures":[],"tindex":"8afdaf85-2ed2-11e6-90f7-4d79428b9938","method":{"position":"org.apache.commons.lang3.StringUtils:2723","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByWholeSeparator(final java.lang.String str, final java.lang.String separator, final int max) {\n    if (separator == null) {\n        {\n            if (str == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(str, separator, max, false);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"separator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:268","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[260],"tindex":"8afdaf86-2ed2-11e6-90f7-6920226f7ac2","method":{"position":"org.apache.commons.lang3.ClassUtils:251","type":"CtMethodImpl","sourcecode":"public static java.lang.String getSimpleName(final java.lang.Object object, final java.lang.String valueIfNull) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return valueIfNull;\n            } \n            return org.apache.commons.lang3.ClassUtils.getSimpleName(object.getClass());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1155","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[261,262],"tindex":"8afdd697-2ed2-11e6-90f7-156f0dc2e1ef","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:723","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final float[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final float float : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:517","type":"CtBinaryOperatorImpl","sourcecode":"classArray == null"},"failures":[245],"tindex":"8afdd698-2ed2-11e6-90f7-9fa521ac38b0","method":{"position":"org.apache.commons.lang3.ClassUtils:477","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(final java.lang.Class<?>[] classArray, final java.lang.Class<?>... toClassArray) {\n    if (toClassArray == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.isAssignable(classArray, toClassArray, org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classArray":"toClassArray"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3966","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[263],"tindex":"8afdfda9-2ed2-11e6-90f7-01b4e9d731ca","method":{"position":"org.apache.commons.lang3.ArrayUtils:3965","type":"CtMethodImpl","sourcecode":"public static double[] addAll(final double[] array1, final double... array2) {\n    if (array1 == null) {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final double[] double[] = new double[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3809","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[264],"tindex":"8afdfdaa-2ed2-11e6-90f7-8b0d439edf5d","method":{"position":"org.apache.commons.lang3.ArrayUtils:4836","type":"CtMethodImpl","sourcecode":"public static char[] removeElement(final char[] array, final char element) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3850","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[265],"tindex":"8afdfdab-2ed2-11e6-90f7-eb2d55df8187","method":{"position":"org.apache.commons.lang3.ArrayUtils:1281","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final short[] array1, final short[] array2) {\n    if (array1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1749","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"8afe24bc-2ed2-11e6-90f7-9714814653aa","method":{"position":"org.apache.commons.lang3.ArrayUtils:5769","type":"CtMethodImpl","sourcecode":"public static float[] removeAll(final float[] array, final int... indices) {\n    if (indices == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((float[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"indices"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:741","type":"CtBinaryOperatorImpl","sourcecode":"fraction == null"},"failures":[266],"tindex":"8afe24bd-2ed2-11e6-90f7-fb454aa5d8d9","method":{"position":"org.apache.commons.lang3.math.Fraction:822","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.math.Fraction divideBy(final org.apache.commons.lang3.math.Fraction fraction) {\n    if (fraction == null) {\n        {\n            if (fraction == null) {\n                throw new java.lang.IllegalArgumentException(\"The fraction must not be null\");\n            } \n            if ((fraction.int) == 0) {\n                throw new java.lang.ArithmeticException(\"The fraction to divide by must not be zero\");\n            } \n            return multiplyBy(fraction.invert());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fraction":"fraction"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"8afe24be-2ed2-11e6-90f7-2369222736a3","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1069","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        {\n            int int = calendar.get(java.util.Calendar.java.util.Calendar.int);\n            if (value == 0) {\n                value = (calendar.getMaximum(java.util.Calendar.java.util.Calendar.int)) + 1;\n            } \n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:6046","type":"CtBinaryOperatorImpl","sourcecode":"end > 0"},"failures":[267],"tindex":"8afe4bcf-2ed2-11e6-90f7-9bffd72f85b7","method":{"position":"org.apache.commons.lang3.StringUtils:2118","type":"CtMethodImpl","sourcecode":"public static java.lang.String substring(final java.lang.String str, int start, int end) {\n    if (start > 0) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (end < 0) {\n                end = (str.length()) + end;\n            } \n            if (start < 0) {\n                start = (str.length()) + start;\n            } \n            if (end > (str.length())) {\n                end = str.length();\n            } \n            if (start > end) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            if (start < 0) {\n                start = 0;\n            } \n            if (end < 0) {\n                end = 0;\n            } \n            return str.substring(start, end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:175","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292],"tindex":"8afe4bd0-2ed2-11e6-90f7-89f8f5dc01d4","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1080","type":"CtMethodImpl","sourcecode":"private static void validateArray(final java.lang.Object array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } else if ((java.lang.reflect.Array.getLength(array)) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:156","type":"CtBinaryOperatorImpl","sourcecode":"(date1 == null) || (date2 == null)"},"failures":[293],"tindex":"8afe4bd1-2ed2-11e6-90f7-d954ba9d4e31","method":{"position":"org.apache.commons.lang3.time.DateUtils:200","type":"CtMethodImpl","sourcecode":"public static boolean isSameInstant(final java.util.Date date1, final java.util.Date date2) {\n    if ((date2 == null) || (date2 == null)) {\n        {\n            if ((date1 == null) || (date2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return (date1.getTime()) == (date2.getTime());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date2":"date2","date1":"date2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7232","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(string)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchStrings))"},"failures":[294],"tindex":"8afe72e2-2ed2-11e6-90f7-a781293b6379","method":{"position":"org.apache.commons.lang3.StringUtils:7388","type":"CtMethodImpl","sourcecode":"public static boolean endsWithAny(final java.lang.CharSequence string, final java.lang.CharSequence... searchStrings) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(string)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchStrings))) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(string)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchStrings))) {\n                return false;\n            } \n            for (final java.lang.CharSequence java.lang.CharSequence : searchStrings) {\n                if (org.apache.commons.lang3.StringUtils.endsWith(string, searchString)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"string":"string","searchStrings":"searchStrings"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3464","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[295,296,297,298],"tindex":"8afe72e3-2ed2-11e6-90f7-d7d7d2b262ad","method":{"position":"org.apache.commons.lang3.ArrayUtils:5591","type":"CtMethodImpl","sourcecode":"public static char[] removeAll(final char[] array, final int... indices) {\n    if (array == null) {\n        {\n            return ((char[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7364","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[299,300],"tindex":"8afe72e4-2ed2-11e6-90f7-7146ae866f03","method":{"position":"org.apache.commons.lang3.StringUtils:1371","type":"CtMethodImpl","sourcecode":"public static int lastIndexOfIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence searchStr, int startPos) {\n    if (searchStr == null) {\n        {\n            if ((str == null) || (searchStr == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if (startPos > ((str.length()) - (searchStr.length()))) {\n                startPos = (str.length()) - (searchStr.length());\n            } \n            if (startPos < 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if ((searchStr.length()) == 0) {\n                return startPos;\n            } \n            for (int int = startPos ; i >= 0 ; i--) {\n                if (org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"searchStr"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1692","type":"CtBinaryOperatorImpl","sourcecode":"(c.getEnclosingClass()) == null"},"failures":[301,250],"tindex":"8afe99f5-2ed2-11e6-90f7-6dd7bb6cb9bb","method":{"position":"org.apache.commons.lang3.ClassUtils:1222","type":"CtMethodImpl","sourcecode":"private void walkInterfaces(java.util.Set<java.lang.Class<?>> addTo, java.lang.Class<?> c) {\n    if ((c.getEnclosingClass()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (java.lang.Class<?> java.lang.Class<?> : c.getInterfaces()) {\n                if (!(seenInterfaces.contains(iface))) {\n                    addTo.add(iface);\n                } \n                walkInterfaces(addTo, iface);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[],"tindex":"8afe99f6-2ed2-11e6-90f7-9d6190a008d3","method":{"position":"org.apache.commons.lang3.time.DateUtils:179","type":"CtMethodImpl","sourcecode":"public static boolean isSameDay(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if ((cal2 == null) || (cal2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cal2 == null) || (cal2 == null)) {\n                {\n                    if ((cal1 == null) || (cal2 == null)) {\n                        throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n                    } \n                    return (((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"cal2","cal1":"cal2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2917","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[302,303,304,305,306],"tindex":"8afec107-2ed2-11e6-90f7-47e003568bee","method":{"position":"org.apache.commons.lang3.ArrayUtils:2558","type":"CtMethodImpl","sourcecode":"public static int indexOf(final double[] array, final double valueToFind, int startIndex) {\n    if (startIndex < 0) {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:631","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[307],"tindex":"8afec108-2ed2-11e6-90f7-9d62e1926ec8","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:230","type":"CtMethodImpl","sourcecode":"public static java.lang.String replaceSystemProperties(final java.lang.Object source) {\n    if (source == null) {\n        {\n            return new org.apache.commons.lang3.text.StrSubstitutor(org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup()).replace(source);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:424","type":"CtArrayReadImpl","sourcecode":"src[srcPos]"},"failures":[308],"tindex":"8afec109-2ed2-11e6-90f7-bd264bb3aad1","method":{"position":"org.apache.commons.lang3.Conversion:1584","type":"CtMethodImpl","sourcecode":"public static boolean[] intToBinary(final int src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (dst[dstPos]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 32\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"dstPos","src":"dst"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7035","type":"CtBinaryOperatorImpl","sourcecode":"(first.length()) > (second.length())"},"failures":[309,310,311,312],"tindex":"8afec10a-2ed2-11e6-90f7-ef7cf7605a22","method":{"position":"org.apache.commons.lang3.StringUtils:7010","type":"CtMethodImpl","sourcecode":"public static double getJaroWinklerDistance(final java.lang.CharSequence first, final java.lang.CharSequence second) {\n    if ((first.length()) > (second.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final double double = 0.1;\n            if ((first == null) || (second == null)) {\n                throw new java.lang.IllegalArgumentException(\"Strings must not be null\");\n            } \n            final double double = org.apache.commons.lang3.StringUtils.score(first, second);\n            final int int = org.apache.commons.lang3.StringUtils.commonPrefixLength(first, second);\n            final double double = (java.lang.Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0;\n            return matchScore;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"first","second":"second"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:701","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[313],"tindex":"8afee81b-2ed2-11e6-90f7-0d2ad0da597b","method":{"position":"org.apache.commons.lang3.time.DateUtils:667","type":"CtMethodImpl","sourcecode":"public static java.util.Calendar toCalendar(final java.util.Date date) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            c.setTime(date);\n            return c;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:525","type":"CtBinaryOperatorImpl","sourcecode":"(coll == null) || (coll.isEmpty())"},"failures":[14,15,16],"tindex":"8afee81c-2ed2-11e6-90f7-15f2bd4b795e","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:606","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.util.Collection<?> coll) {\n    if ((coll == null) || (coll.isEmpty())) {\n        {\n            buffer.append(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[48,52,53,60,61,65,69,73,74,75,78,79,80,83,84,88,89,90,92,96,97,99,101,105,107,110,111,113,114,116],"tindex":"8afee81d-2ed2-11e6-90f7-6b886f72121e","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:151","type":"CtMethodImpl","sourcecode":"public static java.lang.String reflectionToString(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1161","type":"CtInvocationImpl","sourcecode":"it.hasNext()"},"failures":[314],"tindex":"8aff0f2e-2ed2-11e6-90f7-331539e14ca1","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1111","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendAll(final java.util.Iterator<?> it) {\n    if (it.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (it != null) {\n                while (it.hasNext()) {\n                    append(it.next());\n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"it"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1364","type":"CtBinaryOperatorImpl","sourcecode":"length >= 0"},"failures":[315],"tindex":"8aff0f2f-2ed2-11e6-90f7-0167fc499a28","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1363","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendPadding(final int length, final char padChar) {\n    if (length >= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (length >= 0) {\n                ensureCapacity(((int) + length));\n                for (int int = 0 ; i < length ; i++) {\n                    char[][((int)++)] = padChar;\n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:591","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[63,63],"tindex":"8aff0f30-2ed2-11e6-90f7-ed7a4014a67f","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:829","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float value) {\n    if (fieldName == null) {\n        {\n            buffer.append(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1120","type":"CtBinaryOperatorImpl","sourcecode":"((nBools - 1) + dstPos) >= 16"},"failures":[316],"tindex":"8aff3641-2ed2-11e6-90f7-053f0ea6986b","method":{"position":"org.apache.commons.lang3.Conversion:1115","type":"CtMethodImpl","sourcecode":"public static short binaryToShort(final boolean[] src, final int srcPos, final short dstInit, final int dstPos, final int nBools) {\n    if (((nBools - 1) + srcPos) >= 16) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBools)) {\n                return dstInit;\n            } \n            if (((nBools - 1) + dstPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 16\");\n            } \n            short short = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + dstPos;\n                final int int = (src[(i + srcPos)] ? 1 : 0) << shift;\n                final int int = 1 << shift;\n                out = ((short)((out & (~mask)) | bits));\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"nBools","dstPos":"srcPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[],"tindex":"8aff3642-2ed2-11e6-90f7-bd4d3f82a3b4","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:604","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeHtml3(final java.lang.String input) {\n    if (input != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                {\n                    return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"8aff3643-2ed2-11e6-90f7-c385da4210c5","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1036","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        {\n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3760","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[93,93],"tindex":"8aff5d54-2ed2-11e6-90f7-071e2f95c2ab","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:513","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final short[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:858","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[],"tindex":"8aff5d55-2ed2-11e6-90f7-45b6443e529e","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:166","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs, final boolean compareTransients) {\n    if (lhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, compareTransients, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"lhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:219","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[],"tindex":"8aff5d56-2ed2-11e6-90f7-47e1c8ed23c6","method":{"position":"org.apache.commons.lang3.time.DateUtils:1726","type":"CtMethodImpl","sourcecode":"public static boolean truncatedEquals(final java.util.Calendar cal1, final java.util.Calendar cal2, final int field) {\n    if ((cal1 == null) || (cal2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(cal1, cal2, field)) == 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"cal2","cal1":"cal1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.EnumUtils:114","type":"CtBinaryOperatorImpl","sourcecode":"enumName == null"},"failures":[317],"tindex":"8aff5d57-2ed2-11e6-90f7-bd07799763db","method":{"position":"org.apache.commons.lang3.EnumUtils:113","type":"CtMethodImpl","sourcecode":"public static <E extends java.lang.Enum<E>>E getEnum(final java.lang.Class<E> enumClass, final java.lang.String enumName) {\n    if (enumName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumName == null) {\n                return null;\n            } \n            try {\n                return java.lang.Enum.valueOf(enumClass, enumName);\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumName":"enumName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:6078","type":"CtBinaryOperatorImpl","sourcecode":"count > 0"},"failures":[318,319],"tindex":"8aff8468-2ed2-11e6-90f7-25ba46099d45","method":{"position":"org.apache.commons.lang3.RandomStringUtils:142","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count, final boolean letters, final boolean numbers) {\n    if (count > 0) {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, 0, 0, letters, numbers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:225","type":"CtBinaryOperatorImpl","sourcecode":"count == 0"},"failures":[318,320,319],"tindex":"8aff8469-2ed2-11e6-90f7-d1446a963c64","method":{"position":"org.apache.commons.lang3.RandomStringUtils:68","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count) {\n    if (count == 0) {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, false, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.SerializationUtils:105","type":"CtBinaryOperatorImpl","sourcecode":"in != null"},"failures":[],"tindex":"8aff846a-2ed2-11e6-90f7-67b6d786225f","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:568","type":"CtMethodImpl","sourcecode":"private void readObject(final java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {\n    if (in != null) {\n        {\n            in.defaultReadObject();\n            init();\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3225","type":"CtInvocationImpl","sourcecode":"str.isEmpty()"},"failures":[321],"tindex":"8aff846b-2ed2-11e6-90f7-c39b0210d3fd","method":{"position":"org.apache.commons.lang3.StringUtils:7459","type":"CtMethodImpl","sourcecode":"public static java.lang.String appendIfMissing(final java.lang.String str, final java.lang.CharSequence suffix, final java.lang.CharSequence... suffixes) {\n    if (str.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.appendIfMissing(str, suffix, false, suffixes);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1009","type":"CtBinaryOperatorImpl","sourcecode":"toString != null"},"failures":[98,98,99,100,101],"tindex":"8affab7c-2ed2-11e6-90f7-9d512ac6a033","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1008","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder appendToString(final java.lang.String toString) {\n    if (toString != null) {\n        {\n            if (toString != null) {\n                org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer, toString);\n            } \n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toString":"toString"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:174","type":"CtBinaryOperatorImpl","sourcecode":"ctor == null"},"failures":[256,322,323,257,324,258],"tindex":"8affab7d-2ed2-11e6-90f7-496574f0e0da","method":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:217","type":"CtMethodImpl","sourcecode":"public static <T>java.lang.reflect.Constructor<T> getAccessibleConstructor(final java.lang.reflect.Constructor<T> ctor) {\n    if (ctor == null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(ctor, \"constructor cannot be null\");\n            return (org.apache.commons.lang3.reflect.MemberUtils.isAccessible(ctor)) && (org.apache.commons.lang3.reflect.ConstructorUtils.isAccessible(ctor.getDeclaringClass())) ? ctor : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ctor":"ctor"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:310","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[],"tindex":"8affab7e-2ed2-11e6-90f7-e1114ba0ba1d","method":{"position":"org.apache.commons.lang3.Validate:744","type":"CtMethodImpl","sourcecode":"public static <T extends java.lang.CharSequence>T validIndex(final T chars, final int index, final java.lang.String message, final java.lang.Object... values) {\n    if (message == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(chars);\n            if ((index < 0) || (index >= (chars.length()))) {\n                throw new java.lang.IndexOutOfBoundsException(java.lang.String.format(message, values));\n            } \n            return chars;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"message"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[325],"tindex":"8affab7f-2ed2-11e6-90f7-c3f07af70eba","method":{"position":"org.apache.commons.lang3.math.NumberUtils:302","type":"CtMethodImpl","sourcecode":"public static byte toByte(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toByte(str, ((byte)(0)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1371","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.ParameterizedType"},"failures":[326,327,328],"tindex":"8affd290-2ed2-11e6-90f7-7d76a4bb9ab2","method":{"position":"org.apache.commons.lang3.AnnotationUtils:263","type":"CtMethodImpl","sourcecode":"private static boolean memberEquals(final java.lang.Class<?> type, final java.lang.Object o1, final java.lang.Object o2) {\n    if (o1 instanceof java.lang.reflect.ParameterizedType) {\n        {\n            if (o1 == o2) {\n                return true;\n            } \n            if ((o1 == null) || (o2 == null)) {\n                return false;\n            } \n            if (type.isArray()) {\n                return org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(type.getComponentType(), o1, o2);\n            } \n            if (type.isAnnotation()) {\n                return org.apache.commons.lang3.AnnotationUtils.equals(((java.lang.annotation.Annotation)(o1)), ((java.lang.annotation.Annotation)(o2)));\n            } \n            return o1.equals(o2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"o1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1548","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[329,330,331,332,333,334,335,336],"tindex":"8affd291-2ed2-11e6-90f7-0da5e6e5f073","method":{"position":"org.apache.commons.lang3.ArrayUtils:3586","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final boolean[] array) {\n    if (array == null) {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2381","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[337,338,339,340,341],"tindex":"8afff9a2-2ed2-11e6-90f7-e1ab21e5e43b","method":{"position":"org.apache.commons.lang3.ArrayUtils:2124","type":"CtMethodImpl","sourcecode":"public static int indexOf(final int[] array, final int valueToFind, int startIndex) {\n    if (startIndex < 0) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:108","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))"},"failures":[342,343],"tindex":"8afff9a3-2ed2-11e6-90f7-690b84a7be24","method":{"position":"org.apache.commons.lang3.CharSetUtils:107","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.lang.String str, final java.lang.String... set) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return false;\n            } \n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            for (final char char : str.toCharArray()) {\n                if (chars.contains(c)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1138","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[344],"tindex":"8afff9a4-2ed2-11e6-90f7-0109f85d42d8","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1134","type":"CtMethodImpl","sourcecode":"public static short min(short a, final short b, final short c) {\n    if (a < b) {\n        {\n            if (b < a) {\n                a = b;\n            } \n            if (c < a) {\n                a = c;\n            } \n            return a;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","c":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2002","type":"CtBinaryOperatorImpl","sourcecode":"sizeStartText == null"},"failures":[],"tindex":"8b0020b5-2ed2-11e6-90f7-c1d5bff754f8","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:461","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setSizeStartText(final java.lang.String sizeStartText) {\n    if (sizeStartText == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setSizeStartText(sizeStartText);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeStartText":"sizeStartText"},"type":"special","returnInThen":false,"status":0},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:732","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"8b0020b6-2ed2-11e6-90f7-8bf55a9eda7c","method":{"position":"org.apache.commons.lang3.time.DateUtils:290","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDate(final java.lang.String str, final java.util.Locale locale, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if (str != null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(str, locale, parsePatterns, true);\n        }\n    } else {\n        throw new java.text.ParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:391","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[345],"tindex":"8b0020b7-2ed2-11e6-90f7-45cb315394ce","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:390","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final java.lang.String source) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(source);\n            if ((substitute(buf, 0, source.length())) == false) {\n                return source;\n            } \n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1364","type":"CtBinaryOperatorImpl","sourcecode":"length >= 0"},"failures":[346],"tindex":"8b0020b8-2ed2-11e6-90f7-93d6f595b4be","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2201","type":"CtMethodImpl","sourcecode":"public java.lang.String rightString(final int length) {\n    if (length >= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (length <= 0) {\n                return \"\";\n            } else if (length >= (int)) {\n                return new java.lang.String(char[] , 0 , int);\n            } else {\n                return new java.lang.String(char[] , ((int) - length) , length);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:115","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 65535"},"failures":[],"tindex":"8b0047c9-2ed2-11e6-90f7-076f4785db4b","method":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:121","type":"CtMethodImpl","sourcecode":"public static java.lang.String hex(final int codepoint) {\n    if (codepoint > 65535) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Integer.toHexString(codepoint).toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepoint"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:332","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[347],"tindex":"8b0047ca-2ed2-11e6-90f7-9d9fbf591663","method":{"position":"org.apache.commons.lang3.CharUtils:262","type":"CtMethodImpl","sourcecode":"public static int toIntValue(final java.lang.Character ch) {\n    if (ch == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                throw new java.lang.IllegalArgumentException(\"The character must not be null\");\n            } \n            return org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1499","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(seq)"},"failures":[166,348,167,168,169,170,171,172,349,173,174,175,176,350],"tindex":"8b0047cb-2ed2-11e6-90f7-edafd25b5640","method":{"position":"org.apache.commons.lang3.text.StrBuilder:495","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.text.StrBuilder append(final java.lang.CharSequence seq, final int startIndex, final int length) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n        {\n            if (seq == null) {\n                return appendNull();\n            } \n            return append(seq.toString(), startIndex, length);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"seq"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:874","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[351],"tindex":"8b0047cc-2ed2-11e6-90f7-9bf78ef6135b","method":{"position":"org.apache.commons.lang3.ArrayUtils:189","type":"CtMethodImpl","sourcecode":"public static int hashCode(final java.lang.Object array) {\n    if (array == null) {\n        {\n            return new org.apache.commons.lang3.builder.HashCodeBuilder().append(array).toHashCode();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:465","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[19,25,33,39,91,91,92,119,125,131],"tindex":"8b006edd-2ed2-11e6-90f7-5daf3e94c240","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:967","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final long[] array, final java.lang.Boolean fullDetail) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1558","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[352],"tindex":"8b006ede-2ed2-11e6-90f7-c50139d80757","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2227","type":"CtMethodImpl","sourcecode":"public java.lang.String midString(int index, final int length) {\n    if (length > 0) {\n        {\n            if (index < 0) {\n                index = 0;\n            } \n            if ((length <= 0) || (index >= (int))) {\n                return \"\";\n            } \n            if ((int) <= (index + length)) {\n                return new java.lang.String(char[] , index , ((int) - index));\n            } \n            return new java.lang.String(char[] , index , length);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharEncoding:95","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[353,354,355,356,357,358,359,360,361],"tindex":"8b006edf-2ed2-11e6-90f7-1d91bded24c9","method":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:342","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.concurrent.BackgroundInitializer<?> checkName(final java.lang.String name) {\n    if (name == null) {\n        {\n            final org.apache.commons.lang3.concurrent.BackgroundInitializer<?> org.apache.commons.lang3.concurrent.BackgroundInitializer<?> = java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.get(name);\n            if (init == null) {\n                throw new java.util.NoSuchElementException((\"No child initializer with name \" + name));\n            } \n            return init;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:292","type":"CtUnaryOperatorImpl","sourcecode":"!(java.lang.reflect.Modifier.isPublic(cls.getModifiers()))"},"failures":[362,363,364,365,366],"tindex":"8b006ee0-2ed2-11e6-90f7-ddaa744f2d84","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:146","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Field getDeclaredField(final java.lang.Class<?> cls, final java.lang.String fieldName) {\n    if (!(java.lang.reflect.Modifier.isPublic(cls.getModifiers()))) {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(cls, fieldName, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:142","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endInclusive"},"failures":[],"tindex":"8b0095f1-2ed2-11e6-90f7-4f351c03e5f7","method":{"position":"org.apache.commons.lang3.RandomUtils:137","type":"CtMethodImpl","sourcecode":"public static double nextDouble(double startInclusive, double endInclusive) {\n    if (startInclusive == startInclusive) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((endInclusive >= startInclusive), \"Start value must be smaller or equal to end value.\");\n            org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\");\n            if (startInclusive == endInclusive) {\n                return startInclusive;\n            } \n            return startInclusive + ((endInclusive - startInclusive) * (org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextDouble()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"startInclusive","endInclusive":"startInclusive"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}