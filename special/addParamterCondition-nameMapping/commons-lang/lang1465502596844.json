{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":187,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":411,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":242,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":181,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectComparator":229,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":439,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_String":17,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":120,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_LocaleLocale":383,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumericSpace":157,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":374,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":244,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":278,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":351,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":426,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithCalendar":73,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":74,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":427,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":199,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":408,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":438,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":117,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":149,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":440,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":271,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":414,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiLongArray":227,"org.apache.commons.lang3.CharRangeTest.testContains_Char":259,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":173,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":415,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":276,"org.apache.commons.lang3.tuple.PairTest.testComparable2":236,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":19,"org.apache.commons.lang3.tuple.PairTest.testComparable1":235,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMixedArray":222,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":177,"org.apache.commons.lang3.StringUtilsTest.testChomp":15,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":23,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":86,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":307,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementFloatArray":375,"org.apache.commons.lang3.ArrayUtilsTest.testReverseCharRange":382,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":338,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfInt":10,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":180,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":265,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithCalendar":106,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":145,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithCalendar":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":352,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":345,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringInt":151,"org.apache.commons.lang3.CharRangeTest.testHashCode":261,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":34,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":418,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_nullElementInput":314,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObject":231,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":84,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":137,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":280,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithCalendar":53,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithDate":76,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementIntArray":8,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":246,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":435,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":166,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":281,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":410,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":126,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":33,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiIntArray":223,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfLongs":7,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":25,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithDate":100,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_charInt":358,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringAfterLast_StringString":361,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":165,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_int":389,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":267,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":333,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWith":365,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":380,"org.apache.commons.lang3.CharSetTest.testContains_Char":248,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":356,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsTrue":42,"org.apache.commons.lang3.CharRangeTest.testSerialization":257,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":294,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":197,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithDate":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":188,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":403,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArray":363,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsFalse":41,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithCalendar":59,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":368,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":162,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentNullMap":1,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":308,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":29,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":425,"org.apache.commons.lang3.ClassUtilsTest.testIsPrimitiveWrapper":37,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":64,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":296,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":196,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":290,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithCalendar":101,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArray":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":328,"org.apache.commons.lang3.CharRangeTest.testIterator":264,"org.apache.commons.lang3.tuple.ImmutablePairTest.testEquals":46,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":327,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":318,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":399,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":332,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByteArrayHiddenByObject":113,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG807":22,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfBytes":36,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG805":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":164,"org.apache.commons.lang3.ObjectUtilsTest.testNotEqual":39,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":125,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":400,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":343,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":13,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithWrongOffsetBugWithCalendar":89,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithCalendar":66,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":153,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":298,"org.apache.commons.lang3.SystemUtilsTest.testOSMatchesNameAndVersion":312,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":161,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithCalendar":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":172,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithDate":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":321,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":378,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":420,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":432,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Normal":260,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":38,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":109,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":430,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":279,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfMonthWithCalendar":96,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiByteArray":216,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArrayHiddenByObject":228,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithDate":82,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":277,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":198,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_2items":315,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":155,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithDate":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":178,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":302,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumeric":442,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":12,"org.apache.commons.lang3.builder.CompareToBuilderTest.testAppendSuper":233,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":186,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":325,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":124,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":18,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":250,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":431,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithDate":68,"org.apache.commons.lang3.CharSetTest.testGetInstance":255,"org.apache.commons.lang3.builder.DiffTest.testToString":303,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":129,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testEquals":43,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":147,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiDoubleArray":232,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleTolerance":3,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":140,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":132,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfMonthWithDate":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":168,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithCalendar":102,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArrayHiddenByObject":215,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":121,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":436,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":274,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotFalse_Boolean":195,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":428,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithDate":81,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":249,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithCalendar":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":182,"org.apache.commons.lang3.ConversionTest.testLongToBinary":50,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":344,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":337,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithDate":70,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":273,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithDate":57,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":306,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":370,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":28,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":31,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstring_StringIntInt":388,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":329,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":320,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":192,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithDate":104,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":366,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":185,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":385,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":272,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":184,"org.apache.commons.lang3.tuple.TripleTest.testComparable2":238,"org.apache.commons.lang3.ConversionTest.testIntToBinary":51,"org.apache.commons.lang3.tuple.TripleTest.testComparable1":237,"org.apache.commons.lang3.tuple.TripleTest.testComparable4":240,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementBooleanArray":288,"org.apache.commons.lang3.tuple.TripleTest.testComparable3":239,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":401,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_StringInt":201,"org.apache.commons.lang3.CharSetTest.testHashCode":252,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":367,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":297,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":421,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithDate":67,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":282,"org.apache.commons.lang3.tuple.MutablePairTest.testEquals":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":275,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_emptyInput":317,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":148,"org.apache.commons.lang3.builder.CompareToBuilderTest.testByteArrayHiddenByObject":211,"org.apache.commons.lang3.CharRangeTest.testEquals_Object":258,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiCharArray":210,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":156,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiShortArray":234,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":217,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":346,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":377,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphaspace":134,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":301,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_String":203,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":189,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":24,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithDate":92,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectBuild":206,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":402,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentNullInit":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":347,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithCalendar":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":357,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleWithStartIndexTolerance":2,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":142,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":309,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":146,"org.apache.commons.lang3.CharSetTest.testEquals_Object":247,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":268,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":417,"org.apache.commons.lang3.builder.CompareToBuilderTest.testCharArrayHiddenByObject":220,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_char":311,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":213,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectEx2":219,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":313,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":376,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArray":205,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":379,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":194,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":319,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":412,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiFloatArray":221,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthByte":204,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":349,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithCalendar":80,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":97,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":429,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithCalendar":93,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiByteArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":331,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithCalendar":71,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat_emptyArray":241,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":326,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":141,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":413,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":193,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":170,"org.apache.commons.lang3.StringUtilsTest.testGetCommonPrefix_StringArray":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":335,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":304,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectComparatorNull":208,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":369,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":130,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuilder":152,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":135,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":441,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithDate":90,"org.apache.commons.lang3.ArrayUtilsTest.testReverseByteRange":387,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":122,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":133,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByteArray":114,"org.apache.commons.lang3.ArrayUtilsTest.testContainsInt":9,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithDate":83,"org.apache.commons.lang3.ArrayUtilsTest.testReverseByte":310,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":340,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":423,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":350,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":386,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithCalendar":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":283,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Same":263,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":270,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":293,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":406,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":27,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":269,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":159,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":291,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfYearWithDate":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":341,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":299,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_3items":316,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":330,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":424,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":285,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":171,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":167,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithCalendar":88,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":112,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToNull_String":371,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":434,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":118,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":286,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithCalender":98,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":48,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":131,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":419,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":160,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArray":158,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":20,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":128,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArrayHiddenByObject":214,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringString":360,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDouble":52,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":437,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithDate":55,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_String":200,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":295,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":409,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":138,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfYearWithCalendar":95,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringArray":202,"org.apache.commons.lang3.tuple.MutableTripleTest.testEquals":45,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":348,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":300,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":49,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":289,"org.apache.commons.lang3.ArrayUtilsTest.testToString":398,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat":243,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":253,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_Locale":384,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":364,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":322,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":407,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArrayHiddenByObject":224,"org.apache.commons.lang3.CharSetTest.testSerialization":245,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayByte":111,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithDate":77,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":254,"org.apache.commons.lang3.ArrayUtilsTest.testReverseChar":381,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":139,"org.apache.commons.lang3.builder.CompareToBuilderTest.testIntArrayHiddenByObject":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":342,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfInts":6,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":207,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":422,"org.apache.commons.lang3.CharSetTest.testStatics":256,"org.apache.commons.lang3.builder.DiffTest.testGetType":305,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":174,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArrayHiddenByObject":218,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":353,"org.apache.commons.lang3.text.StrTokenizerTest.test8":397,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrChar":359,"org.apache.commons.lang3.text.StrTokenizerTest.test5":394,"org.apache.commons.lang3.text.StrTokenizerTest.test4":393,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":354,"org.apache.commons.lang3.text.StrTokenizerTest.test7":396,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":355,"org.apache.commons.lang3.text.StrTokenizerTest.test6":395,"org.apache.commons.lang3.text.StrTokenizerTest.test1":390,"org.apache.commons.lang3.text.StrTokenizerTest.test3":392,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":69,"org.apache.commons.lang3.text.StrTokenizerTest.test2":391,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":334,"org.apache.commons.lang3.ObjectUtilsTest.testEquals":40,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":416,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":35,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithDate":54,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":404,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":262,"org.apache.commons.lang3.builder.EqualsBuilderTest.testShortArray":287,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfIntWithStartIndex":11,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":226,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":324,"org.apache.commons.lang3.StringUtilsTest.testDifferenceAt_StringArray":108,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":26,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":292,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBooleanArray":30,"org.apache.commons.lang3.time.DateUtilsTest.testAddMinutes":362,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithDate":61,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithCalendar":79,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithDate":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":323,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":372,"org.apache.commons.lang3.builder.CompareToBuilderTest.testRaggedArray":212,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticField":32,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":209,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":266,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":433,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":251,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithCalendar":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":339,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithCalendar":85,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":136,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":373,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithCalendar":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":284,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDoubleArrayHiddenByObject":230,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithDate":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":336,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":405},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6409","type":"CtBinaryOperatorImpl","sourcecode":"offset <= 4"},"failures":[],"tindex":"348d8c0d-2e7d-11e6-a95e-59e74d012828","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:574","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final org.apache.commons.lang3.text.StrBuilder source, final int offset, final int length) {\n    if (length <= 4) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            substitute(buf, 0, length);\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offset":"length"},"type":"special","returnInThen":false,"status":0},{"exception":"org.apache.commons.lang3.concurrent.ConcurrentException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:274","type":"CtBinaryOperatorImpl","sourcecode":"(map == null) || (init == null)"},"failures":[0,1],"tindex":"348e9d7e-2e7d-11e6-a95e-c17ef1644e2a","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:272","type":"CtMethodImpl","sourcecode":"public static <K, V>V createIfAbsent(final java.util.concurrent.ConcurrentMap<K, V> map, final K key, final org.apache.commons.lang3.concurrent.ConcurrentInitializer<V> init) throws org.apache.commons.lang3.concurrent.ConcurrentException {\n    if ((map == null) || (init == null)) {\n        throw new org.apache.commons.lang3.concurrent.ConcurrentException();\n    } else {\n        {\n            if ((map == null) || (init == null)) {\n                return null;\n            } \n            final V V = map.get(key);\n            if (value == null) {\n                return org.apache.commons.lang3.concurrent.ConcurrentUtils.putIfAbsent(map, key, init.get());\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"init":"init","map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2653","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[2,3],"tindex":"348ec48f-2e7d-11e6-a95e-fb25541fa3d3","method":{"position":"org.apache.commons.lang3.ArrayUtils:2686","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final double[] array, final double valueToFind, int startIndex, final double tolerance) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                {\n                    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n                    } \n                    if (startIndex < 0) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n                    } else if (startIndex >= (array.int)) {\n                        startIndex = (array.int) - 1;\n                    } \n                    final double double = valueToFind - tolerance;\n                    final double double = valueToFind + tolerance;\n                    for (int int = startIndex ; i >= 0 ; i--) {\n                        if (((array[i]) >= min) && ((array[i]) <= max)) {\n                            return i;\n                        } \n                    }\n                    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:444","type":"CtBinaryOperatorImpl","sourcecode":"method != null"},"failures":[4,5],"tindex":"348f12b0-2e7d-11e6-a95e-cbbe7a532217","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:512","type":"CtMethodImpl","sourcecode":"public static java.util.Set<java.lang.reflect.Method> getOverrideHierarchy(final java.lang.reflect.Method method, org.apache.commons.lang3.ClassUtils.Interfaces interfacesBehavior) {\n    if (method != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(method);\n            final java.util.Set<java.lang.reflect.Method> java.util.Set<java.lang.reflect.Method> = new java.util.LinkedHashSet<java.lang.reflect.Method>();\n            result.add(method);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = method.getParameterTypes();\n            final java.lang.Class<?> java.lang.Class<?> = method.getDeclaringClass();\n            final java.util.Iterator<java.lang.Class<?>> java.util.Iterator<java.lang.Class<?>> = org.apache.commons.lang3.ClassUtils.hierarchy(declaringClass, interfacesBehavior).iterator();\n            hierarchy.next();\n            hierarchyTraversal : while (hierarchy.hasNext()) {\n                final java.lang.Class<?> java.lang.Class<?> = hierarchy.next();\n                final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(c, method.getName(), parameterTypes);\n                if (m == null) {\n                    continue;\n                } \n                if (java.util.Arrays.equals(m.getParameterTypes(), parameterTypes)) {\n                    result.add(m);\n                    continue;\n                } \n                final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(declaringClass, m.getDeclaringClass());\n                for (int int = 0 ; i < (parameterTypes.int) ; i++) {\n                    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, method.getGenericParameterTypes()[i]);\n                    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, m.getGenericParameterTypes()[i]);\n                    if (!(org.apache.commons.lang3.reflect.TypeUtils.equals(childType, parentType))) {\n                        continue hierarchyTraversal;\n                    } \n                }\n                result.add(m);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"method"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:758","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[6],"tindex":"348f39c1-2e7d-11e6-a95e-019057c238e3","method":{"position":"org.apache.commons.lang3.StringUtils:3367","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final int[] array, final char separator) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:796","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[7],"tindex":"348f60d2-2e7d-11e6-a95e-d5c06c82ff80","method":{"position":"org.apache.commons.lang3.StringUtils:3335","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final long[] array, final char separator) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1464","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[8,9,10,11],"tindex":"348f87e3-2e7d-11e6-a95e-b1ab04beaf1e","method":{"position":"org.apache.commons.lang3.ArrayUtils:2124","type":"CtMethodImpl","sourcecode":"public static int indexOf(final int[] array, final int valueToFind, int startIndex) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1397","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[12],"tindex":"348faef4-2e7d-11e6-a95e-736a5ddeb9f4","method":{"position":"org.apache.commons.lang3.ArrayUtils:3687","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final boolean[] array) {\n    if (array == null) {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(valueDelimiter)"},"failures":[13,14],"tindex":"348faef5-2e7d-11e6-a95e-79d6b12e0d9a","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1144","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setValueDelimiter(final java.lang.String valueDelimiter) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(valueDelimiter)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(valueDelimiter)) {\n                setValueDelimiterMatcher(null);\n                return org.apache.commons.lang3.text.StrSubstitutor.this;\n            } \n            return setValueDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(valueDelimiter));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueDelimiter":"valueDelimiter"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:454","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isBlank(str)"},"failures":[15],"tindex":"348fd606-2e7d-11e6-a95e-cdd73887af2f","method":{"position":"org.apache.commons.lang3.StringUtils:4996","type":"CtMethodImpl","sourcecode":"public static java.lang.String chomp(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isBlank(str)) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            if ((str.length()) == 1) {\n                final char char = str.charAt(0);\n                if ((ch == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) || (ch == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char))) {\n                    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n                } \n                return str;\n            } \n            int int = (str.length()) - 1;\n            final char char = str.charAt(lastIdx);\n            if (last == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) {\n                if ((str.charAt((lastIdx - 1))) == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) {\n                    lastIdx--;\n                } \n            } else if (last != (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) {\n                lastIdx++;\n            } \n            return str.substring(0, lastIdx);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1586","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))"},"failures":[16,17],"tindex":"34902427-2e7d-11e6-a95e-a3d37168a6d8","method":{"position":"org.apache.commons.lang3.StringUtils:1874","type":"CtMethodImpl","sourcecode":"public static boolean containsNone(final java.lang.CharSequence cs, final char... searchChars) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cs == null) || (searchChars == null)) {\n                return true;\n            } \n            final int int = cs.length();\n            final int int = csLen - 1;\n            final int int = searchChars.int;\n            final int int = searchLen - 1;\n            for (int int = 0 ; i < csLen ; i++) {\n                final char char = cs.charAt(i);\n                for (int int = 0 ; j < searchLen ; j++) {\n                    if ((searchChars[j]) == ch) {\n                        if (java.lang.Character.isHighSurrogate(ch)) {\n                            if (j == searchLast) {\n                                return false;\n                            } \n                            if ((i < csLast) && ((searchChars[(j + 1)]) == (cs.charAt((i + 1))))) {\n                                return false;\n                            } \n                        } else {\n                            return false;\n                        }\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs","searchChars":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:829","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[18],"tindex":"34904b38-2e7d-11e6-a95e-4dea8401ee92","method":{"position":"org.apache.commons.lang3.time.DateUtils:909","type":"CtMethodImpl","sourcecode":"public static java.util.Calendar ceiling(final java.util.Calendar date, final int field) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = ((java.util.Calendar)(date.clone()));\n            org.apache.commons.lang3.time.DateUtils.modify(ceiled, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return ceiled;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1351","type":"CtBinaryOperatorImpl","sourcecode":"((chars[(start + 1)]) == 'x') || ((chars[(start + 1)]) == 'X')"},"failures":[19,20,21,22,23,24,25,26,27,28],"tindex":"34907249-2e7d-11e6-a95e-f1f05d7ce097","method":{"position":"org.apache.commons.lang3.RandomStringUtils:223","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(int count, int start, int end, final boolean letters, final boolean numbers, final char[] chars, final java.util.Random random) {\n    if (((chars[(count + 1)]) == 'x') || ((chars[(start + 1)]) == 'X')) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count == 0) {\n                return \"\";\n            } else if (count < 0) {\n                throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + count) + \" is less than 0.\"));\n            } \n            if ((chars != null) && ((chars.int) == 0)) {\n                throw new java.lang.IllegalArgumentException(\"The chars array must not be empty\");\n            } \n            if ((start == 0) && (end == 0)) {\n                if (chars != null) {\n                    end = chars.int;\n                } else {\n                    if ((!letters) && (!numbers)) {\n                        end = java.lang.Integer.java.lang.Integer.int;\n                    } else {\n                        end = 'z' + 1;\n                        start = ' ';\n                    }\n                }\n            } else {\n                if (end <= start) {\n                    throw new java.lang.IllegalArgumentException(((((\"Parameter end (\" + end) + \") must be greater than start (\") + start) + \")\"));\n                } \n            }\n            final char[] char[] = new char[count];\n            final int int = end - start;\n            while ((count--) != 0) {\n                char char;\n                if (chars == null) {\n                    ch = ((char)((random.nextInt(gap)) + start));\n                } else {\n                    ch = chars[((random.nextInt(gap)) + start)];\n                }\n                if (((letters && (java.lang.Character.isLetter(ch))) || (numbers && (java.lang.Character.isDigit(ch)))) || ((!letters) && (!numbers))) {\n                    if ((ch >= 56320) && (ch <= 57343)) {\n                        if (count == 0) {\n                            count++;\n                        } else {\n                            buffer[count] = ch;\n                            count--;\n                            buffer[count] = ((char)(55296 + (random.nextInt(128))));\n                        }\n                    } else if ((ch >= 55296) && (ch <= 56191)) {\n                        if (count == 0) {\n                            count++;\n                        } else {\n                            buffer[count] = ((char)(56320 + (random.nextInt(128))));\n                            count--;\n                            buffer[count] = ch;\n                        }\n                    } else if ((ch >= 56192) && (ch <= 56319)) {\n                        count++;\n                    } else {\n                        buffer[count] = ch;\n                    }\n                } else {\n                    count++;\n                }\n            }\n            return new java.lang.String(buffer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"count","chars":"chars"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:745","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[29],"tindex":"3490995a-2e7d-11e6-a95e-abfca8088253","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2821","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.List<java.lang.String> tokenize(final char[] chars, final int offset, final int count) {\n    if (chars == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (chars == null) {\n                return super.tokenize(org.apache.commons.lang3.text.StrBuilder.this.char[], 0, org.apache.commons.lang3.text.StrBuilder.this.size());\n            } \n            return super.tokenize(chars, offset, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"chars"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:894","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[30],"tindex":"3490c06b-2e7d-11e6-a95e-c5b1d934b3f6","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:887","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final boolean[] lhs, final boolean[] rhs) {\n    if ((lhs == null) || (lhs == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:675","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[31,32],"tindex":"3490c06c-2e7d-11e6-a95e-55f75a97fc6d","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:530","type":"CtMethodImpl","sourcecode":"public static void writeStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (value == null) {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(cls, fieldName, value, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:273","type":"CtInvocationImpl","sourcecode":"type.isAnnotation()"},"failures":[33,34,35],"tindex":"3490e77d-2e7d-11e6-a95e-8fb5e4701396","method":{"position":"org.apache.commons.lang3.AnnotationUtils:223","type":"CtMethodImpl","sourcecode":"public static boolean isValidAnnotationMemberType(java.lang.Class<?> type) {\n    if (type.isAnnotation()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type == null) {\n                return false;\n            } \n            if (type.isArray()) {\n                type = type.getComponentType();\n            } \n            return ((((type.isPrimitive()) || (type.isEnum())) || (type.isAnnotation())) || (java.lang.String.java.lang.String.java.lang.Class.equals(type))) || (java.lang.Class.java.lang.Class.java.lang.Class.equals(type));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3711","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[36],"tindex":"3490e77e-2e7d-11e6-a95e-91cd27b2ce0c","method":{"position":"org.apache.commons.lang3.StringUtils:3431","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final byte[] array, final char separator) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:224","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[37],"tindex":"34910e8f-2e7d-11e6-a95e-017cecbd8b51","method":{"position":"org.apache.commons.lang3.ClassUtils:558","type":"CtMethodImpl","sourcecode":"public static boolean isPrimitiveWrapper(final java.lang.Class<?> type) {\n    if (type == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5637","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[38],"tindex":"34910e90-2e7d-11e6-a95e-018ae68dadd2","method":{"position":"org.apache.commons.lang3.text.WordUtils:380","type":"CtMethodImpl","sourcecode":"public static java.lang.String uncapitalize(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.WordUtils.uncapitalize(str, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:160","type":"CtBinaryOperatorImpl","sourcecode":"(object1 == null) || (object2 == null)"},"failures":[39,40,41,42,43,44,45,46,47,48],"tindex":"349135a1-2e7d-11e6-a95e-5f3113e786e0","method":{"position":"org.apache.commons.lang3.ObjectUtils:156","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static boolean equals(final java.lang.Object object1, final java.lang.Object object2) {\n    if ((object1 == null) || (object1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object1 == object2) {\n                return true;\n            } \n            if ((object1 == null) || (object2 == null)) {\n                return false;\n            } \n            return object1.equals(object2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object2":"object1","object1":"object1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:391","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"349135a2-2e7d-11e6-a95e-f98d77baa56a","method":{"position":"org.apache.commons.lang3.time.FastDateParser:280","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Date parse(final java.lang.String source) throws java.text.ParseException {\n    if (source == null) {\n        {\n            final java.util.Date java.util.Date = parse(source, new java.text.ParsePosition(0));\n            if (date == null) {\n                if (java.util.Locale.equals(org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.java.util.Locale)) {\n                    throw new java.text.ParseException(((((((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\") + source) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n                } \n                throw new java.text.ParseException((((\"Unparseable date: \\\"\" + source) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n            } \n            return date;\n        }\n    } else {\n        throw new java.text.ParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4891","type":"CtBinaryOperatorImpl","sourcecode":"index >= 0"},"failures":[49],"tindex":"34915cb3-2e7d-11e6-a95e-c93c4fa8ae9d","method":{"position":"org.apache.commons.lang3.ArrayUtils:4358","type":"CtMethodImpl","sourcecode":"public static char[] add(final char[] array, final int index, final char element) {\n    if (index >= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((char[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Character.valueOf(element), java.lang.Character.java.lang.Character.java.lang.Class<java.lang.Character>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:339","type":"CtArrayReadImpl","sourcecode":"src[srcPos]"},"failures":[50],"tindex":"349183c4-2e7d-11e6-a95e-0332f9c49287","method":{"position":"org.apache.commons.lang3.Conversion:1550","type":"CtMethodImpl","sourcecode":"public static boolean[] longToBinary(final long src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (dst[nBools]) {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 64\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"nBools","src":"dst"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:323","type":"CtArrayReadImpl","sourcecode":"src[srcPos]"},"failures":[51],"tindex":"349183c5-2e7d-11e6-a95e-2747884a42b7","method":{"position":"org.apache.commons.lang3.Conversion:1584","type":"CtMethodImpl","sourcecode":"public static boolean[] intToBinary(final int src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (dst[src]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 32\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"src","src":"dst"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2653","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[52],"tindex":"3491aad6-2e7d-11e6-a95e-19a86d5936f5","method":{"position":"org.apache.commons.lang3.ArrayUtils:2617","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final double[] array, final double valueToFind) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1648","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"3491aad7-2e7d-11e6-a95e-250d512fb873","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:461","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.util.Date date, final java.lang.StringBuffer buf) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(date, buf);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],"tindex":"3491aad8-2e7d-11e6-a95e-a750359a4330","method":{"position":"org.apache.commons.lang3.time.DateUtils:1667","type":"CtMethodImpl","sourcecode":"private static long getFragment(final java.util.Calendar calendar, final int fragment, final java.util.concurrent.TimeUnit unit) {\n    if (calendar == null) {\n        {\n            if (calendar == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            long long = 0;\n            int int = unit == (java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit) ? 0 : 1;\n            switch (fragment) {\n                case java.util.Calendar.java.util.Calendar.int :\n                    result += unit.convert(((calendar.get(java.util.Calendar.java.util.Calendar.int)) - offset), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                    break;\n                case java.util.Calendar.java.util.Calendar.int :\n                    result += unit.convert(((calendar.get(java.util.Calendar.java.util.Calendar.int)) - offset), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                    break;\n                default :\n                    break;\n            }\n            switch (fragment) {\n                case java.util.Calendar.java.util.Calendar.int :\n                case java.util.Calendar.java.util.Calendar.int :\n                case java.util.Calendar.java.util.Calendar.int :\n                case java.util.Calendar.java.util.Calendar.int :\n                    result += unit.convert(calendar.get(java.util.Calendar.java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                case java.util.Calendar.java.util.Calendar.int :\n                    result += unit.convert(calendar.get(java.util.Calendar.java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                case java.util.Calendar.java.util.Calendar.int :\n                    result += unit.convert(calendar.get(java.util.Calendar.java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                case java.util.Calendar.java.util.Calendar.int :\n                    result += unit.convert(calendar.get(java.util.Calendar.java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                    break;\n                case java.util.Calendar.java.util.Calendar.int :\n                    break;\n                default :\n                    throw new java.lang.IllegalArgumentException(((\"The fragment \" + fragment) + \" is not supported\"));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:259","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(css)"},"failures":[108,109,110],"tindex":"3491d1e9-2e7d-11e6-a95e-3d8f42bd488f","method":{"position":"org.apache.commons.lang3.StringUtils:6591","type":"CtMethodImpl","sourcecode":"public static int indexOfDifference(final java.lang.CharSequence... css) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(css)) {\n        {\n            if ((css == null) || ((css.int) <= 1)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            boolean boolean = false;\n            boolean boolean = true;\n            final int int = css.int;\n            int int = java.lang.Integer.java.lang.Integer.int;\n            int int = 0;\n            for (int int = 0 ; i < arrayLen ; i++) {\n                if ((css[i]) == null) {\n                    anyStringNull = true;\n                    shortestStrLen = 0;\n                } else {\n                    allStringsNull = false;\n                    shortestStrLen = java.lang.Math.min(css[i].length(), shortestStrLen);\n                    longestStrLen = java.lang.Math.max(css[i].length(), longestStrLen);\n                }\n            }\n            if (allStringsNull || ((longestStrLen == 0) && (!anyStringNull))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if (shortestStrLen == 0) {\n                return 0;\n            } \n            int int = -1;\n            for (int int = 0 ; stringPos < shortestStrLen ; stringPos++) {\n                final char char = css[0].charAt(stringPos);\n                for (int int = 1 ; arrayPos < arrayLen ; arrayPos++) {\n                    if ((css[arrayPos].charAt(stringPos)) != comparisonChar) {\n                        firstDiff = stringPos;\n                        break;\n                    } \n                }\n                if (firstDiff != (-1)) {\n                    break;\n                } \n            }\n            if ((firstDiff == (-1)) && (shortestStrLen != longestStrLen)) {\n                return shortestStrLen;\n            } \n            return firstDiff;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"css":"css"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:798","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"3491f8fa-2e7d-11e6-a95e-270af0e99442","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:794","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final byte[] lhs, final byte[] rhs) {\n    if (lhs == rhs) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2914","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[],"tindex":"3492200b-2e7d-11e6-a95e-cf9d0a803b88","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:559","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final boolean[] array, final boolean fullDetail) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2591","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[],"tindex":"3492200c-2e7d-11e6-a95e-13db9fa533a4","method":{"position":"org.apache.commons.lang3.ArrayUtils:2686","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final double[] array, final double valueToFind, int startIndex, final double tolerance) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                {\n                    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n                    } \n                    if (startIndex < 0) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n                    } else if (startIndex >= (array.int)) {\n                        startIndex = (array.int) - 1;\n                    } \n                    final double double = valueToFind - tolerance;\n                    final double double = valueToFind + tolerance;\n                    for (int int = startIndex ; i >= 0 ; i--) {\n                        if (((array[i]) >= min) && ((array[i]) <= max)) {\n                            return i;\n                        } \n                    }\n                    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:127","type":"CtBinaryOperatorImpl","sourcecode":"method == null"},"failures":[],"tindex":"3492471d-2e7d-11e6-a95e-51436d3b2ad1","method":{"position":"org.apache.commons.lang3.event.EventUtils:127","type":"CtMethodImpl","sourcecode":"private boolean hasMatchingParametersMethod(final java.lang.reflect.Method method) {\n    if (method == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.Object.getClass(), java.lang.String, method.getParameterTypes())) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"method"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5917","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(cs)"},"failures":[134],"tindex":"3492471e-2e7d-11e6-a95e-e7692973d5af","method":{"position":"org.apache.commons.lang3.StringUtils:5881","type":"CtMethodImpl","sourcecode":"public static boolean isAlphaSpace(final java.lang.CharSequence cs) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n        {\n            if (cs == null) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if (((java.lang.Character.isLetter(cs.charAt(i))) == false) && ((cs.charAt(i)) != ' ')) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5262","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"3492471f-2e7d-11e6-a95e-3bc4fd372f7d","method":{"position":"org.apache.commons.lang3.CharSetUtils:221","type":"CtMethodImpl","sourcecode":"private static java.lang.String modify(final java.lang.String str, final java.lang.String[] set, final boolean expect) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(str.length());\n            final char[] char[] = str.toCharArray();\n            final int int = chrs.int;\n            for (int int = 0 ; i < sz ; i++) {\n                if ((chars.contains(chrs[i])) == expect) {\n                    buffer.append(chrs[i]);\n                } \n            }\n            return buffer.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:194","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"34926e30-2e7d-11e6-a95e-5df3188102a2","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:212","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern, final java.util.TimeZone timeZone) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, timeZone, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1740","type":"CtBinaryOperatorImpl","sourcecode":"arrayStart == null"},"failures":[135,136,137,33,138,139,140,141,34,35,142,143,144,145,146,147,148,149],"tindex":"34926e31-2e7d-11e6-a95e-25417d5befad","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1739","type":"CtMethodImpl","sourcecode":"protected void setArrayStart(java.lang.String arrayStart) {\n    if (arrayStart == null) {\n        {\n            if (arrayStart == null) {\n                arrayStart = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = arrayStart;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arrayStart":"arrayStart"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:452","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[150],"tindex":"34926e32-2e7d-11e6-a95e-3f06b25a4df9","method":{"position":"org.apache.commons.lang3.BooleanUtils:709","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.BooleanUtils.toBooleanObject(str)) == (java.lang.Boolean.java.lang.Boolean.java.lang.Boolean);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:585","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[151],"tindex":"34929543-2e7d-11e6-a95e-357780938d4c","method":{"position":"org.apache.commons.lang3.StringUtils:5481","type":"CtMethodImpl","sourcecode":"public static java.lang.String center(final java.lang.String str, final int size) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.center(str, size, ' ');\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:268","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[152],"tindex":"34929544-2e7d-11e6-a95e-7f4eff153406","method":{"position":"org.apache.commons.lang3.ObjectUtils:364","type":"CtMethodImpl","sourcecode":"public static void identityToString(final java.lang.StringBuilder builder, final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n            } \n            builder.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:314","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[153,154,155,156],"tindex":"34929545-2e7d-11e6-a95e-19b8d57359ee","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:313","type":"CtMethodImpl","sourcecode":"static java.lang.String[] toNoNullStringArray(final java.util.Collection<java.lang.String> collection) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(collection.toArray());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:452","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"34929546-2e7d-11e6-a95e-e1a37c731c30","method":{"position":"org.apache.commons.lang3.time.DateUtils:353","type":"CtMethodImpl","sourcecode":"private static java.util.Date parseDateWithLeniency(final java.lang.String str, final java.util.Locale locale, final java.lang.String[] parsePatterns, final boolean lenient) throws java.text.ParseException {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.text.ParseException();\n    } else {\n        {\n            if ((str == null) || (parsePatterns == null)) {\n                throw new java.lang.IllegalArgumentException(\"Date and Patterns must not be null\");\n            } \n            java.text.SimpleDateFormat java.text.SimpleDateFormat;\n            if (locale == null) {\n                parser = new java.text.SimpleDateFormat();\n            } else {\n                parser = new java.text.SimpleDateFormat(\"\" , locale);\n            }\n            parser.setLenient(lenient);\n            final java.text.ParsePosition java.text.ParsePosition = new java.text.ParsePosition(0);\n            for (final java.lang.String java.lang.String : parsePatterns) {\n                java.lang.String java.lang.String = parsePattern;\n                if (parsePattern.endsWith(\"ZZ\")) {\n                    pattern = pattern.substring(0, ((pattern.length()) - 1));\n                } \n                parser.applyPattern(pattern);\n                pos.setIndex(0);\n                java.lang.String java.lang.String = str;\n                if (parsePattern.endsWith(\"ZZ\")) {\n                    str2 = str.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\");\n                } \n                final java.util.Date java.util.Date = parser.parse(str2, pos);\n                if ((date != null) && ((pos.getIndex()) == (str2.length()))) {\n                    return date;\n                } \n            }\n            throw new java.text.ParseException((\"Unable to parse the date: \" + str) , (-1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5882","type":"CtBinaryOperatorImpl","sourcecode":"cs == null"},"failures":[157],"tindex":"3492bc57-2e7d-11e6-a95e-17900e267dbb","method":{"position":"org.apache.commons.lang3.StringUtils:5951","type":"CtMethodImpl","sourcecode":"public static boolean isAlphanumericSpace(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        {\n            if (cs == null) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if (((java.lang.Character.isLetterOrDigit(cs.charAt(i))) == false) && ((cs.charAt(i)) != ' ')) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:894","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[158],"tindex":"34935898-2e7d-11e6-a95e-db53d167c00b","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:825","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final double[] lhs, final double[] rhs) {\n    if (lhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3908","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[159],"tindex":"34937fa9-2e7d-11e6-a95e-37307eb950ce","method":{"position":"org.apache.commons.lang3.ArrayUtils:3907","type":"CtMethodImpl","sourcecode":"public static long[] addAll(final long[] array1, final long... array2) {\n    if (array2 == null) {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final long[] long[] = new long[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1153","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[160,160,161,162],"tindex":"3493cdca-2e7d-11e6-a95e-7539a0eb82b4","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:317","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final byte[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:675","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[163,163,164,164,165,166,167,167,168,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],"tindex":"3493cdcb-2e7d-11e6-a95e-2f8923b2745d","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:857","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:505","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[195],"tindex":"3493f4dc-2e7d-11e6-a95e-75f3f8245ad5","method":{"position":"org.apache.commons.lang3.BooleanUtils:140","type":"CtMethodImpl","sourcecode":"public static boolean isNotFalse(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            return !(org.apache.commons.lang3.BooleanUtils.isFalse(bool));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:381","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[116,117,118,119,120,121,122,196,123,124,197,198,199,126,127,128,129,130,131,132,133],"tindex":"3493f4dd-2e7d-11e6-a95e-bdcb21894a6c","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:547","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final int lhs, final int rhs) {\n    if (fieldName == null) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Integer>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Integer getLeft() {\n                        return java.lang.Integer.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Integer getRight() {\n                        return java.lang.Integer.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:471","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.builder.ToStringStyle.isRegistered(value)) && (!(((value instanceof java.lang.Number) || (value instanceof java.lang.Boolean)) || (value instanceof java.lang.Character)))"},"failures":[],"tindex":"34941bee-2e7d-11e6-a95e-2b940501209a","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:581","type":"CtMethodImpl","sourcecode":"protected void appendCyclicObject(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value) {\n    if ((org.apache.commons.lang3.builder.ToStringStyle.isRegistered(value)) && (!(((value instanceof java.lang.Number) || (value instanceof java.lang.Boolean)) || (value instanceof java.lang.Character)))) {\n        {\n            org.apache.commons.lang3.ObjectUtils.identityToString(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6034","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(cs)"},"failures":[200,201,202,203],"tindex":"349442ff-2e7d-11e6-a95e-1dbeb3216861","method":{"position":"org.apache.commons.lang3.CharSequenceUtils:94","type":"CtMethodImpl","sourcecode":"static int indexOf(final java.lang.CharSequence cs, final java.lang.CharSequence searchChar, final int start) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(searchChar)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return cs.toString().indexOf(searchChar.toString(), start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"searchChar"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3823","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[204],"tindex":"34944300-2e7d-11e6-a95e-7539a87046d1","method":{"position":"org.apache.commons.lang3.ArrayUtils:1317","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final byte[] array1, final byte[] array2) {\n    if (array2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:851","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240],"tindex":"34946a11-2e7d-11e6-a95e-19cdbba4426b","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:398","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final java.lang.Object lhs, final java.lang.Object rhs, final java.util.Comparator<?> comparator) {\n    if (rhs == lhs) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs.getClass().isArray()) {\n                if (lhs instanceof long[]) {\n                    append(((long[])(lhs)), ((long[])(rhs)));\n                } else if (lhs instanceof int[]) {\n                    append(((int[])(lhs)), ((int[])(rhs)));\n                } else if (lhs instanceof short[]) {\n                    append(((short[])(lhs)), ((short[])(rhs)));\n                } else if (lhs instanceof char[]) {\n                    append(((char[])(lhs)), ((char[])(rhs)));\n                } else if (lhs instanceof byte[]) {\n                    append(((byte[])(lhs)), ((byte[])(rhs)));\n                } else if (lhs instanceof double[]) {\n                    append(((double[])(lhs)), ((double[])(rhs)));\n                } else if (lhs instanceof float[]) {\n                    append(((float[])(lhs)), ((float[])(rhs)));\n                } else if (lhs instanceof boolean[]) {\n                    append(((boolean[])(lhs)), ((boolean[])(rhs)));\n                } else {\n                    append(((java.lang.Object[])(lhs)), ((java.lang.Object[])(rhs)), comparator);\n                }\n            } else {\n                if (comparator == null) {\n                    @java.lang.SuppressWarnings(value = \"unchecked\")\n                    final java.lang.Comparable<java.lang.Object> java.lang.Comparable<java.lang.Object> = ((java.lang.Comparable<java.lang.Object>)(lhs));\n                    int = comparable.compareTo(rhs);\n                } else {\n                    @java.lang.SuppressWarnings(value = \"unchecked\")\n                    final java.util.Comparator<java.lang.Object> java.util.Comparator<java.lang.Object> = ((java.util.Comparator<java.lang.Object>)(comparator));\n                    int = comparator2.compare(lhs, rhs);\n                }\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:832","type":"CtBinaryOperatorImpl","sourcecode":"priorVariables == null"},"failures":[],"tindex":"34955472-2e7d-11e6-a95e-5d785f5f4718","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:889","type":"CtMethodImpl","sourcecode":"private void checkCyclicSubstitution(final java.lang.String varName, final java.util.List<java.lang.String> priorVariables) {\n    if (priorVariables == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((priorVariables.contains(varName)) == false) {\n                return ;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(256);\n            buf.append(\"Infinite loop in property interpolation of \");\n            buf.append(priorVariables.remove(0));\n            buf.append(\": \");\n            buf.appendWithSeparators(priorVariables, \"->\");\n            throw new java.lang.IllegalStateException(buf.toString());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"priorVariables":"priorVariables"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3907","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[241,242,243],"tindex":"34957b83-2e7d-11e6-a95e-e1c1fa104130","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1056","type":"CtMethodImpl","sourcecode":"public static float max(final float[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            float float = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                if (java.lang.Float.isNaN(array[j])) {\n                    return java.lang.Float.java.lang.Float.float;\n                } \n                if ((array[j]) > max) {\n                    max = array[j];\n                } \n            }\n            return max;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:518","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[18],"tindex":"3495a294-2e7d-11e6-a95e-bd7d36c3168b","method":{"position":"org.apache.commons.lang3.time.DateUtils:883","type":"CtMethodImpl","sourcecode":"public static java.util.Date ceiling(final java.util.Date date, final int field) {\n    if (date == null) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            gval.setTime(date);\n            org.apache.commons.lang3.time.DateUtils.modify(gval, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return gval.getTime();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:69","type":"CtBinaryOperatorImpl","sourcecode":"start > end"},"failures":[244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274],"tindex":"3495a295-2e7d-11e6-a95e-6b166443d4ee","method":{"position":"org.apache.commons.lang3.CharRange:113","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.CharRange isIn(final char start, final char end) {\n    if (start > end) {\n        {\n            return new org.apache.commons.lang3.CharRange(start , end , false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"end"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"3495a296-2e7d-11e6-a95e-e72ed92145eb","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:636","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(char);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1070","type":"CtBinaryOperatorImpl","sourcecode":"offset >= 12"},"failures":[275,276,277,278,279,280,281,282,283,284,285,286],"tindex":"3495a297-2e7d-11e6-a95e-af402858c1e5","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:495","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final java.lang.StringBuffer source, final int offset, final int length) {\n    if (length >= 12) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            substitute(buf, 0, length);\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offset":"length"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:396","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.EqualsBuilder.isRegistered(lhs, rhs)"},"failures":[],"tindex":"3495c9a8-2e7d-11e6-a95e-a35c859a9d49","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:166","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs, final boolean compareTransients) {\n    if (org.apache.commons.lang3.builder.EqualsBuilder.isRegistered(rhs, rhs)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, compareTransients, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"rhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:739","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[287],"tindex":"3495c9a9-2e7d-11e6-a95e-e5102688c34b","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:732","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final short[] lhs, final short[] rhs) {\n    if ((lhs == null) || (lhs == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:906","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[288],"tindex":"3495f0ba-2e7d-11e6-a95e-6f3fce10352e","method":{"position":"org.apache.commons.lang3.ArrayUtils:5974","type":"CtMethodImpl","sourcecode":"public static boolean[] removeElements(final boolean[] array, final boolean... values) {\n    if (values == null) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt>(2);\n            for (final boolean boolean : values) {\n                final java.lang.Boolean java.lang.Boolean = java.lang.Boolean.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Boolean java.lang.Boolean = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.booleanValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((boolean[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"values"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:507","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[289,290,291,146,169,169,170,292,293,294],"tindex":"3496b40b-2e7d-11e6-a95e-8d2c19ae452b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:967","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final long[] array, final java.lang.Boolean fullDetail) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:651","type":"CtBinaryOperatorImpl","sourcecode":"(toClass.isPrimitive()) == false"},"failures":[295,296,297,298,299,300,301,116,117,118,119,120,121,122,196,123,124,198,199,127,128,130,131,132,133,302,303,304,305,306,47,48,307,308,309,4,5],"tindex":"3496db1c-2e7d-11e6-a95e-15903443478b","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:783","type":"CtMethodImpl","sourcecode":"public static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(final java.lang.reflect.Type type, final java.lang.Class<?> toClass) {\n    if ((toClass.isPrimitive()) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(type, toClass, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"toClass"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.Throwable","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:355","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(method))"},"failures":[],"tindex":"3497022d-2e7d-11e6-a95e-71f5a6c06add","method":{"position":"org.apache.commons.lang3.event.EventListenerSupport:315","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object invoke(final java.lang.Object unusedProxy, final java.lang.reflect.Method method, final java.lang.Object[] args) throws java.lang.Throwable {\n    if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(unusedProxy))) {\n        throw new java.lang.Throwable();\n    } else {\n        {\n            for (final L L : java.util.List<L>) {\n                method.invoke(listener, args);\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"unusedProxy"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3432","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[310],"tindex":"3497293e-2e7d-11e6-a95e-371f5d51eb3f","method":{"position":"org.apache.commons.lang3.ArrayUtils:1505","type":"CtMethodImpl","sourcecode":"public static void reverse(final byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:859","type":"CtBinaryOperatorImpl","sourcecode":"date instanceof java.util.Calendar"},"failures":[18],"tindex":"3497504f-2e7d-11e6-a95e-49ac2e1ab492","method":{"position":"org.apache.commons.lang3.time.DateUtils:935","type":"CtMethodImpl","sourcecode":"public static java.util.Date ceiling(final java.lang.Object date, final int field) {\n    if (date instanceof java.util.Calendar) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            if (date instanceof java.util.Date) {\n                return org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Date)(date)), field);\n            } else if (date instanceof java.util.Calendar) {\n                return org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Calendar)(date)), field).getTime();\n            } else {\n                throw new java.lang.ClassCastException((\"Could not find ceiling of for type: \" + (date.getClass())));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1499","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(seq)"},"failures":[311],"tindex":"34997330-2e7d-11e6-a95e-a18433aa1193","method":{"position":"org.apache.commons.lang3.StringUtils:1153","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final int searchChar) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"seq"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.SystemUtils:1448","type":"CtBinaryOperatorImpl","sourcecode":"(osName == null) || (osVersion == null)"},"failures":[312],"tindex":"34997331-2e7d-11e6-a95e-cbe4c016f3a9","method":{"position":"org.apache.commons.lang3.SystemUtils:1447","type":"CtMethodImpl","sourcecode":"static boolean isOSMatch(final java.lang.String osName, final java.lang.String osVersion, final java.lang.String osNamePrefix, final java.lang.String osVersionPrefix) {\n    if ((osNamePrefix == null) || (osName == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((osName == null) || (osVersion == null)) {\n                return false;\n            } \n            return (osName.startsWith(osNamePrefix)) && (osVersion.startsWith(osVersionPrefix));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"osVersion":"osName","osName":"osNamePrefix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:73","type":"CtBinaryOperatorImpl","sourcecode":"timeZone == null"},"failures":[313],"tindex":"34997332-2e7d-11e6-a95e-c7b2d3603f46","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:353","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(final int dateStyle, final int timeStyle, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (timeZone == null) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateTimeInstance(dateStyle, timeStyle, timeZone, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeZone":"timeZone"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1764","type":"CtBinaryOperatorImpl","sourcecode":"index >= 0"},"failures":[49],"tindex":"34999a43-2e7d-11e6-a95e-97bb2a0d79e7","method":{"position":"org.apache.commons.lang3.ArrayUtils:4544","type":"CtMethodImpl","sourcecode":"public static double[] add(final double[] array, final int index, final double element) {\n    if (index >= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((double[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Double.valueOf(element), java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[314,315,316,317],"tindex":"34999a44-2e7d-11e6-a95e-8719222f4d12","method":{"position":"org.apache.commons.lang3.BooleanUtils:939","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean and(final java.lang.Boolean... array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            try {\n                final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.toPrimitive(array);\n                return org.apache.commons.lang3.BooleanUtils.and(primitive) ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:666","type":"CtBinaryOperatorImpl","sourcecode":"clazz != null"},"failures":[318,319,320,321,321,322,322,323,324,324,325,326,327,328,328,329,329,330,331,163,332,333,160,161,161,162,162,334,335,336,337,337,338,339,340,341,341,342,343,164,165,165,166,166,344,344,167,345,346,346,347,347,348,348,349,350,351,351,352,352,353,354,355,356,356,357,357,168,168,169,170,170,171,172,173,174,174,175,175,176,177,177,178,179,179,180,181,182,183,183,184,185,185,186,187,188,188,189,189,190,191,191,192,192,193,194,194],"tindex":"3499c155-2e7d-11e6-a95e-019df194e220","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:665","type":"CtMethodImpl","sourcecode":"public void setUpToClass(final java.lang.Class<?> clazz) {\n    if (clazz != null) {\n        {\n            if (clazz != null) {\n                final java.lang.Object java.lang.Object = getObject();\n                if ((object != null) && ((clazz.isInstance(object)) == false)) {\n                    throw new java.lang.IllegalArgumentException(\"Specified class is not a superclass of the object\");\n                } \n            } \n            org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.Class<?> = clazz;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"clazz":"clazz"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:496","type":"CtBinaryOperatorImpl","sourcecode":"seq == null"},"failures":[358],"tindex":"3499c156-2e7d-11e6-a95e-61945e9fad2e","method":{"position":"org.apache.commons.lang3.StringUtils:1191","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final int searchChar, final int startPos) {\n    if (seq == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchChar, startPos);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"seq"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:657","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[359],"tindex":"3499e867-2e7d-11e6-a95e-cfad318b3b24","method":{"position":"org.apache.commons.lang3.ArrayUtils:1034","type":"CtMethodImpl","sourcecode":"public static char[] subarray(final char[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            final char[] char[] = new char[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"3499e868-2e7d-11e6-a95e-c74498ad2005","method":{"position":"org.apache.commons.lang3.ArrayUtils:5889","type":"CtMethodImpl","sourcecode":"public static double[] removeElements(final double[] array, final double... values) {\n    if (values == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final double double : values) {\n                final java.lang.Double java.lang.Double = java.lang.Double.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Double java.lang.Double = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.doubleValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((double[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"values"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:496","type":"CtBinaryOperatorImpl","sourcecode":"seq == null"},"failures":[360],"tindex":"349a0f79-2e7d-11e6-a95e-1532d9435767","method":{"position":"org.apache.commons.lang3.StringUtils:1759","type":"CtMethodImpl","sourcecode":"public static int indexOfAnyBut(final java.lang.CharSequence seq, final java.lang.CharSequence searchChars) {\n    if (seq == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(seq)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            final int int = seq.length();\n            for (int int = 0 ; i < strLen ; i++) {\n                final char char = seq.charAt(i);\n                final boolean boolean = (org.apache.commons.lang3.CharSequenceUtils.indexOf(searchChars, ch, 0)) >= 0;\n                if (((i + 1) < strLen) && (java.lang.Character.isHighSurrogate(ch))) {\n                    final char char = seq.charAt((i + 1));\n                    if (chFound && ((org.apache.commons.lang3.CharSequenceUtils.indexOf(searchChars, ch2, 0)) < 0)) {\n                        return i;\n                    } \n                } else {\n                    if (!chFound) {\n                        return i;\n                    } \n                }\n            }\n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"seq"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2100","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[361],"tindex":"349a5d9a-2e7d-11e6-a95e-7b59d9c5468f","method":{"position":"org.apache.commons.lang3.StringUtils:2412","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringAfterLast(final java.lang.String str, final java.lang.String separator) {\n    if (str == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            if (org.apache.commons.lang3.StringUtils.isEmpty(separator)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.lastIndexOf(separator);\n            if ((pos == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) || (pos == ((str.length()) - (separator.length())))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return str.substring((pos + (separator.length())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:647","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[362],"tindex":"349a84ab-2e7d-11e6-a95e-9101a60f6044","method":{"position":"org.apache.commons.lang3.time.DateUtils:474","type":"CtMethodImpl","sourcecode":"public static java.util.Date addMinutes(final java.util.Date date, final int amount) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2065","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[363],"tindex":"349a84ac-2e7d-11e6-a95e-e9ecd72d8829","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:795","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final long[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final long long : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7364","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[364,365],"tindex":"349a84ad-2e7d-11e6-a95e-eb43057ff1dd","method":{"position":"org.apache.commons.lang3.StringUtils:7161","type":"CtMethodImpl","sourcecode":"public static boolean startsWith(final java.lang.CharSequence str, final java.lang.CharSequence prefix) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.startsWith(str, prefix, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:297","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[366,367,148,319,320,321,321,322,323,324,325,326,327,328,329,330,331,163,332,333,333,160,161,162,334,335,336,337,338,339,340,341,342,343,164,165,166,344,167,345,346,347,348,349,350,351,352,353,354,355,356,357,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,368,369,370],"tindex":"349aabbe-2e7d-11e6-a95e-2ddce5b611e2","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:689","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int value) {\n    if (fieldName == null) {\n        {\n            buffer.append(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:761","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[371],"tindex":"349aabbf-2e7d-11e6-a95e-77a517fdb0a7","method":{"position":"org.apache.commons.lang3.StringUtils:524","type":"CtMethodImpl","sourcecode":"public static java.lang.String stripToNull(java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            str = org.apache.commons.lang3.StringUtils.strip(str, null);\n            return str.isEmpty() ? null : str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4938","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"349aabc0-2e7d-11e6-a95e-7be1b483c4bf","method":{"position":"org.apache.commons.lang3.text.StrBuilder:877","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.String str, final int startIndex, final int length) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(str, startIndex, length).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[372,373,374,288,375,376,377,378,379,380],"tindex":"349aabc1-2e7d-11e6-a95e-035ce1ece37c","method":{"position":"org.apache.commons.lang3.ArrayUtils:6062","type":"CtMethodImpl","sourcecode":"static java.lang.Object removeAll(final java.lang.Object array, final java.util.BitSet indices) {\n    if (array == null) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.getLength(array);\n            final int int = indices.cardinality();\n            final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (srcLength - removals));\n            int int = 0;\n            int int = 0;\n            int int;\n            int int;\n            while ((set = indices.nextSetBit(srcIndex)) != (-1)) {\n                count = set - srcIndex;\n                if (count > 0) {\n                    java.lang.System.arraycopy(array, srcIndex, result, destIndex, count);\n                    destIndex += count;\n                } \n                srcIndex = indices.nextClearBit(set);\n            }\n            count = srcLength - srcIndex;\n            if (count > 0) {\n                java.lang.System.arraycopy(array, srcIndex, result, destIndex, count);\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1198","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[381,382],"tindex":"349ad1d2-2e7d-11e6-a95e-4b08d6d13fa3","method":{"position":"org.apache.commons.lang3.ArrayUtils:1643","type":"CtMethodImpl","sourcecode":"public static void reverse(final char[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive < 0) {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            char char;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"startIndexInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:198","type":"CtBinaryOperatorImpl","sourcecode":"(locale.getVariant().length()) > 0"},"failures":[383,384],"tindex":"349af8e3-2e7d-11e6-a95e-439009bc845a","method":{"position":"org.apache.commons.lang3.LocaleUtils:194","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.util.Locale> localeLookupList(final java.util.Locale locale, final java.util.Locale defaultLocale) {\n    if ((defaultLocale.getVariant().length()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>(4);\n            if (locale != null) {\n                list.add(locale);\n                if ((locale.getVariant().length()) > 0) {\n                    list.add(new java.util.Locale(locale.getLanguage() , locale.getCountry()));\n                } \n                if ((locale.getCountry().length()) > 0) {\n                    list.add(new java.util.Locale(locale.getLanguage() , \"\"));\n                } \n                if ((list.contains(defaultLocale)) == false) {\n                    list.add(defaultLocale);\n                } \n            } \n            return java.util.Collections.unmodifiableList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"defaultLocale"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:770","type":"CtVariableReadImpl","sourcecode":"value"},"failures":[296,319,320,321,321,322,323,324,325,326,327,328,329,330,331,163,332,333,160,161,162,334,335,336,337,338,339,340,341,342,343,164,164,165,166,344,167,345,346,347,348,349,350,351,352,353,354,355,356,357,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,368,369],"tindex":"349af8e4-2e7d-11e6-a95e-a7a5c5c8581f","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:526","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final boolean value) {\n    if (value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1155","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[385,386],"tindex":"349b1ff5-2e7d-11e6-a95e-bd94f760f219","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:180","type":"CtMethodImpl","sourcecode":"public static float max(final float[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } else if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n            } \n            float float = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                max = org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max);\n            }\n            return max;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1078","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[387],"tindex":"349b4706-2e7d-11e6-a95e-973341b7ebf7","method":{"position":"org.apache.commons.lang3.ArrayUtils:1608","type":"CtMethodImpl","sourcecode":"public static void reverse(final byte[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            byte byte;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"startIndexInclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1247","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[388],"tindex":"349b4707-2e7d-11e6-a95e-490a65cc56aa","method":{"position":"org.apache.commons.lang3.StringUtils:2118","type":"CtMethodImpl","sourcecode":"public static java.lang.String substring(final java.lang.String str, int start, int end) {\n    if (str != null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (end < 0) {\n                end = (str.length()) + end;\n            } \n            if (start < 0) {\n                start = (str.length()) + start;\n            } \n            if (end > (str.length())) {\n                end = str.length();\n            } \n            if (start > end) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            if (start < 0) {\n                start = 0;\n            } \n            if (end < 0) {\n                end = 0;\n            } \n            return str.substring(start, end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:758","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[389],"tindex":"349b4708-2e7d-11e6-a95e-edb71de2a44b","method":{"position":"org.apache.commons.lang3.ArrayUtils:3137","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer[] toObject(final int[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Integer[];\n            } \n            final java.lang.Integer[] java.lang.Integer[] = new java.lang.Integer[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Integer.valueOf(array[i]);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:906","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"349bbc39-2e7d-11e6-a95e-69d5210df521","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1419","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:76","type":"CtBinaryOperatorImpl","sourcecode":"locale == null"},"failures":[383,384],"tindex":"349be34a-2e7d-11e6-a95e-f770b9a33937","method":{"position":"org.apache.commons.lang3.LocaleUtils:172","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.util.Locale> localeLookupList(final java.util.Locale locale) {\n    if (locale == null) {\n        {\n            return org.apache.commons.lang3.LocaleUtils.localeLookupList(locale, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:76","type":"CtBinaryOperatorImpl","sourcecode":"locale == null"},"failures":[],"tindex":"349be34b-2e7d-11e6-a95e-79f315fb1996","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:226","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(final int style, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (locale == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(style, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[136,390,391,392,393,394,395,396,397,398,399,400,401,402,289,403,366,404,405,406,407,408,290,409,318,410,295,296,411,412,413,414,291,415,367,416,142,143,144,145,146,147,148,149,319,319,320,320,321,321,322,323,323,324,324,325,325,326,326,327,327,328,328,329,329,330,330,331,331,163,163,332,332,333,333,160,160,161,161,162,162,334,334,335,335,336,336,337,337,338,338,339,339,340,340,341,341,342,342,343,343,164,164,165,165,166,166,344,344,167,167,345,345,346,346,347,347,348,348,349,349,350,350,351,351,352,352,353,354,354,355,355,356,356,357,357,168,168,169,169,170,170,171,171,172,172,173,173,174,174,175,175,176,176,177,177,178,179,179,180,180,181,181,182,182,183,183,184,184,185,185,186,186,187,187,188,188,189,189,190,191,191,192,192,193,193,194,194,417,418,419,420,292,421,368,422,423,424,425,426,293,427,369,428,429,430,431,432,294,433,370,434,153,435,436,437,154,438,439,440,155,441,156],"tindex":"349c0a5c-2e7d-11e6-a95e-8b9af2087f0f","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1490","type":"CtMethodImpl","sourcecode":"protected void appendContentEnd(final java.lang.StringBuffer buffer) {\n    if (buffer == null) {\n        {\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2126","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"349c587d-2e7d-11e6-a95e-b3f859f7da60","method":{"position":"org.apache.commons.lang3.StringUtils:3710","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final byte[] array, final char separator, final int startIndex, final int endIndex) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:173","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(object)"},"failures":[],"tindex":"349c587e-2e7d-11e6-a95e-a74ebde605b0","method":{"position":"org.apache.commons.lang3.ObjectUtils:316","type":"CtMethodImpl","sourcecode":"public static void identityToString(final org.apache.commons.lang3.text.StrBuilder builder, final java.lang.Object object) {\n    if (org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(object)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n            } \n            builder.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5882","type":"CtBinaryOperatorImpl","sourcecode":"cs == null"},"failures":[442],"tindex":"349c7f8f-2e7d-11e6-a95e-d92effc11e75","method":{"position":"org.apache.commons.lang3.StringUtils:5916","type":"CtMethodImpl","sourcecode":"public static boolean isAlphanumeric(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isLetterOrDigit(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6689","type":"CtBinaryOperatorImpl","sourcecode":"(strs[0]) == null"},"failures":[109,110],"tindex":"349ca6a0-2e7d-11e6-a95e-1b9ae7a0ef70","method":{"position":"org.apache.commons.lang3.StringUtils:6682","type":"CtMethodImpl","sourcecode":"public static java.lang.String getCommonPrefix(final java.lang.String... strs) {\n    if ((strs[0]) == null) {\n        {\n            if ((strs == null) || ((strs.int) == 0)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = org.apache.commons.lang3.StringUtils.indexOfDifference(strs);\n            if (smallestIndexOfDiff == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                if ((strs[0]) == null) {\n                    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n                } \n                return strs[0];\n            } else if (smallestIndexOfDiff == 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } else {\n                return strs[0].substring(0, smallestIndexOfDiff);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strs":"strs"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}