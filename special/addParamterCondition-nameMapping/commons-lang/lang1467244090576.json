{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":272,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":214,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":135,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_char":98,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":274,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":131,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":113,"org.apache.commons.lang3.exception.ContextedExceptionTest.testRawMessage":364,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_char":45,"org.apache.commons.lang3.exception.ContextedExceptionTest.testNullExceptionPassing":363,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodPrivateInterface":376,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveBooleanArray":27,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds":95,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_String":76,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":156,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character":97,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":269,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_StringInt":64,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteIntInt":108,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":279,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":128,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyLongObject":326,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":46,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":111,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":118,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedExceptionString":367,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":155,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_StringWithBadSupplementaryChars":67,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":123,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":305,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":291,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":91,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":255,"org.apache.commons.lang3.CharRangeTest.testEquals_Object":304,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":51,"org.apache.commons.lang3.RandomUtilsTest.testNextFloatMinimalRange":83,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":284,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyChar":223,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":329,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":204,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":256,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":40,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":205,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetContextValues":347,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":277,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":119,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":144,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_String":66,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":49,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException3":232,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException4":233,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException1":230,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":120,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException2":231,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":167,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":36,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfLongWithStartIndex":259,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissingIgnoreCase":199,"org.apache.commons.lang3.BooleanUtilsTest.test_isFalse_Boolean":240,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":270,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":177,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":124,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":159,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":105,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":211,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":221,"org.apache.commons.lang3.RandomUtilsTest.testNextBytes":225,"org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemoverTest.testInvalidCharacters":207,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementFloatArray":41,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":250,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":37,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":254,"org.apache.commons.lang3.CharSetTest.testEquals_Object":307,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":209,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":369,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":260,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":370,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":154,"org.apache.commons.lang3.math.NumberUtilsTest.testToByteString":39,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":110,"org.apache.commons.lang3.ValidateTest.testIsInstanceOf":226,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":253,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedExceptionThrowable":365,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testRawMessage":350,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":356,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithBadSupplementaryChars":77,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":84,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextEntries":358,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":70,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumShort":216,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":275,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStrBuilder":196,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextEntries":372,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryReplace":115,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":261,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":295,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":208,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":187,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementLongArray":21,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":90,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithIgnoreCase":202,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldIllegalArgumentException2":235,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":129,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":96,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithBadSupplementaryChars":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":53,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithDate":320,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementIntArray":26,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfDoubles":17,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_StringWithSupplementaryChars":61,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":188,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":145,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":158,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":189,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":190,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":130,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":191,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_char_int":82,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":276,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":69,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfLongWithStartIndex":313,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":287,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":42,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":371,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveLongArray":34,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":293,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_float":197,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyCharEmptyArray":224,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionStringThrowableContext":352,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfLongs":315,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":116,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":180,"org.apache.commons.lang3.reflect.FieldUtilsTest.testAmbig":234,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissing":198,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":181,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithDate":324,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDouble":1,"org.apache.commons.lang3.ValidateTest.testIsInstanceOfExceptionMessage":227,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfChar":249,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":331,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringIntInt":107,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_int":316,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccess":228,"org.apache.commons.lang3.text.StrBuilderTest.testLang295":44,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWith":203,"org.apache.commons.lang3.tuple.TripleTest.testCompatibilityBetweenTriples":243,"org.apache.commons.lang3.CharRangeTest.testSerialization":303,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":299,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":288,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":48,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementBooleanArray":23,"org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemoverTest.testValidCharacters":206,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementObjectArray":18,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":265,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testOrdinalIndexOf":62,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":79,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":136,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testSetContextValue":343,"org.apache.commons.lang3.ConversionTest.testBinaryToByte":314,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayByte":257,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":330,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedExceptionStringThrowableContext":366,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":222,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":292,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":282,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":101,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayShort":237,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":290,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":4,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":278,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":88,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":89,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character_int":81,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_Throwable":38,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":285,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionStringThrowable":354,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":57,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArray":75,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":289,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":140,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":55,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testAddContextValue":341,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":54,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":301,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":286,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":143,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":267,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":220,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":210,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":262,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":7,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_4":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":132,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":157,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":94,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":103,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":268,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticField":236,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementFloatArray":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":137,"org.apache.commons.lang3.ConversionTest.testHexToInt":339,"org.apache.commons.lang3.text.StrBuilderTest.testToCharArrayIntInt":117,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testNullExceptionPassing":349,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":0,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Autoboxing":338,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":152,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_String":63,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithDate":317,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":6,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":50,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadField":195,"org.apache.commons.lang3.ArrayUtilsTest.testContainsChar":248,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":139,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionString":353,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":71,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringArray":65,"org.apache.commons.lang3.tuple.MutableTripleTest.testEquals":247,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":141,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":263,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":298,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":121,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testSerialization":244,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":146,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":258,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":271,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetFirstContextValue":346,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":85,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":193,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":296,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":194,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":201,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_short_short":68,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":126,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":125,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithDate":323,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":122,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":283,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedException":362,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithSupplementaryChars":73,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetContextEntries":344,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":212,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_char_int":219,"org.apache.commons.lang3.CharSetTest.testSerialization":306,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable":332,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendPadding":80,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":149,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":150,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":311,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithDate":321,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":337,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":215,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetField":229,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedException":348,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissingIgnoreCase":238,"org.apache.commons.lang3.math.NumberUtilsTest.testToFloatString":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":58,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":342,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_StrMatcher":102,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":252,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":153,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":266,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":133,"org.apache.commons.lang3.CharSetTest.testStatics":312,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":360,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":35,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":192,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":104,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":109,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":3,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":242,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":309,"org.apache.commons.lang3.text.StrTokenizerTest.test8":176,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":297,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveDoubleArray":19,"org.apache.commons.lang3.text.StrTokenizerTest.test5":173,"org.apache.commons.lang3.text.StrTokenizerTest.test4":172,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":213,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":60,"org.apache.commons.lang3.text.StrTokenizerTest.test7":175,"org.apache.commons.lang3.text.StrTokenizerTest.test6":174,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveObjectArray":20,"org.apache.commons.lang3.text.StrTokenizerTest.test1":169,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":72,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":168,"org.apache.commons.lang3.text.StrTokenizerTest.test3":171,"org.apache.commons.lang3.text.StrTokenizerTest.test2":170,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testFormattedExceptionMessageNull":340,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDouble":2,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":92,"org.apache.commons.lang3.tuple.MutableTripleTest.testSerialization":246,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":280,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayObject":327,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":273,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionThrowable":351,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":374,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveCharArray":24,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":59,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedExceptionStringThrowable":368,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testEquals":245,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":328,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping":93,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":147,"org.apache.commons.lang3.ClassUtilsTest.testPrimitiveToWrapper":333,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":148,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveNumberArray":30,"org.apache.commons.lang3.text.StrBuilderTest.testTrim":106,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":47,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":375,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":361,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveFloatArray":22,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":9,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementByteArray":31,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":355,"org.apache.commons.lang3.ClassUtilsTest.testPrimitivesToWrappers":336,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":127,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":87,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveByteArray":28,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":264,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveShortArray":32,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotFalse_Boolean":239,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":294,"org.apache.commons.lang3.mutable.MutableIntTest.testEquals":12,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":308,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithDate":322,"org.apache.commons.lang3.ClassUtilsTest.testWrapperToPrimitive":334,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":160,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":151,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":162,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":161,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":164,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":163,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":166,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":165,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":186,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateDouble":10,"org.apache.commons.lang3.mutable.MutableByteTest.testGetSet":241,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":251,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":302,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyLongObjectEmptyArray":325,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveIntArray":33,"org.apache.commons.lang3.RangeTest.testIsAfterRange":11,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticField":100,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray":217,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithDate":319,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":178,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":184,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":183,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":185,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_Autoboxing":335,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":142,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":182,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementCharArray":29,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":52,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":179,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":310,"org.apache.commons.lang3.JavaVersionTest.testGetJavaVersion":16,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithSupplementaryChars":74,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextLabels":373,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":300,"org.apache.commons.lang3.StringUtilsTest.testRemoveStartIgnoreCase":200,"org.apache.commons.lang3.StringUtilsTest.testJoin_IterableChar":43,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayInt":377,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":138,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":99,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayDouble":218,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetContextLabels":345,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":357,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextLabels":359,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":56,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithDate":318,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":134,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":281},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:142","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[],"tindex":"efb39471-3e53-11e6-ae44-5345ba7b26b7","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:432","type":"CtMethodImpl","sourcecode":"public static void printRootCauseStackTrace(final java.lang.Throwable throwable) {\n    if (throwable == null) {\n        {\n            org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(throwable, java.lang.System.java.lang.System.java.io.PrintStream);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:314","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[0],"tindex":"efb47ed2-3e53-11e6-ae44-25cdb8043660","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:313","type":"CtMethodImpl","sourcecode":"static java.lang.String[] toNoNullStringArray(final java.util.Collection<java.lang.String> collection) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (collection == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(collection.toArray());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:690","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[1,2,3],"tindex":"efb4a5e3-3e53-11e6-ae44-fdcd56ffd603","method":{"position":"org.apache.commons.lang3.ArrayUtils:2523","type":"CtMethodImpl","sourcecode":"public static int indexOf(final double[] array, final double valueToFind) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:765","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isBlank(str)"},"failures":[4,5,6,7,8,9,10],"tindex":"efb4ccf4-3e53-11e6-ae44-dfe8dfeb3a7d","method":{"position":"org.apache.commons.lang3.math.NumberUtils:671","type":"CtMethodImpl","sourcecode":"public static java.lang.Double createDouble(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isBlank(str)) {\n        {\n            if (str == null) {\n                return null;\n            } \n            return java.lang.Double.valueOf(str);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:351","type":"CtBinaryOperatorImpl","sourcecode":"otherRange == null"},"failures":[11],"tindex":"efb4ccf5-3e53-11e6-ae44-573212d271a0","method":{"position":"org.apache.commons.lang3.Range:331","type":"CtMethodImpl","sourcecode":"public boolean isAfterRange(final org.apache.commons.lang3.Range<T> otherRange) {\n    if (otherRange == null) {\n        {\n            if (otherRange == null) {\n                return false;\n            } \n            return isAfter(otherRange.T);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"otherRange":"otherRange"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1389","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"efb4f406-3e53-11e6-ae44-955a2046c1ec","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2975","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(final java.lang.String str) {\n    if (str == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.text.StrBuilder.this.append(str);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.mutable.MutableByte:246","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.mutable.MutableByte"},"failures":[12],"tindex":"efb4f407-3e53-11e6-ae44-abd4cc1b4c9e","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.lang3.mutable.MutableByte) {\n        {\n            if (obj instanceof org.apache.commons.lang3.mutable.MutableInt) {\n                return (int) == (((org.apache.commons.lang3.mutable.MutableInt)(obj)).intValue());\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5770","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[13],"tindex":"efb51b18-3e53-11e6-ae44-adb0120f6ed3","method":{"position":"org.apache.commons.lang3.math.NumberUtils:198","type":"CtMethodImpl","sourcecode":"public static float toFloat(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toFloat(str, 0.0F);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1450","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[14,15],"tindex":"efb54229-3e53-11e6-ae44-153f013cd984","method":{"position":"org.apache.commons.lang3.ArrayUtils:3509","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final long[] array) {\n    if (array == null) {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:134","type":"CtInvocationImpl","sourcecode":"\"1.1\".equals(nom)"},"failures":[16],"tindex":"efb5422a-3e53-11e6-ae44-4b30f042a090","method":{"position":"org.apache.commons.lang3.JavaVersion:118","type":"CtMethodImpl","sourcecode":"static org.apache.commons.lang3.JavaVersion getJavaVersion(final java.lang.String nom) {\n    if (\"1.1\".equals(nom)) {\n        {\n            return org.apache.commons.lang3.JavaVersion.get(nom);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"nom"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3528","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[17],"tindex":"efb5693b-3e53-11e6-ae44-8dae7b3ed417","method":{"position":"org.apache.commons.lang3.StringUtils:3857","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final double[] array, final char separator, final int startIndex, final int endIndex) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4008","type":"CtBinaryOperatorImpl","sourcecode":"array != null"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,3,33,34,35],"tindex":"efb5904c-3e53-11e6-ae44-472f7e02483d","method":{"position":"org.apache.commons.lang3.ArrayUtils:5190","type":"CtMethodImpl","sourcecode":"private static java.lang.Object remove(final java.lang.Object array, final int index) {\n    if (array != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.getLength(array);\n            if ((index < 0) || (index >= length)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Length: \") + length));\n            } \n            final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (length - 1));\n            java.lang.System.arraycopy(array, 0, result, 0, index);\n            if (index < (length - 1)) {\n                java.lang.System.arraycopy(array, (index + 1), result, index, ((length - index) - 1));\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:419","type":"CtBinaryOperatorImpl","sourcecode":"lhs instanceof int[]"},"failures":[],"tindex":"efb5b75d-3e53-11e6-ae44-797aaf723cea","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:232","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs, final java.lang.String... excludeFields) {\n    if (rhs instanceof int[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null, excludeFields);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2144","type":"CtBinaryOperatorImpl","sourcecode":"end < 0"},"failures":[36],"tindex":"efb5b75e-3e53-11e6-ae44-312bccd6ea20","method":{"position":"org.apache.commons.lang3.RandomStringUtils:186","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count, final int start, final int end, final boolean letters, final boolean numbers, final char... chars) {\n    if (end < 0) {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, start, end, letters, numbers, chars, org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.java.util.Random);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"end"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:255","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[37,37],"tindex":"efb5de6f-3e53-11e6-ae44-735eacd21b2b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:731","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte value) {\n    if (fieldName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1520","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[17],"tindex":"efb60580-3e53-11e6-ae44-656ae4663349","method":{"position":"org.apache.commons.lang3.StringUtils:3527","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final double[] array, final char separator) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:489","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[38],"tindex":"efb60581-3e53-11e6-ae44-7d7de08b4e8b","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:123","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.Throwable getCause(final java.lang.Throwable throwable) {\n    if (throwable == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ExceptionUtils.getCause(throwable, org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:732","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[39],"tindex":"efb62c92-3e53-11e6-ae44-71629eada974","method":{"position":"org.apache.commons.lang3.math.NumberUtils:302","type":"CtMethodImpl","sourcecode":"public static byte toByte(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            if (str != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.math.NumberUtils.toByte(str, ((byte)(0)));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:387","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[40],"tindex":"efb653a3-3e53-11e6-ae44-b9516f3a2ba9","method":{"position":"org.apache.commons.lang3.ArrayUtils:5622","type":"CtMethodImpl","sourcecode":"public static char[] removeElements(final char[] array, final char... values) {\n    if (values == null) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final char char : values) {\n                final java.lang.Character java.lang.Character = java.lang.Character.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Character java.lang.Character = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.charValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((char[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"values"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2766","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[41],"tindex":"efb67ab4-3e53-11e6-ae44-07ea9a850f61","method":{"position":"org.apache.commons.lang3.ArrayUtils:5800","type":"CtMethodImpl","sourcecode":"public static float[] removeElements(final float[] array, final float... values) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Float, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Float, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Float, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final float float : values) {\n                final java.lang.Float java.lang.Float = java.lang.Float.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Float, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Float, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Float java.lang.Float = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.floatValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((float[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:255","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[42,42],"tindex":"efb6c8d5-3e53-11e6-ae44-f9d14f19fc10","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:709","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final float value) {\n    if (fieldName == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.StringUtils:4938","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"efb6c8d6-3e53-11e6-ae44-330f94af2544","method":{"position":"org.apache.commons.lang3.time.DateUtils:267","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDate(final java.lang.String str, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if (str == null) {\n        {\n            if (str == null) {\n                {\n                    return org.apache.commons.lang3.time.DateUtils.parseDate(str, null, parsePatterns);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.text.ParseException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.text.ParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1094","type":"CtBinaryOperatorImpl","sourcecode":"iterable != null"},"failures":[43],"tindex":"efb6efe7-3e53-11e6-ae44-bf614d4c73b2","method":{"position":"org.apache.commons.lang3.StringUtils:4126","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Iterable<?> iterable, final char separator) {\n    if (iterable != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterable == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(iterable.iterator(), separator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"iterable"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:357","type":"CtBinaryOperatorImpl","sourcecode":"ch < 4096"},"failures":[44,45],"tindex":"efb6efe8-3e53-11e6-ae44-e948abec1064","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2289","type":"CtMethodImpl","sourcecode":"public int indexOf(final char ch) {\n    if (ch < 4096) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return indexOf(ch, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:591","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[46,47,48,49,50,51,52,53,53,54,55,56,57,58,58],"tindex":"efb6efe9-3e53-11e6-ae44-65e1b712955a","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1502","type":"CtMethodImpl","sourcecode":"protected void appendNullText(final java.lang.StringBuffer buffer, final java.lang.String fieldName) {\n    if (fieldName == null) {\n        {\n            buffer.append(java.lang.String);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1764","type":"CtBinaryOperatorImpl","sourcecode":"index >= 0"},"failures":[59],"tindex":"efb716fa-3e53-11e6-ae44-59ac9a0c4d70","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1659","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final double value) {\n    if (index >= 0) {\n        {\n            return insert(index, java.lang.String.valueOf(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6034","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(cs)"},"failures":[60,61,62,63,64,65,66,67],"tindex":"efb716fb-3e53-11e6-ae44-3780b63c4545","method":{"position":"org.apache.commons.lang3.CharSequenceUtils:94","type":"CtMethodImpl","sourcecode":"static int indexOf(final java.lang.CharSequence cs, final java.lang.CharSequence searchChar, final int start) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n        {\n            return cs.toString().indexOf(searchChar.toString(), start);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3184","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[68],"tindex":"efb716fc-3e53-11e6-ae44-1d6103f79dd2","method":{"position":"org.apache.commons.lang3.ArrayUtils:3183","type":"CtMethodImpl","sourcecode":"public static short[] toPrimitive(final java.lang.Short[] array, final short valueForNull) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            final short[] short[] = new short[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Short java.lang.Short = array[i];\n                result[i] = b == null ? valueForNull : b.shortValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3858","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[69,69,70],"tindex":"efb73e0d-3e53-11e6-ae44-f5fc4c2efd4f","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:373","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final double[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6104","type":"CtBinaryOperatorImpl","sourcecode":"cs == null"},"failures":[71,72,73,74,75,76,77,78,79],"tindex":"efb73e0e-3e53-11e6-ae44-5700cc878076","method":{"position":"org.apache.commons.lang3.StringUtils:1874","type":"CtMethodImpl","sourcecode":"public static boolean containsNone(final java.lang.CharSequence cs, final char... searchChars) {\n    if (cs == null) {\n        {\n            if ((cs == null) || (searchChars == null)) {\n                return true;\n            } \n            final int int = cs.length();\n            final int int = csLen - 1;\n            final int int = searchChars.int;\n            final int int = searchLen - 1;\n            for (int int = 0 ; i < csLen ; i++) {\n                final char char = cs.charAt(i);\n                for (int int = 0 ; j < searchLen ; j++) {\n                    if ((searchChars[j]) == ch) {\n                        if (java.lang.Character.isHighSurrogate(ch)) {\n                            if (j == searchLast) {\n                                return false;\n                            } \n                            if ((i < csLast) && ((searchChars[(j + 1)]) == (cs.charAt((i + 1))))) {\n                                return false;\n                            } \n                        } else {\n                            return false;\n                        }\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.StringUtils:525","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"efb73e0f-3e53-11e6-ae44-fda71518e0f5","method":{"position":"org.apache.commons.lang3.time.DateUtils:267","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDate(final java.lang.String str, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if (str == null) {\n        {\n            if (str == null) {\n                {\n                    return org.apache.commons.lang3.time.DateUtils.parseDate(str, null, parsePatterns);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.text.ParseException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.text.ParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2125","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"efb76520-3e53-11e6-ae44-0d359f2f89a1","method":{"position":"org.apache.commons.lang3.ArrayUtils:5591","type":"CtMethodImpl","sourcecode":"public static char[] removeAll(final char[] array, final int... indices) {\n    if (indices == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((char[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"indices"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:200","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[80],"tindex":"efb76521-3e53-11e6-ae44-3312c481f386","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1363","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendPadding(final int length, final char padChar) {\n    if (length < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (length >= 0) {\n                ensureCapacity(((int) + length));\n                for (int int = 0 ; i < length ; i++) {\n                    char[][((int)++)] = padChar;\n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5780","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isTitleCase(ch)"},"failures":[81,82],"tindex":"efb78c32-3e53-11e6-ae44-95c5db628fd6","method":{"position":"org.apache.commons.lang3.CharUtils:239","type":"CtMethodImpl","sourcecode":"public static int toIntValue(final char ch, final int defaultValue) {\n    if (java.lang.Character.isTitleCase(ch)) {\n        {\n            if ((org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false) {\n                return defaultValue;\n            } \n            return ch - 48;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:168","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endInclusive"},"failures":[83],"tindex":"efb78c33-3e53-11e6-ae44-ad4ce48b123a","method":{"position":"org.apache.commons.lang3.RandomUtils:163","type":"CtMethodImpl","sourcecode":"public static float nextFloat(float startInclusive, float endInclusive) {\n    if (startInclusive == endInclusive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((endInclusive >= startInclusive), \"Start value must be smaller or equal to end value.\");\n            org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\");\n            if (startInclusive == endInclusive) {\n                return startInclusive;\n            } \n            return startInclusive + ((endInclusive - startInclusive) * (org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextFloat()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"startInclusive","endInclusive":"endInclusive"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2228","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"efb78c34-3e53-11e6-ae44-75f060ecf2c3","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:78","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index < 0) {\n        {\n            final int int = input.length();\n            if ((((input.charAt(index)) == '&') && (index < (seqEnd - 2))) && ((input.charAt((index + 1))) == '#')) {\n                int int = index + 2;\n                boolean boolean = false;\n                final char char = input.charAt(start);\n                if ((firstChar == 'x') || (firstChar == 'X')) {\n                    start++;\n                    isHex = true;\n                    if (start == seqEnd) {\n                        return 0;\n                    } \n                } \n                int int = start;\n                while ((end < seqEnd) && (((((input.charAt(end)) >= '0') && ((input.charAt(end)) <= '9')) || (((input.charAt(end)) >= 'a') && ((input.charAt(end)) <= 'f'))) || (((input.charAt(end)) >= 'A') && ((input.charAt(end)) <= 'F')))) {\n                    end++;\n                }\n                final boolean boolean = (end != seqEnd) && ((input.charAt(end)) == ';');\n                if (!semiNext) {\n                    if (isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)) {\n                        return 0;\n                    } else if (isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)) {\n                        throw new java.lang.IllegalArgumentException(\"Semi-colon required at end of numeric entity\");\n                    } \n                } \n                int int;\n                try {\n                    if (isHex) {\n                        entityValue = java.lang.Integer.parseInt(input.subSequence(start, end).toString(), 16);\n                    } else {\n                        entityValue = java.lang.Integer.parseInt(input.subSequence(start, end).toString(), 10);\n                    }\n                } catch (final java.lang.NumberFormatException nfe) {\n                    return 0;\n                }\n                if (entityValue > 65535) {\n                    final char[] char[] = java.lang.Character.toChars(entityValue);\n                    out.write(chrs[0]);\n                    out.write(chrs[1]);\n                } else {\n                    out.write(entityValue);\n                }\n                return (((2 + end) - start) + (isHex ? 1 : 0)) + (semiNext ? 1 : 0);\n            } \n            return 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:308","type":"CtBinaryOperatorImpl","sourcecode":"ch < 128"},"failures":[97,98],"tindex":"efb7b345-3e53-11e6-ae44-5b1837a6b0bb","method":{"position":"org.apache.commons.lang3.CharUtils:217","type":"CtMethodImpl","sourcecode":"public static int toIntValue(final char ch) {\n    if (ch < 128) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false) {\n                throw new java.lang.IllegalArgumentException(((\"The character \" + ch) + \" is not in the range '0' - '9'\"));\n            } \n            return ch - 48;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"efb7b346-3e53-11e6-ae44-a75602402fde","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:118","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getInstance(final java.lang.String pattern) {\n    if (pattern == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(pattern, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:550","type":"CtInvocationImpl","sourcecode":"value.getClass().isArray()"},"failures":[99,100],"tindex":"efb7da57-3e53-11e6-ae44-1f588e5314a4","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:530","type":"CtMethodImpl","sourcecode":"public static void writeStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (value.getClass().isArray()) {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(cls, fieldName, value, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2690","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],"tindex":"efb7da58-3e53-11e6-ae44-c3d1dcab4c16","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2781","type":"CtMethodImpl","sourcecode":"protected int validateRange(final int startIndex, int endIndex) {\n    if (endIndex < 0) {\n        {\n            if (startIndex < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n            } \n            if (endIndex > (int)) {\n                endIndex = int;\n            } \n            if (startIndex > endIndex) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n            } \n            return endIndex;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"endIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:106","type":"CtUnaryOperatorImpl","sourcecode":"!(java.lang.reflect.Modifier.isPublic(field.getModifiers()))"},"failures":[195],"tindex":"efb80169-3e53-11e6-ae44-df260f2b5a6b","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:360","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readField(final java.lang.reflect.Field field, final java.lang.Object target) throws java.lang.IllegalAccessException {\n    if (!(java.lang.reflect.Modifier.isPublic(field.getModifiers()))) {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readField(field, target, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:831","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof byte[]"},"failures":[196],"tindex":"efb8016a-3e53-11e6-ae44-1520141cf503","method":{"position":"org.apache.commons.lang3.ObjectUtils:316","type":"CtMethodImpl","sourcecode":"public static void identityToString(final org.apache.commons.lang3.text.StrBuilder builder, final java.lang.Object object) {\n    if (object instanceof long[]) {\n        {\n            if (object instanceof byte[]) {\n                {\n                    if (object == null) {\n                        throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n                    } \n                    builder.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3388","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[197],"tindex":"efb8016b-3e53-11e6-ae44-bd30a196d532","method":{"position":"org.apache.commons.lang3.ArrayUtils:3365","type":"CtMethodImpl","sourcecode":"public static float[] toPrimitive(final java.lang.Float[] array) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.float[];\n            } \n            final float[] float[] = new float[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].floatValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:195","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"efb8287c-3e53-11e6-ae44-bbd114a306f7","method":{"position":"org.apache.commons.lang3.math.NumberUtils:302","type":"CtMethodImpl","sourcecode":"public static byte toByte(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            if (str != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.math.NumberUtils.toByte(str, ((byte)(0)));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:525","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[198,199,200,201,202,203],"tindex":"efb8287d-3e53-11e6-ae44-93ef782daeb6","method":{"position":"org.apache.commons.lang3.StringUtils:7202","type":"CtMethodImpl","sourcecode":"private static boolean startsWith(final java.lang.CharSequence str, final java.lang.CharSequence prefix, final boolean ignoreCase) {\n    if (str == null) {\n        {\n            if ((str == null) || (prefix == null)) {\n                return (str == null) && (prefix == null);\n            } \n            if ((prefix.length()) > (str.length())) {\n                return false;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, ignoreCase, 0, prefix, 0, prefix.length());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:117","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 4095"},"failures":[204,205,206,207],"tindex":"efb8287e-3e53-11e6-ae44-0b3d41d68f4d","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover:33","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean translate(int codepoint, java.io.Writer out) throws java.io.IOException {\n    if (codepoint > 4095) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((codepoint >= (java.lang.Character.java.lang.Character.char)) && (codepoint <= (java.lang.Character.java.lang.Character.char))) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepoint"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"object1 == object2"},"failures":[],"tindex":"efb84f8f-3e53-11e6-ae44-571baf4803c4","method":{"position":"org.apache.commons.lang3.ObjectUtils:185","type":"CtMethodImpl","sourcecode":"public static boolean notEqual(final java.lang.Object object1, final java.lang.Object object2) {\n    if (object1 == object1) {\n        {\n            return (org.apache.commons.lang3.ObjectUtils.equals(object1, object2)) == false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object2":"object1","object1":"object1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:253","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[],"tindex":"efb84f90-3e53-11e6-ae44-c3e64f7ca0c7","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:164","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrTokenizer getCSVInstance(final java.lang.String input) {\n    if (input != null) {\n        {\n            final org.apache.commons.lang3.text.StrTokenizer org.apache.commons.lang3.text.StrTokenizer = org.apache.commons.lang3.text.StrTokenizer.getCSVClone();\n            tok.reset(input);\n            return tok;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:823","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof long[]"},"failures":[],"tindex":"efb84f91-3e53-11e6-ae44-51a01fc1937a","method":{"position":"org.apache.commons.lang3.ObjectUtils:316","type":"CtMethodImpl","sourcecode":"public static void identityToString(final org.apache.commons.lang3.text.StrBuilder builder, final java.lang.Object object) {\n    if (object instanceof long[]) {\n        {\n            if (object instanceof byte[]) {\n                {\n                    if (object == null) {\n                        throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n                    } \n                    builder.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2245","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[208],"tindex":"efb876a2-3e53-11e6-ae44-19b3d36fb110","method":{"position":"org.apache.commons.lang3.StringUtils:3013","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitPreserveAllTokens(final java.lang.String str, final java.lang.String separatorChars) {\n    if (str == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChars, (-1), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1692","type":"CtBinaryOperatorImpl","sourcecode":"(c.getEnclosingClass()) == null"},"failures":[209,210,211,212,213],"tindex":"efb876a3-3e53-11e6-ae44-b347e626dd58","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1742","type":"CtMethodImpl","sourcecode":"private static java.lang.String classToString(java.lang.Class<?> c) {\n    if ((c.getEnclosingClass()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            if ((c.getEnclosingClass()) != null) {\n                buf.append(org.apache.commons.lang3.reflect.TypeUtils.classToString(c.getEnclosingClass())).append('.').append(c.getSimpleName());\n            } else {\n                buf.append(c.getName());\n            }\n            if ((c.getTypeParameters().int) > 0) {\n                buf.append('<');\n                org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(buf, \", \", c.getTypeParameters());\n                buf.append('>');\n            } \n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1368","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.TypeVariable<?>"},"failures":[214,215],"tindex":"efb876a4-3e53-11e6-ae44-c388e8e785fb","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1363","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeArguments, final java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.TypeVariable<?>) {\n        {\n            if (typeArguments == null) {\n                typeArguments = java.util.Collections.<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>emptyMap();\n            } \n            if (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(type)) {\n                if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                    return org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, typeArguments.get(type));\n                } \n                if (type instanceof java.lang.reflect.ParameterizedType) {\n                    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(type));\n                    final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n                    if ((p.getOwnerType()) == null) {\n                        parameterizedTypeArguments = typeArguments;\n                    } else {\n                        parameterizedTypeArguments = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(typeArguments);\n                        parameterizedTypeArguments.putAll(org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(p));\n                    }\n                    final java.lang.reflect.Type[] java.lang.reflect.Type[] = p.getActualTypeArguments();\n                    for (int int = 0 ; i < (args.int) ; i++) {\n                        final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(parameterizedTypeArguments, args[i]);\n                        if (unrolled != null) {\n                            args[i] = unrolled;\n                        } \n                    }\n                    return org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(p.getOwnerType(), ((java.lang.Class<?>)(p.getRawType())), args);\n                } \n                if (type instanceof java.lang.reflect.WildcardType) {\n                    final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(type));\n                    return org.apache.commons.lang3.reflect.TypeUtils.wildcardType().withUpperBounds(org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(typeArguments, wild.getUpperBounds())).withLowerBounds(org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(typeArguments, wild.getLowerBounds())).build();\n                } \n            } \n            return type;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1241","type":"CtBinaryOperatorImpl","sourcecode":"b > a"},"failures":[216],"tindex":"efb89db5-3e53-11e6-ae44-0d5f6d5d5fb4","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1134","type":"CtMethodImpl","sourcecode":"public static short min(short a, final short b, final short c) {\n    if (a > b) {\n        {\n            if (b < a) {\n                a = b;\n            } \n            if (c < a) {\n                a = c;\n            } \n            return a;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:745","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[217],"tindex":"efb8c4c6-3e53-11e6-ae44-c16cbce81965","method":{"position":"org.apache.commons.lang3.text.StrBuilder:721","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final char[] chars) {\n    if (chars == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (chars == null) {\n                return appendNull();\n            } \n            final int int = chars.int;\n            if (strLen > 0) {\n                final int int = length();\n                ensureCapacity((len + strLen));\n                java.lang.System.arraycopy(chars, 0, char[], len, strLen);\n                int += strLen;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"chars"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1870","type":"CtBinaryOperatorImpl","sourcecode":"fieldNameValueSeparator == null"},"failures":[],"tindex":"efb8c4c7-3e53-11e6-ae44-6bd688273383","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1869","type":"CtMethodImpl","sourcecode":"protected void setFieldNameValueSeparator(java.lang.String fieldNameValueSeparator) {\n    if (fieldNameValueSeparator == null) {\n        {\n            if (fieldNameValueSeparator == null) {\n                fieldNameValueSeparator = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = fieldNameValueSeparator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldNameValueSeparator":"fieldNameValueSeparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1389","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[198,199],"tindex":"efb8c4c8-3e53-11e6-ae44-2d5326a6ad39","method":{"position":"org.apache.commons.lang3.StringUtils:7512","type":"CtMethodImpl","sourcecode":"private static java.lang.String prependIfMissing(final java.lang.String str, final java.lang.CharSequence prefix, final boolean ignoreCase, final java.lang.CharSequence... prefixes) {\n    if (prefix == null) {\n        {\n            if (((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(prefix))) || (org.apache.commons.lang3.StringUtils.startsWith(str, prefix, ignoreCase))) {\n                return str;\n            } \n            if ((prefixes != null) && ((prefixes.int) > 0)) {\n                for (final java.lang.CharSequence java.lang.CharSequence : prefixes) {\n                    if (org.apache.commons.lang3.StringUtils.startsWith(str, p, ignoreCase)) {\n                        return str;\n                    } \n                }\n            } \n            return (prefix.toString()) + str;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"prefix"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3858","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[218],"tindex":"efb8ebd9-3e53-11e6-ae44-43493117790e","method":{"position":"org.apache.commons.lang3.ArrayUtils:4124","type":"CtMethodImpl","sourcecode":"public static double[] add(final double[] array, final double element) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final double[] double[] = ((double[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:412","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[219],"tindex":"efb8ebda-3e53-11e6-ae44-eff018c58f7a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2300","type":"CtMethodImpl","sourcecode":"public int indexOf(final char ch, int startIndex) {\n    if (startIndex < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            if (startIndex >= (int)) {\n                return -1;\n            } \n            final char[] char[] = char[];\n            for (int int = startIndex ; i < (int) ; i++) {\n                if ((thisBuf[i]) == ch) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.ClassNotFoundException","condition":{"position":"org.apache.commons.lang3.SerializationUtils:105","type":"CtBinaryOperatorImpl","sourcecode":"in != null"},"failures":[220,221,222],"tindex":"efb8ebdb-3e53-11e6-ae44-cf6cc488d14b","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:568","type":"CtMethodImpl","sourcecode":"private void readObject(final java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {\n    if (in != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.ClassNotFoundException();\n    } else {\n        {\n            in.defaultReadObject();\n            init();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:657","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[223,224],"tindex":"efb912ec-3e53-11e6-ae44-0fe89fa3c592","method":{"position":"org.apache.commons.lang3.ArrayUtils:592","type":"CtMethodImpl","sourcecode":"public static char[] nullToEmpty(final char[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            return array;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:6078","type":"CtBinaryOperatorImpl","sourcecode":"count > 0"},"failures":[225],"tindex":"efb912ed-3e53-11e6-ae44-c5d50403d22e","method":{"position":"org.apache.commons.lang3.RandomUtils:62","type":"CtMethodImpl","sourcecode":"public static byte[] nextBytes(int count) {\n    if (count > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((count >= 0), \"Count cannot be negative.\");\n            byte[] byte[] = new byte[count];\n            org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextBytes(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:759","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"efb912ee-3e53-11e6-ae44-97ab102aede6","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:663","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final double value) {\n    if (fieldName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:797","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[226,227],"tindex":"efb939ff-3e53-11e6-ae44-4f6a3790dec6","method":{"position":"org.apache.commons.lang3.Validate:1174","type":"CtMethodImpl","sourcecode":"public static void isInstanceOf(final java.lang.Class<?> type, final java.lang.Object obj) {\n    if (obj instanceof java.lang.Class<?>) {\n        {\n            if ((type.isInstance(obj)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, type.getName(), (obj == null ? \"null\" : obj.getClass().getName())));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:360","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Modifier.isPublic(cls.getModifiers())"},"failures":[228,229,230,231,232,233,234,235,236],"tindex":"efb93a00-3e53-11e6-ae44-4bcb5ab1d00a","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:61","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Field getField(final java.lang.Class<?> cls, final java.lang.String fieldName) {\n    if (java.lang.reflect.Modifier.isPublic(cls.getModifiers())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getField(cls, fieldName, false);\n            org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(field);\n            return field;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1092","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[237],"tindex":"efb93a01-3e53-11e6-ae44-bfc3b83f65b7","method":{"position":"org.apache.commons.lang3.ArrayUtils:4232","type":"CtMethodImpl","sourcecode":"public static short[] add(final short[] array, final short element) {\n    if (array == null) {\n        {\n            final short[] short[] = ((short[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Short.java.lang.Short.java.lang.Class<java.lang.Short>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.NoSuchMethodException","condition":{"position":"org.apache.commons.lang3.ClassUtils:268","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"efb96112-3e53-11e6-ae44-3383ae784b5a","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:180","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeExactMethod(final java.lang.Object object, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.NoSuchMethodException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(object.getClass(), methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on object: \") + (object.getClass().getName())));\n            } \n            return method.invoke(object, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5001","type":"CtBinaryOperatorImpl","sourcecode":"(str.length()) == 1"},"failures":[238],"tindex":"efb96113-3e53-11e6-ae44-134617e90cfc","method":{"position":"org.apache.commons.lang3.StringUtils:7497","type":"CtMethodImpl","sourcecode":"public static java.lang.String appendIfMissingIgnoreCase(final java.lang.String str, final java.lang.CharSequence suffix, final java.lang.CharSequence... suffixes) {\n    if ((suffix.length()) == 1) {\n        {\n            return org.apache.commons.lang3.StringUtils.appendIfMissing(str, suffix, true, suffixes);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"suffix"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:466","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[239,240],"tindex":"efb96114-3e53-11e6-ae44-432cc09683eb","method":{"position":"org.apache.commons.lang3.BooleanUtils:122","type":"CtMethodImpl","sourcecode":"public static boolean isFalse(final java.lang.Boolean bool) {\n    if (bool == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(bool);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[241],"tindex":"efb98825-3e53-11e6-ae44-31a9d9d18cdd","method":{"position":"org.apache.commons.lang3.mutable.MutableByte:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        {\n            org.apache.commons.lang3.mutable.MutableByte.this.byte = value.byteValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1223","type":"CtBinaryOperatorImpl","sourcecode":"0 == nShorts"},"failures":[242],"tindex":"efb98826-3e53-11e6-ae44-57b1c180f7e8","method":{"position":"org.apache.commons.lang3.Conversion:759","type":"CtMethodImpl","sourcecode":"public static int shortArrayToInt(final short[] src, final int srcPos, final int dstInit, final int dstPos, final int nShorts) {\n    if (0 == dstPos) {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nShorts)) {\n                return dstInit;\n            } \n            if ((((nShorts - 1) * 16) + dstPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 32\");\n            } \n            int int = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nShorts ; i++) {\n                shift = (i * 16) + dstPos;\n                final int int = (65535 & (src[(i + srcPos)])) << shift;\n                final int int = 65535 << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nShorts":"dstPos"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2703","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.text.StrBuilder"},"failures":[243,244,245,246,247],"tindex":"efb98827-3e53-11e6-ae44-8b9b470b464b","method":{"position":"org.apache.commons.lang3.tuple.Triple:110","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\n@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.lang3.text.StrBuilder) {\n        {\n            if (obj == (org.apache.commons.lang3.tuple.Triple.this)) {\n                return true;\n            } \n            if (obj instanceof org.apache.commons.lang3.tuple.Triple<?, ?, ?>) {\n                final org.apache.commons.lang3.tuple.Triple<?, ?, ?> org.apache.commons.lang3.tuple.Triple<?, ?, ?> = ((org.apache.commons.lang3.tuple.Triple<?, ?, ?>)(obj));\n                return ((org.apache.commons.lang3.ObjectUtils.equals(getLeft(), other.getLeft())) && (org.apache.commons.lang3.ObjectUtils.equals(getMiddle(), other.getMiddle()))) && (org.apache.commons.lang3.ObjectUtils.equals(getRight(), other.getRight()));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:657","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[248,249,29],"tindex":"efb9af38-3e53-11e6-ae44-c5a21869ef3a","method":{"position":"org.apache.commons.lang3.ArrayUtils:2313","type":"CtMethodImpl","sourcecode":"public static int indexOf(final char[] array, final char valueToFind) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[],"tindex":"efb9af39-3e53-11e6-ae44-4974d8bbc251","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (calendar == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendTo(buffer, ((calendar.get(java.util.Calendar.java.util.Calendar.int)) + 1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2098","type":"CtBinaryOperatorImpl","sourcecode":"summaryObjectEndText == null"},"failures":[250,251,252,253,254,47,255,256],"tindex":"efb9af3a-3e53-11e6-ae44-1b44a13892d3","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:554","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setSummaryObjectEndText(final java.lang.String summaryObjectEndText) {\n    if (summaryObjectEndText == null) {\n        {\n            super.setSummaryObjectEndText(summaryObjectEndText);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"summaryObjectEndText":"summaryObjectEndText"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:518","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"efb9d64b-3e53-11e6-ae44-f1ba07ee263f","method":{"position":"org.apache.commons.lang3.time.DateUtils:432","type":"CtMethodImpl","sourcecode":"public static java.util.Date addWeeks(final java.util.Date date, final int amount) {\n    if (date == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1609","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[257],"tindex":"efb9d64c-3e53-11e6-ae44-b71d1ab366a4","method":{"position":"org.apache.commons.lang3.ArrayUtils:4070","type":"CtMethodImpl","sourcecode":"public static byte[] add(final byte[] array, final byte element) {\n    if (array == null) {\n        {\n            final byte[] byte[] = ((byte[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Byte.java.lang.Byte.java.lang.Class<java.lang.Byte>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1913","type":"CtBinaryOperatorImpl","sourcecode":"index >= 0"},"failures":[258],"tindex":"efb9d64d-3e53-11e6-ae44-c340d42144a6","method":{"position":"org.apache.commons.lang3.ArrayUtils:4451","type":"CtMethodImpl","sourcecode":"public static int[] add(final int[] array, final int index, final int element) {\n    if (element >= 0) {\n        {\n            return ((int[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Integer.valueOf(element), java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:412","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[259],"tindex":"efb9d64e-3e53-11e6-ae44-43293d18c721","method":{"position":"org.apache.commons.lang3.ArrayUtils:2064","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final long[] array, final long valueToFind, int startIndex) {\n    if (startIndex < 0) {\n        {\n            if (startIndex < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (array == null) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n                    } \n                    if (startIndex < 0) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n                    } else if (startIndex >= (array.int)) {\n                        startIndex = (array.int) - 1;\n                    } \n                    for (int int = startIndex ; i >= 0 ; i--) {\n                        if (valueToFind == (array[i])) {\n                            return i;\n                        } \n                    }\n                    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:121","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[113],"tindex":"efb9fd5f-3e53-11e6-ae44-6be6a3a7b10c","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2145","type":"CtMethodImpl","sourcecode":"public java.lang.String substring(final int start) {\n    if (start < 0) {\n        {\n            if (start < 0) {\n                {\n                    return substring(start, int);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:253","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[],"tindex":"efb9fd60-3e53-11e6-ae44-e1e84490c0bd","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:604","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeHtml3(final java.lang.String input) {\n    if (input != null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffResult:92","type":"CtBinaryOperatorImpl","sourcecode":"style == null"},"failures":[260,260,261,261,262,262,263,263,264,264,46,46,265,265,266,266,250,250,251,251,252,252,253,253,254,254,47,47,255,255,256,256,267,267,268,268,269,269,270,270,271,271,48,48,272,272,273,273,274,274,275,275,276,276,277,277,278,278,49,49,279,279,280,280,281,281,282,282,283,283,284,284,285,285,50,50,286,286,287,287,288,288,289,289,290,290,291,291,292,292,51,51,293,293,294,294,295,295,296,296,297,297,298,298,299,299,52,52,300,300,301,301,302],"tindex":"efb9fd61-3e53-11e6-ae44-c94c707bb2df","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:135","type":"CtMethodImpl","sourcecode":"public static void setDefaultStyle(final org.apache.commons.lang3.builder.ToStringStyle style) {\n    if (style == null) {\n        {\n            if (style == null) {\n                throw new java.lang.IllegalArgumentException(\"The style must not be null\");\n            } \n            org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringStyle = style;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"style":"style"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:549","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"efba2472-3e53-11e6-ae44-3393e3a31600","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:967","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final long[] array, final java.lang.Boolean fullDetail) {\n    if (fieldName == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeLiteral:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.lang3.reflect.TypeLiteral) == false"},"failures":[303,304,305,306,307,308,309,310,311,312],"tindex":"efba2473-3e53-11e6-ae44-1be7b9cea38c","method":{"position":"org.apache.commons.lang3.CharRange:208","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.lang3.reflect.TypeLiteral) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.lang3.CharRange.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.lang3.CharRange) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.CharRange org.apache.commons.lang3.CharRange = ((org.apache.commons.lang3.CharRange)(obj));\n            return (((char) == (other.char)) && ((char) == (other.char))) && ((boolean) == (other.boolean));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2562","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[313],"tindex":"efba4b84-3e53-11e6-ae44-eb4563ba0cf7","method":{"position":"org.apache.commons.lang3.ArrayUtils:2021","type":"CtMethodImpl","sourcecode":"public static int indexOf(final long[] array, final long valueToFind, int startIndex) {\n    if (startIndex < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:315","type":"CtArrayReadImpl","sourcecode":"src[srcPos]"},"failures":[314],"tindex":"efba4b85-3e53-11e6-ae44-4763aac9e09d","method":{"position":"org.apache.commons.lang3.Conversion:1152","type":"CtMethodImpl","sourcecode":"public static byte binaryToByte(final boolean[] src, final int srcPos, final byte dstInit, final int dstPos, final int nBools) {\n    if (src[srcPos]) {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBools)) {\n                return dstInit;\n            } \n            if (((nBools - 1) + dstPos) >= 8) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 8\");\n            } \n            byte byte = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + dstPos;\n                final int int = (src[(i + srcPos)] ? 1 : 0) << shift;\n                final int int = 1 << shift;\n                out = ((byte)((out & (~mask)) | bits));\n            }\n            return out;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"srcPos","src":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:796","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[315],"tindex":"efba4b86-3e53-11e6-ae44-81876d28e4f7","method":{"position":"org.apache.commons.lang3.StringUtils:3335","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final long[] array, final char separator) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2168","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[316],"tindex":"efba7297-3e53-11e6-ae44-47356e00d076","method":{"position":"org.apache.commons.lang3.ArrayUtils:3137","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer[] toObject(final int[] array) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Integer[];\n            } \n            final java.lang.Integer[] java.lang.Integer[] = new java.lang.Integer[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Integer.valueOf(array[i]);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:518","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[317,318,319,320,321,322,323,324],"tindex":"efba7298-3e53-11e6-ae44-edeb59c5bd55","method":{"position":"org.apache.commons.lang3.time.DateUtils:1327","type":"CtMethodImpl","sourcecode":"public static long getFragmentInSeconds(final java.util.Date date, final int fragment) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3048","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[325,326],"tindex":"efba7299-3e53-11e6-ae44-df39ca223cc7","method":{"position":"org.apache.commons.lang3.ArrayUtils:692","type":"CtMethodImpl","sourcecode":"public static java.lang.Long[] nullToEmpty(final java.lang.Long[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Long[];\n            } \n            return array;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1118","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[327],"tindex":"efba729a-3e53-11e6-ae44-fb999439e162","method":{"position":"org.apache.commons.lang3.ArrayUtils:870","type":"CtMethodImpl","sourcecode":"public static <T>T[] subarray(final T[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive < 0) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            final java.lang.Class<?> java.lang.Class<?> = array.getClass().getComponentType();\n            if (newSize <= 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(type, 0)));\n                return emptyArray;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(type, newSize)));\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"endIndexExclusive"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MemberUtils:170","type":"CtUnaryOperatorImpl","sourcecode":"!(cls.isPrimitive())"},"failures":[328,329,330,331,332,333,334,335,336,337,338],"tindex":"efba99ab-3e53-11e6-ae44-6de417d2c406","method":{"position":"org.apache.commons.lang3.ClassUtils:709","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> primitiveToWrapper(final java.lang.Class<?> cls) {\n    if (!(cls.isPrimitive())) {\n        {\n            java.lang.Class<?> java.lang.Class<?> = cls;\n            if ((cls != null) && (cls.isPrimitive())) {\n                convertedClass = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(cls);\n            } \n            return convertedClass;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[],"tindex":"efbac0bc-3e53-11e6-ae44-a96b2504ebf3","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:200","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Calendar calendar, final java.lang.String pattern) {\n    if (calendar == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(calendar, pattern, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1010","type":"CtBinaryOperatorImpl","sourcecode":"(((nHex - 1) * 4) + dstPos) >= 8"},"failures":[339],"tindex":"efbac0bd-3e53-11e6-ae44-e7f17c1775fa","method":{"position":"org.apache.commons.lang3.Conversion:938","type":"CtMethodImpl","sourcecode":"public static int hexToInt(final java.lang.String src, final int srcPos, final int dstInit, final int dstPos, final int nHex) {\n    if ((((dstInit - 1) * 4) + srcPos) >= 8) {\n        {\n            if (0 == nHex) {\n                return dstInit;\n            } \n            if ((((nHex - 1) * 4) + dstPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\");\n            } \n            int int = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nHex ; i++) {\n                shift = (i * 4) + dstPos;\n                final int int = (15 & (org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))) << shift;\n                final int int = 15 << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"srcPos","nHex":"dstInit"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:115","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 65535"},"failures":[],"tindex":"efbac0be-3e53-11e6-ae44-9100b59e8672","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:138","type":"CtMethodImpl","sourcecode":"protected java.lang.String toUtf16Escape(final int codepoint) {\n    if (codepoint > 65535) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return \"\\\\u\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepoint"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:927","type":"CtBinaryOperatorImpl","sourcecode":"(seq == null) || (searchSeq == null)"},"failures":[66],"tindex":"efbac0bf-3e53-11e6-ae44-75d59919e1a2","method":{"position":"org.apache.commons.lang3.StringUtils:926","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq) {\n    if ((seq == null) || (searchSeq == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchSeq, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchSeq":"searchSeq","seq":"seq"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:412","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"efbae7d0-3e53-11e6-ae44-ed5a22e3848e","method":{"position":"org.apache.commons.lang3.ArrayUtils:2064","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final long[] array, final long valueToFind, int startIndex) {\n    if (startIndex < 0) {\n        {\n            if (startIndex < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (array == null) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n                    } \n                    if (startIndex < 0) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n                    } else if (startIndex >= (array.int)) {\n                        startIndex = (array.int) - 1;\n                    } \n                    for (int int = startIndex ; i >= 0 ; i--) {\n                        if (valueToFind == (array[i])) {\n                            return i;\n                        } \n                    }\n                    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:480","type":"CtBinaryOperatorImpl","sourcecode":"value instanceof java.util.Collection<?>"},"failures":[340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375],"tindex":"efbae7d1-3e53-11e6-ae44-ab8441f2ab90","method":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:53","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.exception.DefaultExceptionContext addContextValue(final java.lang.String label, final java.lang.Object value) {\n    if (value instanceof java.util.Collection<?>) {\n        {\n            java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.add(new org.apache.commons.lang3.tuple.ImmutablePair<java.lang.String, java.lang.Object>(label , value));\n            return org.apache.commons.lang3.exception.DefaultExceptionContext.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2141","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"efbb0ee2-3e53-11e6-ae44-43867f65dd80","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2145","type":"CtMethodImpl","sourcecode":"public java.lang.String substring(final int start) {\n    if (start < 0) {\n        {\n            if (start < 0) {\n                {\n                    return substring(start, int);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:353","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[376],"tindex":"efbb0ee3-3e53-11e6-ae44-d5d02488a665","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:388","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Method getAccessibleMethodFromSuperclass(final java.lang.Class<?> cls, final java.lang.String methodName, final java.lang.Class<?>... parameterTypes) {\n    if (cls == null) {\n        {\n            java.lang.Class<?> java.lang.Class<?> = cls.getSuperclass();\n            while (parentClass != null) {\n                if (java.lang.reflect.Modifier.isPublic(parentClass.getModifiers())) {\n                    try {\n                        return parentClass.getMethod(methodName, parameterTypes);\n                    } catch (final java.lang.NoSuchMethodException e) {\n                        return null;\n                    }\n                } \n                parentClass = parentClass.getSuperclass();\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:998","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[377],"tindex":"efbb0ee4-3e53-11e6-ae44-6b2275530028","method":{"position":"org.apache.commons.lang3.ArrayUtils:954","type":"CtMethodImpl","sourcecode":"public static int[] subarray(final int[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236704162/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int[];\n            } \n            final int[] int[] = new int[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"startIndexInclusive"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}