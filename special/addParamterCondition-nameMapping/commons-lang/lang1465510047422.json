{"failureDictionary":{"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":290,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":173,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":319,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":285,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":266,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":168,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":346,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":61,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_String":250,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":221,"org.apache.commons.lang3.builder.EqualsBuilderTest.testIntArrayHiddenByObject":32,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":100,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":282,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":220,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":277,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":148,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":333,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Array":73,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":11,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":369,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":314,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleWithStartIndex":106,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":345,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses2D":201,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":34,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":326,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":347,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":320,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":274,"org.apache.commons.lang3.builder.CompareToBuilderTest.testCharArray":258,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":160,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException3":187,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException4":188,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException1":185,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException2":186,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":275,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":230,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":164,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_double":209,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":236,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":224,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":84,"org.apache.commons.lang3.builder.EqualsBuilderTest.testIntArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":132,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":390,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":167,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":397,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":324,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithCalendar":82,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble":267,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":142,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":365,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":47,"org.apache.commons.lang3.StringUtilsTest.testJoin_IteratorString":77,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleTolerance":101,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticFieldForceAccess":194,"org.apache.commons.lang3.CharUtilsTest.testToString_char":271,"org.apache.commons.lang3.StringUtilsTest.testSwapCase_String":361,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":83,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementLongArray":13,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldIllegalArgumentException2":192,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":283,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithCalendar":81,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":399,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsWithOtherObjects":355,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithDate":375,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":342,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":223,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":302,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":140,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble_emptyArray":265,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":284,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotTrue_Boolean":211,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":317,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":38,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":46,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_float":208,"org.apache.commons.lang3.reflect.FieldUtilsTest.testAmbig":189,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparatorsWithNullText":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":153,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsTrue":354,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":339,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithDate":372,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":174,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsFalse":353,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":330,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":127,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":212,"org.apache.commons.lang3.ClassUtilsTest.testIsPrimitiveWrapper":382,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":373,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":111,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":315,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrimToNull":264,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":6,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleWithStartIndexTolerance":102,"org.apache.commons.lang3.tuple.ImmutablePairTest.testEquals":389,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":377,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":5,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":316,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":309,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":123,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiIntArray":31,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_null":254,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":306,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":138,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":37,"org.apache.commons.lang3.ObjectUtilsTest.testNotEqual":384,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":137,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithWrongOffsetBugWithCalendar":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":293,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":341,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":159,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":357,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":116,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":328,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":338,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":279,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArrayHiddenByObject":54,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":276,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":348,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":165,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":370,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":162,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetField":184,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays2D":202,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_double":379,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":9,"org.apache.commons.lang3.ClassUtilsTest.testWithInterleavingWhitespace":203,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":218,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":246,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":120,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":96,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":36,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyCharObjectEmptyArray":57,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":248,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayNegativeIndex":64,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveObjectArray":210,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":308,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":41,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":68,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testEquals":386,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":3,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedException":60,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArray":67,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleTolerance":104,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":155,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithCalendar":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":281,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":343,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":363,"org.apache.commons.lang3.ConversionTest.testShortToBinary":269,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":336,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":225,"org.apache.commons.lang3.ObjectUtilsTest.testToString_Object":74,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyByteNull":351,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":227,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":226,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":18,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":17,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":229,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":169,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":228,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":131,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":299,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":92,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementCharArray":109,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":238,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithSupplementaryChars":249,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":181,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayInt":29,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":178,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":289,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":172,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":401,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":171,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":112,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":10,"org.apache.commons.lang3.mutable.MutableIntTest.testGetSet":44,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithDate":374,"org.apache.commons.lang3.tuple.MutablePairTest.testEquals":387,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":272,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfIgnoreCase_String":50,"org.apache.commons.lang3.ValidateTest.testInclusiveBetweenDouble":205,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":113,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays":198,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiCharArray":261,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":350,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":143,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":394,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":303,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":301,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":175,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":310,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":278,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":154,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleWithStartIndexTolerance":103,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":323,"org.apache.commons.lang3.math.NumberUtilsTest.testMinByte":196,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":325,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfIgnoreCase_StringInt":49,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":327,"org.apache.commons.lang3.builder.CompareToBuilderTest.testCharArrayHiddenByObject":262,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":219,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArray":52,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithBadSupplementaryChars":251,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":180,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":253,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":395,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiFloatArray":53,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseNull":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":146,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":88,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":337,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDoubleTolerance":97,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":121,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":241,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":4,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":242,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":243,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":244,"org.apache.commons.lang3.ClassUtilsTest.testIsPrimitiveOrWrapper":381,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":245,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":170,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":287,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":157,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyCharObject":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":129,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":335,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":396,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":42,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":368,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":239,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":400,"org.apache.commons.lang3.ClassUtilsTest.testGetInnerClass":199,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":349,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":383,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":23,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDouble":105,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":398,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccess":182,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":35,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":380,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses":200,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":134,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":332,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":147,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithCalendar":87,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfShort":207,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":292,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":91,"org.apache.commons.lang3.ConversionTest.testLongToHex":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":273,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":334,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":51,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":321,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":297,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":80,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":30,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Collection":70,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":190,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":340,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticField":183,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":300,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":391,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayOutOfBoundsIndex":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":125,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":286,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":222,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":40,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":352,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticField":195,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementFloatArray":94,"org.apache.commons.lang3.math.NumberUtilsTest.testMinByte_emptyArray":197,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDouble":99,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":62,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":90,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":358,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":318,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeExternalExec":367,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":1,"org.apache.commons.lang3.StringUtilsTest.testSplit_String":252,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":294,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":296,"org.apache.commons.lang3.tuple.MutableTripleTest.testEquals":388,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":298,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":307,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":145,"org.apache.commons.lang3.ValidateTest.testExclusiveBetweenDouble":268,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":69,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":15,"org.apache.commons.lang3.CharUtilsTest.testToString_Character":270,"org.apache.commons.lang3.ArrayUtilsTest.testToString":305,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":311,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":28,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":247,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":280,"org.apache.commons.lang3.StringUtilsTest.testJoin_IterableString":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":117,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfShortWithStartIndex":206,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":215,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":216,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithDate":376,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":136,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":259,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":331,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":288,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":255,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":55,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Iterator":71,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":344,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":150,"org.apache.commons.lang3.text.StrTokenizerTest.test8":235,"org.apache.commons.lang3.time.DateUtilsTest.testRound":95,"org.apache.commons.lang3.text.StrTokenizerTest.test5":21,"org.apache.commons.lang3.text.StrTokenizerTest.test4":20,"org.apache.commons.lang3.StringUtilsTest.testJoin_IteratorChar":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":151,"org.apache.commons.lang3.text.StrTokenizerTest.test7":234,"org.apache.commons.lang3.text.StrTokenizerTest.test6":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":152,"org.apache.commons.lang3.text.StrTokenizerTest.test1":19,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":231,"org.apache.commons.lang3.text.StrTokenizerTest.test3":233,"org.apache.commons.lang3.text.StrTokenizerTest.test2":232,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":128,"org.apache.commons.lang3.ObjectUtilsTest.testEquals":385,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDouble":107,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":322,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleWithStartIndex":98,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":312,"org.apache.commons.lang3.ArrayUtilsTest.testContainsShort":256,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":213,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":214,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":263,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":362,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":119,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyBooleanObjectNull":359,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveFloatArray":93,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":366,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfShort":257,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":329,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayRemoveNone":66,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":217,"org.apache.commons.lang3.text.StrMatcherTest.testTrimMatcher":14,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":118,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithDate":378,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":291,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticField":193,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray":356,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":260,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByteArray":79,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":237,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":240,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":25,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":26,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":364,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":24,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":12,"org.apache.commons.lang3.ClassUtilsTest.testGetClassRawPrimitives":204,"org.apache.commons.lang3.text.WordUtilsTest.testSwapCase_String":360,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":133,"org.apache.commons.lang3.StringUtilsTest.testJoin_IterableChar":75,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":304,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":295,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":393,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":130,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithDate":371,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_String":392,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":313},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.tuple.Triple:114","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.tuple.Triple<?, ?, ?>"},"failures":[0,1,2,3,4,4,5,6,7,8,9,9,10,11,12],"tindex":"8d71ae2c-2e8e-11e6-9af9-5145e08147d7","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:862","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final java.lang.Object obj, final boolean fullDetail) {\n    if (obj instanceof org.apache.commons.lang3.tuple.Triple<?, ?, ?>) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, obj, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3613","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[13],"tindex":"8d72988d-2e8e-11e6-9af9-8fb3d69cc88a","method":{"position":"org.apache.commons.lang3.ArrayUtils:5096","type":"CtMethodImpl","sourcecode":"public static long[] removeElement(final long[] array, final long element) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:335","type":"CtBinaryOperatorImpl","sourcecode":"pos < 0"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"8d72bf9e-2e8e-11e6-9af9-b116dd233a35","method":{"position":"org.apache.commons.lang3.text.StrMatcher:431","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n    if (bufferEnd < 0) {\n        {\n            return (buffer[pos]) <= 32 ? 1 : 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"bufferEnd"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:705","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"8d72bf9f-2e8e-11e6-9af9-ab09b3cb2908","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:701","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final int[] lhs, final int[] rhs) {\n    if (rhs == lhs) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:290","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[44],"tindex":"8d72e6b0-2e8e-11e6-9af9-479b0a10c2cb","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        {\n            org.apache.commons.lang3.mutable.MutableInt.this.int = value.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:357","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"8d730dc1-2e8e-11e6-9af9-7732043f1b45","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:619","type":"CtMethodImpl","sourcecode":"public static void writeField(final java.lang.reflect.Field field, final java.lang.Object target, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (value == null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeField(field, target, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:675","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[45],"tindex":"8d7334d2-2e8e-11e6-9af9-bb5707010796","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:403","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readField(final java.lang.Object target, final java.lang.String fieldName) throws java.lang.IllegalAccessException {\n    if (target == null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readField(target, fieldName, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"target"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:288","type":"CtInvocationImpl","sourcecode":"componentType.isAnnotation()"},"failures":[46,47],"tindex":"8d7334d3-2e8e-11e6-9af9-ef049989598e","method":{"position":"org.apache.commons.lang3.AnnotationUtils:287","type":"CtMethodImpl","sourcecode":"private static boolean arrayMemberEquals(final java.lang.Class<?> componentType, final java.lang.Object o1, final java.lang.Object o2) {\n    if (componentType.isAnnotation()) {\n        {\n            if (componentType.isAnnotation()) {\n                return org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(((java.lang.annotation.Annotation[])(o1)), ((java.lang.annotation.Annotation[])(o2)));\n            } \n            if (componentType.equals(java.lang.Byte.java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n                return java.util.Arrays.equals(((byte[])(o1)), ((byte[])(o2)));\n            } \n            if (componentType.equals(java.lang.Short.java.lang.Short.java.lang.Class<java.lang.Short>)) {\n                return java.util.Arrays.equals(((short[])(o1)), ((short[])(o2)));\n            } \n            if (componentType.equals(java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n                return java.util.Arrays.equals(((int[])(o1)), ((int[])(o2)));\n            } \n            if (componentType.equals(java.lang.Character.java.lang.Character.java.lang.Class<java.lang.Character>)) {\n                return java.util.Arrays.equals(((char[])(o1)), ((char[])(o2)));\n            } \n            if (componentType.equals(java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>)) {\n                return java.util.Arrays.equals(((long[])(o1)), ((long[])(o2)));\n            } \n            if (componentType.equals(java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>)) {\n                return java.util.Arrays.equals(((float[])(o1)), ((float[])(o2)));\n            } \n            if (componentType.equals(java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>)) {\n                return java.util.Arrays.equals(((double[])(o1)), ((double[])(o2)));\n            } \n            if (componentType.equals(java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>)) {\n                return java.util.Arrays.equals(((boolean[])(o1)), ((boolean[])(o2)));\n            } \n            return java.util.Arrays.equals(((java.lang.Object[])(o1)), ((java.lang.Object[])(o2)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"componentType":"componentType"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5660","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[48],"tindex":"8d735be4-2e8e-11e6-9af9-f570ab1a6984","method":{"position":"org.apache.commons.lang3.StringUtils:3013","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitPreserveAllTokens(final java.lang.String str, final java.lang.String separatorChars) {\n    if (separatorChars == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChars, (-1), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separatorChars"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:554","type":"CtBinaryOperatorImpl","sourcecode":"str == \"true\""},"failures":[49,50],"tindex":"8d7382f5-2e8e-11e6-9af9-cd477bec015c","method":{"position":"org.apache.commons.lang3.StringUtils:1371","type":"CtMethodImpl","sourcecode":"public static int lastIndexOfIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence searchStr, int startPos) {\n    if (searchStr == \"true\") {\n        {\n            if ((str == null) || (searchStr == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if (startPos > ((str.length()) - (searchStr.length()))) {\n                startPos = (str.length()) - (searchStr.length());\n            } \n            if (startPos < 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if ((searchStr.length()) == 0) {\n                return startPos;\n            } \n            for (int int = startPos ; i >= 0 ; i--) {\n                if (org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"searchStr"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3881","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[51],"tindex":"8d73aa06-2e8e-11e6-9af9-0f16407c722c","method":{"position":"org.apache.commons.lang3.ArrayUtils:3878","type":"CtMethodImpl","sourcecode":"public static int[] addAll(final int[] array1, final int... array2) {\n    if (array2 == null) {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final int[] int[] = new int[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:860","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[52,53,54],"tindex":"8d73d117-2e8e-11e6-9af9-bbd4a0f603ab","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:927","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final float[] lhs, final float[] rhs) {\n    if (rhs == lhs) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2068","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[55],"tindex":"8d73f828-2e8e-11e6-9af9-07e87501d03d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.CharSequence subSequence(final int startIndex, final int endIndex) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (startIndex < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n            } \n            if (endIndex > (int)) {\n                throw new java.lang.StringIndexOutOfBoundsException(endIndex);\n            } \n            if (startIndex > endIndex) {\n                throw new java.lang.StringIndexOutOfBoundsException((endIndex - startIndex));\n            } \n            return substring(startIndex, endIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:592","type":"CtBinaryOperatorImpl","sourcecode":"u > 0"},"failures":[],"tindex":"8d73f829-2e8e-11e6-9af9-83243c653114","method":{"position":"org.apache.commons.lang3.math.Fraction:576","type":"CtMethodImpl","sourcecode":"private static int greatestCommonDivisor(int u, int v) {\n    if (v > 0) {\n        {\n            if ((u == 0) || (v == 0)) {\n                if ((u == (java.lang.Integer.java.lang.Integer.int)) || (v == (java.lang.Integer.java.lang.Integer.int))) {\n                    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n                } \n                return (java.lang.Math.abs(u)) + (java.lang.Math.abs(v));\n            } \n            if (((java.lang.Math.abs(u)) == 1) || ((java.lang.Math.abs(v)) == 1)) {\n                return 1;\n            } \n            if (u > 0) {\n                u = -u;\n            } \n            if (v > 0) {\n                v = -v;\n            } \n            int int = 0;\n            while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) {\n                u /= 2;\n                v /= 2;\n                k++;\n            }\n            if (k == 31) {\n                throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n            } \n            int int = (u & 1) == 1 ? v : -(u / 2);\n            do {\n                while ((t & 1) == 0) {\n                    t /= 2;\n                }\n                if (t > 0) {\n                    u = -t;\n                } else {\n                    v = t;\n                }\n                t = (v - u) / 2;\n            } while (t != 0 );\n            return (-u) * (1 << k);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"u":"v"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2958","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[56,57],"tindex":"8d741f3a-2e8e-11e6-9af9-85bd0ad9dc0c","method":{"position":"org.apache.commons.lang3.ArrayUtils:752","type":"CtMethodImpl","sourcecode":"public static java.lang.Character[] nullToEmpty(final java.lang.Character[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Character[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:253","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[58],"tindex":"8d74464b-2e8e-11e6-9af9-3b32e791db17","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:455","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeJava(final java.lang.String input) {\n    if (input != null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:214","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[0,1,2,3,4,4,5,6,7,8,9,9,10,11,12],"tindex":"8d746d5c-2e8e-11e6-9af9-61439aef4575","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1553","type":"CtMethodImpl","sourcecode":"protected void appendSummarySize(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int size) {\n    if (fieldName == null) {\n        {\n            buffer.append(java.lang.String);\n            buffer.append(size);\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"org.apache.commons.lang3.concurrent.ConcurrentException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:159","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.RuntimeException"},"failures":[59,60,61,62],"tindex":"8d746d5d-2e8e-11e6-9af9-bdc79795b488","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:104","type":"CtMethodImpl","sourcecode":"public static void handleCause(final java.util.concurrent.ExecutionException ex) throws org.apache.commons.lang3.concurrent.ConcurrentException {\n    if ((ex.getCause()) instanceof java.lang.RuntimeException) {\n        throw new org.apache.commons.lang3.concurrent.ConcurrentException();\n    } else {\n        {\n            final org.apache.commons.lang3.concurrent.ConcurrentException org.apache.commons.lang3.concurrent.ConcurrentException = org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCause(ex);\n            if (cex != null) {\n                throw cex;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1473","type":"CtBinaryOperatorImpl","sourcecode":"(((nHexs - 1) * 4) + srcPos) >= 16"},"failures":[63],"tindex":"8d74946e-2e8e-11e6-9af9-0b549ce7c12b","method":{"position":"org.apache.commons.lang3.Conversion:1389","type":"CtMethodImpl","sourcecode":"public static java.lang.String longToHex(final long src, final int srcPos, final java.lang.String dstInit, final int dstPos, final int nHexs) {\n    if ((((nHexs - 1) * 4) + nHexs) >= 16) {\n        {\n            if (0 == nHexs) {\n                return dstInit;\n            } \n            if ((((nHexs - 1) * 4) + srcPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\");\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(dstInit);\n            int int = 0;\n            int int = sb.length();\n            for (int int = 0 ; i < nHexs ; i++) {\n                shift = (i * 4) + srcPos;\n                final int int = ((int)(15 & (src >> shift)));\n                if ((dstPos + i) == append) {\n                    ++append;\n                    sb.append(org.apache.commons.lang3.Conversion.intToHexDigit(bits));\n                } else {\n                    sb.setCharAt((dstPos + i), org.apache.commons.lang3.Conversion.intToHexDigit(bits));\n                }\n            }\n            return sb.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"nHexs","nHexs":"nHexs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1854","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[64,65,66,67],"tindex":"8d74bb7f-2e8e-11e6-9af9-5ff2fff9b6a8","method":{"position":"org.apache.commons.lang3.ArrayUtils:5413","type":"CtMethodImpl","sourcecode":"public static short[] removeAll(final short[] array, final int... indices) {\n    if (array == null) {\n        {\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtBinaryOperatorImpl","sourcecode":"index != 0"},"failures":[68],"tindex":"8d74bb80-2e8e-11e6-9af9-632e1538659b","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1575","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(int index, final boolean value) {\n    if (index != 0) {\n        {\n            validateIndex(index);\n            if (value) {\n                ensureCapacity(((int) + 4));\n                java.lang.System.arraycopy(char[], index, char[], (index + 4), ((int) - index));\n                char[][(index++)] = 't';\n                char[][(index++)] = 'r';\n                char[][(index++)] = 'u';\n                char[][index] = 'e';\n                int += 4;\n            } else {\n                ensureCapacity(((int) + 5));\n                java.lang.System.arraycopy(char[], index, char[], (index + 5), ((int) - index));\n                char[][(index++)] = 'f';\n                char[][(index++)] = 'a';\n                char[][(index++)] = 'l';\n                char[][(index++)] = 's';\n                char[][index] = 'e';\n                int += 5;\n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4105","type":"CtBinaryOperatorImpl","sourcecode":"obj != null"},"failures":[69,70,71,72,73,74,75,76,77,78],"tindex":"8d74e291-2e8e-11e6-9af9-af2f1d2653ca","method":{"position":"org.apache.commons.lang3.ObjectUtils:396","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.String toString(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return obj == null ? \"\" : obj.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:270","type":"CtUnaryOperatorImpl","sourcecode":"!(super.equals(obj))"},"failures":[],"tindex":"8d7509a2-2e8e-11e6-9af9-ef124151216b","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:400","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.lang.Object obj, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) {\n    if (!(super.equals(obj))) {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(obj, toAppendTo, pos);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:554","type":"CtBinaryOperatorImpl","sourcecode":"str == \"true\""},"failures":[],"tindex":"8d7509a3-2e8e-11e6-9af9-3399782e772d","method":{"position":"org.apache.commons.lang3.CharSetUtils:175","type":"CtMethodImpl","sourcecode":"public static java.lang.String keep(final java.lang.String str, final java.lang.String... set) {\n    if (str == \"true\") {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if ((str.isEmpty()) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return org.apache.commons.lang3.CharSetUtils.modify(str, set, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2439","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[79],"tindex":"8d7509a4-2e8e-11e6-9af9-e9d63601fdba","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:622","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final byte byte : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:297","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[80,80],"tindex":"8d7530b5-2e8e-11e6-9af9-ffb5edd95560","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1394","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean[] array, final java.lang.Boolean fullDetail) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[81,82,83,84,85,86,87,88,89],"tindex":"8d7530b6-2e8e-11e6-9af9-43a712f18fd4","method":{"position":"org.apache.commons.lang3.time.DateUtils:1554","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMinutes(final java.util.Calendar calendar, final int fragment) {\n    if (calendar == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:314","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[90],"tindex":"8d7530b7-2e8e-11e6-9af9-012ce0ba607c","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:313","type":"CtMethodImpl","sourcecode":"static java.lang.String[] toNoNullStringArray(final java.util.Collection<java.lang.String> collection) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (collection == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(collection.toArray());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1040","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[68],"tindex":"8d7557c8-2e8e-11e6-9af9-1b250bf835a1","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1659","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final double value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return insert(index, java.lang.String.valueOf(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.StringUtils:762","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"8d7557c9-2e8e-11e6-9af9-1334ae5fcd80","method":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:69","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (input == null) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    int int = int;\n                    if ((index + (int)) > (input.length())) {\n                        max = (input.length()) - index;\n                    } \n                    for (int int = max ; i >= (int) ; i--) {\n                        final java.lang.CharSequence java.lang.CharSequence = input.subSequence(index, (index + i));\n                        final java.lang.CharSequence java.lang.CharSequence = java.util.HashMap<java.lang.String, java.lang.CharSequence>.get(subSeq.toString());\n                        if (result != null) {\n                            out.write(result.toString());\n                            return i;\n                        } \n                    }\n                    return 0;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5299","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[91,92],"tindex":"8d7557ca-2e8e-11e6-9af9-a9ac1c67a09e","method":{"position":"org.apache.commons.lang3.CharSetUtils:107","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.lang.String str, final java.lang.String... set) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return false;\n            } \n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            for (final char char : str.toCharArray()) {\n                if (chars.contains(c)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2812","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"8d757edb-2e8e-11e6-9af9-3fb28510d575","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2781","type":"CtMethodImpl","sourcecode":"protected int validateRange(final int startIndex, int endIndex) {\n    if (endIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (startIndex < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n            } \n            if (endIndex > (int)) {\n                endIndex = int;\n            } \n            if (startIndex > endIndex) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n            } \n            return endIndex;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"endIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1913","type":"CtBinaryOperatorImpl","sourcecode":"index >= 0"},"failures":[93,94],"tindex":"8d757edc-2e8e-11e6-9af9-2542e583b9b1","method":{"position":"org.apache.commons.lang3.ArrayUtils:4937","type":"CtMethodImpl","sourcecode":"public static float[] remove(final float[] array, final int index) {\n    if (index >= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((float[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:936","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[95],"tindex":"8d757edd-2e8e-11e6-9af9-15b60e02b481","method":{"position":"org.apache.commons.lang3.time.DateUtils:774","type":"CtMethodImpl","sourcecode":"public static java.util.Date round(final java.lang.Object date, final int field) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            if (date instanceof java.util.Date) {\n                return org.apache.commons.lang3.time.DateUtils.round(((java.util.Date)(date)), field);\n            } else if (date instanceof java.util.Calendar) {\n                return org.apache.commons.lang3.time.DateUtils.round(((java.util.Calendar)(date)), field).getTime();\n            } else {\n                throw new java.lang.ClassCastException((\"Could not round \" + date));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:381","type":"CtFieldReadImpl","sourcecode":"fieldSeparatorAtStart"},"failures":[],"tindex":"8d75a5ee-2e8e-11e6-9af9-3ff7917695fb","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1922","type":"CtMethodImpl","sourcecode":"protected void setFieldSeparatorAtStart(final boolean fieldSeparatorAtStart) {\n    if (fieldSeparatorAtStart) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = fieldSeparatorAtStart;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldSeparatorAtStart":"fieldSeparatorAtStart"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1298","type":"CtBinaryOperatorImpl","sourcecode":"typeVarAssigns == null"},"failures":[],"tindex":"8d75a5ef-2e8e-11e6-9af9-619541402f72","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:489","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Type unrollVariableAssignments(java.lang.reflect.TypeVariable<?> var, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (typeVarAssigns == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.reflect.Type java.lang.reflect.Type;\n            do {\n                result = typeVarAssigns.get(var);\n                if ((result instanceof java.lang.reflect.TypeVariable<?>) && (!(result.equals(var)))) {\n                    var = ((java.lang.reflect.TypeVariable<?>)(result));\n                    continue;\n                } \n                break;\n            } while (true );\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeVarAssigns":"typeVarAssigns"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2653","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"8d75a5f0-2e8e-11e6-9af9-7fc31a6db541","method":{"position":"org.apache.commons.lang3.ArrayUtils:3564","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final double[] array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3809","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[109],"tindex":"8d75cd01-2e8e-11e6-9af9-735dd494dd7d","method":{"position":"org.apache.commons.lang3.ArrayUtils:4836","type":"CtMethodImpl","sourcecode":"public static char[] removeElement(final char[] array, final char element) {\n    if (array == null) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1275","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[108],"tindex":"8d75cd02-2e8e-11e6-9af9-5731b88793d4","method":{"position":"org.apache.commons.lang3.ArrayUtils:5889","type":"CtMethodImpl","sourcecode":"public static double[] removeElements(final double[] array, final double... values) {\n    if (values == null) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final double double : values) {\n                final java.lang.Double java.lang.Double = java.lang.Double.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Double java.lang.Double = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.doubleValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((double[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"values"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:653","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"8d75f413-2e8e-11e6-9af9-0dc6431fa6a2","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:652","type":"CtMethodImpl","sourcecode":"public boolean replaceIn(java.lang.StringBuilder source) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return false;\n            } \n            return replaceIn(source, 0, source.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.StringUtils:1040","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8d75f414-2e8e-11e6-9af9-9db7d8db7154","method":{"position":"org.apache.commons.lang3.text.translate.AggregateTranslator:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            for (final org.apache.commons.lang3.text.translate.CharSequenceTranslator org.apache.commons.lang3.text.translate.CharSequenceTranslator : org.apache.commons.lang3.text.translate.CharSequenceTranslator[]) {\n                final int int = translator.translate(input, index, out);\n                if (consumed != 0) {\n                    return consumed;\n                } \n            }\n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:770","type":"CtVariableReadImpl","sourcecode":"value"},"failures":[110,111,112,113,114,115,116,116,117,118,119,120,4,5,6,7,8,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,138,139,140,141,80,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,9,173,174,175,176,177,178,179,180,181],"tindex":"8d75f415-2e8e-11e6-9af9-391883e81236","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:843","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean value) {\n    if (value) {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:173","type":"CtVariableReadImpl","sourcecode":"forceAccess"},"failures":[182,183,184,185,186,187,188,189,190,191,45,192,193,194,195],"tindex":"8d761b26-2e8e-11e6-9af9-f39577c6af91","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:84","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Field getField(final java.lang.Class<?> cls, final java.lang.String fieldName, final boolean forceAccess) {\n    if (forceAccess) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((cls != null), \"The class must not be null\");\n            org.apache.commons.lang3.Validate.isTrue(org.apache.commons.lang3.StringUtils.isNotBlank(fieldName), \"The field name must not be blank/empty\");\n            for (java.lang.Class<?> java.lang.Class<?> = cls ; acls != null ; acls = acls.getSuperclass()) {\n                try {\n                    final java.lang.reflect.Field java.lang.reflect.Field = acls.getDeclaredField(fieldName);\n                    if (!(java.lang.reflect.Modifier.isPublic(field.getModifiers()))) {\n                        if (forceAccess) {\n                            field.setAccessible(true);\n                        } else {\n                            continue;\n                        }\n                    } \n                    return field;\n                } catch (final java.lang.NoSuchFieldException ex) {\n                }\n            }\n            java.lang.reflect.Field java.lang.reflect.Field = null;\n            for (final java.lang.Class<?> java.lang.Class<?> : org.apache.commons.lang3.ClassUtils.getAllInterfaces(cls)) {\n                try {\n                    final java.lang.reflect.Field java.lang.reflect.Field = class1.getField(fieldName);\n                    org.apache.commons.lang3.Validate.isTrue((match == null), (\"Reference to field %s is ambiguous relative to %s\" + \"; a matching field exists on two or more implemented interfaces.\"), fieldName, cls);\n                    match = test;\n                } catch (final java.lang.NoSuchFieldException ex) {\n                }\n            }\n            return match;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"forceAccess":"forceAccess"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:115","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 65535"},"failures":[],"tindex":"8d761b27-2e8e-11e6-9af9-7792a08ea5dd","method":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:49","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.JavaUnicodeEscaper below(final int codepoint) {\n    if (codepoint > 65535) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(codepoint, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepoint"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1075","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[196,197],"tindex":"8d761b28-2e8e-11e6-9af9-5b88e0fbae1d","method":{"position":"org.apache.commons.lang3.math.NumberUtils:857","type":"CtMethodImpl","sourcecode":"public static byte min(final byte[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            byte byte = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if ((array[i]) < min) {\n                    min = array[i];\n                } \n            }\n            return min;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.ClassNotFoundException","condition":{"position":"org.apache.commons.lang3.ClassUtils:195","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(className)"},"failures":[198,199,200,201,202,203,204],"tindex":"8d764239-2e8e-11e6-9af9-c9bc53903ac7","method":{"position":"org.apache.commons.lang3.ClassUtils:891","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getClass(final java.lang.String className, final boolean initialize) throws java.lang.ClassNotFoundException {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(className)) {\n        throw new java.lang.ClassNotFoundException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(className)) {\n                {\n                    final java.lang.ClassLoader java.lang.ClassLoader = java.lang.Thread.currentThread().getContextClassLoader();\n                    final java.lang.ClassLoader java.lang.ClassLoader = contextCL == null ? org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.lang.Class.getClassLoader() : contextCL;\n                    return org.apache.commons.lang3.ClassUtils.getClass(loader, className, initialize);\n                }\n            } else {\n                throw new java.lang.ClassNotFoundException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"className"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:989","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[205],"tindex":"8d76423a-2e8e-11e6-9af9-71eedd47833f","method":{"position":"org.apache.commons.lang3.Validate:987","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void inclusiveBetween(double start, double end, double value) {\n    if ((value < end) || (value > end)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value < start) || (value > end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end","value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3206","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[206,207],"tindex":"8d76694b-2e8e-11e6-9af9-dbcc5d06a1e4","method":{"position":"org.apache.commons.lang3.ArrayUtils:2252","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final short[] array, final short valueToFind) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[],"tindex":"8d76694c-2e8e-11e6-9af9-994c5c4c221d","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1069","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (calendar == null) {\n        {\n            int int = calendar.get(java.util.Calendar.java.util.Calendar.int);\n            if (value == 0) {\n                value = (calendar.getMaximum(java.util.Calendar.java.util.Calendar.int)) + 1;\n            } \n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3388","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[208,209],"tindex":"8d76694d-2e8e-11e6-9af9-39a2393a387c","method":{"position":"org.apache.commons.lang3.ArrayUtils:3365","type":"CtMethodImpl","sourcecode":"public static float[] toPrimitive(final java.lang.Float[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.float[];\n            } \n            final float[] float[] = new float[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].floatValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4891","type":"CtBinaryOperatorImpl","sourcecode":"index >= 0"},"failures":[210],"tindex":"8d76905e-2e8e-11e6-9af9-b9d6f45696aa","method":{"position":"org.apache.commons.lang3.ArrayUtils:4611","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>T[] remove(final T[] array, final int index) {\n    if (index >= 0) {\n        {\n            return ((T[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[211],"tindex":"8d76905f-2e8e-11e6-9af9-65ca9ad07f0e","method":{"position":"org.apache.commons.lang3.BooleanUtils:104","type":"CtMethodImpl","sourcecode":"public static boolean isNotTrue(final java.lang.Boolean bool) {\n    if (bool == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.lang3.BooleanUtils.isTrue(bool));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:663","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(tok)"},"failures":[212,15,213,214,215,216,217,16,218,219,220,221,222,223,224,225,226,227,17,18,228,229,230,231,19,232,233,20,21,22,234,235,236,237,238,239,23,24,25,240,26,27,241,242,243,244,245,246,28,247],"tindex":"8d769060-2e8e-11e6-9af9-3dc1b74bf8f5","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:662","type":"CtMethodImpl","sourcecode":"private void addToken(final java.util.List<java.lang.String> list, java.lang.String tok) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(tok)) {\n                {\n                    if (org.apache.commons.lang3.StringUtils.isEmpty(tok)) {\n                        if (isIgnoreEmptyTokens()) {\n                            return ;\n                        } \n                        if (isEmptyTokenAsNull()) {\n                            tok = null;\n                        } \n                    } \n                    list.add(tok);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tok":"tok"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:941","type":"CtBinaryOperatorImpl","sourcecode":"date instanceof java.util.Calendar"},"failures":[248],"tindex":"8d76b771-2e8e-11e6-9af9-1fda69c23ca7","method":{"position":"org.apache.commons.lang3.time.DateUtils:935","type":"CtMethodImpl","sourcecode":"public static java.util.Date ceiling(final java.lang.Object date, final int field) {\n    if (date instanceof java.util.Date) {\n        {\n            if (date instanceof java.util.Calendar) {\n                {\n                    if (date == null) {\n                        throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n                    } \n                    if (date instanceof java.util.Date) {\n                        return org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Date)(date)), field);\n                    } else if (date instanceof java.util.Calendar) {\n                        return org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Calendar)(date)), field).getTime();\n                    } else {\n                        throw new java.lang.ClassCastException((\"Could not find ceiling of for type: \" + (date.getClass())));\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5847","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(cs)"},"failures":[249,250,251],"tindex":"8d76b772-2e8e-11e6-9af9-3fcc86c0731e","method":{"position":"org.apache.commons.lang3.StringUtils:1927","type":"CtMethodImpl","sourcecode":"public static boolean containsNone(final java.lang.CharSequence cs, final java.lang.String invalidChars) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n        {\n            if ((cs == null) || (invalidChars == null)) {\n                return true;\n            } \n            return org.apache.commons.lang3.StringUtils.containsNone(cs, invalidChars.toCharArray());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2541","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"8d76de83-2e8e-11e6-9af9-6baa23c242e5","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:662","type":"CtMethodImpl","sourcecode":"private void addToken(final java.util.List<java.lang.String> list, java.lang.String tok) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(tok)) {\n                {\n                    if (org.apache.commons.lang3.StringUtils.isEmpty(tok)) {\n                        if (isIgnoreEmptyTokens()) {\n                            return ;\n                        } \n                        if (isEmptyTokenAsNull()) {\n                            tok = null;\n                        } \n                    } \n                    list.add(tok);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1491","type":"CtBinaryOperatorImpl","sourcecode":"(raw.getEnclosingClass()) == null"},"failures":[],"tindex":"8d76de84-2e8e-11e6-9af9-4710c2e5d02f","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1518","type":"CtMethodImpl","sourcecode":"public static final java.lang.reflect.ParameterizedType parameterizeWithOwner(final java.lang.reflect.Type owner, final java.lang.Class<?> raw, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeArgMappings) {\n    if ((raw.getEnclosingClass()) == null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(raw, \"raw class is null\");\n            org.apache.commons.lang3.Validate.notNull(typeArgMappings, \"typeArgMappings is null\");\n            return org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(owner, raw, org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(typeArgMappings, raw.getTypeParameters()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"raw":"raw"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:200","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[],"tindex":"8d76de85-2e8e-11e6-9af9-1364d5261ea4","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:495","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final java.lang.StringBuffer source, final int offset, final int length) {\n    if (offset < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            substitute(buf, 0, length);\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"offset"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:127","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[252,253],"tindex":"8d770596-2e8e-11e6-9af9-bb6e0ee45820","method":{"position":"org.apache.commons.lang3.StringUtils:2665","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] split(final java.lang.String str, final java.lang.String separatorChars, final int max) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChars, max, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:142","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[254],"tindex":"8d770597-2e8e-11e6-9af9-efd6a9f4581d","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:256","type":"CtMethodImpl","sourcecode":"public static java.lang.Throwable[] getThrowables(final java.lang.Throwable throwable) {\n    if (throwable == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<java.lang.Throwable> java.util.List<java.lang.Throwable> = org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(throwable);\n            return list.toArray(new java.lang.Throwable[list.size()]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2271","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[255,256,257],"tindex":"8d770598-2e8e-11e6-9af9-c90ea6549693","method":{"position":"org.apache.commons.lang3.ArrayUtils:2209","type":"CtMethodImpl","sourcecode":"public static int indexOf(final short[] array, final short valueToFind) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:818","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[258,259,260,261,262,263],"tindex":"8d770599-2e8e-11e6-9af9-ff6e438a7e22","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:807","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final char[] lhs, final char[] rhs) {\n    if (rhs == null) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:170","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[264],"tindex":"8d772caa-2e8e-11e6-9af9-219d74a480ee","method":{"position":"org.apache.commons.lang3.StringUtils:443","type":"CtMethodImpl","sourcecode":"public static java.lang.String trimToNull(final java.lang.String str) {\n    if (str == null) {\n        {\n            final java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.trim(str);\n            return org.apache.commons.lang3.StringUtils.isEmpty(ts) ? null : ts;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1115","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[265,266,267],"tindex":"8d772cab-2e8e-11e6-9af9-a39dceaa4741","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1029","type":"CtMethodImpl","sourcecode":"public static double max(final double[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            double double = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                if (java.lang.Double.isNaN(array[j])) {\n                    return java.lang.Double.java.lang.Double.double;\n                } \n                if ((array[j]) > max) {\n                    max = array[j];\n                } \n            }\n            return max;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1012","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[268],"tindex":"8d7753bc-2e8e-11e6-9af9-e111d547c4b3","method":{"position":"org.apache.commons.lang3.Validate:1125","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void exclusiveBetween(double start, double end, double value) {\n    if ((start < value) || (value > value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"value","end":"value","value":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:461","type":"CtArrayReadImpl","sourcecode":"src[(srcPos + 1)]"},"failures":[269],"tindex":"8d7753bd-2e8e-11e6-9af9-d73c0e44678f","method":{"position":"org.apache.commons.lang3.Conversion:1618","type":"CtMethodImpl","sourcecode":"public static boolean[] shortToBinary(final short src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (dst[srcPos]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (dst[(srcPos + 1)]) {\n                {\n                    if (0 == nBools) {\n                        return dst;\n                    } \n                    if (((nBools - 1) + srcPos) >= 16) {\n                        throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 16\");\n                    } \n                    int int = 0;\n                    assert ((nBools - 1) * 1) < (16 - srcPos);\n                    for (int int = 0 ; i < nBools ; i++) {\n                        shift = (i * 1) + srcPos;\n                        dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n                    }\n                    return dst;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"srcPos","src":"dst"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:467","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(ch)"},"failures":[270,271],"tindex":"8d777ace-2e8e-11e6-9af9-2133954ae0aa","method":{"position":"org.apache.commons.lang3.CharUtils:307","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final char ch) {\n    if (java.lang.Character.isLowerCase(ch)) {\n        {\n            if (ch < 128) {\n                return org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.java.lang.String[][ch];\n            } \n            return new java.lang.String(new char[]{ ch });\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2180","type":"CtBinaryOperatorImpl","sourcecode":"length <= 0"},"failures":[272,273,274,275,69,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303],"tindex":"8d777acf-2e8e-11e6-9af9-55d124c28341","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:734","type":"CtMethodImpl","sourcecode":"protected boolean substitute(final org.apache.commons.lang3.text.StrBuilder buf, final int offset, final int length) {\n    if (length <= 0) {\n        {\n            return (substitute(buf, offset, length, null)) > 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:357","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[304,19,232,233,20,21,22,234,235,305,306,307,308,309,310,311,0,110,312,313,314,315,1,316,317,318,111,319,320,321,2,112,322,323,324,325,3,113,326,114,114,115,115,116,116,117,118,118,119,119,120,120,4,4,5,5,6,6,7,7,8,8,121,121,122,122,123,123,124,125,125,126,126,127,127,128,129,130,131,131,132,133,134,135,135,136,136,137,137,138,139,139,140,140,141,141,80,80,142,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,151,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,166,166,167,167,168,169,169,170,170,171,171,172,172,9,9,173,173,174,174,175,175,176,177,177,178,178,179,179,180,180,327,328,329,10,330,331,332,333,334,11,335,336,337,338,339,12,181,340,341,342,343,90,344,345,346,347,348,349,350],"tindex":"8d777ad0-2e8e-11e6-9af9-69b8493df04e","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:171","type":"CtMethodImpl","sourcecode":"static boolean isRegistered(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final java.util.Map<java.lang.Object, java.lang.Object> java.util.Map<java.lang.Object, java.lang.Object> = org.apache.commons.lang3.builder.ToStringStyle.getRegistry();\n            return (m != null) && (m.containsKey(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:778","type":"CtBinaryOperatorImpl","sourcecode":"date instanceof java.util.Date"},"failures":[],"tindex":"8d77a1e1-2e8e-11e6-9af9-4f591a3c9f95","method":{"position":"org.apache.commons.lang3.time.DateUtils:935","type":"CtMethodImpl","sourcecode":"public static java.util.Date ceiling(final java.lang.Object date, final int field) {\n    if (date instanceof java.util.Date) {\n        {\n            if (date instanceof java.util.Calendar) {\n                {\n                    if (date == null) {\n                        throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n                    } \n                    if (date instanceof java.util.Date) {\n                        return org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Date)(date)), field);\n                    } else if (date instanceof java.util.Calendar) {\n                        return org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Calendar)(date)), field).getTime();\n                    } else {\n                        throw new java.lang.ClassCastException((\"Could not find ceiling of for type: \" + (date.getClass())));\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:214","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[133,133],"tindex":"8d77a1e2-2e8e-11e6-9af9-ef811af068b3","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:617","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final char value) {\n    if (fieldName == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1609","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[351],"tindex":"8d77c8f3-2e8e-11e6-9af9-f153af2b81b1","method":{"position":"org.apache.commons.lang3.ArrayUtils:612","type":"CtMethodImpl","sourcecode":"public static byte[] nullToEmpty(final byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.byte[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:387","type":"CtBinaryOperatorImpl","sourcecode":"(throwable == null) || (type == null)"},"failures":[352],"tindex":"8d77c8f4-2e8e-11e6-9af9-7f06fc49974c","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:371","type":"CtMethodImpl","sourcecode":"public static int indexOfType(final java.lang.Throwable throwable, final java.lang.Class<?> type, final int fromIndex) {\n    if ((throwable == null) || (type == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, fromIndex, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable","type":"type"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:339","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"8d77c8f5-2e8e-11e6-9af9-8b5c8133daf5","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:463","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final float lhs, final float rhs) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if ((java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Float>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Float getLeft() {\n                        return java.lang.Float.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Float getRight() {\n                        return java.lang.Float.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:381","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Date"},"failures":[353,354,355],"tindex":"8d77f006-2e8e-11e6-9af9-5f63d3e42169","method":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:106","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\n@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Date) {\n        {\n            if ((org.apache.commons.lang3.concurrent.ConstantInitializer.this) == obj) {\n                return true;\n            } \n            if (!(obj instanceof org.apache.commons.lang3.concurrent.ConstantInitializer<?>)) {\n                return false;\n            } \n            final org.apache.commons.lang3.concurrent.ConstantInitializer<?> org.apache.commons.lang3.concurrent.ConstantInitializer<?> = ((org.apache.commons.lang3.concurrent.ConstantInitializer<?>)(obj));\n            return org.apache.commons.lang3.ObjectUtils.equals(getObject(), c.getObject());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:1060","type":"CtBinaryOperatorImpl","sourcecode":"(chars) == null"},"failures":[356],"tindex":"8d77f007-2e8e-11e6-9af9-755073675900","method":{"position":"org.apache.commons.lang3.text.StrBuilder:721","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final char[] chars) {\n    if (chars == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (chars == null) {\n                return appendNull();\n            } \n            final int int = chars.int;\n            if (strLen > 0) {\n                final int int = length();\n                ensureCapacity((len + strLen));\n                java.lang.System.arraycopy(chars, 0, char[], len, strLen);\n                int += strLen;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"chars"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.ClassNotFoundException","condition":{"position":"org.apache.commons.lang3.ClassUtils:195","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(className)"},"failures":[],"tindex":"8d781718-2e8e-11e6-9af9-97b79edd843c","method":{"position":"org.apache.commons.lang3.ClassUtils:891","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getClass(final java.lang.String className, final boolean initialize) throws java.lang.ClassNotFoundException {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(className)) {\n        throw new java.lang.ClassNotFoundException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(className)) {\n                {\n                    final java.lang.ClassLoader java.lang.ClassLoader = java.lang.Thread.currentThread().getContextClassLoader();\n                    final java.lang.ClassLoader java.lang.ClassLoader = contextCL == null ? org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.lang.Class.getClassLoader() : contextCL;\n                    return org.apache.commons.lang3.ClassUtils.getClass(loader, className, initialize);\n                }\n            } else {\n                throw new java.lang.ClassNotFoundException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"className"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3434","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"8d781719-2e8e-11e6-9af9-538e2441509a","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:898","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Object java.lang.Object = array[i];\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                if (item == null) {\n                    appendNullText(buffer, fieldName);\n                } else {\n                    appendInternal(buffer, fieldName, item, boolean);\n                }\n            }\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:115","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 65535"},"failures":[357,358],"tindex":"8d78171a-2e8e-11e6-9af9-0fa3f7676fc7","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean translate(final int codepoint, final java.io.Writer out) throws java.io.IOException {\n    if (codepoint > 65535) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (boolean) {\n                if ((codepoint < (int)) || (codepoint > (int))) {\n                    return false;\n                } \n            } else {\n                if ((codepoint >= (int)) && (codepoint <= (int))) {\n                    return false;\n                } \n            }\n            out.write(\"&#\");\n            out.write(java.lang.Integer.toString(codepoint, 10));\n            out.write(';');\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepoint"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:454","type":"CtArrayReadImpl","sourcecode":"src[srcPos]"},"failures":[],"tindex":"8d783e2b-2e8e-11e6-9af9-41d74003f478","method":{"position":"org.apache.commons.lang3.Conversion:1618","type":"CtMethodImpl","sourcecode":"public static boolean[] shortToBinary(final short src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (dst[srcPos]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (dst[(srcPos + 1)]) {\n                {\n                    if (0 == nBools) {\n                        return dst;\n                    } \n                    if (((nBools - 1) + srcPos) >= 16) {\n                        throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 16\");\n                    } \n                    int int = 0;\n                    assert ((nBools - 1) * 1) < (16 - srcPos);\n                    for (int int = 0 ; i < nBools ; i++) {\n                        shift = (i * 1) + srcPos;\n                        dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n                    }\n                    return dst;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"srcPos","src":"dst"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:212","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.lang3.CharRange) == false"},"failures":[],"tindex":"8d783e2c-2e8e-11e6-9af9-e55148e7eeed","method":{"position":"org.apache.commons.lang3.reflect.TypeLiteral:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final boolean equals(java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.lang3.CharRange) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.lang3.reflect.TypeLiteral.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.lang3.reflect.TypeLiteral) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.reflect.TypeLiteral<?> org.apache.commons.lang3.reflect.TypeLiteral<?> = ((org.apache.commons.lang3.reflect.TypeLiteral<?>)(obj));\n            return org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type, other.java.lang.reflect.Type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[359],"tindex":"8d783e2d-2e8e-11e6-9af9-29c2431d7d0e","method":{"position":"org.apache.commons.lang3.ArrayUtils:832","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean[] nullToEmpty(final java.lang.Boolean[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Boolean[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4938","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[360,361],"tindex":"8d78653e-2e8e-11e6-9af9-f1f44dbf92ca","method":{"position":"org.apache.commons.lang3.text.WordUtils:451","type":"CtMethodImpl","sourcecode":"public static java.lang.String swapCase(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            final char[] char[] = str.toCharArray();\n            boolean boolean = true;\n            for (int int = 0 ; i < (buffer.int) ; i++) {\n                final char char = buffer[i];\n                if (java.lang.Character.isUpperCase(ch)) {\n                    buffer[i] = java.lang.Character.toLowerCase(ch);\n                    whitespace = false;\n                } else if (java.lang.Character.isTitleCase(ch)) {\n                    buffer[i] = java.lang.Character.toLowerCase(ch);\n                    whitespace = false;\n                } else if (java.lang.Character.isLowerCase(ch)) {\n                    if (whitespace) {\n                        buffer[i] = java.lang.Character.toTitleCase(ch);\n                        whitespace = false;\n                    } else {\n                        buffer[i] = java.lang.Character.toUpperCase(ch);\n                    }\n                } else {\n                    whitespace = java.lang.Character.isWhitespace(ch);\n                }\n            }\n            return new java.lang.String(buffer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3184","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[309,310,313,314,319,320,323,324,118,118,119,120,120,121,121,122,122,136,136,142,142,143,144,145,146,147,148,149,150,159,159,160,161,162,169,169,170,171,171,172,327,328,332,333,337,338],"tindex":"8d78653f-2e8e-11e6-9af9-95bc8ea81723","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:485","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.Object[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:130","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[270],"tindex":"8d786540-2e8e-11e6-9af9-2beca347b2fd","method":{"position":"org.apache.commons.lang3.CharUtils:331","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final java.lang.Character ch) {\n    if (ch == null) {\n        {\n            if (ch == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.CharUtils.toString(ch.charValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharEncoding:95","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[362,363,364,365,366,367,368,369],"tindex":"8d788c51-2e8e-11e6-9af9-25441474d436","method":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:292","type":"CtMethodImpl","sourcecode":"public boolean isException(final java.lang.String name) {\n    if (name == null) {\n        {\n            checkName(name);\n            return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.containsKey(name);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:759","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[0,1,2,3,4,4,5,6,7,8,9,9,10,11,12],"tindex":"8d788c52-2e8e-11e6-9af9-a76d40d3aa0b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:631","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value) {\n    if (fieldName == null) {\n        {\n            buffer.append(java.lang.String);\n            buffer.append(getShortClassName(value.getClass()));\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3464","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[370],"tindex":"8d788c53-2e8e-11e6-9af9-e38e7516ce04","method":{"position":"org.apache.commons.lang3.ArrayUtils:3643","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final char[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:647","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[371,372,373,374,375,376,377,378],"tindex":"8d78b364-2e8e-11e6-9af9-1de26471f236","method":{"position":"org.apache.commons.lang3.time.DateUtils:1365","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMinutes(final java.util.Date date, final int fragment) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2687","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[379,380],"tindex":"8d78b365-2e8e-11e6-9af9-bb6ea67559e0","method":{"position":"org.apache.commons.lang3.ArrayUtils:3341","type":"CtMethodImpl","sourcecode":"public static java.lang.Double[] toObject(final double[] array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Double[];\n            } \n            final java.lang.Double[] java.lang.Double[] = new java.lang.Double[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Double.valueOf(array[i]);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"8d78b366-2e8e-11e6-9af9-b9d378bc902b","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1036","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        {\n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:224","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[381,382,316,114,115,116,116,117,118,119,120,4,5,6,7,8,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,80,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,9,173,174,175,176,177,178,179,180],"tindex":"8d78da77-2e8e-11e6-9af9-bdd364ae8999","method":{"position":"org.apache.commons.lang3.ClassUtils:558","type":"CtMethodImpl","sourcecode":"public static boolean isPrimitiveWrapper(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(type);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:176","type":"CtVariableReadImpl","sourcecode":"suppressLeadingZeroElements"},"failures":[383],"tindex":"8d78da78-2e8e-11e6-9af9-57df09b89af4","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:167","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatDurationWords(final long durationMillis, final boolean suppressLeadingZeroElements, final boolean suppressTrailingZeroElements) {\n    if (suppressLeadingZeroElements) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String = org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(durationMillis, \"d' days 'H' hours 'm' minutes 's' seconds'\");\n            if (suppressLeadingZeroElements) {\n                duration = \" \" + duration;\n                java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 days\", \"\");\n                if ((tmp.length()) != (duration.length())) {\n                    duration = tmp;\n                    tmp = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 hours\", \"\");\n                    if ((tmp.length()) != (duration.length())) {\n                        duration = tmp;\n                        tmp = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 minutes\", \"\");\n                        duration = tmp;\n                        if ((tmp.length()) != (duration.length())) {\n                            duration = org.apache.commons.lang3.StringUtils.replaceOnce(tmp, \" 0 seconds\", \"\");\n                        } \n                    } \n                } \n                if ((duration.length()) != 0) {\n                    duration = duration.substring(1);\n                } \n            } \n            if (suppressTrailingZeroElements) {\n                java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 seconds\", \"\");\n                if ((tmp.length()) != (duration.length())) {\n                    duration = tmp;\n                    tmp = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 minutes\", \"\");\n                    if ((tmp.length()) != (duration.length())) {\n                        duration = tmp;\n                        tmp = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 0 hours\", \"\");\n                        if ((tmp.length()) != (duration.length())) {\n                            duration = org.apache.commons.lang3.StringUtils.replaceOnce(tmp, \" 0 days\", \"\");\n                        } \n                    } \n                } \n            } \n            duration = \" \" + duration;\n            duration = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 1 seconds\", \" 1 second\");\n            duration = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 1 minutes\", \" 1 minute\");\n            duration = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 1 hours\", \" 1 hour\");\n            duration = org.apache.commons.lang3.StringUtils.replaceOnce(duration, \" 1 days\", \" 1 day\");\n            return duration.trim();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suppressLeadingZeroElements":"suppressLeadingZeroElements"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:585","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[80,80],"tindex":"8d790189-2e8e-11e6-9af9-e7a6e92dae37","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:289","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final boolean[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2228","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8d79018a-2e8e-11e6-9af9-2bdb0830b19f","method":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:69","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (input == null) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    int int = int;\n                    if ((index + (int)) > (input.length())) {\n                        max = (input.length()) - index;\n                    } \n                    for (int int = max ; i >= (int) ; i--) {\n                        final java.lang.CharSequence java.lang.CharSequence = input.subSequence(index, (index + i));\n                        final java.lang.CharSequence java.lang.CharSequence = java.util.HashMap<java.lang.String, java.lang.CharSequence>.get(subSeq.toString());\n                        if (result != null) {\n                            out.write(result.toString());\n                            return i;\n                        } \n                    }\n                    return 0;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:160","type":"CtBinaryOperatorImpl","sourcecode":"(object1 == null) || (object2 == null)"},"failures":[384,385,353,354,386,387,388,389,390,391],"tindex":"8d79018b-2e8e-11e6-9af9-796eebaba4b1","method":{"position":"org.apache.commons.lang3.ObjectUtils:156","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static boolean equals(final java.lang.Object object1, final java.lang.Object object2) {\n    if ((object1 == null) || (object2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object1 == object2) {\n                return true;\n            } \n            if ((object1 == null) || (object2 == null)) {\n                return false;\n            } \n            return object1.equals(object2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object2":"object2","object1":"object1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1499","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[392],"tindex":"8d79289c-2e8e-11e6-9af9-71fa93b285ea","method":{"position":"org.apache.commons.lang3.StringUtils:2894","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitPreserveAllTokens(final java.lang.String str) {\n    if (str != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, null, (-1), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[393,394,395,396,397,398,399,400],"tindex":"8d79289d-2e8e-11e6-9af9-358484a9f977","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:752","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (buffer == null) {\n        {\n            if (value < 10) {\n                buffer.append(((char)(value + '0')));\n            } else if (value < 100) {\n                buffer.append(((char)((value / 10) + '0')));\n                buffer.append(((char)((value % 10) + '0')));\n            } else {\n                buffer.append(java.lang.Integer.toString(value));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:419","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[179,179,180],"tindex":"8d79289e-2e8e-11e6-9af9-7bef1586b34f","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1272","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double[] array, final java.lang.Boolean fullDetail) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:258","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(b)"},"failures":[401],"tindex":"8d79289f-2e8e-11e6-9af9-d7b46c3e6ad1","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:123","type":"CtMethodImpl","sourcecode":"public static float min(final float a, final float b, final float c) {\n    if (java.lang.Float.isNaN(c)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"c"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}