{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":254,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":329,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":250,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":401,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":425,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":324,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayDouble":53,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":127,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":159,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":161,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_LocaleLocale":235,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":353,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":169,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_String_String":414,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":249,"org.apache.commons.lang3.builder.EqualsBuilderTest.testLong":69,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":267,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":40,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringChar":273,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":352,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":410,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArrayAsObject":32,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":114,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":304,"org.apache.commons.lang3.text.StrBuilderTest.testContains_StrMatcher":270,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":230,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":89,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterType":143,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":131,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByteArrayAsObject":43,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses2D":5,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":183,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":54,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":379,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":138,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":244,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayOutOfBoundsIndex":338,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":316,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":112,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":365,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayRemoveNone":341,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":320,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":377,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":356,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":148,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeSeparatorPreserveAllTokens_StringStringInt":396,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetArrayComponentType":50,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObject":41,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArrayAsObject":42,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloat":212,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiFloatArray":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":290,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":78,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringStringInt":157,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":217,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":323,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":171,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int":0,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBooleanInt":208,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":415,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithCalendar":146,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":164,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble":426,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":305,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":298,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":275,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":189,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleTolerance":406,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryReplace":271,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":160,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":104,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":147,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":180,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":116,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithCalendar":145,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":407,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":262,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":355,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":19,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":150,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuffer":278,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble_emptyArray":424,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":117,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":194,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":61,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":218,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":165,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfLongs":209,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":416,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":18,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWith":102,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":282,"org.apache.commons.lang3.builder.EqualsBuilderTest.testRaggedArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":309,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":409,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":98,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":330,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":285,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_nullInput":99,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":392,"org.apache.commons.lang3.builder.EqualsBuilderTest.testLongArrayHiddenByObject":70,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfAny_StringStringArray":227,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":177,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":188,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanMultiArray":38,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":393,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_String_String":413,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":128,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringStringNegativeInt":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":281,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":17,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":295,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithWrongOffsetBugWithCalendar":149,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":256,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":163,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNull":368,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":349,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":284,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":203,"org.apache.commons.lang3.ArrayUtilsTest.testContainsChar":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":315,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetPrimitiveArrayComponentType":49,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":429,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":192,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Object":403,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":125,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testSerialization":419,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":115,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":113,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":130,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArrayAsObject":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":321,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumFloat":430,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":176,"org.apache.commons.lang3.text.StrTokenizerTest.testGetContent":389,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":85,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedException":223,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":318,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays2D":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":97,"org.apache.commons.lang3.ClassUtilsTest.testWithInterleavingWhitespace":7,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":350,"org.apache.commons.lang3.text.StrBuilderTest.testContains_char":395,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArray":342,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":390,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":266,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":366,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":59,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":181,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":8,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testSuper":31,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang645":174,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":64,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayShort":16,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":433,"org.apache.commons.lang3.ClassUtilsTest.testGetClassClassNotFound":9,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testEquals":420,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":107,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":86,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArrayAsObject":37,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":173,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":199,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumInt":427,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":311,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithCalendar":153,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":248,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArrayHiddenByObject":13,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":357,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":26,"org.apache.commons.lang3.mutable.MutableDoubleTest.testGetSet":141,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":359,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":358,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":361,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":360,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":363,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":325,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":362,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":185,"org.apache.commons.lang3.ClassUtilsTest.test_convertClassesToClassNames_List":100,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":204,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":296,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":332,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":289,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":260,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":380,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayNegativeIndex":339,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":226,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":95,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayLong":51,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMixedArray":71,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":206,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":334,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":118,"org.apache.commons.lang3.StringUtilsTest.testIsNoneEmpty":48,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":328,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":327,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":179,"org.apache.commons.lang3.mutable.MutableIntTest.testSetNull":82,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":87,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":197,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":231,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":110,"org.apache.commons.lang3.ClassUtilsTest.test_getAllInterfaces_Class":337,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":34,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiDoubleArray":76,"org.apache.commons.lang3.text.StrBuilderTest.testReverse":400,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays":2,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfFloats":423,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArray":28,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiShortArray":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":299,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder":124,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":201,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":232,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":263,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_int_int_int":431,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":195,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":261,"org.apache.commons.lang3.mutable.MutableByteTest.testEquals":397,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayFloat":210,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloatArrayHiddenByObject":214,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":331,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":246,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":300,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":310,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":187,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":265,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":172,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":106,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":404,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":229,"org.apache.commons.lang3.ValidateTest.testInclusiveBetween_withMessage":47,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArray":14,"org.apache.commons.lang3.SerializationUtilsTest.testSerializeStreamNullNull":21,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":216,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":351,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":167,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":228,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":411,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShort":12,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":225,"org.apache.commons.lang3.text.StrMatcherTest.testStringMatcher_String":238,"org.apache.commons.lang3.ValidateTest.testValidIndex_charSequence":80,"org.apache.commons.lang3.text.StrMatcherTest.testMatcherIndices":237,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":184,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShortArrayAsObject":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":336,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":205,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":67,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":36,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":302,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":152,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":272,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":279,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":44,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":384,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":92,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":385,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":386,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":387,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":388,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":335,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":326,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":193,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":252,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":280,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":313,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":287,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArrayAsObject":30,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":140,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Iterator":155,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":11,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":168,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":65,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":402,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":381,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":408,"org.apache.commons.lang3.ClassUtilsTest.testGetInnerClass":3,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":382,"org.apache.commons.lang3.ArrayUtilsTest.testReverseByteRange":20,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":175,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":139,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":58,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":133,"org.apache.commons.lang3.text.StrBuilderTest.testLang295":394,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNotSupportedException":364,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":182,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullCalendar":10,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShortArray":398,"org.apache.commons.lang3.tuple.TripleTest.testCompatibilityBetweenTriples":421,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses":4,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":196,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":292,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":312,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":303,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithCalendar":151,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":35,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementObjectArray":434,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":119,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testSetContextValue":222,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":269,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":428,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":170,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":111,"org.apache.commons.lang3.SerializationUtilsTest.testSerializeStreamObjNull":22,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":83,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectBuild":29,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":293,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testToHashCodeEqualsHashCode":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":319,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":96,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":121,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":268,"org.apache.commons.lang3.math.NumberUtilsTest.testToIntString":422,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testAddContextValue":220,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":314,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":297,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":52,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":55,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":122,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":79,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":322,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":283,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArray":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":251,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNumberArray":340,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":354,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":63,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":264,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":277,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArray":399,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_NullStringInt":156,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":91,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":257,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":258,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArrayAsObject":33,"org.apache.commons.lang3.tuple.MutableTripleTest.testEquals":418,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":259,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":301,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":233,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":245,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":142,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":343,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_Locale":236,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":391,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":243,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":101,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":247,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":162,"org.apache.commons.lang3.text.StrBuilderTest.testEndsWith":1,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedException":215,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":276,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":346,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":347,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":405,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":221,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":294,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDouble":74,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_StrMatcher":412,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":134,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":253,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":317,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloatArray":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":306,"org.apache.commons.lang3.text.StrTokenizerTest.test8":376,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":191,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_int_int_int_noMatch":432,"org.apache.commons.lang3.text.StrTokenizerTest.test5":373,"org.apache.commons.lang3.text.StrTokenizerTest.test4":372,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":307,"org.apache.commons.lang3.text.StrTokenizerTest.test7":375,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":308,"org.apache.commons.lang3.text.StrTokenizerTest.test6":374,"org.apache.commons.lang3.text.StrTokenizerTest.test1":369,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":367,"org.apache.commons.lang3.text.StrTokenizerTest.test3":371,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testFormattedExceptionMessageNull":219,"org.apache.commons.lang3.text.StrTokenizerTest.test2":370,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":286,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":24,"org.apache.commons.lang3.tuple.MutableTripleTest.testSerialization":417,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToEmpty_String":154,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":166,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":344,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":136,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":345,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":137,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullDate":207,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArrayHiddenByObject":75,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":274,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":224,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":234,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":23,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":348,"org.apache.commons.lang3.ValidateTest.testValidIndex_withMessage_charSequence":81,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":383,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":255,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":200,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":135,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":241,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":378,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":240,"org.apache.commons.lang3.builder.EqualsBuilderTest.testLongArray":72,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiLongArray":73,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":242,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":239,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":333,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":291,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":178,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":120,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":198,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":288},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:932","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == 0"},"failures":[0],"tindex":"edc469ec-2ed6-11e6-a07d-c3a3c79507f0","method":{"position":"org.apache.commons.lang3.math.Fraction:141","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(int numerator, int denominator) {\n    if (denominator == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (denominator == 0) {\n                throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n            } \n            if (denominator < 0) {\n                if ((numerator == (java.lang.Integer.java.lang.Integer.int)) || (denominator == (java.lang.Integer.java.lang.Integer.int))) {\n                    throw new java.lang.ArithmeticException(\"overflow: can't negate\");\n                } \n                numerator = -numerator;\n                denominator = -denominator;\n            } \n            return new org.apache.commons.lang3.math.Fraction(numerator , denominator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"denominator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:510","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[1],"tindex":"edc52d3d-2ed6-11e6-a07d-73c6aae9a77d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2099","type":"CtMethodImpl","sourcecode":"public boolean endsWith(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return false;\n            } \n            final int int = str.length();\n            if (len == 0) {\n                return true;\n            } \n            if (len > (int)) {\n                return false;\n            } \n            int int = (int) - len;\n            for (int int = 0 ; i < len ; i++ , pos++) {\n                if ((char[][pos]) != (str.charAt(i))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1110","type":"CtBinaryOperatorImpl","sourcecode":"className == null"},"failures":[2,3,4,5,6,7,8,9],"tindex":"edc52d3e-2ed6-11e6-a07d-c5df0eb5bf78","method":{"position":"org.apache.commons.lang3.ClassUtils:959","type":"CtMethodImpl","sourcecode":"private static java.lang.String toCanonicalName(java.lang.String className) {\n    if (className == null) {\n        {\n            className = org.apache.commons.lang3.StringUtils.deleteWhitespace(className);\n            if (className == null) {\n                throw new java.lang.NullPointerException(\"className must not be null.\");\n            } else if (className.endsWith(\"[]\")) {\n                final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n                while (className.endsWith(\"[]\")) {\n                    className = className.substring(0, ((className.length()) - 2));\n                    classNameBuffer.append(\"[\");\n                }\n                final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(className);\n                if (abbreviation != null) {\n                    classNameBuffer.append(abbreviation);\n                } else {\n                    classNameBuffer.append(\"L\").append(className).append(\";\");\n                }\n                className = classNameBuffer.toString();\n            } \n            return className;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"className"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[10],"tindex":"edc5544f-2ed6-11e6-a07d-ddaeccdecd53","method":{"position":"org.apache.commons.lang3.time.DateUtils:1632","type":"CtMethodImpl","sourcecode":"public static long getFragmentInDays(final java.util.Calendar calendar, final int fragment) {\n    if (calendar == null) {\n        {\n            if (calendar == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:732","type":"CtInvocationImpl","sourcecode":"str.startsWith(\"-\")"},"failures":[11],"tindex":"edc57b60-2ed6-11e6-a07d-15a99e4ded75","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2981","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(final java.lang.String str, final int off, final int len) {\n    if (str.startsWith(\"-\")) {\n        {\n            org.apache.commons.lang3.text.StrBuilder.this.append(str, off, len);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:724","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[12,13,14,15],"tindex":"edc57b61-2ed6-11e6-a07d-61f498c0e124","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:494","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final short lhs, final short rhs) {\n    if (lhs != lhs) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = lhs < rhs ? -1 : lhs > rhs ? 1 : 0;\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1038","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[16],"tindex":"edc5a272-2ed6-11e6-a07d-337170a41733","method":{"position":"org.apache.commons.lang3.ArrayUtils:994","type":"CtMethodImpl","sourcecode":"public static short[] subarray(final short[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            final short[] short[] = new short[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"startIndexInclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[17,17,18,19],"tindex":"edc5c983-2ed6-11e6-a07d-237b5c51b29d","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:843","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1506","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[20],"tindex":"edc5f094-2ed6-11e6-a07d-87dc1bc8d6e2","method":{"position":"org.apache.commons.lang3.ArrayUtils:1608","type":"CtMethodImpl","sourcecode":"public static void reverse(final byte[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            byte byte;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.SerializationUtils:147","type":"CtBinaryOperatorImpl","sourcecode":"outputStream == null"},"failures":[21,22],"tindex":"edc5f095-2ed6-11e6-a07d-a590f9950f4f","method":{"position":"org.apache.commons.lang3.SerializationUtils:146","type":"CtMethodImpl","sourcecode":"public static void serialize(final java.io.Serializable obj, final java.io.OutputStream outputStream) {\n    if (outputStream == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (outputStream == null) {\n                throw new java.lang.IllegalArgumentException(\"The OutputStream must not be null\");\n            } \n            java.io.ObjectOutputStream java.io.ObjectOutputStream = null;\n            try {\n                out = new java.io.ObjectOutputStream(outputStream);\n                out.writeObject(obj);\n            } catch (final java.io.IOException ex) {\n                throw new org.apache.commons.lang3.SerializationException(ex);\n            } finally {\n                try {\n                    if (out != null) {\n                        out.close();\n                    } \n                } catch (final java.io.IOException ex) {\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"outputStream":"outputStream"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:377","type":"CtBinaryOperatorImpl","sourcecode":"object != null"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"edc617a6-2ed6-11e6-a07d-21bd37ef141e","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:815","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final java.lang.Object object) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                int = (int) * (int);\n            } else {\n                if (object.getClass().isArray()) {\n                    if (object instanceof long[]) {\n                        append(((long[])(object)));\n                    } else if (object instanceof int[]) {\n                        append(((int[])(object)));\n                    } else if (object instanceof short[]) {\n                        append(((short[])(object)));\n                    } else if (object instanceof char[]) {\n                        append(((char[])(object)));\n                    } else if (object instanceof byte[]) {\n                        append(((byte[])(object)));\n                    } else if (object instanceof double[]) {\n                        append(((double[])(object)));\n                    } else if (object instanceof float[]) {\n                        append(((float[])(object)));\n                    } else if (object instanceof boolean[]) {\n                        append(((boolean[])(object)));\n                    } else {\n                        append(((java.lang.Object[])(object)));\n                    }\n                } else {\n                    int = ((int) * (int)) + (object.hashCode());\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1102","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[47],"tindex":"edc63eb7-2ed6-11e6-a07d-314dc222b839","method":{"position":"org.apache.commons.lang3.Validate:922","type":"CtMethodImpl","sourcecode":"public static <T>void inclusiveBetween(final T start, final T end, final java.lang.Comparable<T> value, final java.lang.String message, final java.lang.Object... values) {\n    if (message == null) {\n        {\n            if (((value.compareTo(start)) < 0) || ((value.compareTo(end)) > 0)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"message"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:633","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"edc665c8-2ed6-11e6-a07d-7d73b8bd5485","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:814","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final long[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:359","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(css)"},"failures":[48],"tindex":"edc68cd9-2ed6-11e6-a07d-25758dac1bdb","method":{"position":"org.apache.commons.lang3.StringUtils:287","type":"CtMethodImpl","sourcecode":"public static boolean isNoneEmpty(java.lang.CharSequence... css) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(css)) {\n        {\n            return !(org.apache.commons.lang3.StringUtils.isAnyEmpty(css));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"css":"css"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.WildcardType"},"failures":[49,50],"tindex":"edc68cda-2ed6-11e6-a07d-091abe3166ca","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1344","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(final java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.WildcardType) {\n        {\n            if (type instanceof java.lang.Class<?>) {\n                final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(type));\n                return clazz.isArray() ? clazz.getComponentType() : null;\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return ((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType();\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:640","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"edc68cdb-2ed6-11e6-a07d-5127c824baab","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:506","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final long lhs, final long rhs) {\n    if (rhs != rhs) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            boolean = lhs == rhs;\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1374","type":"CtBinaryOperatorImpl","sourcecode":"(p.getOwnerType()) == null"},"failures":[78,79],"tindex":"edc6b3ec-2ed6-11e6-a07d-0928c3f5a8ba","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1594","type":"CtMethodImpl","sourcecode":"private static boolean equals(java.lang.reflect.ParameterizedType p, java.lang.reflect.Type t) {\n    if ((p.getOwnerType()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (t instanceof java.lang.reflect.ParameterizedType) {\n                final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(t));\n                if ((org.apache.commons.lang3.reflect.TypeUtils.equals(p.getRawType(), other.getRawType())) && (org.apache.commons.lang3.reflect.TypeUtils.equals(p.getOwnerType(), other.getOwnerType()))) {\n                    return org.apache.commons.lang3.reflect.TypeUtils.equals(p.getActualTypeArguments(), other.getActualTypeArguments());\n                } \n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"p"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1040","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[80,81],"tindex":"edc6b3ed-2ed6-11e6-a07d-2f5ee86a863d","method":{"position":"org.apache.commons.lang3.Validate:744","type":"CtMethodImpl","sourcecode":"public static <T extends java.lang.CharSequence>T validIndex(final T chars, final int index, final java.lang.String message, final java.lang.Object... values) {\n    if (index < 0) {\n        {\n            org.apache.commons.lang3.Validate.notNull(chars);\n            if ((index < 0) || (index >= (chars.length()))) {\n                throw new java.lang.IndexOutOfBoundsException(java.lang.String.format(message, values));\n            } \n            return chars;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:290","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[82],"tindex":"edc6dafe-2ed6-11e6-a07d-bbc16454cda6","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableInt.this.int = value.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[],"tindex":"edc6daff-2ed6-11e6-a07d-3bc4eff3e660","method":{"position":"org.apache.commons.lang3.time.DateUtils:1632","type":"CtMethodImpl","sourcecode":"public static long getFragmentInDays(final java.util.Calendar calendar, final int fragment) {\n    if (calendar == null) {\n        {\n            if (calendar == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3939","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[83],"tindex":"edc6db00-2ed6-11e6-a07d-fbb1c8fcb6ea","method":{"position":"org.apache.commons.lang3.ArrayUtils:3936","type":"CtMethodImpl","sourcecode":"public static float[] addAll(final float[] array1, final float... array2) {\n    if (array1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final float[] float[] = new float[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:258","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(b)"},"failures":[84],"tindex":"edc70211-2ed6-11e6-a07d-6fc4c0b53c67","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:241","type":"CtMethodImpl","sourcecode":"public static float max(final float a, final float b, final float c) {\n    if (java.lang.Float.isNaN(b)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3400","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[85],"tindex":"edc70212-2ed6-11e6-a07d-a3a3a710964e","method":{"position":"org.apache.commons.lang3.ArrayUtils:3632","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final short[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:759","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[86,87,88,89,90,91,92,92,93,94,95,96,97,97,98],"tindex":"edc70213-2ed6-11e6-a07d-95eabd25b5fc","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:618","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.util.Map<?, ?> map) {\n    if (fieldName == null) {\n        {\n            buffer.append(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:906","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[99],"tindex":"edc72924-2ed6-11e6-a07d-236177bb8263","method":{"position":"org.apache.commons.lang3.BooleanUtils:1040","type":"CtMethodImpl","sourcecode":"public static boolean xor(final boolean... array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            boolean boolean = false;\n            for (final boolean boolean : array) {\n                result ^= element;\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1648","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"edc72925-2ed6-11e6-a07d-9f7882fb5122","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:461","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.util.Date date, final java.lang.StringBuffer buf) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(date, buf);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:425","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[100],"tindex":"edc72926-2ed6-11e6-a07d-1fb3315d9646","method":{"position":"org.apache.commons.lang3.ClassUtils:424","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> convertClassesToClassNames(final java.util.List<java.lang.Class<?>> classes) {\n    if (classes == null) {\n        {\n            if (classes == null) {\n                return null;\n            } \n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>(classes.size());\n            for (final java.lang.Class<?> java.lang.Class<?> : classes) {\n                if (cls == null) {\n                    classNames.add(null);\n                } else {\n                    classNames.add(cls.getName());\n                }\n            }\n            return classNames;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"classes"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:596","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[101,102],"tindex":"edc75037-2ed6-11e6-a07d-8b0a2737a118","method":{"position":"org.apache.commons.lang3.StringUtils:7161","type":"CtMethodImpl","sourcecode":"public static boolean startsWith(final java.lang.CharSequence str, final java.lang.CharSequence prefix) {\n    if (prefix == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.startsWith(str, prefix, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"prefix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3400","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[103],"tindex":"edc75038-2ed6-11e6-a07d-d7f24e1a54ca","method":{"position":"org.apache.commons.lang3.ArrayUtils:5444","type":"CtMethodImpl","sourcecode":"public static short[] removeElements(final short[] array, final short... values) {\n    if (array == null) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final short short : values) {\n                final java.lang.Short java.lang.Short = java.lang.Short.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Short java.lang.Short = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.shortValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.NoSuchMethodException","condition":{"position":"org.apache.commons.lang3.ClassUtils:268","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[104,105,106,107,108],"tindex":"edc75039-2ed6-11e6-a07d-dd4f89778dda","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:119","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeMethod(final java.lang.Object object, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (object == null) {\n        {\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(object.getClass(), methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on object: \") + (object.getClass().getName())));\n            } \n            return method.invoke(object, args);\n        }\n    } else {\n        throw new java.lang.NoSuchMethodException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3002","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[109],"tindex":"edc7774a-2ed6-11e6-a07d-19a1971e62a5","method":{"position":"org.apache.commons.lang3.ArrayUtils:2404","type":"CtMethodImpl","sourcecode":"public static boolean contains(final char[] array, final char valueToFind) {\n    if (array == null) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:696","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"tindex":"edc7774b-2ed6-11e6-a07d-b1bd1e2642a7","method":{"position":"org.apache.commons.lang3.text.StrBuilder:672","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final org.apache.commons.lang3.text.StrBuilder str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return appendNull();\n            } \n            final int int = str.length();\n            if (strLen > 0) {\n                final int int = length();\n                ensureCapacity((len + strLen));\n                java.lang.System.arraycopy(str.char[], 0, char[], len, strLen);\n                int += strLen;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.IDKey:64","type":"CtUnaryOperatorImpl","sourcecode":"!(other instanceof org.apache.commons.lang3.builder.IDKey)"},"failures":[126,54,55,56,127,57,58,128,129,59,130,131,60,61,62,63,64,65,132,66,133,24,25,26,27,35,36,40,44,134,135,136,137,138,139,140],"tindex":"edc79e5c-2ed6-11e6-a07d-33b83005f9cb","method":{"position":"org.apache.commons.lang3.builder.IDKey:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (!(other instanceof org.apache.commons.lang3.builder.IDKey)) {\n        {\n            if (!(other instanceof org.apache.commons.lang3.builder.IDKey)) {\n                return false;\n            } \n            final org.apache.commons.lang3.builder.IDKey org.apache.commons.lang3.builder.IDKey = ((org.apache.commons.lang3.builder.IDKey)(other));\n            if ((int) != (idKey.int)) {\n                return false;\n            } \n            return (java.lang.Object) == (idKey.java.lang.Object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"other"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:290","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[141],"tindex":"edc79e5d-2ed6-11e6-a07d-e3e831a2253f","method":{"position":"org.apache.commons.lang3.mutable.MutableDouble:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        {\n            org.apache.commons.lang3.mutable.MutableDouble.this.double = value.doubleValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1548","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[142],"tindex":"edc79e5e-2ed6-11e6-a07d-3bf0ba460225","method":{"position":"org.apache.commons.lang3.ArrayUtils:4326","type":"CtMethodImpl","sourcecode":"public static boolean[] add(final boolean[] array, final int index, final boolean element) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((boolean[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Boolean.valueOf(element), java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6284","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[143,144],"tindex":"edc7c56f-2ed6-11e6-a07d-5fa595ff677a","method":{"position":"org.apache.commons.lang3.StringUtils:3221","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] splitByCharacterType(final java.lang.String str, final boolean camelCase) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (str.isEmpty()) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            final char[] char[] = str.toCharArray();\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = 0;\n            int int = java.lang.Character.getType(c[tokenStart]);\n            for (int int = tokenStart + 1 ; pos < (c.int) ; pos++) {\n                final int int = java.lang.Character.getType(c[pos]);\n                if (type == currentType) {\n                    continue;\n                } \n                if ((camelCase && (type == (java.lang.Character.java.lang.Character.byte))) && (currentType == (java.lang.Character.java.lang.Character.byte))) {\n                    final int int = pos - 1;\n                    if (newTokenStart != tokenStart) {\n                        list.add(new java.lang.String(c , tokenStart , (newTokenStart - tokenStart)));\n                        tokenStart = newTokenStart;\n                    } \n                } else {\n                    list.add(new java.lang.String(c , tokenStart , (pos - tokenStart)));\n                    tokenStart = pos;\n                }\n                currentType = type;\n            }\n            list.add(new java.lang.String(c , tokenStart , ((c.int) - tokenStart)));\n            return list.toArray(new java.lang.String[list.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[145,146,147,148,149,150,151,152,153],"tindex":"edc7c570-2ed6-11e6-a07d-eb6d68f3198f","method":{"position":"org.apache.commons.lang3.time.DateUtils:1554","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMinutes(final java.util.Calendar calendar, final int fragment) {\n    if (calendar == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:391","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[110,111,112,113,114,115,116,117,118,119,120,121,122],"tindex":"edc7c571-2ed6-11e6-a07d-7f1d73190454","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:513","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(java.lang.CharSequence source) {\n    if (source == null) {\n        {\n            if (source == null) {\n                return null;\n            } \n            return replace(source, 0, source.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[154],"tindex":"edc7eb82-2ed6-11e6-a07d-e1c7333cefcd","method":{"position":"org.apache.commons.lang3.StringUtils:554","type":"CtMethodImpl","sourcecode":"public static java.lang.String stripToEmpty(final java.lang.String str) {\n    if (str == null) {\n        {\n            return str == null ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String : org.apache.commons.lang3.StringUtils.strip(str, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:265","type":"CtBinaryOperatorImpl","sourcecode":"count == 0"},"failures":[],"tindex":"edc7eb83-2ed6-11e6-a07d-ab0726f278f2","method":{"position":"org.apache.commons.lang3.RandomStringUtils:82","type":"CtMethodImpl","sourcecode":"public static java.lang.String randomAscii(final int count) {\n    if (count == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, 32, 127, false, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1558","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[110,112,113,114,115,116,117,119,120,121,122],"tindex":"edc7eb84-2ed6-11e6-a07d-638e624b4dfd","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:455","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final char[] source, final int offset, final int length) {\n    if (offset > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            substitute(buf, 0, length);\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"offset"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:414","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"edc81295-2ed6-11e6-a07d-e13bee63e221","method":{"position":"org.apache.commons.lang3.StringUtils:4457","type":"CtMethodImpl","sourcecode":"public static java.lang.String removePattern(final java.lang.String source, final java.lang.String regex) {\n    if (regex == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.replacePattern(source, regex, org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"regex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1185","type":"CtInvocationImpl","sourcecode":"it.hasNext()"},"failures":[155],"tindex":"edc81296-2ed6-11e6-a07d-b9f3759d3f63","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1111","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendAll(final java.util.Iterator<?> it) {\n    if (it.hasNext()) {\n        {\n            if (it != null) {\n                while (it.hasNext()) {\n                    append(it.next());\n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"it"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4891","type":"CtBinaryOperatorImpl","sourcecode":"index >= 0"},"failures":[142],"tindex":"edc81297-2ed6-11e6-a07d-db1d03bbf86b","method":{"position":"org.apache.commons.lang3.ArrayUtils:4451","type":"CtMethodImpl","sourcecode":"public static int[] add(final int[] array, final int index, final int element) {\n    if (element >= 0) {\n        {\n            return ((int[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Integer.valueOf(element), java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"element"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:244","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isNotEmpty(s)"},"failures":[156,157,158],"tindex":"edc81298-2ed6-11e6-a07d-656c057db6d1","method":{"position":"org.apache.commons.lang3.StringUtils:6849","type":"CtMethodImpl","sourcecode":"public static int getLevenshteinDistance(java.lang.CharSequence s, java.lang.CharSequence t, final int threshold) {\n    if (org.apache.commons.lang3.StringUtils.isNotEmpty(t)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((s == null) || (t == null)) {\n                throw new java.lang.IllegalArgumentException(\"Strings must not be null\");\n            } \n            if (threshold < 0) {\n                throw new java.lang.IllegalArgumentException(\"Threshold must not be negative\");\n            } \n            int int = s.length();\n            int int = t.length();\n            if (n == 0) {\n                return m <= threshold ? m : -1;\n            } else if (m == 0) {\n                return n <= threshold ? n : -1;\n            } \n            if (n > m) {\n                final java.lang.CharSequence java.lang.CharSequence = s;\n                s = t;\n                t = tmp;\n                n = m;\n                m = t.length();\n            } \n            int[] int[] = new int[n + 1];\n            int[] int[] = new int[n + 1];\n            int[] int[];\n            final int int = (java.lang.Math.min(n, threshold)) + 1;\n            for (int int = 0 ; i < boundary ; i++) {\n                p[i] = i;\n            }\n            java.util.Arrays.fill(p, boundary, p.int, java.lang.Integer.java.lang.Integer.int);\n            java.util.Arrays.fill(d, java.lang.Integer.java.lang.Integer.int);\n            for (int int = 1 ; j <= m ; j++) {\n                final char char = t.charAt((j - 1));\n                d[0] = j;\n                final int int = java.lang.Math.max(1, (j - threshold));\n                final int int = j > ((java.lang.Integer.java.lang.Integer.int) - threshold) ? n : java.lang.Math.min(n, (j + threshold));\n                if (min > max) {\n                    return -1;\n                } \n                if (min > 1) {\n                    d[(min - 1)] = java.lang.Integer.java.lang.Integer.int;\n                } \n                for (int int = min ; i <= max ; i++) {\n                    if ((s.charAt((i - 1))) == t_j) {\n                        d[i] = p[(i - 1)];\n                    } else {\n                        d[i] = 1 + (java.lang.Math.min(java.lang.Math.min(d[(i - 1)], p[i]), p[(i - 1)]));\n                    }\n                }\n                _d = p;\n                p = d;\n                d = _d;\n            }\n            if ((p[n]) <= threshold) {\n                return p[n];\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"s":"t"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3850","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[83],"tindex":"edc839a9-2ed6-11e6-a07d-ab83493c89fb","method":{"position":"org.apache.commons.lang3.ArrayUtils:3849","type":"CtMethodImpl","sourcecode":"public static short[] addAll(final short[] array1, final short... array2) {\n    if (array2 == null) {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final short[] short[] = new short[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206],"tindex":"edc860ba-2ed6-11e6-a07d-1f252111ccc2","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:900","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        {\n            appendTo(buffer, calendar.get(int));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:759","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"edc860bb-2ed6-11e6-a07d-6142f6d7f9fc","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1150","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte[] array, final java.lang.Boolean fullDetail) {\n    if (fieldName == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:701","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[207],"tindex":"edc860bc-2ed6-11e6-a07d-e59e5a5ef704","method":{"position":"org.apache.commons.lang3.time.DateUtils:1327","type":"CtMethodImpl","sourcecode":"public static long getFragmentInSeconds(final java.util.Date date, final int fragment) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5262","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[208],"tindex":"edc887cd-2ed6-11e6-a07d-7322422a7951","method":{"position":"org.apache.commons.lang3.StringUtils:2723","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByWholeSeparator(final java.lang.String str, final java.lang.String separator, final int max) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(str, separator, max, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2065","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[209],"tindex":"edc887ce-2ed6-11e6-a07d-cbecd6cf67d8","method":{"position":"org.apache.commons.lang3.StringUtils:3335","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final long[] array, final char separator) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:472","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))"},"failures":[210,52,54,56,58,59,60,61,62,63,64,65,66,211,212,213,214],"tindex":"edc887cf-2ed6-11e6-a07d-219a47c3c776","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:607","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final float lhs, final float rhs) {\n    if ((java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            return append(java.lang.Float.floatToIntBits(lhs), java.lang.Float.floatToIntBits(rhs));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:129","type":"CtBinaryOperatorImpl","sourcecode":"baseMessage != null"},"failures":[215,216,217,218,219,220,221,222,223,224,225,226],"tindex":"edc887d0-2ed6-11e6-a07d-63e517a07101","method":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String getFormattedExceptionMessage(final java.lang.String baseMessage) {\n    if (baseMessage != null) {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(256);\n            if (baseMessage != null) {\n                buffer.append(baseMessage);\n            } \n            if ((java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.size()) > 0) {\n                if ((buffer.length()) > 0) {\n                    buffer.append('\\n');\n                } \n                buffer.append(\"Exception Context:\\n\");\n                int int = 0;\n                for (final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> : java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>) {\n                    buffer.append(\"\\t[\");\n                    buffer.append((++i));\n                    buffer.append(':');\n                    buffer.append(pair.getKey());\n                    buffer.append(\"=\");\n                    final java.lang.Object java.lang.Object = pair.getValue();\n                    if (value == null) {\n                        buffer.append(\"null\");\n                    } else {\n                        java.lang.String java.lang.String;\n                        try {\n                            valueStr = value.toString();\n                        } catch (final java.lang.Exception e) {\n                            valueStr = \"Exception thrown on toString(): \" + (org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(e));\n                        }\n                        buffer.append(valueStr);\n                    }\n                    buffer.append(\"]\\n\");\n                }\n                buffer.append(\"---------------------------------\");\n            } \n            return buffer.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"baseMessage":"baseMessage"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:73","type":"CtBinaryOperatorImpl","sourcecode":"timeZone == null"},"failures":[],"tindex":"edc8aee1-2ed6-11e6-a07d-b1b93c7619bf","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:272","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getTimeInstance(final int style, final java.util.TimeZone timeZone) {\n    if (timeZone == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(style, timeZone, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeZone":"timeZone"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5611","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[227],"tindex":"edc8aee2-2ed6-11e6-a07d-a95e47fd9e9b","method":{"position":"org.apache.commons.lang3.StringUtils:2017","type":"CtMethodImpl","sourcecode":"public static int lastIndexOfAny(final java.lang.CharSequence str, final java.lang.CharSequence... searchStrs) {\n    if (str == null) {\n        {\n            if ((str == null) || (searchStrs == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            final int int = searchStrs.int;\n            int int = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            int int = 0;\n            for (int int = 0 ; i < sz ; i++) {\n                final java.lang.CharSequence java.lang.CharSequence = searchStrs[i];\n                if (search == null) {\n                    continue;\n                } \n                tmp = org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(str, search, str.length());\n                if (tmp > ret) {\n                    ret = tmp;\n                } \n            }\n            return ret;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.mutable.MutableLong:236","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.mutable.MutableLong"},"failures":[228,229,230,231,232,233,234],"tindex":"edc8d5f3-2ed6-11e6-a07d-0dfc6cfccba2","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:562","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.lang3.mutable.MutableLong) {\n        {\n            if ((obj instanceof org.apache.commons.lang3.time.FastDateFormat) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.time.FastDateFormat org.apache.commons.lang3.time.FastDateFormat = ((org.apache.commons.lang3.time.FastDateFormat)(obj));\n            return org.apache.commons.lang3.time.FastDatePrinter.equals(other.org.apache.commons.lang3.time.FastDatePrinter);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:201","type":"CtBinaryOperatorImpl","sourcecode":"(locale.getCountry().length()) > 0"},"failures":[235,236],"tindex":"edc8d5f4-2ed6-11e6-a07d-c174d089b87b","method":{"position":"org.apache.commons.lang3.LocaleUtils:194","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.util.Locale> localeLookupList(final java.util.Locale locale, final java.util.Locale defaultLocale) {\n    if ((defaultLocale.getCountry().length()) > 0) {\n        {\n            final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>(4);\n            if (locale != null) {\n                list.add(locale);\n                if ((locale.getVariant().length()) > 0) {\n                    list.add(new java.util.Locale(locale.getLanguage() , locale.getCountry()));\n                } \n                if ((locale.getCountry().length()) > 0) {\n                    list.add(new java.util.Locale(locale.getLanguage() , \"\"));\n                } \n                if ((list.contains(defaultLocale)) == false) {\n                    list.add(defaultLocale);\n                } \n            } \n            return java.util.Collections.unmodifiableList(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"defaultLocale"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:331","type":"CtBinaryOperatorImpl","sourcecode":"pos > 0"},"failures":[237,238,239,240,241,242,243,110,111,244,112,245,113,114,246,115,247,248,249,116,117,250,251,252,253,118,254,255,119,256,257,120,258,121,259,260,122,261,262,263,264,265,266,267,268,269,270,271],"tindex":"edc8d5f5-2ed6-11e6-a07d-29ed372f35d6","method":{"position":"org.apache.commons.lang3.text.StrMatcher:366","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int isMatch(final char[] buffer, int pos, final int bufferStart, final int bufferEnd) {\n    if (bufferStart > 0) {\n        {\n            final int int = char[].int;\n            if ((pos + len) > bufferEnd) {\n                return 0;\n            } \n            for (int int = 0 ; i < (char[].int) ; i++ , pos++) {\n                if ((char[][i]) != (buffer[pos])) {\n                    return 0;\n                } \n            }\n            return len;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"bufferStart"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:575","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[110,111,112,113,114,115,116,117,118,255,119,257,120,121,259,122,272],"tindex":"edc8fd06-2ed6-11e6-a07d-5b3b020d58b2","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:693","type":"CtMethodImpl","sourcecode":"public boolean replaceIn(final org.apache.commons.lang3.text.StrBuilder source) {\n    if (source == null) {\n        {\n            if (source == null) {\n                return false;\n            } \n            return substitute(source, 0, source.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[273],"tindex":"edc8fd07-2ed6-11e6-a07d-cd713e8762c0","method":{"position":"org.apache.commons.lang3.StringUtils:2930","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitPreserveAllTokens(final java.lang.String str, final char separatorChar) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChar, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:804","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"edc8fd08-2ed6-11e6-a07d-d315b900f6ee","method":{"position":"org.apache.commons.lang3.time.DateUtils:584","type":"CtMethodImpl","sourcecode":"public static java.util.Date setHours(final java.util.Date date, final int amount) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:387","type":"CtBinaryOperatorImpl","sourcecode":"(throwable == null) || (type == null)"},"failures":[274,275,276,277],"tindex":"edc92419-2ed6-11e6-a07d-8d39a2da1484","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:386","type":"CtMethodImpl","sourcecode":"private static int indexOf(final java.lang.Throwable throwable, final java.lang.Class<?> type, int fromIndex, final boolean subclass) {\n    if ((throwable == null) || (type == null)) {\n        {\n            if ((throwable == null) || (type == null)) {\n                return -1;\n            } \n            if (fromIndex < 0) {\n                fromIndex = 0;\n            } \n            final java.lang.Throwable[] java.lang.Throwable[] = org.apache.commons.lang3.exception.ExceptionUtils.getThrowables(throwable);\n            if (fromIndex >= (throwables.int)) {\n                return -1;\n            } \n            if (subclass) {\n                for (int int = fromIndex ; i < (throwables.int) ; i++) {\n                    if (type.isAssignableFrom(throwables[i].getClass())) {\n                        return i;\n                    } \n                }\n            } else {\n                for (int int = fromIndex ; i < (throwables.int) ; i++) {\n                    if (type.equals(throwables[i].getClass())) {\n                        return i;\n                    } \n                }\n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable","type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1014","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[278,93,93,94,95,95,96,279,280,281,282,283,284,284,285,286,287,288,289,289,290,291,292,293,294,295,17,18,19,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,310,311,312,313,313,314,315,316,317,318,318,319,320,320,321,322,323,324,325,326,327,328,328,97,329,330,331,332,333,334,335,336],"tindex":"edc9241a-2ed6-11e6-a07d-0b0809885b1c","method":{"position":"org.apache.commons.lang3.ObjectUtils:340","type":"CtMethodImpl","sourcecode":"public static void identityToString(final java.lang.StringBuffer buffer, final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n            } \n            buffer.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:905","type":"CtInvocationImpl","sourcecode":"cls.isPrimitive()"},"failures":[337],"tindex":"edc9241b-2ed6-11e6-a07d-cb0c4f2b5eae","method":{"position":"org.apache.commons.lang3.ClassUtils:352","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.Class<?>> getAllInterfaces(final java.lang.Class<?> cls) {\n    if (cls.isPrimitive()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cls == null) {\n                return null;\n            } \n            final java.util.LinkedHashSet<java.lang.Class<?>> java.util.LinkedHashSet<java.lang.Class<?>> = new java.util.LinkedHashSet<java.lang.Class<?>>();\n            org.apache.commons.lang3.ClassUtils.getAllInterfaces(cls, interfacesFound);\n            return new java.util.ArrayList<java.lang.Class<?>>(interfacesFound);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:282","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"edc94b2c-2ed6-11e6-a07d-57ceba4f37db","method":{"position":"org.apache.commons.lang3.time.DateUtils:1327","type":"CtMethodImpl","sourcecode":"public static long getFragmentInSeconds(final java.util.Date date, final int fragment) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3368","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[338,339,340,341,342],"tindex":"edc94b2d-2ed6-11e6-a07d-ed34f004961c","method":{"position":"org.apache.commons.lang3.ArrayUtils:5232","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>T[] removeAll(final T[] array, final int... indices) {\n    if (indices == null) {\n        {\n            return ((T[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"indices"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:957","type":"CtBinaryOperatorImpl","sourcecode":"ignored != null"},"failures":[343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,239,240,241,242,383,384,385,386,387,388,389,390,391,243,392,393],"tindex":"edc9723e-2ed6-11e6-a07d-931b99d9adce","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:956","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setIgnoredMatcher(final org.apache.commons.lang3.text.StrMatcher ignored) {\n    if (ignored != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ignored != null) {\n                org.apache.commons.lang3.text.StrTokenizer.this.org.apache.commons.lang3.text.StrMatcher = ignored;\n            } \n            return org.apache.commons.lang3.text.StrTokenizer.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ignored":"ignored"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"(ch >= 56192) && (ch <= 56319)"},"failures":[394,395],"tindex":"edc9723f-2ed6-11e6-a07d-59707ff0f39f","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2247","type":"CtMethodImpl","sourcecode":"public boolean contains(final char ch) {\n    if ((ch >= 56192) && (ch <= 56319)) {\n        {\n            final char[] char[] = char[];\n            for (int int = 0 ; i < (org.apache.commons.lang3.text.StrBuilder.this.int) ; i++) {\n                if ((thisBuf[i]) == ch) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5001","type":"CtBinaryOperatorImpl","sourcecode":"(str.length()) == 1"},"failures":[396],"tindex":"edc97240-2ed6-11e6-a07d-4515273e6057","method":{"position":"org.apache.commons.lang3.StringUtils:2785","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByWholeSeparatorPreserveAllTokens(final java.lang.String str, final java.lang.String separator, final int max) {\n    if ((separator.length()) == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(str, separator, max, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.tuple.Triple:114","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.tuple.Triple<?, ?, ?>"},"failures":[397],"tindex":"edc99951-2ed6-11e6-a07d-3ff0d2301ea3","method":{"position":"org.apache.commons.lang3.mutable.MutableByte:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.lang3.tuple.Triple<?, ?, ?>) {\n        {\n            if (obj instanceof org.apache.commons.lang3.mutable.MutableByte) {\n                return (byte) == (((org.apache.commons.lang3.mutable.MutableByte)(obj)).byteValue());\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[290,290],"tindex":"edc99952-2ed6-11e6-a07d-07e6d7152519","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:731","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte value) {\n    if (fieldName == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.ClassNotFoundException","condition":{"position":"org.apache.commons.lang3.SerializationUtils:235","type":"CtBinaryOperatorImpl","sourcecode":"in != null"},"failures":[],"tindex":"edc99953-2ed6-11e6-a07d-f3977688f356","method":{"position":"org.apache.commons.lang3.time.FastDateParser:261","type":"CtMethodImpl","sourcecode":"private void readObject(final java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {\n    if (in != null) {\n        {\n            in.defaultReadObject();\n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance(java.util.TimeZone, java.util.Locale);\n            init(definingCalendar);\n        }\n    } else {\n        throw new java.lang.ClassNotFoundException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3206","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[398],"tindex":"edc99954-2ed6-11e6-a07d-934a31fd12bc","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:893","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final short[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final short short : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[399],"tindex":"edc9c065-2ed6-11e6-a07d-c3e9d98beb82","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:689","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final double[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final double double : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1577","type":"CtVariableReadImpl","sourcecode":"value"},"failures":[400,401,402],"tindex":"edc9c066-2ed6-11e6-a07d-8914960fb9fc","method":{"position":"org.apache.commons.lang3.text.StrBuilder:769","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final boolean value) {\n    if (value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value) {\n                ensureCapacity(((int) + 4));\n                char[][((int)++)] = 't';\n                char[][((int)++)] = 'r';\n                char[][((int)++)] = 'u';\n                char[][((int)++)] = 'e';\n            } else {\n                ensureCapacity(((int) + 5));\n                char[][((int)++)] = 'f';\n                char[][((int)++)] = 'a';\n                char[][((int)++)] = 'l';\n                char[][((int)++)] = 's';\n                char[][((int)++)] = 'e';\n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:159","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[403,404,405],"tindex":"edc9c067-2ed6-11e6-a07d-ff8d14a5c1e7","method":{"position":"org.apache.commons.lang3.ClassUtils:158","type":"CtMethodImpl","sourcecode":"public static java.lang.String getShortClassName(final java.lang.Object object, final java.lang.String valueIfNull) {\n    if (object == null) {\n        {\n            if (object == null) {\n                return valueIfNull;\n            } \n            return org.apache.commons.lang3.ClassUtils.getShortClassName(object.getClass());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:39","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[406],"tindex":"edc9e778-2ed6-11e6-a07d-a1c57af71273","method":{"position":"org.apache.commons.lang3.ArrayUtils:2540","type":"CtMethodImpl","sourcecode":"public static int indexOf(final double[] array, final double valueToFind, final double tolerance) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[407,408,168,175,198,205],"tindex":"edc9e779-2ed6-11e6-a07d-a13e98b254ac","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:790","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        {\n            appendTo(buffer, ((calendar.get(java.util.Calendar.java.util.Calendar.int)) + 1));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:173","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"edc9e77a-2ed6-11e6-a07d-cfb4c37eef48","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:709","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final float value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:465","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[126,54,55,56,127,57,58,128,129,59,409,130,131,61,410,62,63,64,65,132,66,133],"tindex":"edc9e77b-2ed6-11e6-a07d-6be3abd2560f","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:673","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final long[] lhs, final long[] rhs) {\n    if (fieldName == null) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Long[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Long[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Long[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1072","type":"CtBinaryOperatorImpl","sourcecode":"suffix == null"},"failures":[411],"tindex":"edca0e8c-2ed6-11e6-a07d-1ba91f4d8fe2","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1071","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setVariableSuffix(final java.lang.String suffix) {\n    if (suffix == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (suffix == null) {\n                throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\");\n            } \n            return setVariableSuffixMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(suffix));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suffix":"suffix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2001","type":"CtBinaryOperatorImpl","sourcecode":"removeLen > 0"},"failures":[412,264,413,414,415,267,271,416],"tindex":"edca0e8d-2ed6-11e6-a07d-0db717d139c2","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1811","type":"CtMethodImpl","sourcecode":"private void replaceImpl(final int startIndex, final int endIndex, final int removeLen, final java.lang.String insertStr, final int insertLen) {\n    if (insertLen > 0) {\n        {\n            final int int = ((int) - removeLen) + insertLen;\n            if (insertLen != removeLen) {\n                ensureCapacity(newSize);\n                java.lang.System.arraycopy(char[], endIndex, char[], (startIndex + insertLen), ((int) - endIndex));\n                int = newSize;\n            } \n            if (insertLen > 0) {\n                insertStr.getChars(0, insertLen, char[], startIndex);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeLen":"insertLen"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:353","type":"CtBinaryOperatorImpl","sourcecode":"ch < 16"},"failures":[],"tindex":"edca359e-2ed6-11e6-a07d-f10f7b536b26","method":{"position":"org.apache.commons.lang3.text.StrMatcher:163","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrMatcher charMatcher(final char ch) {\n    if (ch < 16) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(ch);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:383","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Calendar"},"failures":[417,418,419,420,421],"tindex":"edca359f-2ed6-11e6-a07d-49f9a1b8c427","method":{"position":"org.apache.commons.lang3.tuple.Triple:110","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\n@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Calendar) {\n        {\n            if (obj == (org.apache.commons.lang3.tuple.Triple.this)) {\n                return true;\n            } \n            if (obj instanceof org.apache.commons.lang3.tuple.Triple<?, ?, ?>) {\n                final org.apache.commons.lang3.tuple.Triple<?, ?, ?> org.apache.commons.lang3.tuple.Triple<?, ?, ?> = ((org.apache.commons.lang3.tuple.Triple<?, ?, ?>)(obj));\n                return ((org.apache.commons.lang3.ObjectUtils.equals(getLeft(), other.getLeft())) && (org.apache.commons.lang3.ObjectUtils.equals(getMiddle(), other.getMiddle()))) && (org.apache.commons.lang3.ObjectUtils.equals(getRight(), other.getRight()));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:945","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"edca35a0-2ed6-11e6-a07d-8b613bd239b1","method":{"position":"org.apache.commons.lang3.Validate:1104","type":"CtMethodImpl","sourcecode":"public static void exclusiveBetween(long start, long end, long value, java.lang.String message) {\n    if ((start < value) || (value > start)) {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"value","end":"start","value":"start"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:825","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof int[]"},"failures":[],"tindex":"edca5cb1-2ed6-11e6-a07d-054453bd2365","method":{"position":"org.apache.commons.lang3.ObjectUtils:364","type":"CtMethodImpl","sourcecode":"public static void identityToString(final java.lang.StringBuilder builder, final java.lang.Object object) {\n    if (object instanceof int[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n            } \n            builder.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:121","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[422],"tindex":"edca5cb2-2ed6-11e6-a07d-3b63a7022c9a","method":{"position":"org.apache.commons.lang3.math.NumberUtils:99","type":"CtMethodImpl","sourcecode":"public static int toInt(final java.lang.String str) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toInt(str, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:507","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"edca5cb3-2ed6-11e6-a07d-1f17f1c3c156","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1028","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int[] array, final java.lang.Boolean fullDetail) {\n    if (fieldName == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1155","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[423],"tindex":"edca5cb4-2ed6-11e6-a07d-1599811cfd40","method":{"position":"org.apache.commons.lang3.StringUtils:3495","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final float[] array, final char separator) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:467","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(ch)"},"failures":[],"tindex":"edca83c5-2ed6-11e6-a07d-f746dc4cbf07","method":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:77","type":"CtMethodImpl","sourcecode":"private boolean isZeroToThree(char ch) {\n    if (java.lang.Character.isLowerCase(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch >= '0') && (ch <= '3');\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1679","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[424,425,426],"tindex":"edca83c6-2ed6-11e6-a07d-3d4c8074849b","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1029","type":"CtMethodImpl","sourcecode":"public static double max(final double[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            double double = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                if (java.lang.Double.isNaN(array[j])) {\n                    return java.lang.Double.java.lang.Double.double;\n                } \n                if ((array[j]) > max) {\n                    max = array[j];\n                } \n            }\n            return max;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1120","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[427],"tindex":"edca83c7-2ed6-11e6-a07d-d19003abdb7b","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1116","type":"CtMethodImpl","sourcecode":"public static int min(int a, final int b, final int c) {\n    if (c < c) {\n        {\n            if (b < a) {\n                a = b;\n            } \n            if (c < a) {\n                a = c;\n            } \n            return a;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"c","c":"c"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[428,429],"tindex":"edcaaad8-2ed6-11e6-a07d-f1789543464e","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:776","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeCsv(final java.lang.String input) {\n    if (input != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:353","type":"CtBinaryOperatorImpl","sourcecode":"ch < 16"},"failures":[],"tindex":"edcaaad9-2ed6-11e6-a07d-a51cdf533e68","method":{"position":"org.apache.commons.lang3.text.StrBuilder:325","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder setCharAt(final int index, final char ch) {\n    if (ch < 16) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index >= (length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(index);\n            } \n            char[][index] = ch;\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:137","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[430],"tindex":"edcaaada-2ed6-11e6-a07d-c326620d7ab9","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1190","type":"CtMethodImpl","sourcecode":"public static float min(final float a, final float b, final float c) {\n    if (java.lang.Float.isNaN(c)) {\n        {\n            return java.lang.Math.min(java.lang.Math.min(a, b), c);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"c"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:682","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Modifier.isFinal(field.getModifiers())"},"failures":[],"tindex":"edcaaadb-2ed6-11e6-a07d-773ceb0ae7ac","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:661","type":"CtMethodImpl","sourcecode":"public static void removeFinalModifier(java.lang.reflect.Field field) {\n    if (java.lang.reflect.Modifier.isFinal(field.getModifiers())) {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(field, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:265","type":"CtBinaryOperatorImpl","sourcecode":"value == falseValue"},"failures":[431,432],"tindex":"edcad1ec-2ed6-11e6-a07d-5fa999653629","method":{"position":"org.apache.commons.lang3.BooleanUtils:261","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final int value, final int trueValue, final int falseValue) {\n    if (trueValue == trueValue) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == trueValue) {\n                return true;\n            } \n            if (value == falseValue) {\n                return false;\n            } \n            throw new java.lang.IllegalArgumentException(\"The Integer did not match either specified value\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseValue":"trueValue","value":"trueValue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:387","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[85],"tindex":"edcad1ed-2ed6-11e6-a07d-f7ed10a485bd","method":{"position":"org.apache.commons.lang3.ArrayUtils:3643","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final char[] array) {\n    if (array == null) {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2228","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[433],"tindex":"edcad1ee-2ed6-11e6-a07d-8b0cd35a2a1b","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1606","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final char value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validateIndex(index);\n            ensureCapacity(((int) + 1));\n            java.lang.System.arraycopy(char[], index, char[], (index + 1), ((int) - index));\n            char[][index] = value;\n            (int)++;\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1534","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[434],"tindex":"edcad1ef-2ed6-11e6-a07d-f7ec35d8fab4","method":{"position":"org.apache.commons.lang3.ArrayUtils:4641","type":"CtMethodImpl","sourcecode":"public static <T>T[] removeElement(final T[] array, final java.lang.Object element) {\n    if (element == null) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"element"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}