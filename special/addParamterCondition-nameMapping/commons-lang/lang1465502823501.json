{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":288,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":51,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":45,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":215,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":289,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_String":345,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":330,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":343,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":25,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":76,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":274,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":197,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":361,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":199,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":1,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":152,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":214,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":73,"org.apache.commons.lang3.ArrayUtilsTest.testContainsFloat":232,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":172,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":286,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":386,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":216,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":387,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":279,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":161,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiLongArray":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":37,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":163,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":264,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":93,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":129,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMixedArray":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":41,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":275,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":337,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":8,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfFloat":233,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":335,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArray":311,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":44,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":263,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int":329,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":168,"org.apache.commons.lang3.math.FractionTest.testDivide":323,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":349,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":19,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageName_Object":252,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":80,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsIgnoreCase_LocaleIndependence":334,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":346,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":70,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateLong":383,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":97,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfByte":240,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithDate":363,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":16,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfByteWithStartIndex":239,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":98,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":85,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotTrue_Boolean":382,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":156,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":297,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":78,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":261,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiIntArray":124,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":81,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithDate":373,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":30,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":205,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithDate":355,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":52,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":147,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArray":106,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementBooleanArray":128,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":193,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":3,"org.apache.commons.lang3.LocaleUtilsTest.testLanguagesByCountry":305,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":242,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":67,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":79,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanMultiArray":312,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":196,"org.apache.commons.lang3.math.FractionTest.testFactory_String_improper":320,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":356,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":158,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":292,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":153,"org.apache.commons.lang3.ArrayUtilsTest.testReverseBooleanRange":249,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":180,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":369,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":179,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":260,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":155,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":143,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":273,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":185,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":14,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":296,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":13,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsIgnoreCase_StringString":333,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":348,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":209,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":2,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":243,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":272,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":36,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":83,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithDate":365,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":175,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":190,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":241,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":204,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadFieldForceAccess":251,"org.apache.commons.lang3.math.FractionTest.testAbs":314,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":96,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiByteArray":120,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithDate":367,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":94,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":295,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArrayAsObject":313,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":338,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":217,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":42,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithDate":362,"org.apache.commons.lang3.math.FractionTest.testAdd":315,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":66,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":105,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":247,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":39,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":221,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_double":220,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":50,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":177,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":294,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullFloatArray":378,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":203,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithDate":358,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":269,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":71,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":142,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":300,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":254,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":255,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":170,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiDoubleArray":126,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":270,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":268,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":385,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":303,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":32,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfMonthWithDate":372,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer_int_int":309,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":290,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":211,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":65,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":201,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithDate":366,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":224,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":46,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":17,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":230,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":54,"org.apache.commons.lang3.math.FractionTest.testEquals":324,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":7,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":276,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithDate":360,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":228,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithDate":352,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":108,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":207,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":181,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":174,"org.apache.commons.lang3.ValidateTest.testExclusiveBetweenDouble_withMessage":341,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":99,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_short":307,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":148,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithDate":375,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":246,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":49,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":48,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":115,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":144,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":69,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":164,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":192,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithDate":357,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":91,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer_int_int":308,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":171,"org.apache.commons.lang3.CharUtilsTest.testToChar_Character":380,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":111,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiCharArray":117,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiShortArray":127,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":219,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":121,"org.apache.commons.lang3.math.FractionTest.testNegate":327,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":20,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthFloat":340,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":112,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":53,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithDate":371,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":145,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":267,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":77,"org.apache.commons.lang3.math.FractionTest.testMultiply":325,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":62,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":166,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":245,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":169,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":188,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":248,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":74,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArray":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":58,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":173,"org.apache.commons.lang3.CharSequenceUtilsTest.testSubSequence":235,"org.apache.commons.lang3.math.FractionTest.testHashCode":322,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiFloatArray":122,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":277,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":226,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":271,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":23,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":183,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":344,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":293,"org.apache.commons.lang3.ArrayUtilsTest.testContainsByte":238,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":178,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":256,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":47,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":5,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":200,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":281,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_boolean":0,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":301,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":218,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":257,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithDate":370,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":227,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":280,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":244,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":291,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":304,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":72,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithDate":368,"org.apache.commons.lang3.ArrayUtilsTest.testContainsInt":381,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":10,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":225,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":195,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":24,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfShort":332,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":342,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":100,"org.apache.commons.lang3.math.FractionTest.testReduce":328,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":223,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":92,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":198,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":384,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":162,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfYearWithDate":376,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":40,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":182,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":35,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":285,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":18,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayBoolean":88,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Collection":379,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":64,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":208,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":287,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":103,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":189,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":302,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":336,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":187,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":259,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArrayHiddenByObject":119,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":250,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":299,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":107,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementFloatArray":231,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":212,"org.apache.commons.lang3.math.FractionTest.testCompareTo":319,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":157,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithDate":351,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":154,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":298,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":22,"org.apache.commons.lang3.ArrayUtilsTest.testToString":139,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":146,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_Locale":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":176,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfShortWithStartIndex":331,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":347,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":262,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":151,"org.apache.commons.lang3.math.FractionTest.testInvert":326,"org.apache.commons.lang3.math.NumberUtilsTest.testStringToDoubleString":377,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":266,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":63,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithDate":364,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":12,"org.apache.commons.lang3.mutable.MutableShortTest.testEquals":234,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":258,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":194,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":282,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":27,"org.apache.commons.lang3.text.StrTokenizerTest.test8":138,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":82,"org.apache.commons.lang3.text.StrTokenizerTest.test5":135,"org.apache.commons.lang3.text.StrTokenizerTest.test4":134,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":339,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":28,"org.apache.commons.lang3.text.StrTokenizerTest.test7":137,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_Boolean":306,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":29,"org.apache.commons.lang3.text.StrTokenizerTest.test6":136,"org.apache.commons.lang3.text.StrTokenizerTest.test1":131,"org.apache.commons.lang3.text.StrTokenizerTest.test3":133,"org.apache.commons.lang3.text.StrTokenizerTest.test2":132,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":359,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":4,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":222,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":165,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithDate":350,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":149,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":388,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":113,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":284,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":278,"org.apache.commons.lang3.math.FractionTest.testSubtract":317,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":90,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementByteArray":237,"org.apache.commons.lang3.math.FractionTest.testToProperString":321,"org.apache.commons.lang3.math.FractionTest.testPow":316,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":191,"org.apache.commons.lang3.ConversionTest.testBinaryToShort":229,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":310,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithDate":354,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_Character":236,"org.apache.commons.lang3.time.FastDateParserTest.testParses":265,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":89,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithDate":374,"org.apache.commons.lang3.builder.CompareToBuilderTest.testRaggedArray":118,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":109,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":283,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":206,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":9,"org.apache.commons.lang3.math.FractionTest.testToString":318,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":68,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":130,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":101,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":253,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":6,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithDate":353,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":110,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":150},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2870","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[0,1],"tindex":"bba59720-2e7d-11e6-b744-cf4848a872cf","method":{"position":"org.apache.commons.lang3.ArrayUtils:3477","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean[] toObject(final boolean[] array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Boolean[];\n            } \n            final java.lang.Boolean[] java.lang.Boolean[] = new java.lang.Boolean[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i] ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2073","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"bba68181-2e7d-11e6-b744-89e7c9fbe84c","method":{"position":"org.apache.commons.lang3.time.DateUtils:310","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDateStrictly(final java.lang.String str, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if (str == null) {\n        throw new java.text.ParseException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.parseDateStrictly(str, null, parsePatterns);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2958","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[2,2,3,3,4,5,6,7,7,8,9,10,11,11,12,13,14,15,15,16,16,17,18,19,20,20,21,21,22,22,23,24,25,25,26,26,27,28,29,30,30,31,32,32,33,34,35,36,37,38,38,39,39,40,41,41,42,43,43,44,45,46,47,47,48,49,50,51,52,52,53,53,54,55,56,57,58,58],"tindex":"bba68182-2e7d-11e6-b744-151e8bb5fb8c","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:609","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ReflectionToStringBuilder reflectionAppendArray(final java.lang.Object array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getStyle().reflectionAppendArrayDetail(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getStringBuffer(), null, array);\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:657","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[59],"tindex":"bba6a893-2e7d-11e6-b744-2162047f11f9","method":{"position":"org.apache.commons.lang3.StringUtils:2631","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] split(final java.lang.String str, final java.lang.String separatorChars) {\n    if (separatorChars == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChars, (-1), false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separatorChars"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:121","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 15"},"failures":[60],"tindex":"bba6cfa4-2e7d-11e6-b744-5f10b424b3fb","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:63","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.NumericEntityEscaper below(final int codepoint) {\n    if (codepoint > 15) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.translate.NumericEntityEscaper.outsideOf(codepoint, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepoint"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:224","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(b)"},"failures":[61],"tindex":"bba6cfa5-2e7d-11e6-b744-a12ff8fd1a85","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:207","type":"CtMethodImpl","sourcecode":"public static double max(final double a, final double b, final double c) {\n    if (java.lang.Double.isNaN(b)) {\n        {\n            return org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:297","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"bba6f6b6-2e7d-11e6-b744-a93fd796dba7","method":{"position":"org.apache.commons.lang3.builder.RecursiveToStringStyle:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void appendDetail(java.lang.StringBuffer buffer, java.lang.String fieldName, java.util.Collection<?> coll) {\n    if (fieldName == null) {\n        {\n            appendClassName(buffer, coll);\n            appendIdentityHashCode(buffer, coll);\n            appendDetail(buffer, fieldName, coll.toArray());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"th == null"},"failures":[62,63],"tindex":"bba6f6b7-2e7d-11e6-b744-ab9bbcda5afe","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:671","type":"CtMethodImpl","sourcecode":"public static java.lang.String getMessage(final java.lang.Throwable th) {\n    if (th == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (th == null) {\n                return \"\";\n            } \n            final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.getShortClassName(th, null);\n            final java.lang.String java.lang.String = th.getMessage();\n            return (clsName + \": \") + (org.apache.commons.lang3.StringUtils.defaultString(msg));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"th":"th"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:147","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[64],"tindex":"bba71dc8-2e7d-11e6-b744-0b25c23361d7","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:719","type":"CtMethodImpl","sourcecode":"public static void writeField(final java.lang.Object target, final java.lang.String fieldName, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (value == null) {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeField(target, fieldName, value, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:647","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"tindex":"bba744d9-2e7d-11e6-b744-4345d850fe4c","method":{"position":"org.apache.commons.lang3.time.DateUtils:502","type":"CtMethodImpl","sourcecode":"public static java.util.Date addMilliseconds(final java.util.Date date, final int amount) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2914","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[88],"tindex":"bba76bea-2e7d-11e6-b744-579fe0f5db60","method":{"position":"org.apache.commons.lang3.ArrayUtils:1194","type":"CtMethodImpl","sourcecode":"public static boolean[] subarray(final boolean[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.boolean[];\n            } \n            final boolean[] boolean[] = new boolean[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:675","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[89,89,90,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,45,46,47,48,49,50,51,52,53,54,55,56,57,57,58],"tindex":"bba76beb-2e7d-11e6-b744-153f8fe7cdcd","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:801","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:653","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"bba792fc-2e7d-11e6-b744-519fe04b23e1","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:652","type":"CtMethodImpl","sourcecode":"public boolean replaceIn(java.lang.StringBuilder source) {\n    if (source == null) {\n        {\n            if (source == null) {\n                return false;\n            } \n            return replaceIn(source, 0, source.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:360","type":"CtBinaryOperatorImpl","sourcecode":"locale == null"},"failures":[104],"tindex":"bba7ba0d-2e7d-11e6-b744-59c8bd7a5ebf","method":{"position":"org.apache.commons.lang3.LocaleUtils:194","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.util.Locale> localeLookupList(final java.util.Locale locale, final java.util.Locale defaultLocale) {\n    if (locale == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>(4);\n            if (locale != null) {\n                list.add(locale);\n                if ((locale.getVariant().length()) > 0) {\n                    list.add(new java.util.Locale(locale.getLanguage() , locale.getCountry()));\n                } \n                if ((locale.getCountry().length()) > 0) {\n                    list.add(new java.util.Locale(locale.getLanguage() , \"\"));\n                } \n                if ((list.contains(defaultLocale)) == false) {\n                    list.add(defaultLocale);\n                } \n            } \n            return java.util.Collections.unmodifiableList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1548","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[105],"tindex":"bba7ba0e-2e7d-11e6-b744-53c53e4877e1","method":{"position":"org.apache.commons.lang3.ArrayUtils:3687","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final boolean[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                {\n                    return (array != null) && ((array.int) != 0);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3070","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[106],"tindex":"bba7e11f-2e7d-11e6-b744-eb4358f07d96","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:795","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final long[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final long long : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:390","type":"CtBinaryOperatorImpl","sourcecode":"fromIndex < 0"},"failures":[107],"tindex":"bba80830-2e7d-11e6-b744-913fe08d136d","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:371","type":"CtMethodImpl","sourcecode":"public static int indexOfType(final java.lang.Throwable throwable, final java.lang.Class<?> type, final int fromIndex) {\n    if (throwable == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fromIndex < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, fromIndex, true);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fromIndex":"fromIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:647","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[108,109,110,111,112,113,65,114,115,71,72,74,79,80,81,83,84,85,86,87],"tindex":"bba80831-2e7d-11e6-b744-57dd7cfc53be","method":{"position":"org.apache.commons.lang3.time.DateUtils:803","type":"CtMethodImpl","sourcecode":"public static java.util.Date truncate(final java.util.Date date, final int field) {\n    if (date == null) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            gval.setTime(date);\n            org.apache.commons.lang3.time.DateUtils.modify(gval, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return gval.getTime();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:643","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[116,117,118,119,120,121,122,123,124,125,126,127],"tindex":"bba82f42-2e7d-11e6-b744-d318a26afe3c","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:647","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final java.lang.Object[] lhs, final java.lang.Object[] rhs, final java.util.Comparator<?> comparator) {\n    if (rhs == lhs) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i], comparator);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1886","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isHighSurrogate(ch)"},"failures":[],"tindex":"bba85653-2e7d-11e6-b744-6f191e3b19a2","method":{"position":"org.apache.commons.lang3.CharUtils:421","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiPrintable(final char ch) {\n    if (java.lang.Character.isHighSurrogate(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch >= 32) && (ch < 127);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1548","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[128],"tindex":"bba87d64-2e7d-11e6-b744-1f0666fa581d","method":{"position":"org.apache.commons.lang3.ArrayUtils:4706","type":"CtMethodImpl","sourcecode":"public static boolean[] removeElement(final boolean[] array, final boolean element) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                {\n                    final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n                    if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                        return org.apache.commons.lang3.ArrayUtils.clone(array);\n                    } \n                    return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:227","type":"CtBinaryOperatorImpl","sourcecode":"count < 0"},"failures":[129],"tindex":"bba87d65-2e7d-11e6-b744-7b6770199a72","method":{"position":"org.apache.commons.lang3.RandomStringUtils:68","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count) {\n    if (count < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, false, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,173,174,174,175,175,176,89,89,90,90,177,177,178,178,179,179,180,180,181,181,182,182,183,183,184,184,185,185,186,186,187,187,2,3,4,5,5,6,6,7,8,8,9,9,10,10,11,12,12,13,13,14,14,15,16,17,17,18,18,19,19,20,21,22,23,23,24,24,25,26,27,28,29,30,31,31,32,33,33,34,34,35,35,36,36,37,37,38,39,40,40,41,41,42,43,44,44,45,45,46,46,47,48,48,49,49,50,50,51,51,52,53,54,55,55,56,56,57,57,58,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219],"tindex":"bba8a476-2e7d-11e6-b744-6dd4248ef82a","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1534","type":"CtMethodImpl","sourcecode":"protected void appendFieldEnd(final java.lang.StringBuffer buffer, final java.lang.String fieldName) {\n    if (buffer == null) {\n        {\n            appendFieldSeparator(buffer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"bba8cb87-2e7d-11e6-b744-b3baca3f4cec","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:900","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendTo(buffer, calendar.get(int));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:39","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[220],"tindex":"bba8cb88-2e7d-11e6-b744-a187d34f3c1a","method":{"position":"org.apache.commons.lang3.ArrayUtils:3341","type":"CtMethodImpl","sourcecode":"public static java.lang.Double[] toObject(final double[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Double[];\n            } \n            final java.lang.Double[] java.lang.Double[] = new java.lang.Double[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Double.valueOf(array[i]);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:253","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[221],"tindex":"bba8f299-2e7d-11e6-b744-dfa181636675","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:455","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeJava(final java.lang.String input) {\n    if (input != null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:339","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"bba8f29a-2e7d-11e6-b744-7f2b05790fa0","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:967","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final long[] array, final java.lang.Boolean fullDetail) {\n    if (fieldName == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1058","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[222,223,224,225,226],"tindex":"bba8f29b-2e7d-11e6-b744-e3831397b5bd","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:380","type":"CtMethodImpl","sourcecode":"public static int reflectionHashCode(final java.lang.Object object, final boolean testTransients) {\n    if (object == null) {\n        {\n            return org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(17, 37, object, testTransients, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:692","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.TypeVariable<?>"},"failures":[],"tindex":"bba919ac-2e7d-11e6-b744-5d22d98b575d","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:512","type":"CtMethodImpl","sourcecode":"private static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.GenericArrayType toGenericArrayType, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (type instanceof java.lang.reflect.TypeVariable<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type == null) {\n                return true;\n            } \n            if (toGenericArrayType == null) {\n                return false;\n            } \n            if (toGenericArrayType.equals(type)) {\n                return true;\n            } \n            final java.lang.reflect.Type java.lang.reflect.Type = toGenericArrayType.getGenericComponentType();\n            if (type instanceof java.lang.Class<?>) {\n                final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(type));\n                return (cls.isArray()) && (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls.getComponentType(), toComponentType, typeVarAssigns));\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType(), toComponentType, typeVarAssigns);\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(((java.lang.reflect.WildcardType)(type)))) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toGenericArrayType)) {\n                        return true;\n                    } \n                }\n                return false;\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(type)))) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toGenericArrayType)) {\n                        return true;\n                    } \n                }\n                return false;\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return false;\n            } \n            throw new java.lang.IllegalStateException((\"found an unhandled type: \" + type));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1672","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[227,228],"tindex":"bba919ad-2e7d-11e6-b744-6dc28f7c0b88","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:721","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Type substituteTypeVariables(final java.lang.reflect.Type type, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if ((type instanceof java.lang.reflect.TypeVariable<?>) && (typeVarAssigns != null)) {\n                final java.lang.reflect.Type java.lang.reflect.Type = typeVarAssigns.get(type);\n                if (replacementType == null) {\n                    throw new java.lang.IllegalArgumentException((\"missing assignment type for type variable \" + type));\n                } \n                return replacementType;\n            } \n            return type;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2426","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"bba940be-2e7d-11e6-b744-fdd5cbdefecd","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2781","type":"CtMethodImpl","sourcecode":"protected int validateRange(final int startIndex, int endIndex) {\n    if (endIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (startIndex < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n            } \n            if (endIndex > (int)) {\n                endIndex = int;\n            } \n            if (startIndex > endIndex) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n            } \n            return endIndex;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"endIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:323","type":"CtArrayReadImpl","sourcecode":"src[srcPos]"},"failures":[229],"tindex":"bba940bf-2e7d-11e6-b744-c1d3a6b008d5","method":{"position":"org.apache.commons.lang3.Conversion:1115","type":"CtMethodImpl","sourcecode":"public static short binaryToShort(final boolean[] src, final int srcPos, final short dstInit, final int dstPos, final int nBools) {\n    if (src[srcPos]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBools)) {\n                return dstInit;\n            } \n            if (((nBools - 1) + dstPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 16\");\n            } \n            short short = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + dstPos;\n                final int int = (src[(i + srcPos)] ? 1 : 0) << shift;\n                final int int = 1 << shift;\n                out = ((short)((out & (~mask)) | bits));\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"srcPos","src":"src"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:383","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Calendar"},"failures":[],"tindex":"bba940c0-2e7d-11e6-b744-1f429f91ca85","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Calendar) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.lang3.text.ExtendedMessageFormat.this)) {\n                return true;\n            } \n            if (obj == null) {\n                return false;\n            } \n            if (!(super.equals(obj))) {\n                return false;\n            } \n            if (org.apache.commons.lang3.ObjectUtils.notEqual(getClass(), obj.getClass())) {\n                return false;\n            } \n            final org.apache.commons.lang3.text.ExtendedMessageFormat org.apache.commons.lang3.text.ExtendedMessageFormat = ((org.apache.commons.lang3.text.ExtendedMessageFormat)(obj));\n            if (org.apache.commons.lang3.ObjectUtils.notEqual(java.lang.String, rhs.java.lang.String)) {\n                return false;\n            } \n            if (org.apache.commons.lang3.ObjectUtils.notEqual(java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>, rhs.java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>)) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2066","type":"CtBinaryOperatorImpl","sourcecode":"summaryObjectStartText == null"},"failures":[166,230,167,168,169,170,171,172],"tindex":"bba967d1-2e7d-11e6-b744-9d2626d89b57","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2065","type":"CtMethodImpl","sourcecode":"protected void setSummaryObjectStartText(java.lang.String summaryObjectStartText) {\n    if (summaryObjectStartText == null) {\n        {\n            if (summaryObjectStartText == null) {\n                summaryObjectStartText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = summaryObjectStartText;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"summaryObjectStartText":"summaryObjectStartText"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3496","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[231,232,233],"tindex":"bba967d2-2e7d-11e6-b744-5bd6f6da4184","method":{"position":"org.apache.commons.lang3.ArrayUtils:2747","type":"CtMethodImpl","sourcecode":"public static int indexOf(final float[] array, final float valueToFind) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.mutable.MutableShort:246","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.mutable.MutableShort"},"failures":[234],"tindex":"bba98ee3-2e7d-11e6-b744-e197c413b915","method":{"position":"org.apache.commons.lang3.mutable.MutableShort:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.lang3.mutable.MutableShort) {\n        {\n            if (obj instanceof org.apache.commons.lang3.mutable.MutableShort) {\n                return (short) == (((org.apache.commons.lang3.mutable.MutableShort)(obj)).shortValue());\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:363","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isBlank(cs)"},"failures":[235],"tindex":"bba98ee4-2e7d-11e6-b744-0b16f74ddae1","method":{"position":"org.apache.commons.lang3.CharSequenceUtils:55","type":"CtMethodImpl","sourcecode":"public static java.lang.CharSequence subSequence(final java.lang.CharSequence cs, final int start) {\n    if (org.apache.commons.lang3.StringUtils.isBlank(cs)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return cs == null ? null : cs.subSequence(start, cs.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:130","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[236],"tindex":"bba98ee5-2e7d-11e6-b744-d909828a3c4e","method":{"position":"org.apache.commons.lang3.CharUtils:379","type":"CtMethodImpl","sourcecode":"public static java.lang.String unicodeEscaped(final java.lang.Character ch) {\n    if (ch == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.CharUtils.unicodeEscaped(ch.charValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1886","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isHighSurrogate(ch)"},"failures":[],"tindex":"bba98ee6-2e7d-11e6-b744-c7083d7eda8e","method":{"position":"org.apache.commons.lang3.CharSet:223","type":"CtMethodImpl","sourcecode":"public boolean contains(final char ch) {\n    if (java.lang.Character.isHighSurrogate(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final org.apache.commons.lang3.CharRange org.apache.commons.lang3.CharRange : java.util.Set<org.apache.commons.lang3.CharRange>) {\n                if (range.contains(ch)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2482","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[237,238,239,240,241],"tindex":"bba9b5f7-2e7d-11e6-b744-0f4ba0cde7f4","method":{"position":"org.apache.commons.lang3.ArrayUtils:2438","type":"CtMethodImpl","sourcecode":"public static int indexOf(final byte[] array, final byte valueToFind, int startIndex) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:360","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Modifier.isPublic(cls.getModifiers())"},"failures":[242,243,227,228,244,245,246,247],"tindex":"bba9b5f8-2e7d-11e6-b744-77f949bbdc6a","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1047","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Type getClosestParentType(final java.lang.Class<?> cls, final java.lang.Class<?> superClass) {\n    if (java.lang.reflect.Modifier.isPublic(cls.getModifiers())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (superClass.isInterface()) {\n                final java.lang.reflect.Type[] java.lang.reflect.Type[] = cls.getGenericInterfaces();\n                java.lang.reflect.Type java.lang.reflect.Type = null;\n                for (final java.lang.reflect.Type java.lang.reflect.Type : interfaceTypes) {\n                    java.lang.Class<?> java.lang.Class<?> = null;\n                    if (midType instanceof java.lang.reflect.ParameterizedType) {\n                        midClass = org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(midType)));\n                    } else if (midType instanceof java.lang.Class<?>) {\n                        midClass = ((java.lang.Class<?>)(midType));\n                    } else {\n                        throw new java.lang.IllegalStateException(((\"Unexpected generic\" + \" interface type found: \") + midType));\n                    }\n                    if ((org.apache.commons.lang3.reflect.TypeUtils.isAssignable(midClass, superClass)) && (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(genericInterface, ((java.lang.reflect.Type)(midClass))))) {\n                        genericInterface = midType;\n                    } \n                }\n                if (genericInterface != null) {\n                    return genericInterface;\n                } \n            } \n            return cls.getGenericSuperclass();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:73","type":"CtBinaryOperatorImpl","sourcecode":"timeZone == null"},"failures":[248],"tindex":"bba9dd09-2e7d-11e6-b744-517b0b720cdb","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:337","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(final int dateStyle, final int timeStyle, final java.util.TimeZone timeZone) {\n    if (timeZone == null) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(dateStyle, timeStyle, timeZone, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeZone":"timeZone"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3478","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[249,250],"tindex":"bba9dd0a-2e7d-11e6-b744-fb46983bc524","method":{"position":"org.apache.commons.lang3.ArrayUtils:1573","type":"CtMethodImpl","sourcecode":"public static void reverse(final boolean[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            boolean boolean;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:107","type":"CtVariableReadImpl","sourcecode":"forceAccess"},"failures":[251],"tindex":"bba9dd0b-2e7d-11e6-b744-9184b94db5a6","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:380","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readField(final java.lang.reflect.Field field, final java.lang.Object target, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (forceAccess) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"The field must not be null\");\n            if (forceAccess && (!(field.isAccessible()))) {\n                field.setAccessible(true);\n            } else {\n                org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(field);\n            }\n            return field.get(target);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"forceAccess":"forceAccess"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3298","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[143,145,150,152,159,161,166,168,89,89,90,177,177,183,183,184,184,12,12,19,19,20,21,22,23,24,25,26,27,36,36,37,38,39,46,46,47,48,48,49,188,190,195,197,202,204],"tindex":"bbaa041c-2e7d-11e6-b744-adfc30049cb3","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:871","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object[] array, final java.lang.Boolean fullDetail) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[252],"tindex":"bbaa041d-2e7d-11e6-b744-675ec719182e","method":{"position":"org.apache.commons.lang3.ClassUtils:267","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPackageName(final java.lang.Object object, final java.lang.String valueIfNull) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return valueIfNull;\n            } \n            return org.apache.commons.lang3.ClassUtils.getPackageName(object.getClass());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1764","type":"CtBinaryOperatorImpl","sourcecode":"index >= 0"},"failures":[253,254],"tindex":"bbaa041e-2e7d-11e6-b744-cf4f10f29fb2","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1478","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final java.lang.Object obj) {\n    if (index >= 0) {\n        {\n            if (obj == null) {\n                return insert(index, java.lang.String);\n            } \n            return insert(index, obj.toString());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.NoSuchMethodException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"methodName != null"},"failures":[],"tindex":"bbaa2b2f-2e7d-11e6-b744-3b3b7ea54361","method":{"position":"org.apache.commons.lang3.ClassUtils:921","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Method getPublicMethod(final java.lang.Class<?> cls, final java.lang.String methodName, final java.lang.Class<?>... parameterTypes) throws java.lang.NoSuchMethodException, java.lang.SecurityException {\n    if (methodName != null) {\n        {\n            final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(methodName, parameterTypes);\n            if (java.lang.reflect.Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())) {\n                return declaredMethod;\n            } \n            final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>();\n            candidateClasses.addAll(org.apache.commons.lang3.ClassUtils.getAllInterfaces(cls));\n            candidateClasses.addAll(org.apache.commons.lang3.ClassUtils.getAllSuperclasses(cls));\n            for (final java.lang.Class<?> java.lang.Class<?> : candidateClasses) {\n                if (!(java.lang.reflect.Modifier.isPublic(candidateClass.getModifiers()))) {\n                    continue;\n                } \n                java.lang.reflect.Method java.lang.reflect.Method;\n                try {\n                    candidateMethod = candidateClass.getMethod(methodName, parameterTypes);\n                } catch (final java.lang.NoSuchMethodException ex) {\n                    continue;\n                }\n                if (java.lang.reflect.Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())) {\n                    return candidateMethod;\n                } \n            }\n            throw new java.lang.NoSuchMethodException((((\"Can't find a public method for \" + methodName) + \" \") + (org.apache.commons.lang3.ArrayUtils.toString(parameterTypes))));\n        }\n    } else {\n        throw new java.lang.NoSuchMethodException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1102","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"tindex":"bbaa2b30-2e7d-11e6-b744-83af6cf7f8a1","method":{"position":"org.apache.commons.lang3.time.FastDateParser:618","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n    if (value == null) {\n        {\n            final java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(value);\n            if (iVal == null) {\n                final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(value);\n                sb.append(\" not in (\");\n                for (final java.lang.String java.lang.String : java.util.Map<java.lang.String, java.lang.Integer>.keySet()) {\n                    sb.append(textKeyValue).append(' ');\n                }\n                sb.setCharAt(((sb.length()) - 1), ')');\n                throw new java.lang.IllegalArgumentException(sb.toString());\n            } \n            cal.set(int, iVal.intValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:677","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[277,278,279,280,281,222,223,224,225,282,283,284,285,286,287,288,289,290,291,292,293,294,295,1,296,297,298,299,300,301,302,303,304],"tindex":"bbaa5241-2e7d-11e6-b744-5b8e6e187451","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:324","type":"CtMethodImpl","sourcecode":"public static boolean reflectionEquals(final java.lang.Object lhs, final java.lang.Object rhs, final boolean testTransients, final java.lang.Class<?> reflectUpToClass, final java.lang.String... excludeFields) {\n    if ((lhs == null) || (rhs == null)) {\n        {\n            if (lhs == rhs) {\n                return true;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                return false;\n            } \n            final java.lang.Class<?> java.lang.Class<?> = lhs.getClass();\n            final java.lang.Class<?> java.lang.Class<?> = rhs.getClass();\n            java.lang.Class<?> java.lang.Class<?>;\n            if (lhsClass.isInstance(rhs)) {\n                testClass = lhsClass;\n                if (!(rhsClass.isInstance(lhs))) {\n                    testClass = rhsClass;\n                } \n            } else if (rhsClass.isInstance(lhs)) {\n                testClass = rhsClass;\n                if (!(lhsClass.isInstance(rhs))) {\n                    testClass = lhsClass;\n                } \n            } else {\n                return false;\n            }\n            final org.apache.commons.lang3.builder.EqualsBuilder org.apache.commons.lang3.builder.EqualsBuilder = new org.apache.commons.lang3.builder.EqualsBuilder();\n            try {\n                if (testClass.isArray()) {\n                    equalsBuilder.append(lhs, rhs);\n                } else {\n                    org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);\n                    while (((testClass.getSuperclass()) != null) && (testClass != reflectUpToClass)) {\n                        testClass = testClass.getSuperclass();\n                        org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);\n                    }\n                }\n            } catch (final java.lang.IllegalArgumentException e) {\n                return false;\n            }\n            return equalsBuilder.isEquals();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:261","type":"CtBinaryOperatorImpl","sourcecode":"countryCode == null"},"failures":[305],"tindex":"bbaa5242-2e7d-11e6-b744-9d831b00cd71","method":{"position":"org.apache.commons.lang3.LocaleUtils:260","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.util.Locale> languagesByCountry(final java.lang.String countryCode) {\n    if (countryCode == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (countryCode == null) {\n                return java.util.Collections.emptyList();\n            } \n            java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(countryCode);\n            if (langs == null) {\n                langs = new java.util.ArrayList<java.util.Locale>();\n                final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.availableLocaleList();\n                for (int int = 0 ; i < (locales.size()) ; i++) {\n                    final java.util.Locale java.util.Locale = locales.get(i);\n                    if ((countryCode.equals(locale.getCountry())) && (locale.getVariant().isEmpty())) {\n                        langs.add(locale);\n                    } \n                }\n                langs = java.util.Collections.unmodifiableList(langs);\n                org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.putIfAbsent(countryCode, langs);\n                langs = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(countryCode);\n            } \n            return langs;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"countryCode":"countryCode"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:545","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.WildcardType"},"failures":[242,243,227,228,244,245,246],"tindex":"bbaa7953-2e7d-11e6-b744-05afc448ac5c","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:324","type":"CtMethodImpl","sourcecode":"private static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.Type toType, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (toType instanceof java.lang.reflect.WildcardType) {\n        {\n            if ((toType == null) || (toType instanceof java.lang.Class<?>)) {\n                return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, ((java.lang.Class<?>)(toType)));\n            } \n            if (toType instanceof java.lang.reflect.ParameterizedType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, ((java.lang.reflect.ParameterizedType)(toType)), typeVarAssigns);\n            } \n            if (toType instanceof java.lang.reflect.GenericArrayType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, ((java.lang.reflect.GenericArrayType)(toType)), typeVarAssigns);\n            } \n            if (toType instanceof java.lang.reflect.WildcardType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, ((java.lang.reflect.WildcardType)(toType)), typeVarAssigns);\n            } \n            if (toType instanceof java.lang.reflect.TypeVariable<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, ((java.lang.reflect.TypeVariable<?>)(toType)), typeVarAssigns);\n            } \n            throw new java.lang.IllegalStateException((\"found an unhandled type: \" + toType));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"toType"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:489","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[],"tindex":"bbaa7954-2e7d-11e6-b744-178bdcab0495","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:371","type":"CtMethodImpl","sourcecode":"public static int indexOfType(final java.lang.Throwable throwable, final java.lang.Class<?> type, final int fromIndex) {\n    if (throwable == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fromIndex < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, fromIndex, true);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[306],"tindex":"bbaaa065-2e7d-11e6-b744-5b6a7ce34fb3","method":{"position":"org.apache.commons.lang3.BooleanUtils:775","type":"CtMethodImpl","sourcecode":"public static java.lang.String toStringOnOff(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            return org.apache.commons.lang3.BooleanUtils.toString(bool, \"on\", \"off\", null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:804","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"bbaaa066-2e7d-11e6-b744-0b4e4b510c17","method":{"position":"org.apache.commons.lang3.time.DateUtils:474","type":"CtMethodImpl","sourcecode":"public static java.util.Date addMinutes(final java.util.Date date, final int amount) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:371","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[307],"tindex":"bbaaa067-2e7d-11e6-b744-956625ee6397","method":{"position":"org.apache.commons.lang3.ArrayUtils:3205","type":"CtMethodImpl","sourcecode":"public static java.lang.Short[] toObject(final short[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Short[];\n            } \n            final java.lang.Short[] java.lang.Short[] = new java.lang.Short[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Short.valueOf(array[i]);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:194","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"bbaac778-2e7d-11e6-b744-6b16054bb715","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:447","type":"CtMethodImpl","sourcecode":"private void seekNonWs(final java.lang.String pattern, final java.text.ParsePosition pos) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            final char[] char[] = pattern.toCharArray();\n            do {\n                len = org.apache.commons.lang3.text.StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());\n                pos.setIndex(((pos.getIndex()) + len));\n            } while ((len > 0) && ((pos.getIndex()) < (pattern.length())) );\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2485","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103,308,309],"tindex":"bbaac779-2e7d-11e6-b744-a7c283704043","method":{"position":"org.apache.commons.lang3.text.StrBuilder:595","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final java.lang.StringBuffer str, final int startIndex, final int length) {\n    if (startIndex < 0) {\n        {\n            if (str == null) {\n                return appendNull();\n            } \n            if ((startIndex < 0) || (startIndex > (str.length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\");\n            } \n            if ((length < 0) || ((startIndex + length) > (str.length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\");\n            } \n            if (length > 0) {\n                final int int = length();\n                ensureCapacity((len + length));\n                str.getChars(startIndex, (startIndex + length), char[], len);\n                int += length;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"ch < 256"},"failures":[],"tindex":"bbaac77a-2e7d-11e6-b744-ade923a9e201","method":{"position":"org.apache.commons.lang3.CharUtils:497","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiAlphaLower(final char ch) {\n    if (ch < 256) {\n        {\n            return (ch >= 'a') && (ch <= 'z');\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2870","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[310,311,312,313],"tindex":"bbaaee8b-2e7d-11e6-b744-db2f0bf00fc8","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:584","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final boolean[] array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final boolean boolean : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:353","type":"CtBinaryOperatorImpl","sourcecode":"ch < 16"},"failures":[],"tindex":"bbaaee8c-2e7d-11e6-b744-b9449ba77cdb","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2300","type":"CtMethodImpl","sourcecode":"public int indexOf(final char ch, int startIndex) {\n    if (ch < 16) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            if (startIndex >= (int)) {\n                return -1;\n            } \n            final char[] char[] = char[];\n            for (int int = startIndex ; i < (int) ; i++) {\n                if ((thisBuf[i]) == ch) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:938","type":"CtBinaryOperatorImpl","sourcecode":"((numerator) > 0 ? -(numerator) : numerator) < (-(denominator))"},"failures":[314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"tindex":"bbaaee8d-2e7d-11e6-b744-792b2405d1a3","method":{"position":"org.apache.commons.lang3.math.Fraction:141","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(int numerator, int denominator) {\n    if ((denominator > 0 ? -(int) : int) < (-denominator)) {\n        {\n            if (denominator == 0) {\n                throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n            } \n            if (denominator < 0) {\n                if ((numerator == (java.lang.Integer.java.lang.Integer.int)) || (denominator == (java.lang.Integer.java.lang.Integer.int))) {\n                    throw new java.lang.ArithmeticException(\"overflow: can't negate\");\n                } \n                numerator = -numerator;\n                denominator = -denominator;\n            } \n            return new org.apache.commons.lang3.math.Fraction(numerator , denominator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"denominator","denominator":"denominator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3274","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[330,241],"tindex":"bbab159e-2e7d-11e6-b744-213252b43a48","method":{"position":"org.apache.commons.lang3.ArrayUtils:3553","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final byte[] array) {\n    if (array == null) {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2873","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[331,332],"tindex":"bbab159f-2e7d-11e6-b744-7b6ed223a8ed","method":{"position":"org.apache.commons.lang3.ArrayUtils:2270","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final short[] array, final short valueToFind, int startIndex) {\n    if (startIndex < 0) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:591","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[35,35],"tindex":"bbab15a0-2e7d-11e6-b744-f1e415445d84","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1089","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short[] array, final java.lang.Boolean fullDetail) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1058","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[180],"tindex":"bbab3cb1-2e7d-11e6-b744-05b2cba0e521","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:178","type":"CtMethodImpl","sourcecode":"public static java.lang.String reflectionToString(final java.lang.Object object, final org.apache.commons.lang3.builder.ToStringStyle style, final boolean outputTransients) {\n    if (object == null) {\n        {\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(object, style, outputTransients, false, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:121","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[333,334],"tindex":"bbab3cb2-2e7d-11e6-b744-dff2ba5db447","method":{"position":"org.apache.commons.lang3.StringUtils:1475","type":"CtMethodImpl","sourcecode":"public static boolean containsIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence searchStr) {\n    if (str == null) {\n        {\n            if ((str == null) || (searchStr == null)) {\n                return false;\n            } \n            final int int = searchStr.length();\n            final int int = (str.length()) - len;\n            for (int int = 0 ; i <= max ; i++) {\n                if (org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"bbab3cb3-2e7d-11e6-b744-974c27fe209f","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1211","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final char[] array, final java.lang.Boolean fullDetail) {\n    if (fieldName == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1367","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(type)"},"failures":[335,336,337,338,339],"tindex":"bbab63c4-2e7d-11e6-b744-235a80f0cbf9","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1658","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.lang.reflect.Type type) {\n    if (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(type)) {\n        {\n            org.apache.commons.lang3.Validate.notNull(type);\n            if (type instanceof java.lang.Class<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.classToString(((java.lang.Class<?>)(type)));\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(((java.lang.reflect.ParameterizedType)(type)));\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(((java.lang.reflect.WildcardType)(type)));\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(((java.lang.reflect.TypeVariable<?>)(type)));\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(((java.lang.reflect.GenericArrayType)(type)));\n            } \n            throw new java.lang.IllegalArgumentException(org.apache.commons.lang3.ObjectUtils.identityToString(type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2068","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"bbab63c5-2e7d-11e6-b744-6d09c2160bf0","method":{"position":"org.apache.commons.lang3.StringUtils:3710","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final byte[] array, final char separator, final int startIndex, final int endIndex) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:825","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof int[]"},"failures":[176,90,180,181,2,3,7,11,15,16,17,20,21,22,25,26,30,31,32,34,38,39,41,43,47,49,53,55,56,58],"tindex":"bbab63c6-2e7d-11e6-b744-53ca2f5421d5","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:117","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final java.lang.Object object) {\n    if (object instanceof int[]) {\n        {\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(object, null, false, false, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3937","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[340],"tindex":"bbab8ad7-2e7d-11e6-b744-2d7c09be15e8","method":{"position":"org.apache.commons.lang3.ArrayUtils:1353","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final float[] array1, final float[] array2) {\n    if (array1 == null) {\n        {\n            if (array1 == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                        return false;\n                    } \n                    return true;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:989","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[341],"tindex":"bbab8ad8-2e7d-11e6-b744-058a4fefbad9","method":{"position":"org.apache.commons.lang3.Validate:1148","type":"CtMethodImpl","sourcecode":"public static void exclusiveBetween(double start, double end, double value, java.lang.String message) {\n    if ((end < end) || (value > value)) {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"value","value":"end"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:159","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[342,226,343,344],"tindex":"bbab8ad9-2e7d-11e6-b744-219d3258a027","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:454","type":"CtMethodImpl","sourcecode":"public static int reflectionHashCode(final java.lang.Object object, final java.lang.String... excludeFields) {\n    if (object == null) {\n        {\n            return org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(17, 37, object, false, null, excludeFields);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5882","type":"CtBinaryOperatorImpl","sourcecode":"cs == null"},"failures":[345],"tindex":"bbab8ada-2e7d-11e6-b744-1b4c3382447c","method":{"position":"org.apache.commons.lang3.StringUtils:1927","type":"CtMethodImpl","sourcecode":"public static boolean containsNone(final java.lang.CharSequence cs, final java.lang.String invalidChars) {\n    if (cs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cs == null) || (invalidChars == null)) {\n                return true;\n            } \n            return org.apache.commons.lang3.StringUtils.containsNone(cs, invalidChars.toCharArray());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1913","type":"CtBinaryOperatorImpl","sourcecode":"index >= 0"},"failures":[],"tindex":"bbabb1eb-2e7d-11e6-b744-5d544cba2e75","method":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:39","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index >= 0) {\n        {\n            int int = ((input.length()) - index) - 1;\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            if ((((input.charAt(index)) == '\\\\') && (remaining > 0)) && (isOctalDigit(input.charAt((index + 1))))) {\n                int int = index + 1;\n                int int = index + 2;\n                int int = index + 3;\n                builder.append(input.charAt(next));\n                if ((remaining > 1) && (isOctalDigit(input.charAt(next2)))) {\n                    builder.append(input.charAt(next2));\n                    if (((remaining > 2) && (isZeroToThree(input.charAt(next)))) && (isOctalDigit(input.charAt(next3)))) {\n                        builder.append(input.charAt(next3));\n                    } \n                } \n                out.write(java.lang.Integer.parseInt(builder.toString(), 8));\n                return 1 + (builder.length());\n            } \n            return 0;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[346,347,348,349],"tindex":"bbabb1ec-2e7d-11e6-b744-f9752650d0fd","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:212","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern, final java.util.TimeZone timeZone) {\n    if (pattern == null) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, timeZone, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:647","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"bbabb1ed-2e7d-11e6-b744-c94276bd4f86","method":{"position":"org.apache.commons.lang3.time.DateUtils:1647","type":"CtMethodImpl","sourcecode":"private static long getFragment(final java.util.Date date, final int fragment, final java.util.concurrent.TimeUnit unit) {\n    if (date == null) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            calendar.setTime(date);\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, unit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3937","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[],"tindex":"bbabd8fe-2e7d-11e6-b744-6dc04e07ff44","method":{"position":"org.apache.commons.lang3.ArrayUtils:1353","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final float[] array1, final float[] array2) {\n    if (array1 == null) {\n        {\n            if (array1 == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                        return false;\n                    } \n                    return true;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:657","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[377],"tindex":"bbabd8ff-2e7d-11e6-b744-13f4344420c8","method":{"position":"org.apache.commons.lang3.math.NumberUtils:250","type":"CtMethodImpl","sourcecode":"public static double toDouble(final java.lang.String str) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toDouble(str, 0.0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1548","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"bbabd900-2e7d-11e6-b744-a54ef8ba6bf2","method":{"position":"org.apache.commons.lang3.ArrayUtils:3687","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final boolean[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                {\n                    return (array != null) && ((array.int) != 0);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1534","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[378],"tindex":"bbabd901-2e7d-11e6-b744-f3275d0f55aa","method":{"position":"org.apache.commons.lang3.ArrayUtils:5769","type":"CtMethodImpl","sourcecode":"public static float[] removeAll(final float[] array, final int... indices) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((float[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:884","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"bbac0012-2e7d-11e6-b744-a1003f9471ee","method":{"position":"org.apache.commons.lang3.time.DateUtils:584","type":"CtMethodImpl","sourcecode":"public static java.util.Date setHours(final java.util.Date date, final int amount) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1150","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"bbac0013-2e7d-11e6-b744-899c767720d5","method":{"position":"org.apache.commons.lang3.Validate:1125","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void exclusiveBetween(double start, double end, double value) {\n    if ((end <= end) || (value >= end)) {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end","value":"end"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2293","type":"CtInvocationImpl","sourcecode":"separator.isEmpty()"},"failures":[379],"tindex":"bbac0014-2e7d-11e6-b744-49b67d90f480","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1154","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendWithSeparators(final java.lang.Iterable<?> iterable, final java.lang.String separator) {\n    if (separator.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterable != null) {\n                @java.lang.SuppressWarnings(value = \"deprecation\")\n                final java.lang.String java.lang.String = org.apache.commons.lang3.ObjectUtils.toString(separator);\n                final java.util.Iterator<?> java.util.Iterator<?> = iterable.iterator();\n                while (it.hasNext()) {\n                    append(it.next());\n                    if (it.hasNext()) {\n                        append(sep);\n                    } \n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"separator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:804","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"bbac2725-2e7d-11e6-b744-b52138198320","method":{"position":"org.apache.commons.lang3.time.DateUtils:517","type":"CtMethodImpl","sourcecode":"private static java.util.Date add(final java.util.Date date, final int calendarField, final int amount) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            c.setTime(date);\n            c.add(calendarField, amount);\n            return c.getTime();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1155","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[185,185,19,19,20,21,22,23,24,25,26,27,58,58],"tindex":"bbac2726-2e7d-11e6-b744-475a06ba0195","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1358","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float[] array) {\n    if (array == null) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:263","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[380],"tindex":"bbac2727-2e7d-11e6-b744-59ea2ea8159a","method":{"position":"org.apache.commons.lang3.CharUtils:129","type":"CtMethodImpl","sourcecode":"public static char toChar(final java.lang.Character ch) {\n    if (ch == null) {\n        {\n            if (ch == null) {\n                throw new java.lang.IllegalArgumentException(\"The Character must not be null\");\n            } \n            return ch.charValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1031","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[381],"tindex":"bbac4e38-2e7d-11e6-b744-a94864797ecd","method":{"position":"org.apache.commons.lang3.ArrayUtils:2193","type":"CtMethodImpl","sourcecode":"public static boolean contains(final int[] array, final int valueToFind) {\n    if (array == null) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:585","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"bbac4e39-2e7d-11e6-b744-437e1961b6ef","method":{"position":"org.apache.commons.lang3.ArrayUtils:4706","type":"CtMethodImpl","sourcecode":"public static boolean[] removeElement(final boolean[] array, final boolean element) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                {\n                    final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n                    if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                        return org.apache.commons.lang3.ArrayUtils.clone(array);\n                    } \n                    return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:64","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[382],"tindex":"bbac4e3a-2e7d-11e6-b744-05bb4b862a19","method":{"position":"org.apache.commons.lang3.BooleanUtils:104","type":"CtMethodImpl","sourcecode":"public static boolean isNotTrue(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            return !(org.apache.commons.lang3.BooleanUtils.isTrue(bool));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:127","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[383],"tindex":"bbac4e3b-2e7d-11e6-b744-6fc25025cf0b","method":{"position":"org.apache.commons.lang3.math.NumberUtils:708","type":"CtMethodImpl","sourcecode":"public static java.lang.Long createLong(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            return java.lang.Long.decode(str);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3966","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[384],"tindex":"bbac4e3c-2e7d-11e6-b744-4d0cb582ef7e","method":{"position":"org.apache.commons.lang3.ArrayUtils:3965","type":"CtMethodImpl","sourcecode":"public static double[] addAll(final double[] array1, final double... array2) {\n    if (array1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final double[] double[] = new double[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:465","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"bbac754d-2e7d-11e6-b744-0b3304bf55e0","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:814","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final long[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7035","type":"CtBinaryOperatorImpl","sourcecode":"(first.length()) > (second.length())"},"failures":[],"tindex":"bbac754e-2e7d-11e6-b744-fb2a0865ef2f","method":{"position":"org.apache.commons.lang3.StringUtils:7086","type":"CtMethodImpl","sourcecode":"private static java.lang.String getSetOfMatchingCharacterWithin(final java.lang.CharSequence first, final java.lang.CharSequence second, final int limit) {\n    if ((second.length()) > (second.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(second);\n            for (int int = 0 ; i < (first.length()) ; i++) {\n                final char char = first.charAt(i);\n                boolean boolean = false;\n                for (int int = java.lang.Math.max(0, (i - limit)) ; (!found) && (j < (java.lang.Math.min((i + limit), second.length()))) ; j++) {\n                    if ((copy.charAt(j)) == ch) {\n                        found = true;\n                        common.append(ch);\n                        copy.setCharAt(j, '*');\n                    } \n                }\n            }\n            return common.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"second","second":"second"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:121","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 15"},"failures":[385,386,387],"tindex":"bbac9c5f-2e7d-11e6-b744-3309496829c1","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean translate(final int codepoint, final java.io.Writer out) throws java.io.IOException {\n    if (codepoint > 15) {\n        {\n            if (boolean) {\n                if ((codepoint < (int)) || (codepoint > (int))) {\n                    return false;\n                } \n            } else {\n                if ((codepoint >= (int)) && (codepoint <= (int))) {\n                    return false;\n                } \n            }\n            out.write(\"&#\");\n            out.write(java.lang.Integer.toString(codepoint, 10));\n            out.write(';');\n            return true;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepoint"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:884","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"bbac9c60-2e7d-11e6-b744-ffc8d5683d4a","method":{"position":"org.apache.commons.lang3.time.DateUtils:432","type":"CtMethodImpl","sourcecode":"public static java.util.Date addWeeks(final java.util.Date date, final int amount) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:396","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.EqualsBuilder.isRegistered(lhs, rhs)"},"failures":[],"tindex":"bbac9c61-2e7d-11e6-b744-91bfbda50d25","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:232","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs, final java.lang.String... excludeFields) {\n    if (org.apache.commons.lang3.builder.EqualsBuilder.isRegistered(rhs, rhs)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null, excludeFields);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"rhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:73","type":"CtBinaryOperatorImpl","sourcecode":"timeZone == null"},"failures":[],"tindex":"bbac9c62-2e7d-11e6-b744-e76e05a4fa1a","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:238","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Calendar calendar, final java.lang.String pattern, final java.util.TimeZone timeZone) {\n    if (timeZone == null) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(calendar, pattern, timeZone, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeZone":"timeZone"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:391","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[388],"tindex":"bbacc373-2e7d-11e6-b744-4dbfde95fb1a","method":{"position":"org.apache.commons.lang3.time.FastDateParser:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object parseObject(final java.lang.String source, final java.text.ParsePosition pos) {\n    if (source == null) {\n        {\n            return parse(source, pos);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}