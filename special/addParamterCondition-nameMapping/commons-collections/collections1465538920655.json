{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":612,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":435,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":746,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":549,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":660,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":1114,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":402,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":403,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":936,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":18,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":363,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":928,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":1139,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":986,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":140,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":75,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":911,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":1185,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":77,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":539,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":60,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":215,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":1051,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":704,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":684,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":995,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":1179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":177,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":369,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":773,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":561,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":1049,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":597,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":899,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":92,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":428,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":1102,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":613,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":692,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":627,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":193,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":134,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSimpleSerialization":232,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":165,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":298,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":502,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":952,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains3":1169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":162,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":1168,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":1167,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":247,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":267,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":1069,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":877,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":909,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":302,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":834,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":778,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":989,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":870,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":161,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":664,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":330,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":679,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":1204,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":924,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":714,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":542,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":765,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":752,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":685,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":1161,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":256,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":903,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":876,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":355,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":21,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":396,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":147,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":1036,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":894,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":1200,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":281,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":601,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":141,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":572,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":1140,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":308,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":573,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":181,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":372,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":974,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":1163,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":556,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":878,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":635,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":723,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":1028,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":94,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":184,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":1050,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":691,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":243,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":754,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":946,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":422,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":953,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":97,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":1015,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":37,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":1089,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":344,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":1123,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":409,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":1141,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":840,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":1044,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":885,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":222,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":636,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":1105,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":481,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":751,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":468,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":327,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":527,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":534,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":528,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":529,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":1072,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":491,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":36,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":866,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":820,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":1124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":1152,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":253,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":436,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":362,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":486,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":487,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":283,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":485,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":461,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":512,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":779,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":1065,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":202,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":874,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":158,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":735,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":984,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":1066,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":630,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":1088,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":638,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":745,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":764,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":881,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":610,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":824,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":504,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":602,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":844,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":621,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":837,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":865,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":548,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":339,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":1071,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":41,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":964,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":916,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":693,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":1037,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":854,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":1033,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":295,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":251,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":1038,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":380,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":523,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":708,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":869,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":61,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":661,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":957,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":289,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":932,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":199,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":792,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":880,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":614,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":615,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":616,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":348,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":1096,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":1026,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":332,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":827,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":761,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":413,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":939,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":690,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":1070,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":643,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":323,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":593,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":1155,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":109,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":711,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":1076,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":24,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":496,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":806,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":850,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":1053,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":603,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":973,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":301,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":424,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":358,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":433,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":180,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":713,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":167,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":888,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":581,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":1113,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":1127,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":205,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":312,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":747,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":731,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":872,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":447,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":274,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":1190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":127,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":282,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":196,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":212,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":400,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":1083,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":1079,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":1111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":194,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":480,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":138,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":707,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":656,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":1,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":129,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":229,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":697,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":1119,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":970,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":730,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":729,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":492,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":728,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":955,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":89,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":349,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":1131,"org.apache.commons.collections4.map.LRUMapTest.testReset":699,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":1056,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":19,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":288,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":879,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":951,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":1002,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":960,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":543,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":250,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":98,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":1025,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":1062,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":653,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":328,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":1048,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":350,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":893,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":625,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":124,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":310,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":760,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":647,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":83,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":331,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":462,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":1196,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":407,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":772,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":700,"org.apache.commons.collections4.map.LinkedMapTest.testReset":641,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":536,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":1023,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":683,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":715,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":478,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":734,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":852,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":600,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":830,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":276,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":538,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":420,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":347,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":1180,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":29,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":320,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":419,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":1181,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":1142,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":733,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":797,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":1024,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":1009,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":1011,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":1010,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":809,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":445,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":442,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":429,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":845,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":1146,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":941,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":975,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":1197,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":832,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":997,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":88,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":675,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":788,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":388,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":376,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":579,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":516,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":1059,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":296,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":1154,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":560,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":64,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":999,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":479,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":444,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":1205,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":882,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":555,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":1017,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":790,"org.apache.commons.collections4.map.HashedMapTest.testClone":545,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":1046,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":120,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":868,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":306,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":219,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":611,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":185,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":1117,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":517,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":782,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":175,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":1132,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":915,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":511,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":1014,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":82,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":28,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":682,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":231,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":1055,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":524,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":633,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":208,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":338,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":695,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":341,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":227,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":783,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":85,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":1027,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":218,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":1101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":1202,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":313,"org.apache.commons.collections4.SetUtilsTest.testHashCode":238,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":835,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":1106,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":209,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":343,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":849,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":1090,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":451,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":669,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":668,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":670,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":551,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":490,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":838,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":133,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":646,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":371,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":582,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":594,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":651,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetHashCode":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":631,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetHashCode":978,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":300,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":391,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":1052,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":224,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":1135,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":1170,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":174,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":855,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":48,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":839,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":681,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":680,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":897,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":1097,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":642,"org.apache.commons.collections4.list.TreeListTest.testBug35258":825,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":781,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":863,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":183,"org.apache.commons.collections4.map.LinkedMapTest.testClone":640,"org.apache.commons.collections4.ListUtilsTest.testSelect":1191,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":1133,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":273,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":848,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":272,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":856,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":861,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":862,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":452,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":329,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":934,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":587,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":585,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":609,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":1039,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":121,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnmodifiable":976,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":622,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":521,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":590,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":927,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":589,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":588,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":705,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":544,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":1078,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":857,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":1153,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":198,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":114,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":566,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":47,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":701,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":687,"org.apache.commons.collections4.SetUtilsTest.testEquals":237,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":415,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":628,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":937,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":562,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":201,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":938,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":604,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterableNull":49,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":291,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":1178,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":189,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":210,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalFullCollectionExists":234,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalEmptyCollectionExists":233,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":650,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":460,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":249,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalEmptyCollectionExists":991,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":192,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":191,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":190,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":1058,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":1171,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":211,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":259,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":1136,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":763,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":944,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":1201,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":929,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":200,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testComparator":214,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":405,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":702,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":961,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":912,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":1104,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":206,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":796,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":892,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":104,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":1054,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":102,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":279,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":875,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":1100,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":474,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":578,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":784,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":648,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":32,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":67,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":918,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":1162,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":755,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":776,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":1099,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToString":988,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":907,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":1103,"org.apache.commons.collections4.map.LRUMapTest.testLRU":686,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":842,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":294,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":966,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":1107,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":563,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":498,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":1040,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":1041,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":1042,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":813,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":26,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":364,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":724,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":810,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":1034,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":324,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":345,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":902,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":1182,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":942,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":240,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":113,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":1021,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":1188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":132,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":66,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":554,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":119,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":722,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":385,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":696,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":179,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":410,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":935,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":387,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":904,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":923,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":721,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":1067,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":871,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":507,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":526,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":357,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":456,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":629,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":800,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":802,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":477,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":580,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":416,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":732,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":1060,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":674,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":143,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":260,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":930,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":706,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":533,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":297,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":577,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":574,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":241,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":494,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":1035,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":1129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":1203,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":53,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":307,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":980,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":1008,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":620,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":112,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":466,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":846,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":136,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":654,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":657,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":1187,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":473,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":0,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":659,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":1031,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":286,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":812,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":1145,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":1159,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":887,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":1095,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":1000,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":791,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":950,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":605,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":1063,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":390,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":73,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":440,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":1150,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":586,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":886,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":908,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":1143,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":1173,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":366,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":1075,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":172,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":828,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":1108,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":860,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":1189,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":945,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":547,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":1016,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":9,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":1086,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":153,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":537,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":948,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":1077,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":152,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":475,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":737,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":401,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":559,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":884,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":453,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":799,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":264,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":738,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":78,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":757,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":334,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":489,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":458,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":27,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":1120,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":775,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":649,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":808,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":1080,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":470,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":896,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":128,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":389,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":1195,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":1130,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":275,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":457,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":552,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":68,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":381,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":126,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":108,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":530,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":342,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":203,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":658,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":292,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":499,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":532,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":321,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":531,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":1128,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":818,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":1118,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":798,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":265,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":1091,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":1115,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":596,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":584,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":803,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":65,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":1126,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":333,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":1122,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":758,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":607,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":900,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":968,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":1061,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":598,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":1043,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":853,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":397,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":954,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":1057,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":599,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":425,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":510,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":780,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":144,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":346,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":819,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":449,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":148,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":246,"org.apache.commons.collections4.list.TreeListTest.testRemove":822,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":987,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":361,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":483,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":482,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":304,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":137,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":847,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":972,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":484,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":1174,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalFullCollectionExists":990,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":309,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":859,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":91,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":619,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":618,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":662,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":617,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":446,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":1175,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":1172,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":564,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":522,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":437,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":254,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":1194,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":851,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":505,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":13,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":157,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":644,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":155,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":319,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":906,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":1134,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":1007,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":740,"org.apache.commons.collections4.map.LRUMapTest.testClone":698,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":677,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":1004,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":550,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":667,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":762,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":1098,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":891,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":914,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":889,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":299,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":703,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":890,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":1144,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":84,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsSelfHashCode":230,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":624,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":408,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":958,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":965,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":575,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":864,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":1001,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":51,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":931,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":252,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":678,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":794,"org.apache.commons.collections4.list.TreeListTest.testListEquals":833,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":135,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":2,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":506,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":1047,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":81,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":1029,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":920,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":921,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":967,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":1012,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":919,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":1030,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":373,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":831,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":992,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":417,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":204,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":432,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":406,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":739,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":558,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":606,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":933,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":1020,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":43,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":1160,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":1019,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":293,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":1006,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":86,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":993,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":169,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":160,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":438,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":220,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":1093,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":472,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":284,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":895,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":676,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":821,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":917,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":959,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":59,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":117,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":905,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":742,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":5,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":427,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":235,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":337,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":712,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":826,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":1147,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains3":1166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":142,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":557,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":1148,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":962,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":23,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":411,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":786,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":1165,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":519,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":1085,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":1164,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":811,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":17,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":901,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":353,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":448,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":7,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":54,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":268,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":805,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":546,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":123,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":883,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":70,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":673,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":665,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":672,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":787,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":815,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":671,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":325,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":623,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":663,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":258,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":1005,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":493,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":186,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":535,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":509,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":311,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":777,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":11,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":829,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":801,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":1137,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":1184,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":583,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":977,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionSize":985,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":710,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":10,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":1045,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":769,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":770,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":771,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":1198,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":207,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":450,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":541,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":508,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":414,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":382,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":949,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":418,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":1094,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":632,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":804,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":982,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":261,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":1149,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":996,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":45,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":228,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":239,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":16,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":255,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":497,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":718,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":741,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":412,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":947,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":518,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":1092,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectEqualsSelf":1121,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":378,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":374,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":592,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":269,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":271,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":565,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":270,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":285,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":1082,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":1112,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":652,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":898,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":1193,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":360,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":736,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":163,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":749,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsSelfHashCode":994,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":225,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":56,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":57,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToString":226,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":58,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":379,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":431,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":843,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":1109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":173,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":836,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":1003,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":467,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":1073,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":694,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":817,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":1084,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":969,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":608,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":814,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":166,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":785,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":1199,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":248,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":421,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":756,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":963,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":377,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":503,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":1157,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":95,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":1064,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":430,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":807,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":910,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":1151,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":576,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":720,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":1177,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":423,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":645,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":469,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":1068,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":971,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":340,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":326,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":513,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":823,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":553,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":956,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":981,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":6,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":1110,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":178,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":634,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":520,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":195,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":188,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":398,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":913,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":399,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":315,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":168,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":495,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":1116,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":383,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":926,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":22,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":709,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":50,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":55,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":925,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":744,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":922,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":774,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":743,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":476,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":30,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":867,"org.apache.commons.collections4.SetUtilsTest.testEmptyIfNull":236,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":244,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":197,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":359,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":940,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":1013,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":998,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":38,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":471,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":463,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":122,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":1186,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":3,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":280,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":626,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":719,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":87,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":767,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":768,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":766,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":567,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":257,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":101,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":455,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":149,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":943,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":454,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":759,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":514,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":1022,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":40,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":1138,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":105,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":568,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":569,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":983,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":591,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":434,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":858,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":717,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":170,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":164,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":278,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":515,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":15,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":1183,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":753,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":266,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":439,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":1176,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":873,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":1192,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":305,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":748,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":317,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":750,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":392,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":1158,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":393,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":793,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":688,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":335,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":1032,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":182,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":336,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":263,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":4,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":404,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":727,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":443,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":1156,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":979,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":501,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":1074,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":1081,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":1087,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":69,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":725,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":441,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":726,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":394,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":370,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":395,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":367,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":570,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":655,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":277,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":595,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":789,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":384,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":841,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":1018,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":352,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":386,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":795,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":689,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":426,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionSize":223,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":221,"org.apache.commons.collections4.map.HashedMapTest.testObjectEqualsSelf":1125,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":816,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":716,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":290},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c739b889-2ed1-11e6-b4b6-93bb19f93572","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map != null) {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[0,1,2,3],"tindex":"c73aa2ea-2ed1-11e6-b4b6-136ef5cba147","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[4,5],"tindex":"c73aa2eb-2ed1-11e6-b4b6-552c2ca4b375","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[6],"tindex":"c73ac9fc-2ed1-11e6-b4b6-65f7cc85d3e1","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[7,8,9],"tindex":"c73ac9fd-2ed1-11e6-b4b6-b3cc8ddfee42","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:86","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[10],"tindex":"c73ac9fe-2ed1-11e6-b4b6-53c256a4737a","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,7,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"c73af10f-2ed1-11e6-b4b6-3f258e102bbd","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            if (index > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().remove(index);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[37,38,39,40,41,42,43,44,45,46],"tindex":"c73b1820-2ed1-11e6-b4b6-9b6caf3e3a5b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                {\n                    return (node == null) || (node.isBlack(dataElement));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[47],"tindex":"c73b1821-2ed1-11e6-b4b6-eb068b39e7f3","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:162","type":"CtMethodImpl","sourcecode":"public void setUnknownObjectBehavior(final org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior unknownObjectBehavior) {\n    if (unknownObjectBehavior == null) {\n        {\n            checkLocked();\n            if (unknownObjectBehavior == null) {\n                throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n            } \n            org.apache.commons.collections4.comparators.FixedOrderComparator.this.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior = unknownObjectBehavior;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"unknownObjectBehavior"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[48],"tindex":"c73b3f32-2ed1-11e6-b4b6-bd4635cc1870","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[30],"tindex":"c73b6643-2ed1-11e6-b4b6-1f7150f628fc","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"c73b8d54-2ed1-11e6-b4b6-8b6e9d703418","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[49],"tindex":"c73bb465-2ed1-11e6-b4b6-c9ffde11f30f","method":{"position":"org.apache.commons.collections4.IteratorUtils:904","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"c73bb466-2ed1-11e6-b4b6-d919e20a5a47","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c73c0287-2ed1-11e6-b4b6-1d4c930b74c8","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            if (index > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().remove(index);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"c73c0288-2ed1-11e6-b4b6-cbcb007a80df","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"c73c2999-2ed1-11e6-b4b6-81d52d532df7","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((K)(key));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"c73c299a-2ed1-11e6-b4b6-c101edba51f6","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[112,113,114,115,116,117],"tindex":"c73c50ab-2ed1-11e6-b4b6-61063221f20f","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"c73c50ac-2ed1-11e6-b4b6-13c45cf9f43d","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,37,146,147,148,38,149,150,151,152,153,154,155,156,157,39,158,159,40,41,160,161,42,43,44,45,46,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,116,201,202,203],"tindex":"c73c77bd-2ed1-11e6-b4b6-995a3caa254f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c73c9ece-2ed1-11e6-b4b6-11936798ae0f","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[204],"tindex":"c73c9ecf-2ed1-11e6-b4b6-d5727c5fe9f4","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[205,206,207],"tindex":"c73cc5e0-2ed1-11e6-b4b6-c110c0d1ddd8","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[208,209,210,211],"tindex":"c73cc5e1-2ed1-11e6-b4b6-d54b3b2dcc12","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"c73cecf2-2ed1-11e6-b4b6-1f77524fb2c3","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                {\n                    boolean boolean = false;\n                    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n                    while (i.hasNext()) {\n                        final boolean boolean = add(i.next());\n                        changed = changed || added;\n                    }\n                    return changed;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238],"tindex":"c73cecf3-2ed1-11e6-b4b6-2d6e10469c1a","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262],"tindex":"c73cecf4-2ed1-11e6-b4b6-cd81ba9476ea","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[263,264,265,266,267,268,269,270,271,272,113,273,274,275,276,277,278,279,248,280,281,249,282,283,284,285,250,251,286,252,287,288,289,290,291,292,253,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"tindex":"c73d1405-2ed1-11e6-b4b6-8b43f6729b28","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"c73d1406-2ed1-11e6-b4b6-0db92d4f312e","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[325,62,326,327,328,86],"tindex":"c73d3b17-2ed1-11e6-b4b6-27e72f49c05f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                {\n                    if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                        return null;\n                    } \n                    while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                        node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    }\n                    return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"c73d3b18-2ed1-11e6-b4b6-55ec02f6e83c","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[329],"tindex":"c73d3b19-2ed1-11e6-b4b6-a11f6911f0a6","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c73d622a-2ed1-11e6-b4b6-97fc86fb66e0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[27],"tindex":"c73d622b-2ed1-11e6-b4b6-791f1b338cc7","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[330,331],"tindex":"c73d622c-2ed1-11e6-b4b6-6b99192abe8d","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[332,333],"tindex":"c73d893d-2ed1-11e6-b4b6-4d65271b3bb3","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c73d893e-2ed1-11e6-b4b6-5bd9b05d101a","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    coll = transform(coll);\n                    return getList().addAll(index, coll);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"c73d893f-2ed1-11e6-b4b6-2f2bc527a8d7","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[334],"tindex":"c73db050-2ed1-11e6-b4b6-91a943c9b31f","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:190","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"c73db051-2ed1-11e6-b4b6-d3b313ffdb08","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c73db052-2ed1-11e6-b4b6-5137485f3eb7","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"c73dd763-2ed1-11e6-b4b6-450abaab485c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351],"tindex":"c73dd764-2ed1-11e6-b4b6-73c7b9dd8864","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"c73dd765-2ed1-11e6-b4b6-2b12fb4fc683","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377],"tindex":"c73dfe76-2ed1-11e6-b4b6-574fad100b28","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[378,379,380,381,382,383,384,385,386,387],"tindex":"c73dfe77-2ed1-11e6-b4b6-e5781d381abd","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if (label != null) {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[388,389,390,391],"tindex":"c73e2588-2ed1-11e6-b4b6-519999fb3aaf","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:225","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            K K = null;\n            if (java.util.Map<V, K>.containsKey(value)) {\n                key = java.util.Map<V, K>.remove(value);\n                java.util.Map<K, V>.remove(key);\n            } \n            return key;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"c73e2589-2ed1-11e6-b4b6-23a09e92b12f","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,410,411,412,412,413,414,415,206,207],"tindex":"c73e258a-2ed1-11e6-b4b6-df344535fbba","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c73e4c9b-2ed1-11e6-b4b6-bf3f842f8c60","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[416,417,418,419],"tindex":"c73e4c9c-2ed1-11e6-b4b6-416f1929ade7","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[420],"tindex":"c73e73ad-2ed1-11e6-b4b6-d7c6a301fa7a","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[416,418],"tindex":"c73e73ae-2ed1-11e6-b4b6-313b133b9974","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"tindex":"c73e73af-2ed1-11e6-b4b6-43ea6ade08ee","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"c73e9ac0-2ed1-11e6-b4b6-f151377deadb","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[453,454,455,456],"tindex":"c73e9ac1-2ed1-11e6-b4b6-af10eb77c9bf","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = decorated().entrySet();\n            if (pairs != null) {\n                for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : pairs) {\n                    if (((java.util.Collection<V>)(entry.getValue())).contains(value)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[457],"tindex":"c73e9ac2-2ed1-11e6-b4b6-ff2a1fdce4cd","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,418,416,419,417,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,332,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,333,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,208,756,757,758,209,759,760,761,762,763,764,765,766,767,768,769,770,771,210,772,773,211,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820],"tindex":"c73ec1d3-2ed1-11e6-b4b6-31187c8abbd9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:393","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key) {\n    if (key == null) {\n        {\n            int int = key.hashCode();\n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"c73ee8e4-2ed1-11e6-b4b6-835ea458a730","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"c73ee8e5-2ed1-11e6-b4b6-8ddc3e49d4ce","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856],"tindex":"c73ee8e6-2ed1-11e6-b4b6-b9c269296af6","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"c73f0ff7-2ed1-11e6-b4b6-3dbed5742ca3","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[857,858],"tindex":"c73f0ff8-2ed1-11e6-b4b6-8d290f62226a","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[859],"tindex":"c73f3709-2ed1-11e6-b4b6-2df4a7dbce55","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[860,861,862,863,864,112,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,265,266,267,268,269,270,271,272,113,273,274,275,276,277,278,279,248,280,249,282,284,250,251,286,252,287,288,289,290,291,292,253,293,302,303,304,305,307,308,309,310,311,312,313,314,315,917,918,919,920,921,922,114,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,358,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,5,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,115,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,164,165,166,167,173,174,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,116,201,202,203,178,179,180,181,182,183,184,185,1033,175,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,117,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063],"tindex":"c73f370a-2ed1-11e6-b4b6-55178cac54c7","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                return tmpSet;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[587],"tindex":"c73f5e1b-2ed1-11e6-b4b6-5911490169d6","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[1064,997,998,999,1027,1012,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1058,1043],"tindex":"c73f5e1c-2ed1-11e6-b4b6-e79c7beb4381","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c73f5e1d-2ed1-11e6-b4b6-87fca39101ef","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[463,466,467,468,469,470,471,473,474,477,478,1117,1118,1119,1120,508,511,512,513,514,515,516,518,519,522,523,1121,1122,1123,1124,549,552,553,554,555,556,557,559,560,563,564,1125,1126,1127,1128,595,598,599,600,601,602,603,605,606,609,610,1129,1130,1131,649,652,653,654,655,656,657,659,660,663,664,1132,1133,1134,1135,706,709,710,711,712,713,714,716,717,720,721,1136,1137,1138,1139,749,752,753,755,208,758,209,761,762,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154],"tindex":"c73f852e-2ed1-11e6-b4b6-ddbf89142c43","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"c73fac3f-2ed1-11e6-b4b6-f58297d94d4a","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"c73fac40-2ed1-11e6-b4b6-db412631b95f","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c73fac41-2ed1-11e6-b4b6-d309d94fc853","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[1155],"tindex":"c73fac42-2ed1-11e6-b4b6-bb15c8cfece5","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[1156,1157],"tindex":"c73fd353-2ed1-11e6-b4b6-db55f92c4b60","method":{"position":"org.apache.commons.collections4.ListUtils:318","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> retainAll(final java.util.Collection<E> collection, final java.util.Collection<?> retain) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.lang.Math.min(collection.size(), retain.size()));\n            for (final E E : collection) {\n                if (retain.contains(obj)) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[714,740,741],"tindex":"c73fd354-2ed1-11e6-b4b6-219482d1f8d1","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[205],"tindex":"c73fd355-2ed1-11e6-b4b6-e95005e19212","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"c73fd356-2ed1-11e6-b4b6-a350586c2ff3","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[1158],"tindex":"c73ffa67-2ed1-11e6-b4b6-bffbbc83e1a3","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[1159,1160,1161,1162,1163],"tindex":"c73ffa68-2ed1-11e6-b4b6-215d5893a6c1","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[1164,1165,1166,269,270,271,1167,1168,1169],"tindex":"c7402179-2ed1-11e6-b4b6-a3388f2de07d","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        {\n            return getEntrySet().contains(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[1170],"tindex":"c740217a-2ed1-11e6-b4b6-f743945e6fbd","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"c740217b-2ed1-11e6-b4b6-352ff0f742a2","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:43","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"c740217c-2ed1-11e6-b4b6-df98e2664e39","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[54,59,60,62,67,81,82,94,108,109],"tindex":"c740217d-2ed1-11e6-b4b6-3f80f4570c78","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(k);\n            return entry != null ? entry.getValue() : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"c740488e-2ed1-11e6-b4b6-6bb862410d45","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                {\n                    if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                        return null;\n                    } \n                    while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                        node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    }\n                    return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[1171],"tindex":"c740488f-2ed1-11e6-b4b6-793db10a3adc","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:99","type":"CtBinaryOperatorImpl","sourcecode":"endIndex < startIndex"},"failures":[821,822,827,828,823,824,825,826,829,830,831,1172,1173,832,833,834,835,1174,1175,836,837,1176,1177,1178,1179,838,839,840,841,842,843,844,845,846,1180,847,848,849,850,851,852,853,854,855,856,1181,1182],"tindex":"c7406fa0-2ed1-11e6-b4b6-e78a712ec722","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if (endIndex < endIndex) {\n        {\n            if ((index < startIndex) || (index > endIndex)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"endIndex","endIndex":"endIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[1183,1184],"tindex":"c7406fa1-2ed1-11e6-b4b6-cb313bbd64a2","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[135,138,139,140,141,142,143,145,37,148,38,1185,1186,1187,1188,175,178,179,181,182,183,185,1189,1190],"tindex":"c74096b2-2ed1-11e6-b4b6-277cd7eca7d6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[1191],"tindex":"c74096b3-2ed1-11e6-b4b6-b355d23fca2d","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"c74096b4-2ed1-11e6-b4b6-3127d83dea20","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"c740bdc5-2ed1-11e6-b4b6-a1e856bd1d53","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    coll = transform(coll);\n                    return getList().addAll(index, coll);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205],"tindex":"c740bdc6-2ed1-11e6-b4b6-21aa1a504dec","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"c740bdc7-2ed1-11e6-b4b6-9bf033316b07","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"c740bdc8-2ed1-11e6-b4b6-65d726ed3870","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"c740e4d9-2ed1-11e6-b4b6-2914a2dd9750","method":{"position":"org.apache.commons.collections4.comparators.NullComparator:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if (obj == (org.apache.commons.collections4.comparators.NullComparator.this)) {\n                return true;\n            } \n            if (!(obj.getClass().equals(org.apache.commons.collections4.comparators.NullComparator.this.getClass()))) {\n                return false;\n            } \n            final org.apache.commons.collections4.comparators.NullComparator<?> org.apache.commons.collections4.comparators.NullComparator<?> = ((org.apache.commons.collections4.comparators.NullComparator<?>)(obj));\n            return ((org.apache.commons.collections4.comparators.NullComparator.this.boolean) == (other.boolean)) && (org.apache.commons.collections4.comparators.NullComparator.this.java.util.Comparator<? super E>.equals(other.java.util.Comparator<? super ?>));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"c740e4da-2ed1-11e6-b4b6-e5c0bc08face","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                {\n                    return (node == null) || (node.isBlack(dataElement));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"c740e4db-2ed1-11e6-b4b6-07a846d1c4b0","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                {\n                    boolean boolean = false;\n                    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n                    while (i.hasNext()) {\n                        final boolean boolean = add(i.next());\n                        changed = changed || added;\n                    }\n                    return changed;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[762],"tindex":"c7410bec-2ed1-11e6-b4b6-55b56d7f1e14","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}