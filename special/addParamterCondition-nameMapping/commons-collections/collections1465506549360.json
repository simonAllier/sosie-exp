{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":365,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":500,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsSelfHashCode":545,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":588,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":744,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":22,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":89,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":745,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":399,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":761,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":243,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToString":526,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":159,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":58,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":633,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":279,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":4,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":301,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapHashCode":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":373,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":152,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":315,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":584,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":417,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":696,"org.apache.commons.collections4.CollectionUtilsTest.get":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":556,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":215,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":426,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":483,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":308,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":501,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":413,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":514,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":434,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":369,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":654,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":407,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":766,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":404,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":42,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":734,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":663,"org.apache.commons.collections4.CollectionUtilsTest.select":185,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":398,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":461,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":234,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":266,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":30,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":605,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":59,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testEqualsNull":778,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":261,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":141,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":336,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":227,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":665,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable":617,"org.apache.commons.collections4.CollectionUtilsTest.intersection":193,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":550,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":374,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":421,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":169,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":24,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":684,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":683,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":682,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":366,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":222,"org.apache.commons.collections4.map.CompositeMapTest.testPut":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":424,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":37,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":75,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":457,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":708,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":131,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":17,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":600,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalEmptyCollectionExists":637,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":631,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":524,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":596,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":748,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":124,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":318,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":471,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":602,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":241,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":90,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":121,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":122,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":120,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":443,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":469,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":753,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":394,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":701,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":517,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalEmptyCollectionExists":736,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":274,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":157,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":451,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":498,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":488,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullKey":672,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":509,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":396,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":147,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":502,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":290,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":503,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":504,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":537,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":569,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":403,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":46,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":636,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":480,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":674,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionSize":625,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":260,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":450,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":292,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":127,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":449,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueElement":619,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":490,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":652,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":586,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":579,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":409,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":649,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":25,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":568,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":99,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":86,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":325,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":363,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":135,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":371,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":775,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":295,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":246,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":125,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":532,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":149,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":285,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":561,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":29,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":180,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":731,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":712,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":512,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":360,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":106,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":205,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":143,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":570,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":643,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":162,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":116,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":322,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":174,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":486,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":452,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":332,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":725,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":628,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":614,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":250,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":464,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":691,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":601,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":95,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":82,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":557,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":624,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":621,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":574,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":211,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":311,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":217,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":223,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveAll":689,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":161,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":711,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":97,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":642,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":592,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":182,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":645,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":15,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":499,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":425,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":47,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":270,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":66,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":595,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetClearChangesMap":678,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":589,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":466,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":238,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":460,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":236,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":340,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":102,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":306,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":368,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":189,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":481,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":518,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":523,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":416,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":713,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":176,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":472,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":35,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":321,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":137,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalFullCollectionExists":540,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":345,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":423,"org.apache.commons.collections4.ListUtilsTest.testSelect":175,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":171,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":232,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":198,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":688,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":662,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":475,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":551,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIteratorRemove":527,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":165,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":357,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":324,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":510,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":478,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":477,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":476,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":438,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":276,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":692,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":515,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullValue":673,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":302,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":442,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionSize":525,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":669,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":519,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":491,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":337,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":430,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":433,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":431,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":769,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":767,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":224,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":558,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":342,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":440,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":746,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":770,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":328,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":581,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":164,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":297,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":191,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":567,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":80,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":650,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":114,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":700,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":603,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":634,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":580,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":36,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":289,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":228,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":671,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsSelfHashCode":640,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":140,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":728,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSimpleSerialization":543,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":129,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":533,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsContract":265,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":64,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIsEmpty":530,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":607,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":344,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":367,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":738,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":323,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":355,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":263,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":186,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":428,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":419,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":312,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":694,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":730,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":516,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":572,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":249,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":376,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRetainAll":690,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":330,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":163,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":470,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":661,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":144,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":666,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":386,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":51,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":195,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":508,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":717,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":107,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":726,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":587,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":379,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":7,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":178,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":751,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":113,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":774,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":733,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":529,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":34,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":148,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":492,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":473,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":647,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":230,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":720,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":414,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":735,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":552,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":271,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":465,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":305,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":646,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":303,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveAll":686,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":389,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":699,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":718,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":388,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":235,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":320,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":14,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":547,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":752,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":209,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":183,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":18,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":206,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":26,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":65,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":334,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":571,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":703,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":110,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":758,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":364,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":632,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":618,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":456,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":103,"org.apache.commons.collections4.map.CompositeMapTest.testGet":150,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":638,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":362,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":706,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":723,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":444,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testFullMapCompatibility":670,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":10,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":130,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":630,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":749,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":493,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains1":679,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":202,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains2":680,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains3":681,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":741,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":361,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":401,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":462,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":710,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":495,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":277,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":609,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":693,"org.apache.commons.collections4.CollectionUtilsTest.union":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":484,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":724,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":304,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":72,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":387,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":485,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":560,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":77,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":377,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":101,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":554,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":535,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":16,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":118,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":117,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSerializeDeserializeThenCompare":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":370,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":225,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":119,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":13,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":446,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":507,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":506,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":707,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":505,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":98,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":727,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalFullCollectionExists":635,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":565,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":622,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":732,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":259,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":559,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":759,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":393,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":392,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":391,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalEmptyCollectionExists":542,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":309,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":522,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":454,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":351,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":23,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":549,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":252,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":715,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":173,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":520,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":511,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":55,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":317,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":598,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":583,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":697,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":268,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":272,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":776,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":44,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":659,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":722,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":231,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":219,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":742,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":251,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":142,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":85,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":611,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":772,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":258,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":494,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":764,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":400,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":257,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":582,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":597,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":655,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":541,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":411,"org.apache.commons.collections4.map.SingletonMapTest.testClone":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":397,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":91,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":154,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":326,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":153,"org.apache.commons.collections4.bag.HashBagTest.testEqualsNull":765,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":343,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetClearChangesMap":677,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":606,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":68,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testSampleMappings":482,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":79,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":644,"org.apache.commons.collections4.ListUtilsTest.testHashCode":773,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":375,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":242,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":62,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":314,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":313,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":594,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":283,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":216,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":100,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":293,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":657,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":49,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":739,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":359,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":591,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":705,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":593,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":168,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesClearChangesMap":676,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":427,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":562,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":273,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":467,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":768,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":54,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":179,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":181,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":459,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":704,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":750,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":155,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":453,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":575,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":612,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":402,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":760,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":212,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":218,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":128,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":352,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":762,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":544,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":479,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":743,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":405,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":84,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":455,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":685,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":278,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":415,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":604,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectEqualsSelf":264,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":346,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":108,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":73,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":641,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":531,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":188,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":538,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":653,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":757,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":546,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":756,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":441,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":40,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":763,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":496,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":576,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":74,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":53,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":448,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":714,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":755,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":57,"org.apache.commons.collections4.set.CompositeSetTest.testContains":201,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":327,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":83,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":740,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":214,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":553,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRetainAll":687,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":284,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":262,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":6,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":109,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":281,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":0,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":139,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":563,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":170,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":648,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":716,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":31,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":296,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":418,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":578,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":709,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":436,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":429,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":695,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":45,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":747,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":255,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMakeMap":660,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":253,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":310,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":126,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":410,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":754,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":316,"org.apache.commons.collections4.bag.TreeBagTest.testEqualsNull":771,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":61,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":32,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":166,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":698,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove":615,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":69,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":254,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":534,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":664,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":590,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":395,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":384,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":358,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":269,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":777,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":329,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":513,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":566,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":675,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":339,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":145,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":719,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":294,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":521,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":629,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":385,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToString":626,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":555,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":19,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":729,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":341,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":610,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":134,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":300,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":372,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":585,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":474,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":88,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":307,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":564,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":319,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":406,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":280,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":92,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":226,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":627,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":623,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":245,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":158,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":287,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":422,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":244,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":599,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":608,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":96,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":656,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":177,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":239,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":94,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":667,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":458,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalFullCollectionExists":737,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":489,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":702,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":233,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":78,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":41,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":167,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":721,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":468,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":620},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"6872fb5b-2e86-11e6-931a-cba02cdf5707","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[0,1],"tindex":"687433dc-2e86-11e6-931a-77591348544e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1240","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryInSubtree(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parentOfSubtree) {\n    if (node == null) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, parentOfSubtree);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"68745aed-2e86-11e6-931a-b54e6a340426","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"687481fe-2e86-11e6-931a-f9c3589b42e8","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        put(entry.getKey(), entry.getValue());\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"68756c5f-2e86-11e6-931a-9b4c1a6a2501","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().removeValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[2],"tindex":"68759370-2e86-11e6-931a-97c0ffd80d99","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"68759371-2e86-11e6-931a-07a5a5faa306","method":{"position":"org.apache.commons.collections4.map.LinkedMap:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"6875ba82-2e86-11e6-931a-2735ebcfdd8f","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:352","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.util.Collection<V> getCollection(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((java.util.Collection<V>)(decorated().get(key)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"6875ba83-2e86-11e6-931a-eb7e7480d644","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[72,73],"tindex":"6875ba84-2e86-11e6-931a-7f72eb3fb870","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"6875e195-2e86-11e6-931a-c99d7834034f","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"tindex":"6875e196-2e86-11e6-931a-7ba7bc3675fa","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,124,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204],"tindex":"687608a7-2e86-11e6-931a-9f052fd133ae","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[205,206],"tindex":"687608a8-2e86-11e6-931a-3f09e76eed6b","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"68762fb9-2e86-11e6-931a-eb5bde5d3ba4","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"68762fba-2e86-11e6-931a-7748ba0ce062","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"687656cb-2e86-11e6-931a-31a2d6bd0118","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (key != null) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"687656cc-2e86-11e6-931a-1deb4327fe76","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236],"tindex":"687656cd-2e86-11e6-931a-e34731a2254e","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[237,238],"tindex":"687656ce-2e86-11e6-931a-4356757c2fe6","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[239],"tindex":"68767ddf-2e86-11e6-931a-4b3a33158c7c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[240,241,242,243,244,245],"tindex":"68767de0-2e86-11e6-931a-d962965c19b2","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:143","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake buildSnake(final int start, final int diag, final int end1, final int end2) {\n    if (end1 < 0) {\n        {\n            int int = start;\n            while ((((end - diag) < end2) && (end < end1)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(end), java.util.List<T>.get((end - diag))))) {\n                ++end;\n            }\n            return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(start , end , diag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[246,247],"tindex":"6876a4f1-2e86-11e6-931a-0b660d1c4033","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[248,249,250,251,239],"tindex":"6876a4f2-2e86-11e6-931a-9bc5289a47ae","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[252],"tindex":"6877dd73-2e86-11e6-931a-99fec65106a4","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[253,254,255,256,257,258,259,260,261,262,263,264,265],"tindex":"6877dd74-2e86-11e6-931a-9f193984b2ef","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            return entrySet().equals(other.entrySet());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[266,267],"tindex":"68780485-2e86-11e6-931a-f1cfb4d1a700","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (decorated().contains(next)) {\n                    collectionRetainAll.add(next);\n                } \n            }\n            if ((collectionRetainAll.size()) == (decorated().size())) {\n                return false;\n            } \n            if ((collectionRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(collectionRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[268,269,270,271],"tindex":"68780486-2e86-11e6-931a-73299bb9e447","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[272,273,274,275,276,277,278,279,280,281,282,283,58,284,285,59,286,287,288,289,290,291,61,292,293,294,63,64,65,66,67,68,69,295,70,71,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348],"tindex":"68780487-2e86-11e6-931a-453e3c57626c","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[349,350,351,352],"tindex":"68782b98-2e86-11e6-931a-53581c8eb1e7","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[353],"tindex":"6878a0c9-2e86-11e6-931a-b30ac3ad1303","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[354,355,356,357,358,359,360,361,362,363,364,246,365,366,367,368,369,370,371,372,373,374,375,268,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,247,394,395,134,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,270,423,424,425,426,427,428,429,430,431,432,433,434,435,436,135,437,438,439,440,441,442,443,444],"tindex":"6878a0ca-2e86-11e6-931a-a97a24bf4133","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"6878c7db-2e86-11e6-931a-19b8414b1827","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Double) {\n                return ((java.lang.Double)(answer));\n            } \n            return java.lang.Double.valueOf(answer.doubleValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"6878eeec-2e86-11e6-931a-4fdbea923bb7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"6878eeed-2e86-11e6-931a-e30d0a911c83","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        put(entry.getKey(), entry.getValue());\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[445,446,447,448,449],"tindex":"687915fe-2e86-11e6-931a-07c121ce4ee1","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return isEqualKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[450],"tindex":"687915ff-2e86-11e6-931a-f3e3b74aaafc","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            addComparator(comparator, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[451,452,453,454,455,456,457,458],"tindex":"68791600-2e86-11e6-931a-3d5eb374ad40","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"68791601-2e86-11e6-931a-a7f75ce1f89f","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[459],"tindex":"68793d12-2e86-11e6-931a-2bee61a56581","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"68793d13-2e86-11e6-931a-abe5a4a244af","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"68796424-2e86-11e6-931a-cbbdcc7d4a7e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"68796425-2e86-11e6-931a-8327c21935a5","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                if (set.contains(obj)) {\n                    return set.remove(obj);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"68798b36-2e86-11e6-931a-c5a4ab8fc248","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[460],"tindex":"68798b37-2e86-11e6-931a-4320e31f88a1","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[249],"tindex":"6879b248-2e86-11e6-931a-07fbe507d025","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[461],"tindex":"6879b249-2e86-11e6-931a-531a7dfb46b9","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"6879d95a-2e86-11e6-931a-d771efc470e6","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (index > 0) {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[462],"tindex":"6879d95b-2e86-11e6-931a-d534e87397c9","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"6879d95c-2e86-11e6-931a-23f4a884494b","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"687a006d-2e86-11e6-931a-6d9b12aaf6ba","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"687a277e-2e86-11e6-931a-298c08b917ff","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[463,464,465,466,467,468,469,470],"tindex":"687a759f-2e86-11e6-931a-b1273628d627","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[471,472],"tindex":"687a75a0-2e86-11e6-931a-59f547444440","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"687a75a1-2e86-11e6-931a-4f79f7b61853","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[473,474,248,249,250,251,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,168,511,512,513,514,515,516,517,518,519,520],"tindex":"687b38f2-2e86-11e6-931a-5db1bd03c99b","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                return true;\n            } \n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                return java.util.Arrays.equals(K[], otherMulti.?[]);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"other"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"687b6003-2e86-11e6-931a-af78650aa2a1","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546],"tindex":"687b6004-2e86-11e6-931a-5986c90d7592","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[547,548],"tindex":"687b6005-2e86-11e6-931a-21cd7b122fd7","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,460,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614],"tindex":"687bae26-2e86-11e6-931a-7da2dc7d11a4","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"687bd537-2e86-11e6-931a-0f95af2f3b28","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644],"tindex":"687bd538-2e86-11e6-931a-1596002e4af5","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"687bd539-2e86-11e6-931a-35473809b390","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[354,355,356,357,358,359,360,361,362,363,364,246,365,366,367,368,369,370,371,372,373,374,375,268,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,247,394,395,134,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,270,423,424,425,426,427,428,429,430,431,432,433,434,435,436,135,437,438,439,440,441,442,443,444],"tindex":"687bfc4a-2e86-11e6-931a-d351c4c924ca","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[645,303],"tindex":"687c235b-2e86-11e6-931a-279f2360909e","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"687c235c-2e86-11e6-931a-c50aa0e93e6c","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (key != null) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"687c235d-2e86-11e6-931a-9bc89a1c2cff","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"687cbf9e-2e86-11e6-931a-899f25aba0f4","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"687cbf9f-2e86-11e6-931a-a9767bfe0078","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"687cbfa0-2e86-11e6-931a-5d30318b312a","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[646,647],"tindex":"687ce6b1-2e86-11e6-931a-99ebccddb180","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[380,384,247,134,396,399,400,401,402,403],"tindex":"687ce6b2-2e86-11e6-931a-051475033bac","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"687ce6b3-2e86-11e6-931a-cb27c35ef270","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                if (input == null) {\n                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                } \n                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                return con.newInstance(java.lang.Object[]);\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n            } catch (final java.lang.InstantiationException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[648],"tindex":"687d0dc4-2e86-11e6-931a-13640d8fb816","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            final int int = getHash(obj);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    final java.lang.Object java.lang.Object = n.getKey();\n                    if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl","sourcecode":"expirationTimeObject != null"},"failures":[649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,145,688,689,690,691,692,693,694,695],"tindex":"687d34d5-2e86-11e6-931a-7d2e99c50e59","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"expirationTimeObject"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"687d34d6-2e86-11e6-931a-a792d266dd15","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[696,697,125,698,699,700,511,701,702,703],"tindex":"687d34d7-2e86-11e6-931a-9f90c40fbe08","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n                    org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n                    return result;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"687d82f8-2e86-11e6-931a-6339007d1f06","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Number) {\n                        return ((java.lang.Number)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        try {\n                            final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                            return java.text.NumberFormat.getInstance().parse(text);\n                        } catch (final java.text.ParseException e) {\n                        }\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"687d82f9-2e86-11e6-931a-0902d0b482de","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2014","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            return (node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[704,705,706,707],"tindex":"687daa0a-2e86-11e6-931a-0743944f6b31","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:290","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            updateNode(node, value);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[708,709,710,711,712,713,462,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737],"tindex":"687daa0b-2e86-11e6-931a-b1d80d312648","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[738,739,740,741,742,743],"tindex":"687daa0c-2e86-11e6-931a-496471e3cfd2","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies <= 0) {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[744,745,746],"tindex":"687daa0d-2e86-11e6-931a-e34b306385d9","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:50","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[747],"tindex":"687dd11e-2e86-11e6-931a-f58d911b598d","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"687dd11f-2e86-11e6-931a-a94daa22f332","method":{"position":"org.apache.commons.collections4.MapUtils:822","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key, final float defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return defaultValue;\n            } \n            return floatObject.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"687dd120-2e86-11e6-931a-1da79e9f1e7a","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (key != null) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[311],"tindex":"687dd121-2e86-11e6-931a-a92a16df5531","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[213],"tindex":"687dd122-2e86-11e6-931a-a99906ec3e3b","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[190,748,749,750,751],"tindex":"687df833-2e86-11e6-931a-0d0ac15ff28d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[249,250,251],"tindex":"687df834-2e86-11e6-931a-274983ca3957","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[273,752,753,275,754,755,756,757,758,278,759,280,281,760,282,283,58,285,59,761,61,762,292,293,63,64,65,66,67,68,69,295,70,71],"tindex":"687e1f45-2e86-11e6-931a-c3c7937b9204","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            decorated().add(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"687e4656-2e86-11e6-931a-ad8f835ae677","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n                    org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n                    return result;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"687e4657-2e86-11e6-931a-e32d5b51f817","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[763,764,765,732,766,767,768,769,770,771,772],"tindex":"687e4658-2e86-11e6-931a-1b5a36388004","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"687e4659-2e86-11e6-931a-ddfea228fa16","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[773],"tindex":"687e6d6a-2e86-11e6-931a-2f0bbf66e253","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[774,775,776,777],"tindex":"687e6d6b-2e86-11e6-931a-07f9cdb00191","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[778],"tindex":"687e6d6c-2e86-11e6-931a-4592a4c72acb","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"687e6d6d-2e86-11e6-931a-b1b77e135007","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"687e947e-2e86-11e6-931a-bf1a0a307383","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}