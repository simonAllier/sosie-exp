{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":648,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":649,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":856,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":51,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":205,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":312,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":392,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":406,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":736,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":572,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":832,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":689,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":100,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":260,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":624,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":96,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":748,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":808,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":629,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":809,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":810,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":192,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":954,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":362,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":296,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":451,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":24,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":545,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":879,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":830,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":650,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":696,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":582,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":113,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":824,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":352,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":940,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":608,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":30,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":304,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":880,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":929,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":156,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":254,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":98,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToString":800,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":913,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":225,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":282,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":322,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":759,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":895,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":289,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":963,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":699,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":195,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":774,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":394,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":125,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":297,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":910,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":137,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":558,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":798,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":25,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":528,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":540,"org.apache.commons.collections4.list.UnmodifiableListTest.testEqualsNull":944,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":193,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":814,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":775,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":639,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":471,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":330,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":10,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":331,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":468,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":567,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":850,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":405,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":743,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":896,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":901,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":767,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":575,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":873,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":116,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":530,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":123,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":57,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":899,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":728,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":6,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":958,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":232,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":852,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":600,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":750,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":201,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":180,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":187,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":181,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":109,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":860,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":305,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":778,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":792,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":717,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":833,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":59,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":562,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":251,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":518,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":303,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":302,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":163,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":299,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":323,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":369,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":553,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":747,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":355,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":919,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":507,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":922,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":255,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":509,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":217,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":346,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":472,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":679,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":236,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":677,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":228,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":328,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":490,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":247,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":772,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":274,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":637,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":897,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":869,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":754,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":477,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":478,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":479,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":499,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":845,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":47,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":687,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":683,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":441,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":627,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":220,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":401,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":439,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":934,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":78,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":498,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":344,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":497,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":144,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":822,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":506,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":694,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":522,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":243,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":308,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":847,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":819,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":508,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":626,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":49,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":855,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":413,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":571,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":335,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":313,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":46,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":503,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":27,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":784,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":136,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":727,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":491,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":389,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":178,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":112,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":951,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":360,"org.apache.commons.collections4.list.GrowthListTest.testEqualsNull":946,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":484,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":366,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":306,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":365,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":685,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":108,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":935,"org.apache.commons.collections4.list.GrowthListTest.testCollectionSize":799,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":829,"org.apache.commons.collections4.CollectionUtilsTest.exists":268,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":871,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":512,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":196,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":632,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":729,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":124,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":876,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":387,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":877,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":102,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":552,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":905,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":300,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":965,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":189,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":264,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":295,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":266,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":301,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":782,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":368,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":245,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":191,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":818,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":793,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":452,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":622,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":385,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":453,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":583,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":437,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":7,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":423,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":592,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":678,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":590,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":594,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":593,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":715,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":428,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":58,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":711,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":1,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":11,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":238,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":26,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":550,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":223,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":107,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":375,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":625,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":510,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":168,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":957,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":408,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":587,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":539,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":55,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":404,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":956,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":19,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":203,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":420,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":806,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":20,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":674,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":21,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":769,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":823,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":117,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":516,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":749,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":97,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":557,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":169,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":418,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":162,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":52,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":397,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":692,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":706,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":358,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":890,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":103,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":723,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":599,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":701,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":90,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":802,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":680,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":82,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":226,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":400,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":242,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":615,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":456,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":527,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":716,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":455,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":457,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":230,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":345,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":566,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":568,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":356,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":751,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":122,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":248,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":597,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":598,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":596,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":763,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":868,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":231,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":293,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":781,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":580,"org.apache.commons.collections4.list.TreeListTest.testBug35258":218,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":325,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":668,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":722,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":834,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":241,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":698,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":249,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":149,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":666,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":667,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":636,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":917,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":340,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":339,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":476,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":964,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":16,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":783,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":17,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":942,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":174,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":342,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":341,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":363,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":197,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":894,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":700,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":151,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":353,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":110,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":733,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":569,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":709,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":866,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":898,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":801,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":141,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":318,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":139,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":607,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":605,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":932,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":875,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":930,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":119,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":846,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":861,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":284,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":261,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":319,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":867,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":519,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":804,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":114,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":771,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":494,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":787,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":378,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":959,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":547,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":762,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":133,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":132,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":704,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":45,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":655,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":657,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":656,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":538,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":334,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":419,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":60,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":396,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":234,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":87,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":275,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":734,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":148,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":262,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":820,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":409,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":310,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":609,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":610,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":862,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":893,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":611,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":382,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":515,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":543,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":563,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":554,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":454,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":858,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":885,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":265,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":64,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":577,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":805,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":909,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":794,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":210,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":359,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":740,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":211,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":707,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":844,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":153,"org.apache.commons.collections4.set.ListOrderedSet2Test.testEqualsNull":947,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":675,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":364,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":179,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":831,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":486,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":591,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":354,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":379,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":287,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":290,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":71,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":414,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":790,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":186,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":436,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":757,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":332,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":815,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":105,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":841,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":744,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":839,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":495,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":825,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":906,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":584,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":349,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":239,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":535,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":797,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":50,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":795,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":391,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":92,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":258,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":9,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":429,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":492,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":489,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":41,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":684,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":773,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":474,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":640,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":915,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":15,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":574,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":281,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":384,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":697,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":448,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":514,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":544,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":618,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":80,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":617,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":616,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":221,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":741,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":272,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":327,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":843,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":280,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":614,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":630,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":190,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":442,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":870,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":770,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":690,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":780,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":407,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":425,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":370,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":208,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":811,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":135,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":735,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":916,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":276,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":848,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":937,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":212,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":573,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":31,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":966,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":206,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":390,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":796,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":874,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":381,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":817,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":945,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":654,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":925,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":521,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":623,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":273,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":402,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":561,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":665,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":579,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":807,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":143,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":445,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":183,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":311,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":564,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":43,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":185,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":184,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":635,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":433,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":836,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":424,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":440,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":338,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":427,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":838,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":438,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":127,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":120,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":739,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":837,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":399,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":961,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":86,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":500,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":953,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":66,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":469,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":612,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":246,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":534,"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":938,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":634,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":288,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":708,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":789,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":470,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":517,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":578,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":140,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":161,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":324,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":730,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":766,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":914,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":865,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":645,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":646,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":647,"org.apache.commons.collections4.list.TreeListTest.testRemove":214,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":542,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":204,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":487,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":851,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":240,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":259,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":565,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":480,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":348,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":446,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":347,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":713,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":753,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":449,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":447,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":329,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":175,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":81,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":928,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":244,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":158,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":34,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":602,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":604,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":603,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":682,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":705,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":372,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":291,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":315,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":842,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":653,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":651,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":361,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":652,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":962,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":351,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":912,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":99,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":777,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":576,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":520,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":292,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":726,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":76,"org.apache.commons.collections4.list.TreeListTest.testListEquals":224,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":121,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":536,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":619,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":620,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":621,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":95,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":159,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":533,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":277,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":529,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":513,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":816,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":570,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":659,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":505,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":660,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":595,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":658,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":229,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":585,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":279,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":695,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":752,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":68,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":933,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":213,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":371,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":475,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":927,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":642,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":643,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":641,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":886,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":939,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":104,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":878,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":949,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":950,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":145,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":721,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":673,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":785,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":904,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":720,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":84,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":864,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":435,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":724,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":859,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":672,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":671,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":670,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":252,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":374,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":745,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":828,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":12,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":219,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":412,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":889,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":524,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":948,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":13,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":732,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":172,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":3,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":776,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":526,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":714,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":488,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":278,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":882,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":559,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":638,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":326,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":75,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":691,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":54,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":460,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":383,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":459,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":444,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":458,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":892,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":198,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":350,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":101,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":393,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":263,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":5,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":884,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":188,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":171,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":321,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":32,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":222,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":426,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":840,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":931,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":548,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":555,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":337,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":411,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":768,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":443,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":316,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":317,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":464,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":194,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":960,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":69,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":827,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":14,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":883,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":39,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":309,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":891,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":918,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":373,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":170,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":207,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":628,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":343,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":586,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":662,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":731,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":664,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":903,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":663,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":613,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":386,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":541,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":803,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":398,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":551,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":936,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":523,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":235,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":257,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":813,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":36,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":601,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":61,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":227,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":485,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":854,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":710,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":688,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":357,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":556,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":693,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":269,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":35,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":911,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":432,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":588,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":926,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":430,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":283,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":511,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":955,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":118,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":786,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":921,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":380,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":417,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":450,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":560,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":83,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":537,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":79,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":758,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":73,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":267,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":202,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":199,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":531,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":703,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":164,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":216,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":403,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":853,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":746,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":270,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":42,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":702,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":200,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":496,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":943,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":115,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":812,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":154,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":285,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":857,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":888,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":307,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":209,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":923,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":764,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":549,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":410,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":661,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":631,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":761,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":320,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":253,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":907,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":669,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":146,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":686,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":738,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":53,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":755,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":835,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":791,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":142,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":920,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":4,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":788,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":849,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":725,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":434,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":872,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":718,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":737,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":106,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":462,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":463,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":765,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":0,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":461,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":157,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":128,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":129,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":681,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":130,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":826,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":952,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":881,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":155,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":501,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":719,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":138,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":465,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":466,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":48,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":742,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":589,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":416,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":902,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":779,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":166,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":581,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":395,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":887,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":644,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":314,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":493,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":908,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":900,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":421,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":250,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":65,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":483,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":712,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":271,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":481,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":482,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":863,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":147,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":546,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":821,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":502,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":467,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":388,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":756,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":376,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":473,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":633,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":233,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":422,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":525,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":676,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":760,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":924,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":29,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":532,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":431,"org.apache.commons.collections4.list.SetUniqueListTest.testEqualsNull":941,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":415},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"4daeed91-2eca-11e6-81c2-853d0cb0e987","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[30],"tindex":"4dafd7f2-2eca-11e6-81c2-4dd363558c0f","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[31],"tindex":"4dafff03-2eca-11e6-81c2-c1b708699c03","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"4db04d24-2eca-11e6-81c2-d789dafcef89","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"4db13785-2eca-11e6-81c2-b19c29ac68ec","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[32,33,34,35,36,37,38,39,40,41,42],"tindex":"4db15e96-2eca-11e6-81c2-c3e2e9432cd7","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[43],"tindex":"4db185a7-2eca-11e6-81c2-5fa92c0d10ba","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"tindex":"4db185a8-2eca-11e6-81c2-15ae7aa159ba","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"4db1acb9-2eca-11e6-81c2-8feb723c4a8d","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"tindex":"4db1acba-2eca-11e6-81c2-79364861c3d4","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (otherOffsetInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"otherOffsetInBits"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[146,147,148,149,150,151,152,153,154],"tindex":"4db1d3cb-2eca-11e6-81c2-9d44b1f69fc6","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"4db1d3cc-2eca-11e6-81c2-81f1aa239d2d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"4db1fadd-2eca-11e6-81c2-9fa2e522701e","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[155],"tindex":"4db221ee-2eca-11e6-81c2-93163ac58be5","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"4db221ef-2eca-11e6-81c2-c580ceecfdab","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"4db221f0-2eca-11e6-81c2-95f72d2e93ac","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197],"tindex":"4db24901-2eca-11e6-81c2-77dab0059595","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[198,199,200,201,102,104],"tindex":"4db24902-2eca-11e6-81c2-493f71b9e051","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[202,203,204,205,206],"tindex":"4db27013-2eca-11e6-81c2-33d9ab1e187e","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[207,208,209,210,211,212,213],"tindex":"4db27014-2eca-11e6-81c2-79263a2609e3","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249],"tindex":"4db29725-2eca-11e6-81c2-8755234e1d0f","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"4db3a896-2eca-11e6-81c2-abd969375599","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267],"tindex":"4db3a897-2eca-11e6-81c2-2369359b9d00","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"4db4e118-2eca-11e6-81c2-b17539288bb3","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[268],"tindex":"4db4e119-2eca-11e6-81c2-b9ea93b8537d","method":{"position":"org.apache.commons.collections4.CollectionUtils:846","type":"CtMethodImpl","sourcecode":"public static <C>boolean exists(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (input != null) {\n        {\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[269],"tindex":"4db4e11a-2eca-11e6-81c2-31fd24f446bc","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[238,239,240,241,243,246,270],"tindex":"4db5082b-2eca-11e6-81c2-d5afe8327d6f","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[271,272,273,274,275,276,277,278],"tindex":"4db5082c-2eca-11e6-81c2-4bf3c44afd83","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object == null) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[279],"tindex":"4db5082d-2eca-11e6-81c2-99f42bab5345","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:332","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"4db52f3e-2eca-11e6-81c2-77ddabff4f62","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"4db52f3f-2eca-11e6-81c2-5787fa2f4f26","method":{"position":"org.apache.commons.collections4.MapUtils:386","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key, final java.lang.String defaultValue) {\n    if (map != null) {\n        {\n            java.lang.String java.lang.String = org.apache.commons.collections4.MapUtils.getString(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"4db52f40-2eca-11e6-81c2-7f600a4b258c","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[280,281,282],"tindex":"4db55651-2eca-11e6-81c2-93a3f5868f97","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"4db57d62-2eca-11e6-81c2-c5ef067b8927","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[283],"tindex":"4db57d63-2eca-11e6-81c2-cb95a3e35789","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[284],"tindex":"4db57d64-2eca-11e6-81c2-8d7b91e69f86","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:50","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[285],"tindex":"4db57d65-2eca-11e6-81c2-cb69e5e5a891","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[100,101,105,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"tindex":"4db5a476-2eca-11e6-81c2-afb48ba5bbee","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"4db5cb87-2eca-11e6-81c2-73cc2ff66e59","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[286,287],"tindex":"4db5f298-2eca-11e6-81c2-b535df871730","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[3,4,5,10,15,19,20,22,23,24,25,26,27,28,29,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,158,159,160,176,183,184,186,189,190,193,194,195,196,197,326,327,328,329,330,331,332,333,334,335,336,337,338,339,279,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383],"tindex":"4db5f299-2eca-11e6-81c2-f327f9374d51","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (previous == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"previous"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[289,290,291,292,293,294,295,296,297,315,318,319,320,321,322,323,324,325,176,186,189,190,193,194,195,196,197,329,332,333,334,335,336,337,338,339,384,364,367,368,369,370,371,372,373,374,375,376,377,378,380,381,382,383],"tindex":"4db619aa-2eca-11e6-81c2-037aadc1cce6","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"4db619ab-2eca-11e6-81c2-63f06de16383","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[286,287,385,279],"tindex":"4db640bc-2eca-11e6-81c2-61b47e975813","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key4"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[386,387,388,389,390,391,392,393,289,292,293,294,295,296,297,394,395,396,397,398,399,400,401,315,320,321,322,323,324,325,156,157,162,163,165,166,167,170,172,175,176,190,193,194,195,196,197,402,403,404,405,406,407,408,409,329,334,335,336,337,338,339,384,410,411,412,413,414,415,416,417,364,369,370,371,372,373,374,418,419,376,420,421,422,423,424,425,426,427,381,428,429,430,431,432,433],"tindex":"4db68edd-2eca-11e6-81c2-cb673180b744","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[434,435,436,437,438],"tindex":"4db6b5ee-2eca-11e6-81c2-bfb21e161457","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"4db6dcff-2eca-11e6-81c2-3d2289b11923","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[439,440,441,442],"tindex":"4db6dd00-2eca-11e6-81c2-8328b79ce67d","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[443,444,445,446],"tindex":"4db6dd01-2eca-11e6-81c2-21fb215a8900","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:290","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            updateNode(node, value);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[214,215,216,217,218,219,220,221,222,447,448,223,224,225,226,449,227,228,450,229,451,230,231,232,233,234,235,236,237,238,239,452,240,241,242,243,244,245,246,247,248,249,453,454],"tindex":"4db70412-2eca-11e6-81c2-fd4d5e2514e9","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if (endIndex < 0) {\n        {\n            if ((index < startIndex) || (index > endIndex)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"endIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[215,227,238,239,240,241,243,246,270],"tindex":"4db70413-2eca-11e6-81c2-238584e38889","method":{"position":"org.apache.commons.collections4.list.TreeList:430","type":"CtMethodImpl","sourcecode":"int indexOf(final java.lang.Object object, final int index) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            if ((getLeftSubTree()) != null) {\n                final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                if (result != (-1)) {\n                    return result;\n                } \n            } \n            if ((E) == null ? (E) == object : E.equals(object)) {\n                return index;\n            } \n            if ((getRightSubTree()) != null) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[386,387,388,389,390,391,392,393,289,455,456,457,458,459,460,294,394,395,396,397,398,399,315,461,462,463,316,317,464,322,162,163,165,166,167,170,172,175,176,180,181,182,183,184,185,194,402,403,404,405,406,407,408,409,329,465,466,467,330,331,468,336,469,470,471,472,473,474,475,476,346,477,478,479,347,348,480,353,354,355,410,411,412,413,414,415,416,417,364,481,482,483,365,366,484,371],"tindex":"4db72b24-2eca-11e6-81c2-3dafc726477b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"4db7ee75-2eca-11e6-81c2-851665d22697","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[485,486,487,488],"tindex":"4db7ee76-2eca-11e6-81c2-51be108b8a24","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[489],"tindex":"4db81587-2eca-11e6-81c2-3365ec452491","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[490,491,492],"tindex":"4db83c98-2eca-11e6-81c2-79e3a42b6fee","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[493],"tindex":"4db88ab9-2eca-11e6-81c2-29611c3edb3b","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[494,495,496,497,498,499],"tindex":"4db8b1ca-2eca-11e6-81c2-cfe82a65990a","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[273,500,501,502,503,504],"tindex":"4db8b1cb-2eca-11e6-81c2-71a807931961","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(object, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[505,506,507,508,509,510,511,512,513,514,274,515,516,517,518,519,520,521,522,523,278,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,257,261,262,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774],"tindex":"4db8d8dc-2eca-11e6-81c2-41de80e64c47","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,717,718,802,803,719,804,805,806,721,722],"tindex":"4db926fd-2eca-11e6-81c2-6974518957fe","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[279],"tindex":"4db94e0e-2eca-11e6-81c2-350546f4067a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[807],"tindex":"4db9751f-2eca-11e6-81c2-474b73ec0d75","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(list));\n                return tmpList;\n            } \n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"4db97520-2eca-11e6-81c2-bbe6f7e4ac7b","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[200,808,809,810,811,812,106,107,108,124,131,132,138,142],"tindex":"4db99c31-2eca-11e6-81c2-db21cfbf17b1","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831],"tindex":"4dba1162-2eca-11e6-81c2-3f1f21148973","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[832],"tindex":"4dba1163-2eca-11e6-81c2-31a1d44dcff1","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"4dba1164-2eca-11e6-81c2-0fe5d05e487d","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[10,833,390,834,835,836,398,167,837,406,838,473,839,414,840],"tindex":"4dba3875-2eca-11e6-81c2-49cdfa536b97","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"4dba3876-2eca-11e6-81c2-6f71e79cb26b","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"4dba3877-2eca-11e6-81c2-4f0b29e39271","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value == null) {\n        throw new java.lang.NullPointerException();\n    } else {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"4dba5f88-2eca-11e6-81c2-8751f8c88aa7","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[841],"tindex":"4dba5f89-2eca-11e6-81c2-a1f75db896b5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"4dba5f8a-2eca-11e6-81c2-c389a1e21337","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[341],"tindex":"4dba5f8b-2eca-11e6-81c2-e3daf8f2147c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:738","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((multi.size()) >= 2) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[282],"tindex":"4dba869c-2eca-11e6-81c2-15182b31e3a2","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"4dba869d-2eca-11e6-81c2-0d45daea8dae","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[842,560,843,561,562,844,563,845,846,564,847,848,565,849,850,851,852,586,853,587,588,854,589,855,504,590,856,857,591,858,859,860,630,677,695,698,734,762],"tindex":"4dbaadae-2eca-11e6-81c2-a5dcc69b050f","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"4dbad4bf-2eca-11e6-81c2-afeae2a6aadb","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[861],"tindex":"4dbad4c0-2eca-11e6-81c2-972007eae612","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return getList().lastIndexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918],"tindex":"4dbad4c1-2eca-11e6-81c2-51d8a18950ce","method":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:112","type":"CtMethodImpl","sourcecode":"protected void checkBound(final int bound, final int len, final java.lang.String type) {\n    if (len < 0) {\n        {\n            if (bound > len) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"));\n            } \n            if (bound < 0) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s before the start of the array. \"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"len"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"4dbad4c2-2eca-11e6-81c2-f582530650ce","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[919,920,921],"tindex":"4dbafbd3-2eca-11e6-81c2-37a4844ef26d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"4dbafbd4-2eca-11e6-81c2-f92ff2700ded","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[32,922,923,35,693,924,925,36],"tindex":"4dbafbd5-2eca-11e6-81c2-43350108da5f","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,264,941,942,943,944,945,946,947,948,949,950,951,952,953,954],"tindex":"4dbafbd6-2eca-11e6-81c2-7dc009e5878c","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"4dbb22e7-2eca-11e6-81c2-8dd932a746ed","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[955],"tindex":"4dbb22e8-2eca-11e6-81c2-d530d1e46c75","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"4dbb22e9-2eca-11e6-81c2-43efa898a2a3","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((K)(key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[956,957],"tindex":"4dbb22ea-2eca-11e6-81c2-a3720b555b5e","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[958],"tindex":"4dbb49fb-2eca-11e6-81c2-73f14a6399ae","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"4dbb49fc-2eca-11e6-81c2-2b2e9a74efcf","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"4dbb49fd-2eca-11e6-81c2-d74d8202b31c","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[959,960],"tindex":"4dbb49fe-2eca-11e6-81c2-83447734621d","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"4dbb49ff-2eca-11e6-81c2-dd998e528af3","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"4dbb7110-2eca-11e6-81c2-75c3286b2a78","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[961,962],"tindex":"4dbb7111-2eca-11e6-81c2-4545b9491771","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[963,964],"tindex":"4dbb7112-2eca-11e6-81c2-1965b595f30f","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[965,290,966,318,186,332,384,367],"tindex":"4dbb7113-2eca-11e6-81c2-bd87a10b067a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"4dbb7114-2eca-11e6-81c2-4b8401a68d19","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}