{"failureDictionary":{"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":362,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":860,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":326,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":170,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":555,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":16,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":662,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":212,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":675,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":845,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":119,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":198,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":247,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":572,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":242,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":756,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":370,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":473,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":432,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":475,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":474,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":468,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":268,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":791,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":407,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":643,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":655,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":788,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":311,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":429,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":48,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":548,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":327,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":403,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":341,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":932,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":366,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":397,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":651,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":825,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":395,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":719,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":176,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":67,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":76,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":687,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":741,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":194,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":516,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":143,"org.apache.commons.collections4.CollectionUtilsTest.select":451,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":705,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":502,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":501,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":391,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":752,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":906,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":803,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":691,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":584,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":249,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":589,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":277,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":709,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":644,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":805,"org.apache.commons.collections4.CollectionUtilsTest.intersection":456,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":60,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":142,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":377,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":775,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":491,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":315,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":371,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":627,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":218,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":834,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":823,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":930,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":68,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":114,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":165,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":875,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":363,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":479,"org.apache.commons.collections4.map.CompositeMapTest.testPut":431,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":810,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":409,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":789,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":767,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":542,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":829,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":52,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":858,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":11,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":599,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":628,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":522,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":783,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":714,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":849,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":3,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":579,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":850,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":267,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":701,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":270,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":673,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":350,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":86,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":556,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":285,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":617,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":618,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":616,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":817,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":828,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":287,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":427,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":388,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":459,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":667,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":344,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":693,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":711,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":289,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":437,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":211,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":293,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":324,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":508,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":316,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":526,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":335,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":519,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":700,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":15,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":881,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":776,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":537,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":296,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":490,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":769,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":83,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":777,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":672,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":704,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":28,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":660,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":149,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":678,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":737,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":117,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":376,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":328,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":329,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":330,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":846,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":494,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":923,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":872,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":20,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":163,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":511,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":8,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":762,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":202,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":107,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":492,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":307,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":796,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":488,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":487,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":489,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":134,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":188,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":253,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":346,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":533,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":621,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":793,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":317,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":926,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":544,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":408,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":857,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":399,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":716,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":842,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":209,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":838,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":169,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":504,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":744,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":65,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":180,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":841,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":566,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":156,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":726,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":646,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":359,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":733,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":806,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":588,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":420,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":418,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":800,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":368,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":361,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":580,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":10,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":914,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":879,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":619,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":831,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":577,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":772,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":248,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":736,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":710,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":816,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":685,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":904,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":53,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":448,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":774,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":4,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":787,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":339,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":356,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":664,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":25,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":745,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":878,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":161,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":612,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":535,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":314,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":274,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":728,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":686,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":895,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":259,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":658,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":629,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":162,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":859,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":564,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":913,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":561,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":549,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":528,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":632,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":645,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":764,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":275,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":576,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":139,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":227,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":140,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":657,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":36,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":853,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":683,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":183,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":157,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":563,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":712,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":640,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":295,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":641,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":785,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":642,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":353,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":581,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":113,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":703,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":281,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":215,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":79,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":477,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":258,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":224,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":255,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":100,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":201,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":450,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":478,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":97,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":93,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":517,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":665,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":532,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":500,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":570,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":804,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":232,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":436,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":365,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":801,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":453,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":308,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":836,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":345,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":792,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":234,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":406,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":439,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":583,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":538,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":271,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":62,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":521,"org.apache.commons.collections4.list.TreeListTest.testBug35258":509,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":659,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":697,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":220,"org.apache.commons.collections4.ListUtilsTest.testSelect":438,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":531,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":725,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":723,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":461,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":539,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":695,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":696,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":571,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":760,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":300,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":323,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":778,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":354,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":637,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":336,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":638,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":130,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":639,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":653,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":688,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":835,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":303,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":755,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":302,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":422,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":750,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":342,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":761,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":172,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":656,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":46,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":426,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":837,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":318,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":738,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":413,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":593,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":591,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":415,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":414,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":578,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":127,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":924,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":911,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":766,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":757,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":424,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":77,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":505,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":348,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":223,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":485,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":484,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":483,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":503,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":454,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":731,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":153,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":708,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":174,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":493,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":101,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":610,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":681,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":22,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":213,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":187,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":263,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":469,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":75,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":524,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":282,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":496,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":278,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":811,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":898,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":623,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":779,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":780,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":781,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":123,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":256,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":912,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":922,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":770,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":863,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":121,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":876,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":724,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":647,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":877,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":364,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":352,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":452,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":826,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":411,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":217,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":6,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":118,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":921,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":751,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":690,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":889,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":167,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":706,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":598,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":862,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":343,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":611,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":298,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":773,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":373,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":116,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":104,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":574,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":108,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":771,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":32,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":43,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":380,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":334,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":458,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":529,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":604,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":699,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":896,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":393,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":446,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":507,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":609,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":95,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":735,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":631,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":200,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":141,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":148,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":26,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":319,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":472,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":843,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":903,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":470,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":471,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":559,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":636,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":873,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":297,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":715,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":907,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":185,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":890,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":404,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":512,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":110,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":122,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":292,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":919,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":882,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":383,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":689,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":799,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":384,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":382,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":70,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":499,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":587,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":284,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":927,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":24,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":147,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":257,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":607,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":820,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":360,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":808,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":909,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":871,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":727,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":920,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":39,"org.apache.commons.collections4.map.CompositeMapTest.testGet":430,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":602,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":883,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":669,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":358,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":486,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":893,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":428,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":189,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":152,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":812,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":624,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":739,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":925,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":717,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":310,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":37,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":443,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":866,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":18,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":210,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":586,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":51,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":797,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":321,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":809,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":150,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":228,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":312,"org.apache.commons.collections4.CollectionUtilsTest.union":455,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":782,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":536,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":894,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":830,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":225,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":313,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":381,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":445,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":880,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":545,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":592,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":374,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":27,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":136,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":568,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":378,"org.apache.commons.collections4.list.TreeListTest.testRemove":272,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":186,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":206,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":614,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":613,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":597,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":917,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":367,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":530,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":915,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":294,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":615,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":90,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":540,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":928,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":333,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":332,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":661,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":331,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":565,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":897,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":557,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":832,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":601,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":124,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":534,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":240,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":243,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":386,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":385,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":74,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":184,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":63,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":916,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":887,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":630,"org.apache.commons.collections4.ListUtilsTest.testSubtract":931,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":338,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":125,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":497,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":109,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":848,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":885,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":349,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":698,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":30,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":758,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":818,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":84,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":103,"org.apache.commons.collections4.list.TreeListTest.testListEquals":515,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":582,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":742,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":679,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":392,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":833,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":144,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":892,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":786,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":824,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":807,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":476,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":905,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":138,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":747,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":839,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":748,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":746,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":166,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":514,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":299,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":178,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":552,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":320,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":759,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":17,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":126,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":740,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":154,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":5,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":901,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":401,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":594,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":390,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":558,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":158,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":434,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":191,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":433,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":734,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":9,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":260,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":513,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":864,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":467,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":236,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":790,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":547,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":625,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":510,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":633,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":827,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":372,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":674,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":634,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":869,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":252,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":441,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":654,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":246,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":72,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":129,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":802,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":567,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":21,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":254,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":463,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":596,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":355,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":713,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":41,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":94,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":0,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":337,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":573,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":410,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":440,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":92,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":181,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":238,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":527,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":447,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":133,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":449,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":56,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":784,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":204,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":435,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":506,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":569,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":444,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":814,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":815,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":304,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":159,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":635,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":874,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":19,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":105,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":245,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":622,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":7,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":798,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":908,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":64,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":457,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":821,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":306,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":851,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":720,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":722,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":721,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":394,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":464,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":794,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":465,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":466,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":822,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":551,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":279,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":525,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":214,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":405,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":518,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":595,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":605,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":855,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":867,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":865,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":111,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":177,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":600,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":840,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":900,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":425,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":854,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":398,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":80,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":541,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":768,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":870,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":902,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":50,"org.apache.commons.collections4.set.CompositeSetTest.testContains":442,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":550,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":677,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":918,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":347,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":543,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":498,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":13,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":96,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":462,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":606,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":173,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":151,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":2,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":813,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":273,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":682,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":868,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":205,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":852,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":847,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":460,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":795,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":886,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":216,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":652,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":419,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":412,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":78,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":861,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":400,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":620,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":754,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":251,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":29,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":33,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":753,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":749,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":137,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":131,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":261,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":702,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":155,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":844,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":421,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":884,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":763,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":585,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":668,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":389,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":12,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":608,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":175,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":603,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":692,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":266,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":910,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":55,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":694,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":732,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":929,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":340,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":269,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":280,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":575,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":626,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":649,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":888,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":480,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":481,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":482,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":379,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":765,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":663,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":899,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":146,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":264,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":99,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":135,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":590,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":369,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":305,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":554,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":856,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":402,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":396,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":730,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":680,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":244,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":115,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":229,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":718,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":231,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":676,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":707,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":743,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":145,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":671,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":98,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":160,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":219,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":128,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":670,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":562,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":290,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":190,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":650,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":40,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":560,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":309,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":729,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":523,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":819,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":546,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":648,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":684,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":891,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":85},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[0,1,2,3,4,5],"tindex":"71adb218-2ed1-11e6-b41b-7dc82d3ea2de","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                {\n                    if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                        return null;\n                    } \n                    while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                        node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    }\n                    return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[6,6,7,7,8],"tindex":"71ae9c79-2ed1-11e6-b41b-73d4eb4e12fc","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:69","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T> coerce(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return ((org.apache.commons.collections4.Predicate<T>)(predicate));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"71af11aa-2ed1-11e6-b41b-fbda4430abaf","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = decorated().entrySet();\n            if (pairs != null) {\n                for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : pairs) {\n                    if (((java.util.Collection<V>)(entry.getValue())).contains(value)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"71af38bb-2ed1-11e6-b41b-99ef67f2598f","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"71af5fcc-2ed1-11e6-b41b-9d4a46793150","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"71af86dd-2ed1-11e6-b41b-03a9bb8bf695","method":{"position":"org.apache.commons.collections4.MapUtils:822","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key, final float defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return defaultValue;\n            } \n            return floatObject.floatValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[9],"tindex":"71af86de-2ed1-11e6-b41b-01887c00811c","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"71afadef-2ed1-11e6-b41b-97d33b69e519","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[10],"tindex":"71afadf0-2ed1-11e6-b41b-5b23de147aeb","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[11,12,13,14,15,16,17,18,19,20],"tindex":"71afd501-2ed1-11e6-b41b-a7943e856b3d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[21,22,23],"tindex":"71affc12-2ed1-11e6-b41b-1b3a0c1c9ece","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[24,25],"tindex":"71affc13-2ed1-11e6-b41b-01152824e83e","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[26],"tindex":"71b04a34-2ed1-11e6-b41b-19efcdaa9e94","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:47","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((closures.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(closures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[27],"tindex":"71b07145-2ed1-11e6-b41b-07552e7224e1","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"71b07146-2ed1-11e6-b41b-bd3825f79bb3","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if ((a == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"71b10d87-2ed1-11e6-b41b-7b2c6572683a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return false;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"71b10d88-2ed1-11e6-b41b-e3fb633925bb","method":{"position":"org.apache.commons.collections4.CollectionUtils:227","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> union(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.max(obj));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[56],"tindex":"71b13499-2ed1-11e6-b41b-e17e3983b8c5","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237],"tindex":"71b1349a-2ed1-11e6-b41b-6bb7b1c0f13a","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return decorated().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"71b15bab-2ed1-11e6-b41b-cf97d58a3bad","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267],"tindex":"71b182bc-2ed1-11e6-b41b-53143ccfda4b","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtBinaryOperatorImpl","sourcecode":"iterable instanceof java.util.Collection<?>"},"failures":[268],"tindex":"71b182bd-2ed1-11e6-b41b-655b78c6e0a5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (iterable instanceof java.util.Collection<?>) {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"iterable"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[269],"tindex":"71b182be-2ed1-11e6-b41b-91457358e109","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[270,271],"tindex":"71b1a9cf-2ed1-11e6-b41b-cb32c65662fa","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[272,273,274,275],"tindex":"71b1a9d0-2ed1-11e6-b41b-11166fa0dc1b","method":{"position":"org.apache.commons.collections4.list.TreeList:493","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> insert(final int index, final E obj) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe <= 0) {\n                return insertOnLeft(indexRelativeToMe, obj);\n            } \n            return insertOnRight(indexRelativeToMe, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[276,277,278,279,280],"tindex":"71b1d0e1-2ed1-11e6-b41b-0bbf13ce837a","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:357","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            removeAllExpired(now());\n            return super.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296],"tindex":"71b1d0e2-2ed1-11e6-b41b-eb4bc11ed100","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345],"tindex":"71b1d0e3-2ed1-11e6-b41b-7d2b058b0fe6","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                {\n                    if (key == null) {\n                        throw new java.lang.NullPointerException(\"Key must not be null\");\n                    } \n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"71b1f7f4-2ed1-11e6-b41b-69e4665c5987","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.add(comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:213","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"71b1f7f5-2ed1-11e6-b41b-ffa5cd584645","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[346,347,348,349,350],"tindex":"71b1f7f6-2ed1-11e6-b41b-abaf4e4be366","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,11,376,377,378,12,379,380,381,382,383,384,385,386,387,13,388,389,14,15,390,391,16,17,18,19,20,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,216,217,408,218,219,220,409,221,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,215,429],"tindex":"71b21f07-2ed1-11e6-b41b-0fcb7edcc4de","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[395],"tindex":"71b21f08-2ed1-11e6-b41b-f37fcae7226f","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"71b35789-2ed1-11e6-b41b-ab1b787b17b1","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461],"tindex":"71b3578a-2ed1-11e6-b41b-c11d2ebf0187","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"71b3578b-2ed1-11e6-b41b-012b20aa2e70","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"71b37e9c-2ed1-11e6-b41b-4d9868379454","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((map.size()) > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    map.size();\n                    if ((array == null) || ((array.int) == 0)) {\n                        return map;\n                    } \n                    final java.lang.Object java.lang.Object = array[0];\n                    if (obj instanceof java.util.Map.Entry) {\n                        for (final java.lang.Object java.lang.Object : array) {\n                            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                            map.put(entry.getKey(), entry.getValue());\n                        }\n                    } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                        for (final java.lang.Object java.lang.Object : array) {\n                            final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                            map.put(keyval.getKey(), keyval.getValue());\n                        }\n                    } else if (obj instanceof java.lang.Object[]) {\n                        for (int int = 0 ; i < (array.int) ; i++) {\n                            final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                            if ((sub == null) || ((sub.int) < 2)) {\n                                throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                            } \n                            map.put(((K)(sub[0])), ((V)(sub[1])));\n                        }\n                    } else {\n                        for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                            map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                        }\n                    }\n                    return map;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"71b3a5ad-2ed1-11e6-b41b-3dcceb96c418","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[462],"tindex":"71b3a5ae-2ed1-11e6-b41b-0df0abdbd937","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:332","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.ComparatorChain.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n                return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"71b3a5af-2ed1-11e6-b41b-b7e9658e5752","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[29,30,31,32,463,33,464,465,466,467,468,28,1,35,36,37,38,469,39,40,41,42,470,471,472,473,474,475,44,476,477,34,478,5,46,47,48,49,479,50,51,52,53,480,481,482,483,484,485,55,486,487,45],"tindex":"71b3ccc0-2ed1-11e6-b41b-cff37bf43dd4","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[488,489,490,491,492,493,494,495,496],"tindex":"71b3ccc1-2ed1-11e6-b41b-c3dbcde6dad0","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"71b3f3d2-2ed1-11e6-b41b-992992ff7a58","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[497],"tindex":"71b3f3d3-2ed1-11e6-b41b-33d6b0b7868b","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[498,499,500,501,502,503],"tindex":"71b41ae4-2ed1-11e6-b41b-85e390c029dd","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:121","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator, final org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion) {\n    if (criterion == null) {\n        {\n            if (comparator == null) {\n                throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\");\n            } \n            if (criterion == null) {\n                throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n            } \n            return new org.apache.commons.collections4.functors.ComparatorPredicate<T>(object , comparator , criterion);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"criterion"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"71b41ae5-2ed1-11e6-b41b-cb7d1f771807","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[27],"tindex":"71b441f6-2ed1-11e6-b41b-8938b36f913e","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[504,505,506],"tindex":"71b441f7-2ed1-11e6-b41b-973e00602def","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[507],"tindex":"71b441f8-2ed1-11e6-b41b-f15f90f07498","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"71b441f9-2ed1-11e6-b41b-5ff2dab88bb2","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"71b4690a-2ed1-11e6-b41b-218554458f73","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:225","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            K K = null;\n            if (java.util.Map<V, K>.containsKey(value)) {\n                key = java.util.Map<V, K>.remove(value);\n                java.util.Map<K, V>.remove(key);\n            } \n            return key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"71b4690b-2ed1-11e6-b41b-9d4202c887b1","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"71b4690c-2ed1-11e6-b41b-ada498ed449a","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            addComparator(comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[404],"tindex":"71b4901d-2ed1-11e6-b41b-63550846fcf2","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[508,509,510,511,512,273,513,272,274,514,275,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539],"tindex":"71b4901e-2ed1-11e6-b41b-a9b23eed9585","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"71b4b72f-2ed1-11e6-b41b-a7536d288eaf","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"71b4de40-2ed1-11e6-b41b-1b6837f59522","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                {\n                    if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                        return null;\n                    } \n                    while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                        node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    }\n                    return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[540],"tindex":"71b50551-2ed1-11e6-b41b-316dda420fb4","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"71b52c62-2ed1-11e6-b41b-c7c9319ab02f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    rangeCheck(index, int);\n                    checkModCount();\n                    final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n                    int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n                    (int)--;\n                    (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n                    return result;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,229,559,560,561,562,563,564,565,566,567,568,569,570,571],"tindex":"71b52c63-2ed1-11e6-b41b-9df49ef02565","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1117","type":"CtInvocationImpl","sourcecode":"entry.isEmpty()"},"failures":[572,573,574,4,478,5,575,576,577,578,45,579,46,47,580,48,49,479,581,50,51,582,583,52,53,584,585,586,480,481,482,483,484,485,54,587,588,589,590,591,592,593,55,486,487,594],"tindex":"71b55374-2ed1-11e6-b41b-99da0fd0b8ca","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (entry.isEmpty()) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"71b57a85-2ed1-11e6-b41b-63685fcfe3d9","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"71b57a86-2ed1-11e6-b41b-81af1ab5ead6","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().removeValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[595,596,597,598],"tindex":"71b5a197-2ed1-11e6-b41b-d33a3ce87f74","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"71b5a198-2ed1-11e6-b41b-e96cdce96ea4","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"71b5c8a9-2ed1-11e6-b41b-7939eccd4c06","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((map.size()) > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    map.size();\n                    if ((array == null) || ((array.int) == 0)) {\n                        return map;\n                    } \n                    final java.lang.Object java.lang.Object = array[0];\n                    if (obj instanceof java.util.Map.Entry) {\n                        for (final java.lang.Object java.lang.Object : array) {\n                            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                            map.put(entry.getKey(), entry.getValue());\n                        }\n                    } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                        for (final java.lang.Object java.lang.Object : array) {\n                            final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                            map.put(keyval.getKey(), keyval.getValue());\n                        }\n                    } else if (obj instanceof java.lang.Object[]) {\n                        for (int int = 0 ; i < (array.int) ; i++) {\n                            final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                            if ((sub == null) || ((sub.int) < 2)) {\n                                throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                            } \n                            map.put(((K)(sub[0])), ((V)(sub[1])));\n                        }\n                    } else {\n                        for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                            map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                        }\n                    }\n                    return map;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[26,497,599],"tindex":"71b5efba-2ed1-11e6-b41b-216244fe22ea","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[600,601],"tindex":"71b7283b-2ed1-11e6-b41b-d39083745b07","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    java.util.Set<E> java.util.Set<E>;\n                    if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                        subSet = new java.util.HashSet<E>(list.size());\n                    } else {\n                        try {\n                            subSet = set.getClass().newInstance();\n                        } catch (final java.lang.InstantiationException ie) {\n                            subSet = new java.util.HashSet<E>();\n                        } catch (final java.lang.IllegalAccessException iae) {\n                            subSet = new java.util.HashSet<E>();\n                        }\n                    }\n                    subSet.addAll(list);\n                    return subSet;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"71b74f4c-2ed1-11e6-b41b-b11e588b5bc8","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                {\n                    if (key == null) {\n                        throw new java.lang.NullPointerException(\"Key must not be null\");\n                    } \n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648],"tindex":"71b7765d-2ed1-11e6-b41b-d352a23c6e3c","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                return null;\n            } \n            return super.getEntry(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"71b7765e-2ed1-11e6-b41b-0bd070e99cfd","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if ((a == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"71b7765f-2ed1-11e6-b41b-1f199de36e66","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[610,649,650,651,652,653,654,655,656,657,658,322,320,659,660,661,662,663,664,665,626,634],"tindex":"71b79d70-2ed1-11e6-b41b-ef365d2b317b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:476","type":"CtMethodImpl","sourcecode":"protected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if ((entry.getValue()) == null) {\n        {\n            entry.setValue(newValue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"71b79d71-2ed1-11e6-b41b-970b32931c90","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[666,667,668],"tindex":"71b7c482-2ed1-11e6-b41b-878ba082c361","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:143","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object value) {\n    if (value == null) {\n        {\n            int int = (int) - 1;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i--;\n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[28,29,30,31,32,33,464,465,466,34,35,36,37,38,39,40,41,42,470,471,472,473,474,475,44,45,46,47,48,49,50,51,52,53,480,481,482,483,484,485,55],"tindex":"71b8d5f3-2ed1-11e6-b41b-cd5c4fe5c0f7","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[669],"tindex":"71b8fd04-2ed1-11e6-b41b-fbb052d09382","method":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:46","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[670,671,672,673,674,675],"tindex":"71b8fd05-2ed1-11e6-b41b-81c99374bf0f","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((start2 - start2) > (start2 - end1)) {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"start2","end2":"start2","end1":"start2","start2":"end1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"71b92416-2ed1-11e6-b41b-1be6a1679eb4","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[676,677],"tindex":"71b94b27-2ed1-11e6-b41b-6d35a9a19e55","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[678,679,347,680,681,682,683,684,685,686],"tindex":"71b94b28-2ed1-11e6-b41b-5b754369db64","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> collectionSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"71b94b29-2ed1-11e6-b41b-51b52d86a737","method":{"position":"org.apache.commons.collections4.ListUtils:147","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> sum(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list2.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.subtract(org.apache.commons.collections4.ListUtils.union(list1, list2), org.apache.commons.collections4.ListUtils.intersection(list1, list2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[257],"tindex":"71b9723a-2ed1-11e6-b41b-2b1986f473d2","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"71b9723b-2ed1-11e6-b41b-f39ad804bce4","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    rangeCheck(index, int);\n                    checkModCount();\n                    final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n                    int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n                    (int)--;\n                    (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n                    return result;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"71b9994c-2ed1-11e6-b41b-df43403e6a29","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[687],"tindex":"71b9994d-2ed1-11e6-b41b-5994576840de","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll1.size()) < (coll2.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll2","coll1":"coll1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[688],"tindex":"71ba358e-2ed1-11e6-b41b-fb199f4a11f6","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[689,690,691],"tindex":"71ba358f-2ed1-11e6-b41b-5565aed72d29","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[351,352,353,354,692,355,356,357,358,359,360,361,362,363,364,365,366,392,393,367,368,369,370,371,372,373,374,375,11,376,377,378,12,379,380,381,382,383,384,385,386,387,13,388,389,14,15,390,391,16,17,18,19,20,394,395,396,397,398,399,400,401,402,403,404,405,406,215,429,407,216,217,408,218,219,220,409,221,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428],"tindex":"71ba5ca0-2ed1-11e6-b41b-5d9eb634c7d8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"71ba5ca1-2ed1-11e6-b41b-775394acd6c3","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"71ba83b2-2ed1-11e6-b41b-cdf3d93282c5","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((a.size()) != (a.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[26],"tindex":"71baaac3-2ed1-11e6-b41b-1912536a021e","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[693,694],"tindex":"71baaac4-2ed1-11e6-b41b-396ee2787aaa","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:55","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[695,696,697,698,699,700,701,702,703,704,705,706,65,707,66,708,709,67,68,710,69,711,712,713,70,714,715,71,716,717,718,719,596,720,721,722,723,724,725,726,727,728,729,730,731,80,732,81,733,734,82,83,735,84,507,736,737,85,738,739,86,740,741,742,597,743,88,89,90,91,92,744,93,745,87,746,747,748,749,750,751,752,753,754,755,756,757,116,758,117,759,760,118,119,761,120,762,763,764,121,765,766,122,767,768,396,397,398,399,405,406,216,217,408,218,219,220,409,221,769,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,215,770,771,223,224,772,225,226,227,773,228,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,222],"tindex":"71baaac5-2ed1-11e6-b41b-239d859d44f7","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:54","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Set<java.util.Map.Entry<K, V>> unmodifiableEntrySet(final java.util.Set<java.util.Map.Entry<K, V>> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableEntrySet<K, V>(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"71baf8e6-2ed1-11e6-b41b-cbdd3a687483","method":{"position":"org.apache.commons.collections4.SetUtils:288","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[794,795],"tindex":"71bb1ff7-2ed1-11e6-b41b-475c64171733","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[796],"tindex":"71bb1ff8-2ed1-11e6-b41b-014e59bc015a","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[797],"tindex":"71bb1ff9-2ed1-11e6-b41b-770413d38c00","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"71bb1ffa-2ed1-11e6-b41b-4980de6b3cc4","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    java.util.Set<E> java.util.Set<E>;\n                    if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                        subSet = new java.util.HashSet<E>(list.size());\n                    } else {\n                        try {\n                            subSet = set.getClass().newInstance();\n                        } catch (final java.lang.InstantiationException ie) {\n                            subSet = new java.util.HashSet<E>();\n                        } catch (final java.lang.IllegalAccessException iae) {\n                            subSet = new java.util.HashSet<E>();\n                        }\n                    }\n                    subSet.addAll(list);\n                    return subSet;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,148,816,287,817,818,819,820,346,821,822,823,824,288,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,149,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,678,679,347,680,681,682,683,684,685,686,869,870,871,872,873,874,875,349,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,150,900,295,901,902,903,904,905,906,907,908,909,296,910,911,912,913,914,151,915,916,917,918,919,920,350,921,922,923,924,925,926,927,928,929,930,931,932],"tindex":"71bb470b-2ed1-11e6-b41b-47a713eb5367","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next());\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}