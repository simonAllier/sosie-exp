{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":125,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":494,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":506,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":507,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":99,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":319,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":112,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":282,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":478,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":162,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":505,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":583,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":245,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":273,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":503,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":58,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":272,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":420,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":466,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":88,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":600,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":94,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":595,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":561,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":527,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":536,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":133,"org.apache.commons.collections4.CollectionUtilsTest.collect":223,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":399,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":229,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":407,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":147,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":298,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":350,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":385,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":180,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":262,"org.apache.commons.collections4.CollectionUtilsTest.get":381,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":512,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":139,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":508,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":514,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":140,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":190,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":511,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":198,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":129,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":333,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":543,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":90,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":171,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":446,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":558,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":578,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":537,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":168,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":534,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":35,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":412,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":476,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":464,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":106,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSimpleSerialization":473,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":257,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectHashCodeEqualsContract":95,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":221,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":70,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":83,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":290,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":539,"org.apache.commons.collections4.CollectionUtilsTest.select":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":177,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":20,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":161,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":316,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":266,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":250,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":260,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":326,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":521,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":602,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":359,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":150,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":149,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":263,"org.apache.commons.collections4.CollectionUtilsTest.intersection":383,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":538,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":603,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":38,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":143,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":307,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":592,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":428,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":227,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":270,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":374,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":134,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":256,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":271,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":184,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":455,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":479,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":226,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":566,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":610,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":236,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":482,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":93,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":519,"org.apache.commons.collections4.map.CompositeMapTest.testPut":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":188,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":584,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":27,"org.apache.commons.collections4.map.CompositeMapTest.testGet":397,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":442,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":121,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":215,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":243,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalEmptyCollectionExists":546,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":363,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":209,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":480,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":568,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":141,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":570,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":338,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":244,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":548,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":278,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":394,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":2,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":164,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":585,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":477,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":620,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":56,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":569,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":623,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":332,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":331,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":291,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":327,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":208,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":516,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":576,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":37,"org.apache.commons.collections4.CollectionUtilsTest.union":382,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":156,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":306,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":33,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":386,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":356,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":312,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":82,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":148,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":396,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":497,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":552,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":138,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":404,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":347,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":528,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":219,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":144,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":267,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":72,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":159,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":553,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":51,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":418,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":431,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":130,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":47,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":520,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":78,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":526,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":349,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":445,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":348,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":269,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":484,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":204,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":142,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":467,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":241,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":425,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":433,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":593,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":596,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":154,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":574,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":166,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":42,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":3,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":515,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":489,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":309,"org.apache.commons.collections4.map.LRUMapTest.testClone":490,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":320,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":96,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":92,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":283,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":423,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":344,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":429,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":430,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":300,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":481,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":74,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":522,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":9,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":406,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":352,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":590,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":606,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":337,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":564,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":421,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":572,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":582,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":321,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":232,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":183,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":551,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":169,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":136,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":463,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":275,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":453,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":54,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":459,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":540,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":280,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":588,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":239,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":304,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":571,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":581,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":567,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":71,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":462,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":531,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":460,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":24,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":449,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":517,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":529,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":339,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":201,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":408,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":131,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":212,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":496,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":8,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":67,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":308,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":109,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":163,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":615,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":124,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":297,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":556,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":303,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":302,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":335,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":440,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":411,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":562,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":601,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":174,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":251,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":401,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":371,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":547,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":81,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":400,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":560,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsSelfHashCode":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":119,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":613,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":313,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":328,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":261,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":311,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":622,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":246,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":40,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":378,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":324,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":555,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectHashCodeEqualsContract":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":135,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":330,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":435,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":305,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":605,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":392,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":612,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":19,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":599,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":255,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsSelfHashCode":549,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":607,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":573,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":41,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":211,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":118,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":14,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":500,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":238,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":318,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":317,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":351,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":264,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":493,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":191,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":77,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":391,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":230,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":554,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":66,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":289,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":533,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":36,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":550,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":591,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":447,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":535,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":277,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":370,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":372,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":113,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":55,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":284,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":410,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":68,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":285,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":402,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":580,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":249,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":422,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":563,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":395,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":373,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":258,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":222,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":86,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":437,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":523,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":210,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":259,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":362,"org.apache.commons.collections4.map.HashedMapTest.testClone":486,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":117,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":189,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":598,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":186,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":439,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":310,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":611,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":323,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":32,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":608,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalFullCollectionExists":544,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":384,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":91,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":295,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":346,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":375,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":43,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":49,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":167,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":60,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":594,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":178,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":39,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":220,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":403,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":128,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":315,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":107,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":294,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":380,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":276,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":345,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":454,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":457,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":461,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalEmptyCollectionExists":474,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":357,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":509,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":179,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":172,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":390,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":483,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":322,"org.apache.commons.collections4.set.CompositeSetTest.testContains":393,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":366,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":235,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":491,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":187,"org.apache.commons.collections4.ListUtilsTest.testSelect":389,"org.apache.commons.collections4.map.LinkedMapTest.testClone":492,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":11,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":414,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":48,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":102,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":388,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":510,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":340,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":279,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":495,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":18,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":426,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":417,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":6,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":114,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":360,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":468,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":387,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":434,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":456,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":343,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":342,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":341,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":252,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":565,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":203,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":579,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":16,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":181,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":200,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":354,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":207,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":458,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":173,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":336,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":364,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":443,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":502,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":545,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":436,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":194,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":286,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":604,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":216,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":419,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":488,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":288,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":530,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":329,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":614,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":5,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":196,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":202,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":621,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":157,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":358,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":145,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":287,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":105,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":619,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":498,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":504,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":253,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":524,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectHashCodeEqualsContract":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":205,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":472,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":470,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":233,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":413,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":589,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":415,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":22,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":214,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":104,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":146,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":617,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":158,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":469,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":59,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":274,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":73,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalFullCollectionExists":475,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":525,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":314,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":616,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":225,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":132,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":557,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":175,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":618,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":170,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":427,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":444,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":597,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":361,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":487,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":29,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":501,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":218,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":64,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":237,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":281,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":609,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":213,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":405,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":532,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":185,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":586,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":25,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":541,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":127,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":441,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":76,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":116,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":587,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":575,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":12,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":296,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":377,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":192,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":182,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":231,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":577,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":301,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":97,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":240,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":416,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":265,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":355,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":234},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[0],"tindex":"7ccd82f6-3e69-11e6-9edf-579e3e10f459","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[1],"tindex":"7ccdd117-3e69-11e6-9edf-f303b884198b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection == null) {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[2,3],"tindex":"7ccdd118-3e69-11e6-9edf-518fbe547f00","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"7ccdd119-3e69-11e6-9edf-b57c55a243c9","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[20],"tindex":"7ccdf82a-3e69-11e6-9edf-7dff30c0df5a","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[21],"tindex":"7ccdf82b-3e69-11e6-9edf-192d57dec235","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[22,23,24,25,26,27,28,29,30],"tindex":"7ccdf82c-3e69-11e6-9edf-cd6d75a3f899","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"7cce1f3d-3e69-11e6-9edf-d1797c821cd7","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"7cce1f3e-3e69-11e6-9edf-e3ca17dd2a01","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[113],"tindex":"7cce1f3f-3e69-11e6-9edf-b70d796559bd","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TransformedList:82","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (list != null)) && ((list.size()) > 0)"},"failures":[],"tindex":"7cce4650-3e69-11e6-9edf-1527219b1017","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209],"tindex":"7cce4651-3e69-11e6-9edf-fd929c1b238d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[210],"tindex":"7cce4652-3e69-11e6-9edf-8fe5a314e3e3","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:81","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformedCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (collection == null) {\n        {\n            final org.apache.commons.collections4.collection.TransformedCollection<E> org.apache.commons.collections4.collection.TransformedCollection<E> = new org.apache.commons.collections4.collection.TransformedCollection<E>(collection , transformer);\n            if ((collection.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(collection.toArray()));\n                collection.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[211],"tindex":"7cce6d63-3e69-11e6-9edf-7b2c645bf144","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[141,145,155,158,159,162,163,164,165,166],"tindex":"7cce6d64-3e69-11e6-9edf-bb5ae7eed141","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node == null) || (node.isBlack(dataElement));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[212],"tindex":"7cce6d65-3e69-11e6-9edf-85d62d630490","method":{"position":"org.apache.commons.collections4.MapUtils:1283","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(map, keyPred, valuePred);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[213],"tindex":"7cce9476-3e69-11e6-9edf-696cd5a25d79","method":{"position":"org.apache.commons.collections4.ListUtils:574","type":"CtMethodImpl","sourcecode":"public static java.lang.String longestCommonSubsequence(final java.lang.CharSequence a, final java.lang.CharSequence b) {\n    if ((a == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n            } \n            final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(a), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(b));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (java.lang.Character java.lang.Character : lcs) {\n                sb.append(ch);\n            }\n            return sb.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[214],"tindex":"7cce9477-3e69-11e6-9edf-5317e0a0f890","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"7cce9478-3e69-11e6-9edf-91e7b10cd7a7","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                    while (e.hasNext()) {\n                        if (!(contains(e.next()))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[215],"tindex":"7ccebb89-3e69-11e6-9edf-fd413ff3700e","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[216],"tindex":"7ccebb8a-3e69-11e6-9edf-d913479a666d","method":{"position":"org.apache.commons.collections4.ClosureUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> asClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(transformer);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[217],"tindex":"7ccebb8b-3e69-11e6-9edf-4da74390217f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n            final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n            while (it.hasNext()) {\n                result.add(it.next());\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[218],"tindex":"7ccee29c-3e69-11e6-9edf-a9e87282a4b3","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[219,220],"tindex":"7ccee29d-3e69-11e6-9edf-85797a7b8f9b","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"7ccee29e-3e69-11e6-9edf-43b1fda9d3e9","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"7ccee29f-3e69-11e6-9edf-9f741a8b42ef","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"7ccee2a0-3e69-11e6-9edf-9f639f02a5a9","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"7ccee2a1-3e69-11e6-9edf-65ae8f307481","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"7ccf09b2-3e69-11e6-9edf-91e363c7f869","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[221],"tindex":"7ccf09b3-3e69-11e6-9edf-75a472b69c59","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7ccf09b4-3e69-11e6-9edf-01f30cd246fb","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[],"tindex":"7ccf09b5-3e69-11e6-9edf-6916efe43663","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:162","type":"CtMethodImpl","sourcecode":"public void setUnknownObjectBehavior(final org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior unknownObjectBehavior) {\n    if (unknownObjectBehavior == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            if (unknownObjectBehavior == null) {\n                throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n            } \n            org.apache.commons.collections4.comparators.FixedOrderComparator.this.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior = unknownObjectBehavior;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"unknownObjectBehavior"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[222],"tindex":"7ccf09b6-3e69-11e6-9edf-f12ea7183a19","method":{"position":"org.apache.commons.collections4.PredicateUtils:487","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"(inputIterator != null) && (transformer != null)"},"failures":[223],"tindex":"7ccf09b7-3e69-11e6-9edf-e50a6e6e03ef","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[224,7,10,225,226],"tindex":"7ccf30c8-3e69-11e6-9edf-f3e5d640ed74","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[227,228,229],"tindex":"7ccf30c9-3e69-11e6-9edf-97875fa8f586","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"7ccf30ca-3e69-11e6-9edf-511ed70dba34","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"7ccf57db-3e69-11e6-9edf-b3b91b9ef417","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,24,25,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,28,29,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"tindex":"7ccf57dc-3e69-11e6-9edf-6d97f4422ce7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry == null) {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[358],"tindex":"7ccf57dd-3e69-11e6-9edf-273b48790871","method":{"position":"org.apache.commons.collections4.TransformerUtils:163","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> asTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"7ccf7eee-3e69-11e6-9edf-ddd9ce5481dc","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (transformer == null) {\n                {\n                    return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[359,360,361,362,363,364,158,365,201,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,214,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,246,261,397,398,399,400,401,402,403,404,405,273,406,407,408,409,287,410,305,320,411,412,413,414,415,416,334,417,418,419,226,420,351,421],"tindex":"7ccf7eef-3e69-11e6-9edf-e9b242528f70","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"7ccf7ef0-3e69-11e6-9edf-5fb0f6404f99","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[422],"tindex":"7ccf7ef1-3e69-11e6-9edf-c7a6e44f1d6e","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:92","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n            } \n            if ((map.size()) == 0) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = map.remove(null);\n            final int int = map.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : map.entrySet()) {\n                preds[i] = entry.getKey();\n                transformers[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , preds , transformers , defaultTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"7ccfa602-3e69-11e6-9edf-edc28a9d9819","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                    while (e.hasNext()) {\n                        if (!(contains(e.next()))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[423,424,425,426,427,428,429,430,431],"tindex":"7ccfa603-3e69-11e6-9edf-c9f091ee627b","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"7ccfa604-3e69-11e6-9edf-a992b22cb927","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"7ccfa605-3e69-11e6-9edf-6ba84f92d5a2","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475],"tindex":"7ccfa606-3e69-11e6-9edf-19bba0e50dfa","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[423],"tindex":"7ccfcd17-3e69-11e6-9edf-a72e32e5d903","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[476],"tindex":"7ccfcd18-3e69-11e6-9edf-afa1819ecd8e","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:47","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((closures.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:889","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"7ccfcd19-3e69-11e6-9edf-17831d689541","method":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:178","type":"CtMethodImpl","sourcecode":"protected void findNextByIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator != (java.util.Iterator<? extends E>)) {\n                if ((java.util.Iterator<? extends E>) != null) {\n                    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n                } \n                java.util.Iterator<? extends E> = iterator;\n            } \n            while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n                E E = java.util.Iterator<? extends E>.next();\n                if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n                    next = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(next);\n                } \n                findNext(next);\n            }\n            if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n                java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n                findNextByIterator(java.util.Iterator<? extends E>);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:80","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"7ccfcd1a-3e69-11e6-9edf-d14a9590301c","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"7ccfcd1b-3e69-11e6-9edf-f32876e5173c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"7ccff42c-3e69-11e6-9edf-93fb8669a81a","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[477],"tindex":"7ccff42d-3e69-11e6-9edf-6b7cf5cbbc93","method":{"position":"org.apache.commons.collections4.CollectionUtils:1770","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> transformingCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(collection, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[402,478,479,480,481],"tindex":"7ccff42e-3e69-11e6-9edf-273e1c0b97b0","method":{"position":"org.apache.commons.collections4.map.CompositeMap:413","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].remove(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl","sourcecode":"(queue.size()) > 0"},"failures":[],"tindex":"7ccff42f-3e69-11e6-9edf-2b2bd96f1395","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((queue.size()) > 0) {\n        {\n            final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n            if ((queue.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(queue.toArray()));\n                queue.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[482],"tindex":"7ccff430-3e69-11e6-9edf-b974b9b24326","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[483,484,485,486,487,488,489,490,491,492,493,494,495],"tindex":"7cd01a41-3e69-11e6-9edf-639c65dcb2a7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:302","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            _putAll(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"7cd01a42-3e69-11e6-9edf-7f72752e22a1","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"7cd01a43-3e69-11e6-9edf-97ce583447f8","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"7cd01a44-3e69-11e6-9edf-0fb035d63495","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"7cd01a45-3e69-11e6-9edf-8b04d8304939","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[496,497,498],"tindex":"7cd04156-3e69-11e6-9edf-9589518718c0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1414","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return (coll == null) || (coll.isEmpty());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[115,117,123,126,127,128,129,131,132,133,134,135,136,137,138,139,141,144,145,149,150,151,152,153,154,155,158,159,162,163,164,165,166,499,500,170,172,178,179,181,182,184,185,186,187,188,189,194,195,196,197,201,205,207,208,209],"tindex":"7cd04157-3e69-11e6-9edf-498f30d538ec","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[372],"tindex":"7cd04158-3e69-11e6-9edf-65d78c662bf3","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) != (b.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[212,501,502,503,504,505,506,507,508,410,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550],"tindex":"7cd04159-3e69-11e6-9edf-2f94aed4c68b","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:889","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"7cd0415a-3e69-11e6-9edf-ff036a8bd909","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[21],"tindex":"7cd0686b-3e69-11e6-9edf-0121bfe6721a","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicatesAndClosures == null) {\n                {\n                    return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7cd0686c-3e69-11e6-9edf-4bf2a20028a2","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1018","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570],"tindex":"7cd0686d-3e69-11e6-9edf-c33b6ff71693","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[551],"tindex":"7cd0686e-3e69-11e6-9edf-15fc43bee332","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if ((a == null) || (b == null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"7cd0686f-3e69-11e6-9edf-bb09a1ef04cd","method":{"position":"org.apache.commons.collections4.ClosureUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> asClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(transformer);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[571,572,573,574,575,576,577],"tindex":"7cd06870-3e69-11e6-9edf-abbdbf6ae762","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[578,579],"tindex":"7cd08f81-3e69-11e6-9edf-a9eea220c345","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"7cd08f82-3e69-11e6-9edf-9b1fcae301d5","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (transformer == null) {\n                {\n                    return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"7cd08f83-3e69-11e6-9edf-8dc3252a456a","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list1.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"7cd0b694-3e69-11e6-9edf-e9de8185c0fb","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"7cd0b695-3e69-11e6-9edf-f320bd73d2ee","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            final int int = coll.size();\n            if (cSize == 0) {\n                return false;\n            } \n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            int += cSize;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[114,169],"tindex":"7cd0b696-3e69-11e6-9edf-dbf5d9dd2409","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"7cd0dda7-3e69-11e6-9edf-9547bcf80743","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[580,581],"tindex":"7cd0dda8-3e69-11e6-9edf-9b6b2f6fd23a","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"7cd0dda9-3e69-11e6-9edf-930f9d393c3e","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:165","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Object o) {\n    if (o == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"add() method is not supported\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[582,551,552],"tindex":"7cd0ddaa-3e69-11e6-9edf-a9a94d71b121","method":{"position":"org.apache.commons.collections4.CollectionUtils:1588","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c, final boolean includeDuplicates) {\n    if ((a == null) || (b == null)) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n            } \n            if (c == null) {\n                throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n            } \n            final int int = (a instanceof java.util.Collection<?>) && (b instanceof java.util.Collection<?>) ? java.lang.Math.max(1, ((((java.util.Collection<?>)(a)).size()) + (((java.util.Collection<?>)(b)).size()))) : 10;\n            final java.util.Iterator<O> java.util.Iterator<O> = new org.apache.commons.collections4.iterators.CollatingIterator<O>(c , a.iterator() , b.iterator());\n            if (includeDuplicates) {\n                return org.apache.commons.collections4.IteratorUtils.toList(iterator, totalSize);\n            } else {\n                final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(totalSize);\n                O O = null;\n                while (iterator.hasNext()) {\n                    final O O = iterator.next();\n                    if ((lastItem == null) || (!(lastItem.equals(item)))) {\n                        mergedList.add(item);\n                    } \n                    lastItem = item;\n                }\n                mergedList.trimToSize();\n                return mergedList;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[583,584,585],"tindex":"7cd104bb-3e69-11e6-9edf-f1027804e246","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[586,213],"tindex":"7cd104bc-3e69-11e6-9edf-6da151a732b0","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if ((a == null) || (b == null)) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[],"tindex":"7cd104bd-3e69-11e6-9edf-83ac5f4d9e41","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicatesAndClosures == null) {\n                {\n                    return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[587],"tindex":"7cd104be-3e69-11e6-9edf-d31eac4972bf","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    if ((predicates.int) == 0) {\n                        return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n                    } \n                    return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[122,124,125,134,141,152,153,154,159,162,163,164,165,166,184,207,208],"tindex":"7cd104bf-3e69-11e6-9edf-015bdb7f40d8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:163","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            return (lookupKey(key)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"7cd12bd0-3e69-11e6-9edf-473c04f3f68e","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[588,589,422],"tindex":"7cd12bd1-3e69-11e6-9edf-fb77fa2812f2","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[476,590,21],"tindex":"7cd12bd2-3e69-11e6-9edf-09644c26dd6a","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620],"tindex":"7cd12bd3-3e69-11e6-9edf-b12c1346721c","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"7cd152e4-3e69-11e6-9edf-9177acfe6ddd","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (predicate != null)"},"failures":[621],"tindex":"7cd152e5-3e69-11e6-9edf-99e53bad3d1c","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((collection != null) && (predicate != null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[622],"tindex":"7cd179f6-3e69-11e6-9edf-415e20094288","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"7cd179f7-3e69-11e6-9edf-6d6a5154a752","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"7cd179f8-3e69-11e6-9edf-f7b66150e7b5","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    if ((predicates.int) == 0) {\n                        return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n                    } \n                    return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[623],"tindex":"7cd179f9-3e69-11e6-9edf-c3a7c6c7eaf2","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}