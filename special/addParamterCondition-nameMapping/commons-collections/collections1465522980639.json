{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":377,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":1208,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":598,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":761,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":941,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":622,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":465,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":515,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":553,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":9,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":984,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":317,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":368,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":369,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":1267,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":1284,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":6,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":1029,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":343,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":751,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":436,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":1339,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":1343,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":1138,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":1345,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":1344,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":1151,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":854,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":834,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":698,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":570,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":390,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":790,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":250,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":1107,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":519,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":831,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":400,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":581,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":1041,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":966,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":599,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":690,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":387,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":613,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":432,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":857,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":381,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":1281,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":906,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":209,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":650,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":379,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":752,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":869,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":946,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":1259,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":1275,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":179,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":230,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":912,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":1006,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":645,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":1239,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":232,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":944,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":464,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":557,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":802,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":117,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":706,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":272,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":680,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":773,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":1105,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":623,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":788,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":571,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":1053,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":8,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":1065,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":1272,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":193,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":146,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":274,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":791,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":335,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":1252,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":367,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":838,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":678,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":446,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":818,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":1298,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":884,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":585,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":1324,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":437,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":527,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":1119,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":528,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":916,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":104,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":145,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":306,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":394,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":206,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":177,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":514,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":1260,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":1280,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":238,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":353,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":429,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":345,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":1003,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":1044,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":398,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":832,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":689,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":1100,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":253,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":1050,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":66,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":923,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":444,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":767,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":999,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":1114,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":826,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":56,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":969,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":1173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":1318,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":32,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":1099,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":1158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":669,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":1148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":670,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":671,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":1254,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":1037,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":57,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":1182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":770,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":167,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":900,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":196,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":188,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":342,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":1178,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":1179,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":887,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":198,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":1177,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":212,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":227,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":646,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":658,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":1153,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":417,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":1258,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":459,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":721,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":616,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":998,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":537,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":619,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":1104,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":1121,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":93,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":983,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":596,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":586,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":653,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":302,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":607,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":509,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":1082,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":462,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":691,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":819,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":121,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":903,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":891,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":820,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":108,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":668,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSerializeDeserializeThenCompare":366,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":1326,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":554,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":44,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":324,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":896,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":1265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":413,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":480,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":1261,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":445,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":600,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":601,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":318,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":602,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":170,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":52,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":234,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":757,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":469,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":956,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":542,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":633,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":1013,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":1242,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":688,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":731,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":578,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":931,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":1072,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSimpleSerialization":363,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":1025,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":1232,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":12,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":203,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":494,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testSimpleSerialization":842,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":1187,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":836,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":75,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":588,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":797,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":909,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorCompatibility":1080,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":97,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":759,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":393,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":1300,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":704,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":1316,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":383,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":314,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":532,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":310,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":981,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":1015,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":620,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":784,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":921,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":940,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":719,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":756,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":1257,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":1023,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":313,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":877,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":1201,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":793,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":375,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":1028,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":275,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":886,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":1064,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":410,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":1207,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":993,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":989,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":268,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":408,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":1172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":434,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":1085,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":1314,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":549,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":1146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":376,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":1040,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":695,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":126,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":243,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":718,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":717,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":716,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":1183,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":195,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":293,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":1036,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalEmptyCollectionExists":362,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":808,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":7,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":895,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":187,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":1129,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":115,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":332,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":681,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":890,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":1052,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":817,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":547,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":1126,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":1031,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":830,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":977,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":231,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":425,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":632,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":918,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSimpleSerialization":1084,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":543,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":1154,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":855,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":789,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":924,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":1294,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":1106,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":242,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":676,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":860,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":954,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":569,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":1170,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":288,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":720,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":584,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":848,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":1150,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":333,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":136,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":18,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":864,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":928,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":782,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectEqualsSelf":359,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":372,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":103,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":43,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":255,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":1115,"org.apache.commons.collections4.ListUtilsTest.testPartition":846,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":1290,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":485,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":81,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":955,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":1313,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":160,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":497,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":769,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":1289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":1308,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":1120,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":792,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":1295,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":950,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":150,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":1035,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":476,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":1237,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":112,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":1097,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":155,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":662,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":812,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":1125,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":904,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":518,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":1332,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":51,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":61,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":952,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":330,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":1285,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":1196,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":214,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":1171,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":730,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":798,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":765,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":30,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":53,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":513,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":1134,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":1349,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":478,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":290,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":110,"org.apache.commons.collections4.map.HashedMapTest.testClone":507,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":828,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":1135,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":1136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":421,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":1045,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":849,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":180,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":914,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":597,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":399,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":739,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":148,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":470,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":1143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":396,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":1277,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":657,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":17,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":568,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":807,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":1145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":1317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":762,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":626,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":1012,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":693,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsContract":364,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":471,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":957,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":1032,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":1217,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":965,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":1191,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":922,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":745,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":735,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":970,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":630,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":1000,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":273,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":559,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":558,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":1205,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":560,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":1088,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":1181,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":431,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":269,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":545,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":305,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":533,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":579,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":308,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":617,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":740,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":908,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":835,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":1209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":389,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":1241,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":1051,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":1255,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":567,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testFullIterator":357,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":36,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":987,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":539,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":648,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":397,"org.apache.commons.collections4.map.LinkedMapTest.testClone":540,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":876,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":874,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiClear":801,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":105,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":574,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":754,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":821,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":422,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":1131,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":608,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":1132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":666,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":1133,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":1229,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":24,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":307,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":576,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":575,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":699,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":682,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":1062,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":49,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":1075,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":412,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":228,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":934,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":936,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":1093,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":685,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":218,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":748,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":219,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":614,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":942,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":520,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":1038,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":416,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":1268,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":309,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":589,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":289,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":898,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":1,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":641,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":1069,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":1067,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":1152,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":885,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":406,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":405,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":1165,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":404,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":810,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":1047,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":1227,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":171,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":1128,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":123,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":642,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":1103,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":199,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":1304,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":1042,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":837,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":414,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":371,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":696,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":77,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":1276,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":968,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":1293,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":484,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":74,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":806,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":1061,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":1060,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":183,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":1059,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":881,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":1194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":755,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsSelfHashCode":365,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":1279,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":1123,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":1220,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":964,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":328,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":1166,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":257,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":985,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":531,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":472,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":1024,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":771,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":544,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":21,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable":796,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":1292,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":625,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":1109,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":963,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":1274,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":967,"org.apache.commons.collections4.map.LRUMapTest.testLRU":684,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":182,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":742,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":280,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":297,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":902,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":225,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":139,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":971,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":521,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":822,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":1189,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":823,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":824,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":501,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":1223,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":15,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":124,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":169,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":344,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":498,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":803,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":932,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":141,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":48,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":71,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":1269,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":976,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":189,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":240,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":55,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":875,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":794,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":775,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":430,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":1334,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":1089,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":147,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":420,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":352,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":694,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEmptyMapCompatibility":815,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":949,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":1155,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":402,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":392,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":1266,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":847,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":130,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":712,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":937,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":655,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":1147,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":337,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":615,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":488,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":490,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":1169,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":1098,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":26,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":813,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":781,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":440,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":1010,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":1264,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":705,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":1222,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":675,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":530,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":905,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":1288,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":1230,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":529,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":1287,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":1030,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":1185,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":1243,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":804,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder":988,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":47,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":1325,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":915,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":450,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":606,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":933,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":1156,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":1139,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":137,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":45,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":1018,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":1204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":442,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":760,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":443,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":551,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":894,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":1164,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":552,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorIsSerializable":1081,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":743,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":1215,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":747,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":892,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":500,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":1087,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":1118,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":1011,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":1263,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":298,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":185,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":479,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":1238,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":229,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":178,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":590,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":783,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":811,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":1342,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":114,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":315,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":1340,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":1341,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":787,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":974,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":572,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":1116,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":118,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":192,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":346,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":1022,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":131,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":259,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":733,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":972,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":1245,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":1130,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":1270,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":99,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":508,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":165,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":246,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":996,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsSelfHashCode":1086,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":453,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":677,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":744,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":454,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":452,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":265,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":87,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":1167,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":517,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":1262,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":487,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":866,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testRemove":358,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":722,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":1063,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":1101,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":186,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":174,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":235,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":1180,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":856,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":1213,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":16,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":1108,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":550,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":496,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":990,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":1160,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":3,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":428,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":925,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":1310,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":120,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":233,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":166,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":511,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":878,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":220,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":247,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":295,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":1336,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":427,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":1283,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":1248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":1071,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":672,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":418,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":1026,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":281,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":1199,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":172,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":899,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":1190,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":1004,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":674,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":673,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":929,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":506,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":486,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":867,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":591,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":491,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":535,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":1333,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":1192,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":697,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":320,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":42,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":467,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":1055,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":1282,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":1048,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":629,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":593,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":741,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":84,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":1312,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":777,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":814,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":582,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":825,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":135,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":106,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":291,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":1001,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":1076,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":809,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":538,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":1005,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":451,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":1306,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":184,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":244,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":1068,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":1141,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":647,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":441,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":845,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":1234,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":859,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":935,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":1302,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":1286,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":341,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":979,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":1175,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":1174,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":162,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":910,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testFullMapCompatibility":816,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":433,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":107,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEqualsNull":361,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":938,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":1176,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":222,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":153,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":175,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":917,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":605,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":1039,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":285,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":555,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":604,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":603,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":138,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":522,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":667,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":251,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":267,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":734,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":303,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":1224,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":656,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":1305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":457,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":1251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":455,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsSelfHashCode":839,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":926,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":1273,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":190,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":724,"org.apache.commons.collections4.map.LRUMapTest.testClone":683,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":76,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":565,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":953,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":1021,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":1091,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":634,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":962,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":161,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":1256,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":127,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":700,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":907,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":1117,"org.apache.commons.collections4.ListUtilsTest.testSubtract":27,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":1335,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":610,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testRandomListSort":1077,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":1225,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":1244,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":46,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":753,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":239,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":1095,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":1320,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":200,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":1323,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":893,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":1291,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":566,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":482,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":729,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":1221,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":913,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":1049,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":325,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testSerializeDeserializeThenCompare":841,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":439,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":304,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":1240,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":750,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":654,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":133,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":91,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":829,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":207,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":276,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":116,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":1236,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":311,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":90,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":301,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":82,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":959,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":58,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":373,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":948,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":799,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":779,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":1020,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":723,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":592,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":1090,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":851,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":980,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":466,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMakeMap":805,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":1226,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":1319,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":746,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":961,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":727,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":901,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":92,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":1195,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":1033,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":111,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testCanonicalEmptyCollectionExists":843,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":194,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":300,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":1073,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":463,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":1198,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":1002,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":1163,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":738,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":774,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":888,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":72,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":40,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":853,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":1210,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":833,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":726,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":960,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":703,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":1122,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":31,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":211,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":438,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":516,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":1124,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":221,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":474,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":664,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":995,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":499,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":5,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":1271,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":1110,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":271,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":13,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":852,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":870,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":493,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":208,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":163,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":510,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":424,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":728,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":764,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":563,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":1338,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":475,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":503,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":562,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":1214,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":561,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":1331,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":609,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":556,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":1074,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":1112,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":1184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":401,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":1149,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":1140,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":1144,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testCanonicalFullCollectionExists":844,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":920,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":644,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":1019,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":1309,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testNormalIteration":355,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":489,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":79,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":142,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":299,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":534,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":1137,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":29,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":1231,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":702,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":827,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":982,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":638,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":639,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":640,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":1296,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":679,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":661,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":780,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":1193,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":283,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":284,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":1008,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":768,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":492,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":1197,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":237,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":1127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":468,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":1246,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":1188,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":292,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":709,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":725,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":256,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":260,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":663,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":119,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":11,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":204,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":580,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":262,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":871,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":873,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":1092,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":872,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":889,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":975,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":992,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":1083,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":546,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":340,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":378,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":627,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":54,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":85,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":73,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":1328,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":1329,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":205,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":1330,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":973,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":986,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":772,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":840,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":858,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":63,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":1157,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":1315,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":321,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":1247,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":144,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":692,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":947,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":312,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":143,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":505,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":994,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":415,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":263,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":62,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":261,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":1007,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":502,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":594,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":382,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":473,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":1297,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":628,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":882,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":223,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":651,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":1046,"org.apache.commons.collections4.CollectionUtilsTest.isFull":23,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":495,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":164,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":711,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":1096,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":326,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":737,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":541,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":732,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":1301,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":154,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":736,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":374,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":1159,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":1216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":1307,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":943,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":254,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":149,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":282,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":1142,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":512,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":863,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":329,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":323,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":60,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":978,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":319,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":35,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":287,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":266,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":128,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":1321,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":861,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":862,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":391,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":1299,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":665,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":409,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":1043,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":1346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":403,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":800,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testReverseListSort":1078,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":69,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":41,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":919,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":384,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":1186,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":2,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":80,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":786,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":850,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":10,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":701,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":1322,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":1327,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":618,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":643,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":1168,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":1235,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":1017,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":19,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":1200,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":316,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":351,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":158,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":930,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":1202,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":411,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":339,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":1054,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":763,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":951,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":448,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":1162,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":94,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":945,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":1161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":423,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":122,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":1070,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":264,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEmptyListSort":1079,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalFullCollectionExists":360,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":883,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":176,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":1111,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":612,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":710,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":181,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":636,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":1034,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":637,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":156,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":635,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":1094,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":649,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":1056,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":1057,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":1058,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":1253,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":1348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":449,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":1303,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":140,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":631,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":1347,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":78,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":1212,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":659,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":778,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":461,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":1219,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":1066,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":1233,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":523,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":524,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":435,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":758,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":1278,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":573,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":64,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":708,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":1014,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":380,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":880,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":327,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":660,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":4,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":37,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":624,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":868,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":1206,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":1249,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":1203,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEmptyIterator":356,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":911,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":621,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":927,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":1102,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":1211,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":481,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":749,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":686,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":1218,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":958,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":395,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":865,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":766,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":1228,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":370,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":715,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":776,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":1311,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":1250,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":95,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":294,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":1027,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":652,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":1016,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":991,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":997,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":713,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":1337,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":714,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":785,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":350,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":347,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":354,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":1009,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":525,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":548,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":477,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":587,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":879,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":270,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":483,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":687,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":201,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":939,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":1113,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":795,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":132,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":331,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":504,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":707,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":897},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0,1],"tindex":"aa3c749c-2eac-11e6-90e4-0534d8352e91","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:383","type":"CtBinaryOperatorImpl","sourcecode":"size < 4"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"aa3d37ed-2eac-11e6-90e4-79075f6d433f","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 4) {\n        {\n            if ((java.util.Set<E>.contains(object)) == false) {\n                super.add(index, object);\n                java.util.Set<E>.add(object);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[23],"tindex":"aa3d5efe-2eac-11e6-90e4-79eb7306c8cd","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"aa3d5eff-2eac-11e6-90e4-6f65dc7c99af","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:689","type":"CtBinaryOperatorImpl","sourcecode":"(current.right) == null"},"failures":[],"tindex":"aa3d8610-2eac-11e6-90e4-3b491a599b80","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"h","right":"h"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:136","type":"CtBinaryOperatorImpl","sourcecode":"(cacheSize) == 0"},"failures":[],"tindex":"aa3e2251-2eac-11e6-90e4-23e2f8577c32","method":{"position":"org.apache.commons.collections4.list.TreeList:810","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> addAll(org.apache.commons.collections4.list.TreeList.AVLNode<E> otherTree, final int currentSize) {\n    if (currentSize == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = max();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = otherTree.min();\n            if ((otherTree.int) > (int)) {\n                final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = removeMax();\n                final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>();\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = otherTree;\n                int int = (s.int) + currentSize;\n                int int = 0;\n                while ((s != null) && ((s.int) > (getHeight(leftSubTree)))) {\n                    sParentAbsolutePosition = sAbsolutePosition;\n                    sAncestors.push(s);\n                    s = s.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n                    if (s != null) {\n                        sAbsolutePosition += s.int;\n                    } \n                }\n                maxNode.setLeft(leftSubTree, null);\n                maxNode.setRight(s, otherTreeMin);\n                if (leftSubTree != null) {\n                    leftSubTree.max().setRight(null, maxNode);\n                    leftSubTree.int -= currentSize - 1;\n                } \n                if (s != null) {\n                    s.min().setLeft(null, maxNode);\n                    s.int = (sAbsolutePosition - currentSize) + 1;\n                } \n                maxNode.int = (currentSize - 1) - sParentAbsolutePosition;\n                otherTree.int += currentSize;\n                s = maxNode;\n                while (!(sAncestors.isEmpty())) {\n                    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = sAncestors.pop();\n                    sAncestor.setLeft(s, null);\n                    s = sAncestor.balance();\n                }\n                return s;\n            } else {\n                otherTree = otherTree.removeMin();\n                final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>();\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode.this;\n                int int = s.int;\n                int int = 0;\n                while ((s != null) && ((s.int) > (getHeight(otherTree)))) {\n                    sParentAbsolutePosition = sAbsolutePosition;\n                    sAncestors.push(s);\n                    s = s.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n                    if (s != null) {\n                        sAbsolutePosition += s.int;\n                    } \n                }\n                otherTreeMin.setRight(otherTree, null);\n                otherTreeMin.setLeft(s, maxNode);\n                if (otherTree != null) {\n                    otherTree.min().setLeft(null, otherTreeMin);\n                    (otherTree.int)++;\n                } \n                if (s != null) {\n                    s.max().setRight(null, otherTreeMin);\n                    s.int = sAbsolutePosition - currentSize;\n                } \n                otherTreeMin.int = currentSize - sParentAbsolutePosition;\n                s = otherTreeMin;\n                while (!(sAncestors.isEmpty())) {\n                    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = sAncestors.pop();\n                    sAncestor.setRight(s, null);\n                    s = sAncestor.balance();\n                }\n                return s;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cacheSize":"currentSize"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"aa3e9782-2eac-11e6-90e4-e7049491499a","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"aa3ebe93-2eac-11e6-90e4-1d487ba7af19","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(count)) {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"count"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:679","type":"CtBinaryOperatorImpl","sourcecode":"floatObject == null"},"failures":[],"tindex":"aa3ee5a4-2eac-11e6-90e4-f76aefd4523c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2069","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[24],"tindex":"aa3ee5a5-2eac-11e6-90e4-9b0403a3b607","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[25,26],"tindex":"aa3f0cb6-2eac-11e6-90e4-afacc0d99ad8","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"aa3f33c7-2eac-11e6-90e4-97a6e712522d","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        return null;\n                    } \n                    if (answer instanceof java.lang.Short) {\n                        return ((java.lang.Short)(answer));\n                    } \n                    return java.lang.Short.valueOf(answer.shortValue());\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) == (wrappedIteratorIndex)"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350],"tindex":"aa3f5ad8-2eac-11e6-90e4-e7129c91b1c4","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies == nCopies) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrappedIteratorIndex":"nCopies","currentIndex":"nCopies"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) > 0"},"failures":[351],"tindex":"aa3fd009-2eac-11e6-90e4-33fdaeee9776","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:97","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[352,353,354,355,356,357,358,359,360,361,362,363,364,365,366],"tindex":"aa3fd00a-2eac-11e6-90e4-9166f7f69486","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[367,368,369,370,371],"tindex":"aa3fd00b-2eac-11e6-90e4-87e13062bd55","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[26,372,373],"tindex":"aa3ff71c-2eac-11e6-90e4-dd869fd361a9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 == null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"aa401e2d-2eac-11e6-90e4-33b5384eff4d","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[374],"tindex":"aa401e2e-2eac-11e6-90e4-395149fd6624","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[140],"tindex":"aa401e2f-2eac-11e6-90e4-0f86da145632","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:448","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[375,376,377],"tindex":"aa4156b0-2eac-11e6-90e4-7d48a56d902b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2065","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"aa4156b1-2eac-11e6-90e4-f34c1934ad7a","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        {\n            if ((mapToCopy.size()) != 1) {\n                {\n                    for (final K K : mapToCopy.keySet()) {\n                        if (!(containsKey(key))) {\n                            throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n                        } \n                    }\n                    java.util.Map<K, V>.putAll(mapToCopy);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"aa4156b2-2eac-11e6-90e4-e53b8e3537f1","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        return null;\n                    } \n                    if (answer instanceof java.lang.Short) {\n                        return ((java.lang.Short)(answer));\n                    } \n                    return java.lang.Short.valueOf(answer.shortValue());\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"aa417dc3-2eac-11e6-90e4-3bb01a30c7d1","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if ((object instanceof java.util.Map.Entry) == false) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"aa417dc4-2eac-11e6-90e4-f132312a6fd0","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[378,379,380,381,382,383,384,385,386,387,0,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,1,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,375,428,376,377,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469],"tindex":"aa41a4d5-2eac-11e6-90e4-2527ed97ed1d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"aa41cbe6-2eac-11e6-90e4-75d94bca623b","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,25,573,26,372,373,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726],"tindex":"aa421a07-2eac-11e6-90e4-173d23161da9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 == null) {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782],"tindex":"aa424118-2eac-11e6-90e4-7bd17dc8b4fd","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:980","type":"CtUnaryOperatorImpl","sourcecode":"!(root.isEmpty())"},"failures":[],"tindex":"aa426829-2eac-11e6-90e4-a94f7954117e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:350","type":"CtMethodImpl","sourcecode":"private boolean selectR(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>> reference) {\n    if (!(h.isEmpty())) {\n        {\n            if ((h.int) <= bitIndex) {\n                if (!(h.isEmpty())) {\n                    reference.set(h);\n                    return false;\n                } \n                return true;\n            } \n            if (!(isBitSet(key, h.int, lengthInBits))) {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            } else {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"h"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[],"tindex":"aa42b64a-2eac-11e6-90e4-bb6e8414bf64","method":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedSortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[783],"tindex":"aa42b64b-2eac-11e6-90e4-91cbc9bc2c83","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:661","type":"CtBinaryOperatorImpl","sourcecode":"longObject == null"},"failures":[],"tindex":"aa42dd5c-2eac-11e6-90e4-6d129e380259","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[25],"tindex":"aa43046d-2eac-11e6-90e4-b5393e6a0fe7","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:554","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key5 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key5"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[784],"tindex":"aa432b7e-2eac-11e6-90e4-a1d249ff2c50","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[785],"tindex":"aa43528f-2eac-11e6-90e4-a17765e20f8b","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[786],"tindex":"aa435290-2eac-11e6-90e4-59de0697a0f9","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"aa435291-2eac-11e6-90e4-dd672880540d","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[476,477,482,484,495,496,501,503,787,788,789,790,791,792,793,794,795,692,693,694,695],"tindex":"aa4379a2-2eac-11e6-90e4-e73c111be6fd","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (hashIndex > 0) {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.CompositeMap.this.composite[i].containsValue(value)"},"failures":[],"tindex":"aa4379a3-2eac-11e6-90e4-51686d2e186b","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object[nCopies].containsValue(object)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"composite":"object","i":"nCopies","value":"object"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"aa43a0b4-2eac-11e6-90e4-13c4835dc697","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index == 0) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844],"tindex":"aa43a0b5-2eac-11e6-90e4-13fb2653d5f0","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[845],"tindex":"aa43a0b6-2eac-11e6-90e4-1772a2421089","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[],"tindex":"aa43c7c7-2eac-11e6-90e4-f54a7aebdacd","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:129","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().containsAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"initialCapacity < 0"},"failures":[846],"tindex":"aa43c7c8-2eac-11e6-90e4-25ee98840de6","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"initialCapacity":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[744,847,773],"tindex":"aa43c7c9-2eac-11e6-90e4-85c8eba1ea28","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[848,849,850,834,416,851],"tindex":"aa43eeda-2eac-11e6-90e4-bd98f4dd56b4","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1077","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"aa43eedb-2eac-11e6-90e4-3b1d88346dcc","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[852,853,854],"tindex":"aa43eedc-2eac-11e6-90e4-a772e6526e95","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.util.Map<?, ?>) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[529,564,572,606,641,855,788,675,856,857,719],"tindex":"aa43eedd-2eac-11e6-90e4-854383425599","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value instanceof java.util.Map<?, ?>) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtBinaryOperatorImpl","sourcecode":"rval != null"},"failures":[379,378,382,383,380,381,384,385,386,387,0,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,1,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,421,422,419,420,424,425,426,427,375,428,376,377,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469],"tindex":"aa4415ee-2eac-11e6-90e4-8519a499f93a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rval":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"aa4415ef-2eac-11e6-90e4-63be5858ea75","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[858,859],"tindex":"aa443d00-2eac-11e6-90e4-2ba8c9415e7d","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtBinaryOperatorImpl","sourcecode":"(trueClosure == null) || (falseClosure == null)"},"failures":[860],"tindex":"aa443d01-2eac-11e6-90e4-79dacb935f65","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if ((closure == null) || (closure == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseClosure":"closure","trueClosure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"aa443d02-2eac-11e6-90e4-c59ccab2414f","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[861,862,863,864],"tindex":"aa443d03-2eac-11e6-90e4-5b8b571a960a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[865,866,867,868,869,870,871,872,873,874,875,876,877,878,848,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932],"tindex":"aa448b24-2eac-11e6-90e4-bb0f7ac3e2ad","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[875,933,934,833,415,935],"tindex":"aa448b25-2eac-11e6-90e4-7521a17996f3","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:157","type":"CtInvocationImpl","sourcecode":"it.hasNext()"},"failures":[803,806,807,809,810,811,814,821,832,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028],"tindex":"aa44b236-2eac-11e6-90e4-25c5cc7c1b9a","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:264","type":"CtMethodImpl","sourcecode":"protected java.util.Iterator<K> createKeySetIterator(final java.util.Iterator<K> iterator) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySetIterator<K>(iterator , org.apache.commons.collections4.bidimap.AbstractDualBidiMap.this);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"aa44d947-2eac-11e6-90e4-8146aa8c1f77","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[],"tindex":"aa450058-2eac-11e6-90e4-a11ea8a15b51","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:587","type":"CtMethodImpl","sourcecode":"protected java.util.ListIterator<E> createSubListListIterator(final org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> subList, final int fromIndex) {\n    if (fromIndex > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubListIterator<E>(subList , fromIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:613","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074],"tindex":"aa450059-2eac-11e6-90e4-b3db82c45314","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:41","type":"CtMethodImpl","sourcecode":"private static int mask(final int bit) {\n    if (bit == 0) {\n        {\n            return (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) >>> bit;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"bit"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"aa45276a-2eac-11e6-90e4-2b0dfd055d79","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtInvocationImpl","sourcecode":"hm.isEmpty()"},"failures":[],"tindex":"aa45276b-2eac-11e6-90e4-130f23517507","method":{"position":"org.apache.commons.collections4.MapUtils:1506","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> synchronizedSortedMap(final java.util.SortedMap<K, V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hm":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[1075,845],"tindex":"aa45276c-2eac-11e6-90e4-bdfb185b4f2f","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[1076],"tindex":"aa454e7d-2eac-11e6-90e4-fba44ad37eb9","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtBinaryOperatorImpl","sourcecode":"((object == null) && (current == null)) || ((object != null) && (object.equals(current)))"},"failures":[],"tindex":"aa454e7e-2eac-11e6-90e4-550cee102a7f","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (((object == null) && (object == null)) || ((object != null) && (object.equals(current)))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"object","object":"object"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[],"tindex":"aa45758f-2eac-11e6-90e4-c78c4d54dc34","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (bitIndex == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087],"tindex":"aa457590-2eac-11e6-90e4-4b63336f0e99","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,510,508,509,1088,511,512,1089,513,514,515,516,1090,517,1091,518,519,520,521,522,1092,1093,1094,523,524,525,526,527,528,529,1095,1096,530,531,1097,1098,532,533,534,535,536,572,622,620,621,1099,623,624,1100,625,626,627,628,1101,629,1102,630,631,632,633,634,1103,1104,1105,635,636,637,638,639,640,641,1106,1107,642,643,1108,1109,644,645,646,647,648,855,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,787,1128,1129,1130,1131,1132,1133,1134,1135,1136,788,1137,1138,789,790,1139,1140,791,792,793,794,795,656,654,655,1141,657,658,1142,659,660,661,662,1143,663,1144,664,665,666,667,668,1145,1146,1147,669,670,671,672,673,674,675,1148,1149,676,677,1150,1151,678,679,680,681,682,856,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,857,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190],"tindex":"aa457591-2eac-11e6-90e4-c54a99f8c78e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (hashIndex > 0) {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[333],"tindex":"aa459ca2-2eac-11e6-90e4-f59320f23f8d","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[477,496,531,566,643,677,721],"tindex":"aa459ca3-2eac-11e6-90e4-3d1cbc469433","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"aa459ca4-2eac-11e6-90e4-ab923032f3a0","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtBinaryOperatorImpl","sourcecode":"(removed) || (beforeFirst)"},"failures":[],"tindex":"aa45c3b5-2eac-11e6-90e4-a77738c362f9","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1802","type":"CtMethodImpl","sourcecode":"protected boolean inFromRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive || forceInclusive) {\n        {\n            final K K = getFromKey();\n            final boolean boolean = isFromInclusive();\n            final int int = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\n                return ret >= 0;\n            } else {\n                return ret > 0;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removed":"forceInclusive","beforeFirst":"forceInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"aa45c3b6-2eac-11e6-90e4-9364f4ceebdf","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        {\n            if ((mapToCopy.size()) != 1) {\n                {\n                    for (final K K : mapToCopy.keySet()) {\n                        if (!(containsKey(key))) {\n                            throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n                        } \n                    }\n                    java.util.Map<K, V>.putAll(mapToCopy);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[1191],"tindex":"aa45eac7-2eac-11e6-90e4-93a7ddf410fa","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0"},"failures":[1192,1193],"tindex":"aa45eac8-2eac-11e6-90e4-b5055b80eb3e","method":{"position":"org.apache.commons.collections4.set.CompositeSet:367","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Set<E> set1, final java.util.Set<E> set2) {\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(set1, set1).size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            addComposited(set1);\n            addComposited(set2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set1","existingSet":"set1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"aa4611d9-2eac-11e6-90e4-a7d7cb441323","method":{"position":"org.apache.commons.collections4.MapUtils:842","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key, final double defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return defaultValue;\n            } \n            return doubleObject.doubleValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.LazyList:113","type":"CtBinaryOperatorImpl","sourcecode":"index < size"},"failures":[96,112,113,183,199,200],"tindex":"aa4611da-2eac-11e6-90e4-1fb967f3f773","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count < count) {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count","index":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[26],"tindex":"aa4611db-2eac-11e6-90e4-87cb84616b5c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,882,885,890,891,893,897,900,1250,1251,1252,1253,1254,1255,1256,915,916,917,918,919,920,922,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,44,98,149,185,806,807,809,810,811,812,814,391,392,394,395,396,397,399,940,941,1278,942,943,944,1279,945,948,954,955,956,957,958,1280,959,978,979,1281,980,981,982,1282,983,986,1005,1006,1283,1007,1008,1009,1284,1010,1013,1019,1020,1285,1021,1022,1023,1286,1024,1027],"tindex":"aa4638ec-2eac-11e6-90e4-e59f41ceee4f","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1191,1311,1312,1313,1314,1315,1316,765,1317,1318,1319,1320,771,776,777,778,779],"tindex":"aa4638ed-2eac-11e6-90e4-61b638b6c284","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.removeNode(node);\n            broadcastNodeRemoved(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"aa4638ee-2eac-11e6-90e4-bffae4c3f073","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:174","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hash(final java.lang.Object key) {\n    if (key instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.System.identityHashCode(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[1321],"tindex":"aa465fff-2eac-11e6-90e4-81345a16a8a3","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (prefix == null) {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"prefix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[1322,1323,1324,1325,1326,1327,1328,1329,1330,1038,1039,1041,1042,1043,1046,1048,1050,1052,1056,1057,1058,1059,1060,1061,1070,1331,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346],"tindex":"aa466000-2eac-11e6-90e4-f17c058f72d6","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (o instanceof java.lang.String) {\n        {\n            if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                return true;\n            } else if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n            if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[1347,1348],"tindex":"aa468711-2eac-11e6-90e4-0789a23b5f7d","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[],"tindex":"aa468712-2eac-11e6-90e4-4732148218a3","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"aa46ae23-2eac-11e6-90e4-7f1f9a199fae","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"aa46ae24-2eac-11e6-90e4-535d594f5924","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[750,779],"tindex":"aa46ae25-2eac-11e6-90e4-7726f9cb8723","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[1349],"tindex":"aa46d536-2eac-11e6-90e4-0fb30af30735","method":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:46","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":91,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}