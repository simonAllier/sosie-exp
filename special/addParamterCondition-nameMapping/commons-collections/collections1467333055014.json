{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":79,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":566,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":748,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":749,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":120,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":272,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":296,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":605,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":11,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":642,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":213,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":548,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":720,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":229,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":741,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":92,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":637,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":595,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":307,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":25,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":780,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":139,"org.apache.commons.collections4.map.Flat3MapTest.testObjectEqualsSelf":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":149,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":615,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":656,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":331,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":188,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":401,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":128,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":599,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":690,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":251,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":125,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":342,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":390,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":573,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":18,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":452,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":543,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":253,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":119,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":297,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":241,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":672,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":261,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":774,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":198,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testEqualsNull":55,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":493,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":715,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":508,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":523,"org.apache.commons.collections4.list.TreeListTest.testFullListSerialization":34,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":370,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":625,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":761,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":143,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":271,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":437,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":466,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":465,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":464,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":560,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":80,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":553,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectEqualsSelf":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":147,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":678,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":391,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":200,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":703,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":53,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":529,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":100,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":531,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":658,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectEqualsSelf":722,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":319,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":732,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":757,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":334,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":394,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":396,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":395,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":530,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":9,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":369,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":220,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":279,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":755,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":423,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":115,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":318,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":379,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":754,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":182,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":789,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":224,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":604,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":772,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":32,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":22,"org.apache.commons.collections4.list.TreeListTest.testFullListCompatibility":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":117,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":252,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":171,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":46,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":366,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":654,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":414,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":8,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":286,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":627,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":681,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testSerializeDeserializeThenCompare":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":162,"org.apache.commons.collections4.map.Flat3MapTest.testEqualsNull":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":101,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":389,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":691,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":124,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":324,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":289,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":207,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":551,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":185,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":718,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":520,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":589,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":747,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":42,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":525,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":677,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":752,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":142,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":259,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":130,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":601,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":488,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":214,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":565,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":528,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":455,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":586,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":650,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":648,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":517,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":790,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":138,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":313,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":158,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":293,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":577,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":381,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":339,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":78,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":192,"org.apache.commons.collections4.map.TransformedSortedMapTest.initializationError":781,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":174,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":707,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":398,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":456,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":505,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":689,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":489,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":775,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":620,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":697,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":291,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":178,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":83,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":644,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":424,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":1,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":532,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":506,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":233,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":556,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":173,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":779,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":235,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":44,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":33,"org.apache.commons.collections4.list.TreeListTest.testCollectionSize":47,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":362,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":442,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":0,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":734,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":303,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":787,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":758,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":647,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":212,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":427,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":557,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":468,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":305,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":744,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":16,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":321,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":706,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":593,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":172,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":244,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":773,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":537,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":274,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":630,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":323,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":687,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":583,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":699,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":419,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":524,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":12,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":270,"org.apache.commons.collections4.map.HashedMapTest.testClone":766,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":708,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":405,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":454,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":420,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":148,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":343,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":145,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":278,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":298,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":534,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":202,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":52,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":190,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":558,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":704,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":330,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":354,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":353,"org.apache.commons.collections4.SetUtilsTest.testHashCode":249,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":352,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":730,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":19,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":335,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":206,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":320,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":86,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":277,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":380,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":403,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsSelfHashCode":692,"org.apache.commons.collections4.ListUtilsTest.testDefaultIfNull":783,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":308,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":673,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":134,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":225,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":700,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":49,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":27,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":413,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":457,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":146,"org.apache.commons.collections4.map.LinkedMapTest.testClone":777,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":40,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":563,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":50,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":467,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":168,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":621,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":507,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":161,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":469,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":377,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":475,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":568,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":501,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":51,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":613,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":165,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":499,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":153,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":716,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":433,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":649,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":350,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":154,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":535,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":242,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":733,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":359,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":230,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":497,"org.apache.commons.collections4.CollectionUtilsTest.find":299,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalFullCollectionExists":696,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectHashCodeEqualsContract":594,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":616,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":163,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":750,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":4,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":333,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":347,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":533,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":714,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":713,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":712,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":243,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":344,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":571,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":476,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":461,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":329,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":576,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":685,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":606,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":588,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":201,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":175,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":328,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":332,"org.apache.commons.collections4.map.LRUMapTest.testLRU":193,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":30,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":463,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":231,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":336,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":275,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":512,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":358,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":660,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetRemoveChangesMap":409,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":387,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":791,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":85,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":632,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":72,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":191,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":141,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":471,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":264,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":564,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":349,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":378,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":302,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":579,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":96,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":549,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":5,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":474,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":260,"org.apache.commons.collections4.map.StaticBucketMapTest.testEqualsNull":216,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":239,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":662,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":786,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":728,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":388,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":552,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":179,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":522,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":240,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":626,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":638,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":106,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":345,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":37,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalEmptyCollectionExists":667,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":98,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":516,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":515,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":99,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":778,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":237,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":196,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":640,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":295,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":197,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":227,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":367,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":448,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":760,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":550,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":176,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":745,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":485,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":536,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":765,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":459,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectHashCodeEqualsContract":554,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":70,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":169,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":585,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":674,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":132,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":13,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":337,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":651,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":519,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":511,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":109,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":110,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":108,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":273,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":737,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":641,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":440,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":441,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":439,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":2,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":527,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":502,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":294,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":65,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":310,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":503,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsContract":723,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":77,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":184,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":399,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":268,"org.apache.commons.collections4.list.TreeListTest.testSerializeDeserializeThenCompare":36,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":634,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":75,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":544,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":609,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":717,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":668,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":167,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":590,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":58,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":415,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":769,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":631,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":255,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":246,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":675,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":729,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":248,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":788,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":603,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":619,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":205,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":698,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":701,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":356,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":3,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":450,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":470,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":538,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":735,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":306,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":776,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":542,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":107,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":756,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":97,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":67,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":103,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":393,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":484,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":587,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":598,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":482,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":89,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":562,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":228,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":426,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":592,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":374,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":614,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":373,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":372,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":653,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":21,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":276,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":285,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":491,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":43,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":738,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":61,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":742,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":111,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":431,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":430,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":451,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":429,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":266,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":555,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":584,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":208,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":327,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":446,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":445,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":444,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveChangesMap":357,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":759,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":633,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":412,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":375,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":404,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":693,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":624,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":368,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":664,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalFullCollectionExists":665,"org.apache.commons.collections4.list.TreeListTest.testListEquals":17,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":181,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":421,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":682,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":95,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":383,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":643,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":726,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetIteratorRemoveChangesMap":360,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":211,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":561,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":24,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":408,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":304,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":406,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":407,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":612,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":575,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":449,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":66,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":215,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":582,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":265,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":371,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":325,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":600,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":121,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":340,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":180,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":782,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":719,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":118,"org.apache.commons.collections4.CollectionUtilsTest.filter":731,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":541,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":785,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":669,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":221,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":258,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":762,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":94,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectHashCodeEqualsContract":578,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":10,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":767,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":763,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":284,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":315,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":458,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":486,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":384,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":385,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":477,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":478,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":479,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":82,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":238,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":608,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":636,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":435,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":629,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":64,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":721,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":496,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":232,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":150,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":581,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":14,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":727,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":736,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":411,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":768,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":257,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":602,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":432,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":287,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":282,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":481,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":301,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":546,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectHashCodeEqualsContract":56,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":170,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":518,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":498,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":764,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":123,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":422,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":386,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetIteratorRemoveChangesMap":410,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":743,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":492,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":483,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":355,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":267,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":382,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalEmptyCollectionExists":695,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":283,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":509,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":400,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":428,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":661,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":312,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":596,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":290,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":126,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":203,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":31,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":226,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":338,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":607,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":740,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":133,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":540,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":20,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":69,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":679,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":676,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":510,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":724,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":189,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":574,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":194,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":739,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":418,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":314,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":513,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":416,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":164,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":129,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":204,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":363,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":610,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":645,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":770,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":346,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":702,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":348,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":453,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":618,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":23,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":62,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsSelfHashCode":670,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":683,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":114,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":663,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":236,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":569,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":434,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":269,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":686,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":680,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":597,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":195,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":48,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":526,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":746,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":140,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":300,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":617,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":639,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":152,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":460,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":472,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":135,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":473,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":256,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":623,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":628,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":753,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":222,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":361,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":462,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":725,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":160,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":438,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":322,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":657,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":480,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":104,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":572,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":622,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":490,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":784,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":425,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":705,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":494,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":709,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":710,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":711,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":666,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":105,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":217,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":88,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":91,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":567,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":751,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":137,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":495,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":127,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":684,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":281,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":199,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":652,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":611,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":183,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":7,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":219,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":521,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":559,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":144,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":6,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":447,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":591,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":580,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":771,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":311,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":317,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":187,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":635,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":547,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":292,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":659,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":29,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":341,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":688,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":646,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":504,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":262},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"12a1d5ea-3f23-11e6-8969-e5ab0f928335","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl"},"failures":[1,2],"tindex":"12a3aaab-3f23-11e6-8969-a308e85715a1","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:227","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            if (value == null) {\n                return false;\n            } \n            return super.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl"},"failures":[3],"tindex":"12a3aaac-3f23-11e6-8969-5df4b8547e51","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl"},"failures":[4,5],"tindex":"12a3d1bd-3f23-11e6-8969-dd58d97f2fe8","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            synchronized(java.lang.Object) {\n                if (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) {\n                    return true;\n                } \n                return (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) || (decorated().equals(object));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl"},"failures":[6,7,8,9,10,11],"tindex":"12a3d1be-3f23-11e6-8969-0357c896e3ea","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((start1 - end1) > (end2 - end1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end1","end2":"end2","end1":"start1","start2":"end1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl"},"failures":[12],"tindex":"12a41fdf-3f23-11e6-8969-6db71654cb78","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a41fe0-3f23-11e6-8969-8fb2fba2b7a1","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Number) {\n                        return ((java.lang.Number)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        try {\n                            final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                            return java.text.NumberFormat.getInstance().parse(text);\n                        } catch (final java.text.ParseException e) {\n                        }\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"12a446f1-3f23-11e6-8969-ebf170ba53ac","method":{"position":"org.apache.commons.collections4.list.TreeList:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> c) {\n    if (c.isEmpty()) {\n        {\n            if (c.isEmpty()) {\n                return false;\n            } \n            int += c.size();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(c);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? cTree : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(cTree, int);\n            int += c.size();\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[51],"tindex":"12a446f2-3f23-11e6-8969-61589fddfe0e","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a46e03-3f23-11e6-8969-59fcde6658fd","method":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:134","type":"CtMethodImpl","sourcecode":"public void setEnumeration(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            org.apache.commons.collections4.iterators.EnumerationIterator.this.java.util.Enumeration<? extends E> = enumeration;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"12a46e04-3f23-11e6-8969-211ca1f6bb4c","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a49515-3f23-11e6-8969-d16fc5a98043","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:350","type":"CtMethodImpl","sourcecode":"private boolean selectR(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>> reference) {\n    if ((bitIndex >= 0) && (bitIndex < lengthInBits)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((h.int) <= bitIndex) {\n                if (!(h.isEmpty())) {\n                    reference.set(h);\n                    return false;\n                } \n                return true;\n            } \n            if (!(isBitSet(key, h.int, lengthInBits))) {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            } else {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits","bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a4bc26-3f23-11e6-8969-2d94019d32b3","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:57","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a4bc27-3f23-11e6-8969-416378866a75","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[65,66,67,68,69],"tindex":"12a4bc28-3f23-11e6-8969-a934b862c278","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl"},"failures":[70],"tindex":"12a4bc29-3f23-11e6-8969-d9105a3d9d01","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (timeUnit == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (timeUnit == null) {\n                        throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n                    } \n                    return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"tindex":"12a4e33a-3f23-11e6-8969-f58cf81c72fc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl"},"failures":[168],"tindex":"12a4e33b-3f23-11e6-8969-d78d515998d1","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl"},"failures":[],"tindex":"12a50a4c-3f23-11e6-8969-c108642ba314","method":{"position":"org.apache.commons.collections4.map.Flat3Map:857","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (boolean) {\n                return false;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getKey();\n            final java.lang.Object java.lang.Object = getValue();\n            return (key == null ? (other.getKey()) == null : key.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl"},"failures":[169],"tindex":"12a50a4d-3f23-11e6-8969-4733c7a24627","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[170],"tindex":"12a50a4e-3f23-11e6-8969-6d864b02804f","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        {\n            if (map != null) {\n                {\n                    if ((map.size()) > 0) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n                            if ((map.size()) > 0) {\n                                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                                decorated.clear();\n                                decorated.decorated().putAll(transformed);\n                            } \n                            return decorated;\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl"},"failures":[171,172,173,174,175,176,177,178,179,180,181,182],"tindex":"12a5586f-3f23-11e6-8969-478f9248aebd","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (i == (-1)) {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a55870-3f23-11e6-8969-8b7b2486a31e","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl"},"failures":[90,91,93,94,95,98,100,103,104,140,141,143,144,145,148],"tindex":"12a55871-3f23-11e6-8969-e3d3431fb7db","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1815","type":"CtMethodImpl","sourcecode":"private java.util.Map.Entry<V, K> createEntry(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node) {\n    if (node == null) {\n        {\n            return new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry<V, K>(node.getValue() , node.getKey());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[81,83,84,136,137],"tindex":"12a57f82-3f23-11e6-8969-439841d56ff6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[183,184],"tindex":"12a57f83-3f23-11e6-8969-bf81976b0ce5","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[185,186],"tindex":"12a57f84-3f23-11e6-8969-811053d034df","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a5a695-3f23-11e6-8969-8db0e1eb3511","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        {\n            if (map != null) {\n                {\n                    if ((map.size()) > 0) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n                            if ((map.size()) > 0) {\n                                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                                decorated.clear();\n                                decorated.decorated().putAll(transformed);\n                            } \n                            return decorated;\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl"},"failures":[187,188,189,190,191,192,193],"tindex":"12a5a696-3f23-11e6-8969-f7222fd4d8f8","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl"},"failures":[194,195],"tindex":"12a5a697-3f23-11e6-8969-cde4685c0b45","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a5cda8-3f23-11e6-8969-4348c6d228e2","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl"},"failures":[196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],"tindex":"12a5cda9-3f23-11e6-8969-375ab0ce4e9e","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a5f4ba-3f23-11e6-8969-6d8ac58e9b9f","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[213],"tindex":"12a61bcb-3f23-11e6-8969-cddda215f9b8","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl"},"failures":[214],"tindex":"12a61bcc-3f23-11e6-8969-2932831e2609","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl"},"failures":[215,216],"tindex":"12a61bcd-3f23-11e6-8969-531c179231a4","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            return entrySet().equals(other.entrySet());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[217,218],"tindex":"12a61bce-3f23-11e6-8969-a9f628b09cd0","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl"},"failures":[219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236],"tindex":"12a642df-3f23-11e6-8969-393b288dff60","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl"},"failures":[237],"tindex":"12a642e0-3f23-11e6-8969-090d38288823","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (a.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl"},"failures":[238,239,183,240,241,242,243,244,184,245,246,247,248],"tindex":"12a642e1-3f23-11e6-8969-3382934b7f5b","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a669f2-3f23-11e6-8969-45c62f37f03a","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a669f3-3f23-11e6-8969-adb34ceeac6e","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"12a669f4-3f23-11e6-8969-173864af2b9d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl"},"failures":[249],"tindex":"12a669f5-3f23-11e6-8969-b55bba9cb0be","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if (set == null) {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl"},"failures":[250,251,252],"tindex":"12a69106-3f23-11e6-8969-8541d1ebaa5d","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:361","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return retainAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return retainAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a69107-3f23-11e6-8969-a1da5bf6054a","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl"},"failures":[228],"tindex":"12a69108-3f23-11e6-8969-2f943ad3820b","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[198,199,201,202,203,205,208,253,254,255,256,257,258,259,260,261,262,263,62,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,64,297,298],"tindex":"12a6b819-3f23-11e6-8969-27b2f2874936","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key != null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl"},"failures":[299],"tindex":"12a6b81a-3f23-11e6-8969-a15695b23193","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[300],"tindex":"12a6df2b-3f23-11e6-8969-75720d993c4b","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl"},"failures":[301,302,303,304],"tindex":"12a6df2c-3f23-11e6-8969-5943c8b4962e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key1 != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    int int = 0;\n                    if (key1 != null) {\n                        h ^= key1.hashCode();\n                    } \n                    if (key2 != null) {\n                        h ^= key2.hashCode();\n                    } \n                    if (key3 != null) {\n                        h ^= key3.hashCode();\n                    } \n                    h += ~(h << 9);\n                    h ^= h >>> 14;\n                    h += h << 4;\n                    h ^= h >>> 10;\n                    return h;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,143,165,166,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,303,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,61,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,63,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523],"tindex":"12a6df2d-3f23-11e6-8969-0589c2a62052","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:62","type":"CtBinaryOperatorImpl"},"failures":[171,172,173,174,175,176,177,178,179,180,524,525,526,527,528,529,530,531,181,182],"tindex":"12a7063e-3f23-11e6-8969-9b57a9916952","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[532],"tindex":"12a7063f-3f23-11e6-8969-0fc48a3bc225","method":{"position":"org.apache.commons.collections4.ClosureUtils:129","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a70640-3f23-11e6-8969-c35bf11ca345","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl"},"failures":[533,534,306,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,52,551,552,553,554,555,556,557,324,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611],"tindex":"12a70641-3f23-11e6-8969-912d887e5508","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a72d52-3f23-11e6-8969-dd179b048aed","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().removeValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[612],"tindex":"12a72d53-3f23-11e6-8969-635e0e44750f","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a72d54-3f23-11e6-8969-3907f1f3c8c5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            return addAll(int, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a72d55-3f23-11e6-8969-e927af048992","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:123","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().contains(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl"},"failures":[613,614,615,616,617,618,619,53,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639],"tindex":"12a75466-3f23-11e6-8969-2962d1dd960d","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if ((a == null) || (a == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[381,640,641,642,490,643],"tindex":"12a75467-3f23-11e6-8969-ebe40b79ecf9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        {\n            return java.util.List<K>.get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl"},"failures":[6,7,8,9,10,11],"tindex":"12a75468-3f23-11e6-8969-b1eed932aef4","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if ((start1 - start1) > (start2 - end2)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"start1","end2":"start2","end1":"start1","start2":"end2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl"},"failures":[66,644,67,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670],"tindex":"12a77b79-3f23-11e6-8969-4f229e8a049d","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:100","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a77b7a-3f23-11e6-8969-5b85e4f0ca80","method":{"position":"org.apache.commons.collections4.MapUtils:386","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key, final java.lang.String defaultValue) {\n    if (map != null) {\n        {\n            java.lang.String java.lang.String = org.apache.commons.collections4.MapUtils.getString(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl"},"failures":[12,671],"tindex":"12a77b7b-3f23-11e6-8969-f1aecfccc40e","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                        return tmpQueue;\n                    } \n                    return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[672,673,674],"tindex":"12a7a28c-3f23-11e6-8969-6f0234b06057","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a7a28d-3f23-11e6-8969-c7e66c49706e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key1 != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    int int = 0;\n                    if (key1 != null) {\n                        h ^= key1.hashCode();\n                    } \n                    if (key2 != null) {\n                        h ^= key2.hashCode();\n                    } \n                    if (key3 != null) {\n                        h ^= key3.hashCode();\n                    } \n                    h += ~(h << 9);\n                    h ^= h >>> 14;\n                    h += h << 4;\n                    h ^= h >>> 10;\n                    return h;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a7a28e-3f23-11e6-8969-51333af3fd54","method":{"position":"org.apache.commons.collections4.map.SingletonMap:498","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.SingletonMap<?, V>.containsValue(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a7c99f-3f23-11e6-8969-f3b998c82f98","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"12a7c9a0-3f23-11e6-8969-376b1e75bd2d","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl"},"failures":[72,73,74,71,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,88,117,118,119,120,121,122,123,124,125,126,128,129,130,127,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,138,160,161,162,163,164,165,166,167],"tindex":"12a7c9a1-3f23-11e6-8969-a9a11eb46b11","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,0,690,691,692,693,694,695,696,697,300,698,699,700,701,702,703],"tindex":"12a7c9a2-3f23-11e6-8969-05753042bbd4","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl"},"failures":[704,705,706,707,613,614,615,616,617,708,618,619,53,620,709,710,711,712,713,714,621,715,716,717,718,719,720,721],"tindex":"12a7f0b3-3f23-11e6-8969-f1941d2b79fb","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl"},"failures":[722,723,724],"tindex":"12a7f0b4-3f23-11e6-8969-05816f23f9d8","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[725],"tindex":"12a817c5-3f23-11e6-8969-e9b10e66d6b9","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a817c6-3f23-11e6-8969-49a7b3b6819d","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        {\n            if (map != null) {\n                {\n                    if ((map.size()) > 0) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n                            if ((map.size()) > 0) {\n                                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                                decorated.clear();\n                                decorated.decorated().putAll(transformed);\n                            } \n                            return decorated;\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl"},"failures":[301,302],"tindex":"12a817c7-3f23-11e6-8969-55df15c0b27e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[726,727,728,729],"tindex":"12a83ed8-3f23-11e6-8969-7f53758cd7d4","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                return false;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (it.hasNext()) {\n                modified |= remove(it.next());\n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl"},"failures":[302,303,304],"tindex":"12a83ed9-3f23-11e6-8969-33101bd3c4d9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl"},"failures":[730,731,732,733],"tindex":"12a865ea-3f23-11e6-8969-571f2096c720","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a865eb-3f23-11e6-8969-194699f68ec8","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a865ec-3f23-11e6-8969-95f72f5606a9","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl"},"failures":[734,735,736,737,738,739,740,741,742,743,744,745,746,747],"tindex":"12a865ed-3f23-11e6-8969-d99a414c255f","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[748,749,750],"tindex":"12a865ee-3f23-11e6-8969-d7a55a229460","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[751,752,378,379,753,754,204,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780],"tindex":"12a88cff-3f23-11e6-8969-619efa9363e3","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a88d00-3f23-11e6-8969-e79650728632","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                        return tmpQueue;\n                    } \n                    return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[781],"tindex":"12a8b411-3f23-11e6-8969-4f2059939370","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a8b412-3f23-11e6-8969-496ccdbb29c4","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (timeUnit == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (timeUnit == null) {\n                        throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n                    } \n                    return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl"},"failures":[782],"tindex":"12a8b413-3f23-11e6-8969-91cee1ea3915","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a8b414-3f23-11e6-8969-8502f056ecf3","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl"},"failures":[783],"tindex":"12a8db25-3f23-11e6-8969-2d80f6078f98","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? defaultList : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[784,785,786,787,788],"tindex":"12a8db26-3f23-11e6-8969-cb359ff06f5d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[757,758,761,789,762,763,764,765,790,791,760,759],"tindex":"12a8db27-3f23-11e6-8969-933464b39bb2","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a90238-3f23-11e6-8969-1b27ee7f25f9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a90239-3f23-11e6-8969-5555b587feb7","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl"},"failures":[114,157],"tindex":"12a9023a-3f23-11e6-8969-f3754dedd153","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl"},"failures":[214],"tindex":"12a9294b-3f23-11e6-8969-a5608fc628c3","method":{"position":"org.apache.commons.collections4.TransformerUtils:208","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a9294c-3f23-11e6-8969-2ff79a6f8ed2","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            addComparator(comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"12a9294d-3f23-11e6-8969-cf1744afb87b","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328589870/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}