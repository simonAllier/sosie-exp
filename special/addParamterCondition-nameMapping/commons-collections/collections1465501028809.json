{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":438,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":304,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":1119,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":512,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":663,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":1029,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":721,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":952,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":476,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":493,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":379,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":885,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":35,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":1080,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":197,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":569,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":815,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":62,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":281,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":751,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":841,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":882,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":1010,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":293,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":745,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":1097,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":1067,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":447,"org.apache.commons.collections4.CollectionUtilsTest.collect":837,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":298,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":946,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":532,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":714,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":758,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":401,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":305,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":411,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":144,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":848,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":818,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":977,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":585,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":989,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEmptyMapCompatibility":601,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":443,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":629,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":391,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":829,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":389,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":1069,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":574,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":519,"org.apache.commons.collections4.map.TransformedMapTest.testValuesClearChangesMap":109,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":740,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":797,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":763,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":57,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":627,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":342,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":1001,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":1000,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":516,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":475,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":776,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":1091,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":908,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":252,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":385,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":670,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":722,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":372,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":1035,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":636,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":884,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":223,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":551,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":760,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":863,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":799,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":157,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":205,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":626,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":728,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":117,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":614,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":457,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":973,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":709,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":289,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveAll":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":679,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":448,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":785,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":192,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":405,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":953,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":934,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":362,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":674,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":103,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":741,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":704,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":7,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":365,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":658,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":439,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":1096,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":83,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":1011,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":159,"org.apache.commons.collections4.map.CompositeMapTest.testPut":945,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":409,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":725,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":576,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":983,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":854,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":455,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":1025,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":43,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":355,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":810,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSimpleSerialization":919,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":1016,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":12,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":382,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":21,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":730,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":1032,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":227,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":548,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":163,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":1009,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":508,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":425,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":739,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":19,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":872,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":470,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":333,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":509,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":42,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":661,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":177,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":951,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":34,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":179,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":959,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":686,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":680,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":271,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":473,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":504,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":370,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":185,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":287,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":929,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":602,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":543,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer":922,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":337,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":1108,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":749,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":767,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":421,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":742,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":1013,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":456,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":573,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":279,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":1020,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":480,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":4,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":296,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":490,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalFullCollectionExists":610,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":66,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":696,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":717,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":1056,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":819,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":927,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":866,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":928,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":985,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":803,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":175,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":247,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":619,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":643,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":167,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":888,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveAll":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":682,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":1110,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":694,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":982,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":178,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":295,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":1007,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":665,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":1027,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":404,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":938,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":496,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":506,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":393,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":942,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":196,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":31,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":511,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":498,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":1019,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":738,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":435,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":418,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRetainAll":108,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":416,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":736,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":445,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":492,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":895,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":437,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":502,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":845,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":690,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":1078,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":71,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":883,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":605,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":587,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":563,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":182,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":975,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCanonicalEmptyCollectionExists":920,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":1105,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":301,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":356,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":542,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":855,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":432,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":787,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectEqualsSelf":706,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":839,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":943,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":667,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":564,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":2,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":499,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":678,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":539,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":481,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":980,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":291,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":894,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":793,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":937,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":1044,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":809,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":145,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":771,"org.apache.commons.collections4.map.TransformedMapTest.testEmptyMapCompatibility":94,"org.apache.commons.collections4.ListUtilsTest.testPartition":595,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":715,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":1114,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":3,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":67,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":132,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":270,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":152,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":735,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":134,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":133,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":239,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":1072,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":1031,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":235,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":880,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":778,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":668,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":972,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":844,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":294,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":507,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":624,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":180,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":529,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":632,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":692,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":625,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":149,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":190,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":936,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":1076,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":1055,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":1023,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":817,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":1099,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":266,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":367,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":986,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":429,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":567,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":851,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":586,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":703,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":161,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":381,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":410,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":1068,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":407,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":765,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":893,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":69,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":525,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":890,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":1030,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":65,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":231,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":260,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":55,"org.apache.commons.collections4.map.TransformedMapTest.testMakeMap":91,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":869,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":1079,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":842,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":97,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":350,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":9,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":582,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":254,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":641,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":790,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":1015,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":1062,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":638,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":272,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":1048,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":44,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":156,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":240,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":999,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":950,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":442,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":191,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":193,"org.apache.commons.collections4.map.TransformedMapTest.testSimpleSerialization":114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":1057,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":782,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":22,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":533,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":383,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":400,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":695,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":126,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":127,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":125,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":346,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":724,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":731,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":142,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":589,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":322,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":246,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":408,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":538,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":251,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":618,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":320,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":561,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":1071,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":321,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":286,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":796,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":685,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":1017,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":747,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":1004,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":1085,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":430,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":654,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":1107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":862,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":575,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":420,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":253,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":912,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":716,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":1073,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":387,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":514,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionSize":911,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectHashCodeEqualsContract":806,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":376,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":846,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":424,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":752,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":194,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":233,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":801,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":415,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":864,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":85,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":118,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":527,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":834,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":832,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":484,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":651,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":611,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":263,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":556,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":164,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":1005,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":981,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":849,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":613,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":422,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":369,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":821,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":830,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":1075,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":1112,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":591,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":11,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":212,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":345,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":524,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":861,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":257,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":860,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":859,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":1002,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":836,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":1018,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":517,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":313,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":104,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":315,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":314,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":17,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":189,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":1033,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":664,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":896,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":933,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":769,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":16,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalEmptyCollectionExists":113,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":762,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetHashCode":904,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":10,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":646,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":1059,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":802,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":264,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":1120,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":483,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":691,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":13,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullValue":87,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":128,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":129,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":718,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":130,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":647,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":186,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":208,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":228,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":891,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":531,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":219,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":634,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":753,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":571,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":1037,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":428,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":930,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":359,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":413,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":403,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2":924,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectEqualsSelf":804,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":750,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":1090,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":261,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":594,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":766,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":772,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":267,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":510,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":1006,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":18,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":1106,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":153,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":1043,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":756,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":451,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":557,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":748,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":107,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":580,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":340,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":1093,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":656,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":976,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":568,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalEmptyCollectionExists":609,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":572,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":697,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":363,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":688,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":994,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":146,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":784,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":795,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":1086,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":800,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":461,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":968,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":174,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":737,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":453,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":1028,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":454,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":546,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetClearChangesMap":86,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":1060,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":544,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":1064,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":64,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":743,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionClear":905,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":276,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":536,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":371,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":528,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":583,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":612,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":683,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":1122,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":51,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":290,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":537,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":590,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":250,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":48,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":184,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":209,"org.apache.commons.collections4.CollectionUtilsTest.transform2":835,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":1003,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":141,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":398,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":1046,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":139,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":112,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":14,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":699,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":604,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":360,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":754,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":1087,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":1083,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":923,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":903,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":41,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":464,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":1061,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":465,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":463,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":282,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":1118,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":588,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":1,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":998,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":378,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":871,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":566,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":1100,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":988,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":198,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":840,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":666,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":892,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":961,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":45,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":979,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":907,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":939,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":331,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":598,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":166,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":436,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":719,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":581,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":791,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":689,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":482,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":226,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":312,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":204,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":899,"org.apache.commons.collections4.map.CompositeMapTest.testGet":944,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":99,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":434,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":702,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":865,"org.apache.commons.collections4.map.TransformedMapTest.testFullMapCompatibility":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":426,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":954,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRetainAll":77,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":229,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":285,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":794,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":631,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":987,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":910,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":52,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectHashCodeEqualsContract":713,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":485,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":478,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":559,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEqualsNull":707,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":33,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":358,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":853,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":1117,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":941,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":1058,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":1116,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":916,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":672,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":1098,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":662,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEqualsNull":805,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":386,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":593,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":1077,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":530,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":676,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":774,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":173,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":526,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":284,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":232,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":56,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":675,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":462,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":677,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":162,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":203,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":1014,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":373,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":349,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":452,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":621,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":306,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":458,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":308,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":579,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":1081,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":757,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":28,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":207,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":720,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":673,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":444,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":617,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToString":913,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":230,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":786,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":847,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":1095,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":237,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":336,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":549,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":827,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":1047,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":648,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":873,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":644,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":136,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":578,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":877,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":427,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":468,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":727,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":467,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":466,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":792,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":259,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":274,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":761,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":81,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":969,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":80,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":79,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":1111,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":495,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":732,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":330,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":328,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":329,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":693,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":823,"org.apache.commons.collections4.ListUtilsTest.testSubtract":822,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":75,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":649,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":698,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":1070,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":201,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":783,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":165,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":545,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":353,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":1054,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":106,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":957,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":187,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":450,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":123,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":124,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":628,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":779,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":1066,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":172,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":955,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":956,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":158,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":183,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":623,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":978,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":195,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":325,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":176,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":326,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":135,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsSelfHashCode":116,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":324,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":1115,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":992,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":8,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":147,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":1094,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":26,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":1082,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":488,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":521,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":248,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":335,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":522,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetClearChangesMap":82,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":824,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":967,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":1040,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":645,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":384,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":684,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":826,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":30,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":317,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":477,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":318,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":650,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":316,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":1063,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSerializeDeserializeThenCompare":607,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":1052,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":1104,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":906,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":940,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectEqualsSelf":616,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":918,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":395,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":867,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":659,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":773,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":775,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":474,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":917,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":265,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":948,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":54,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":947,"org.apache.commons.collections4.bag.HashBagTest.testEqualsNull":825,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":244,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":1036,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":1051,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":960,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":710,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":351,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":74,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":73,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":72,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":364,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":449,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":375,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":40,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":487,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":881,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":653,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":759,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":640,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":155,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":238,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":889,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":169,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":503,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":224,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":431,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":1053,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":283,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":1022,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":89,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":811,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":868,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":555,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":807,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":412,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":1092,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":789,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":505,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":870,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":489,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":744,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":833,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":213,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":220,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":995,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":657,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":366,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":603,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":32,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":712,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":949,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":84,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":966,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":816,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":1041,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":900,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":808,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":1042,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":479,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":700,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":770,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":570,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":879,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":550,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":633,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectHashCodeEqualsContract":660,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":53,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":733,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":887,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":297,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":584,"org.apache.commons.collections4.map.TransformedMapTest.testMapHashCode":78,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":148,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":309,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":374,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":311,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":310,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":76,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":38,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":388,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":909,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":216,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":1109,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":915,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":501,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":168,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":898,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":262,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":970,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":1088,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":37,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":876,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":399,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":1034,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":615,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":234,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":734,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":280,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":701,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":221,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":520,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":258,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":875,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":39,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":1103,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":423,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":150,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":828,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":59,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":993,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":392,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":540,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":181,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":874,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":669,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":852,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":225,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":1050,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":820,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":997,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":1045,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":469,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":341,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":780,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":1049,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":95,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":515,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":160,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":47,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":88,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":256,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":27,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":332,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":965,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":971,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectEqualsSelf":711,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":0,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalFullCollectionExists":111,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":554,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":23,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":560,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":500,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":935,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":255,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":926,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":931,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":932,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":402,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":925,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":417,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":850,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":414,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":764,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":1074,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":523,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":814,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCanonicalFullCollectionExists":921,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":788,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":642,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":394,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectHashCodeEqualsContract":708,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":596,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":630,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":962,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":347,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":964,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":214,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":963,"org.apache.commons.collections4.bag.TreeBagTest.testEqualsNull":831,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":886,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":327,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":723,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":300,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":344,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":622,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":655,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":599,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":323,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":278,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":798,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectEqualsSelf":687,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":357,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":419,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":1008,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":105,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":635,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":1021,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":459,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":440,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":1121,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":974,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":565,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":352,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":491,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":242,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":380,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":777,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":1089,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":843,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":486,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":348,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":552,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":856,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":857,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":858,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":996,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":729,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":991,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":1102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":460,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":671,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":1101,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":1113,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":1039,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":897,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":755,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":472,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":639,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":100,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":620,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":446,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":513,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":1026,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSimpleSerialization":608,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullKey":93,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":361,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":151,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":497,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":396,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":390,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":143,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":878,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":705,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":768,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":600,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":319,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":746,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":781,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":812,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":1084,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":838,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":1065,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":98,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":535,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":958,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":406,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":652,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":1024,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":1038,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":236,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":726,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":46,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":813,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":990,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":211,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":592,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":984,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":1012,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":61,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":339,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":681,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":302,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":115,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":901,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":154,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":268,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":902,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":343,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":562,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":597,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":171,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":914,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":547},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"8e1b4144-2e79-11e6-b380-f71926127cb5","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8e1dd955-2e79-11e6-b380-7ffd211230c9","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                {\n                    return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"8e1e0066-2e79-11e6-b380-af7a45bd0070","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"tindex":"8e1e0067-2e79-11e6-b380-21ce0fcc0e02","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"8e1f38e8-2e79-11e6-b380-07d27f660116","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"8e1f5ff9-2e79-11e6-b380-85aeb7d62bfc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,9,12,15,136,137,138,38,41,44,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,72,73,74,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383],"tindex":"8e1f870a-2e79-11e6-b380-ef423fb9d506","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[384],"tindex":"8e1fae1b-2e79-11e6-b380-fbacf7a13749","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"8e1fae1c-2e79-11e6-b380-3b728a0931ea","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"8e1fae1d-2e79-11e6-b380-ddf2087ba6f7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[385],"tindex":"8e1fd52e-2e79-11e6-b380-ff949bb14785","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[386,387],"tindex":"8e1fd52f-2e79-11e6-b380-f7df0e98aca5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,118,119,120,121,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"tindex":"8e1ffc40-2e79-11e6-b380-3b8303035c9d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"8e1ffc41-2e79-11e6-b380-23a67e7ee89d","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[481,482,483],"tindex":"8e202352-2e79-11e6-b380-31f57636597d","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[484,485],"tindex":"8e202353-2e79-11e6-b380-b554a5a0069c","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (obj == null) {\n                {\n                    if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n                    } \n                    return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[486,487,488,489],"tindex":"8e204a64-2e79-11e6-b380-75e7eb4862c4","method":{"position":"org.apache.commons.collections4.list.PredicatedList:132","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index > 0) {\n        {\n            validate(object);\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[490],"tindex":"8e204a65-2e79-11e6-b380-e348ba2d9989","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[491],"tindex":"8e204a66-2e79-11e6-b380-ad48b45870af","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[492,493,494,495,496,497,498,499],"tindex":"8e207177-2e79-11e6-b380-0b5b04b53596","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if ((entry.getValue()) == null) {\n                        return true;\n                    } \n                }\n            } else {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if (isEqualValue(value, entry.getValue())) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"8e209888-2e79-11e6-b380-0b582b9ce9d9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"8e209889-2e79-11e6-b380-f7aba555bb67","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[500,501],"tindex":"8e20988a-2e79-11e6-b380-a1fb24917977","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"8e20bf9b-2e79-11e6-b380-c1ac0d09b527","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"8e20bf9c-2e79-11e6-b380-9b1fc000d124","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if (obj instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtBinaryOperatorImpl","sourcecode":"(inverseBidiMap) == null"},"failures":[502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530],"tindex":"8e20bf9d-2e79-11e6-b380-71aa92364b31","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (normalMap == null) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverseBidiMap":"normalMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"8e20bf9e-2e79-11e6-b380-a756d1088df6","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,118,119,120,121,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,440,431,432,433,434,435,436,437,438,439,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"tindex":"8e20e6af-2e79-11e6-b380-d949844bd024","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"8e20e6b0-2e79-11e6-b380-7745052c87cc","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (obj == null) {\n                {\n                    if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n                    } \n                    return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"8e210dc1-2e79-11e6-b380-336363de1a4a","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[531,529,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,500,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,501,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,84,99,104,586,587,588,589,590,591,592,593,594],"tindex":"8e210dc2-2e79-11e6-b380-4bf5cfbd6b0b","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[595],"tindex":"8e210dc3-2e79-11e6-b380-4b99a1e4c2b7","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[596,597,598,599],"tindex":"8e2134d4-2e79-11e6-b380-a17a1ced9e17","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"8e2134d5-2e79-11e6-b380-6732e0c6513b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[600],"tindex":"8e2134d6-2e79-11e6-b380-972215a32616","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,601,411,602,412,413,414,415,118,119,120,121,416,417,418,419,420,421,422,423,424,425,426,603,604,605,606,607,608,609,610],"tindex":"8e215be7-2e79-11e6-b380-6b5e1c3dac41","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[611],"tindex":"8e215be8-2e79-11e6-b380-9b12228c4318","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return getList().lastIndexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[612],"tindex":"8e215be9-2e79-11e6-b380-0985afdf1f60","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[402,403,405,406,407,408,410,603,604,606,524,525,526,527,528,529,530,613,614,615,2,3,4,5,6,7,8,616,617,618,619,620,621,622,623,624,625,536,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,540,541,542,543,545,547,548,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,549,550,710,551,552,553,554,555,556,557,558,711,712,713,714,570,571,715,572,573,574,575,576,577,578,579,716,717,718,719,720,721,722,723,724,725,89,92,95,97,98,100,102,104,105,106,107,110,112,115,117,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,588,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,591,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,592,801,802,803,491,804,805,806,807],"tindex":"8e2182fa-2e79-11e6-b380-8d683acfd5ae","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[808,809],"tindex":"8e2182fb-2e79-11e6-b380-77b47f74c210","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"8e21aa0c-2e79-11e6-b380-1b0d1f540c23","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return doRemoveValue(value);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[810,811,812,813,814,815,816],"tindex":"8e21aa0d-2e79-11e6-b380-d3935b7020f6","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"8e21aa0e-2e79-11e6-b380-8fee145005cd","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"8e21d11f-2e79-11e6-b380-f992753bd8dc","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[817,818],"tindex":"8e21d120-2e79-11e6-b380-7faf01bf5793","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[819],"tindex":"8e21d121-2e79-11e6-b380-55b28d3a85e8","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8e21d122-2e79-11e6-b380-8511f1a9c5ea","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                {\n                    return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"8e21f833-2e79-11e6-b380-37a43006484e","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[820,821],"tindex":"8e21f834-2e79-11e6-b380-8bd58cbb3e20","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[822],"tindex":"8e21f835-2e79-11e6-b380-d7c1b6c21dd7","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next());\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"8e221f46-2e79-11e6-b380-3f757831cc97","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[823],"tindex":"8e221f47-2e79-11e6-b380-057adc9e472c","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            if (coll == null) {\n                {\n                    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                        {\n                            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[824,825,826,827,828,829,830,831,832,833,834],"tindex":"8e221f48-2e79-11e6-b380-953b4c78fb69","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"(inputIterator != null) && (transformer != null)"},"failures":[835,836,837],"tindex":"8e221f49-2e79-11e6-b380-af905457a1fc","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8e22465a-2e79-11e6-b380-e91f9475d9c5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"8e22465b-2e79-11e6-b380-1fc0d8183b74","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"8e22465c-2e79-11e6-b380-53d3a0571949","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[838],"tindex":"8e226d6d-2e79-11e6-b380-ddc7630180d2","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[839,840],"tindex":"8e226d6e-2e79-11e6-b380-0316037e2668","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868],"tindex":"8e226d6f-2e79-11e6-b380-e340199a6a1d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"8e229480-2e79-11e6-b380-1b67a7bad0c9","method":{"position":"org.apache.commons.collections4.MapUtils:822","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key, final float defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return defaultValue;\n            } \n            return floatObject.floatValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[869],"tindex":"8e229481-2e79-11e6-b380-09b7f41d5f07","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"8e229482-2e79-11e6-b380-99c47686d234","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[870,871,872,873,596,874,875,258,598,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,599,895,896,897],"tindex":"8e229483-2e79-11e6-b380-a97904dc75fa","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"8e22bb94-2e79-11e6-b380-79c4cf7144ab","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"8e22bb95-2e79-11e6-b380-c9a1445ff90e","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            if (coll == null) {\n                {\n                    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                        {\n                            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[898,899,900,901,902],"tindex":"8e22bb96-2e79-11e6-b380-099cd6d610a0","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label != null) {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[398,415],"tindex":"8e22e2a7-2e79-11e6-b380-4b829b7d560c","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[342,903,904,344,345,905,346,906,907,347,908,909,348,910,911,349,912,913,914,915,916,917,918,919,920,921],"tindex":"8e22e2a8-2e79-11e6-b380-7f2915b91539","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[922,923,924,925,926,927,928,929],"tindex":"8e22e2a9-2e79-11e6-b380-738b5fd57091","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                {\n                    return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[930,931,932,933,934,935,936,937,938,939,940],"tindex":"8e22e2aa-2e79-11e6-b380-2f07b08f4b62","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[941],"tindex":"8e2309bb-2e79-11e6-b380-d750fc7640a9","method":{"position":"org.apache.commons.collections4.BagUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[942,943],"tindex":"8e2309bc-2e79-11e6-b380-899fc419421c","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"8e2330cd-2e79-11e6-b380-ed593bc7ccb3","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            if (coll == null) {\n                {\n                    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                        {\n                            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl","sourcecode":"(equator) != null"},"failures":[],"tindex":"8e2330ce-2e79-11e6-b380-5b3acf8f55ad","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[335,350],"tindex":"8e2330cf-2e79-11e6-b380-357116b4eb6d","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,485,481,966,967,968,969,970,971,972,973,974,975,976,977,978,979,482,980,981,982,983,483,984,985,986,987,988,989,990,991,992,993,994,995,996],"tindex":"8e2356e0-2e79-11e6-b380-e91818c4323f","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map == null) {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    } else {\n        throw new java.lang.IllegalArgumentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[997,998,999,1000,1001,1002],"tindex":"8e237df1-2e79-11e6-b380-ed6605a59903","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:121","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator, final org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion) {\n    if (criterion == null) {\n        {\n            if (comparator == null) {\n                throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\");\n            } \n            if (criterion == null) {\n                throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n            } \n            return new org.apache.commons.collections4.functors.ComparatorPredicate<T>(object , comparator , criterion);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"criterion"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[147,148,154,155,1003,180,181,191,192,1004,205,1005,1006,1007,1008,206,207,1009,1010,208,1011,209,1012,1013,210,211],"tindex":"8e237df2-2e79-11e6-b380-918575787e97","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"8e237df3-2e79-11e6-b380-bb4f94e4da52","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1014,1015,1016],"tindex":"8e237df4-2e79-11e6-b380-9df5281263d0","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,386,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,387,1065,1066,1067,1068,1069,1070],"tindex":"8e23a505-2e79-11e6-b380-5bbb51bc75d5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if ((obj instanceof java.util.List) == false) {\n                {\n                    if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.List) == false) {\n                        return false;\n                    } \n                    final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n                    if ((other.size()) != (size())) {\n                        return false;\n                    } \n                    final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n                    final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n                    while ((it1.hasNext()) && (it2.hasNext())) {\n                        final java.lang.Object java.lang.Object = it1.next();\n                        final java.lang.Object java.lang.Object = it2.next();\n                        if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                            return false;\n                        } \n                    }\n                    return !((it1.hasNext()) || (it2.hasNext()));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[798,802,1071,1072,1073,593,594,1074],"tindex":"8e23a506-2e79-11e6-b380-0d6f1071f46a","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"8e23a507-2e79-11e6-b380-89f62f19ffbe","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"8e23cc18-2e79-11e6-b380-5b756f5cf893","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                {\n                    return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSet:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[],"tindex":"8e23cc19-2e79-11e6-b380-7d57a730a420","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[1075],"tindex":"8e23cc1a-2e79-11e6-b380-b352ba54de24","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[527,1076,1077,626,628,1078,1079,640,642,1080,1081,655,657,1082,1083,669,671,537,548,699,703,1084,1085,552,556,559,562,573,577,580,583,75,83,105,107,729,733,743,754,764,765,1086,1087,777,779,799,802,1088,1089],"tindex":"8e23cc1b-2e79-11e6-b380-2543a6deef6d","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[1090],"tindex":"8e23f32c-2e79-11e6-b380-454346703428","method":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformerPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformerPredicate<T>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"8e23f32d-2e79-11e6-b380-dd79566c7e73","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"8e23f32e-2e79-11e6-b380-d7fb66f143e4","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"8e23f32f-2e79-11e6-b380-a15a9f9ce25d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return doRemoveValue(value);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106],"tindex":"8e241a40-2e79-11e6-b380-7b6148d1b0f7","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[1107],"tindex":"8e241a41-2e79-11e6-b380-e58c2af79d3f","method":{"position":"org.apache.commons.collections4.MapUtils:1191","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> emptyIfNull(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return map == null ? java.util.Collections.<K, V>emptyMap() : map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[164,165,1108,198,199,1109,212,1110,1111,1112,1113,213,214,1114,1115,215,1116,216,1117,1118,217,218,224,225],"tindex":"8e244152-2e79-11e6-b380-d9ddceba7553","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[1119,1120,1121,1122,1011],"tindex":"8e244153-2e79-11e6-b380-d9418cd6100c","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"8e244154-2e79-11e6-b380-1bcd0f52e3c7","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if ((obj instanceof java.util.List) == false) {\n                {\n                    if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.List) == false) {\n                        return false;\n                    } \n                    final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n                    if ((other.size()) != (size())) {\n                        return false;\n                    } \n                    final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n                    final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n                    while ((it1.hasNext()) && (it2.hasNext())) {\n                        final java.lang.Object java.lang.Object = it1.next();\n                        final java.lang.Object java.lang.Object = it2.next();\n                        if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                            return false;\n                        } \n                    }\n                    return !((it1.hasNext()) || (it2.hasNext()));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"8e246865-2e79-11e6-b380-3d6e326fc30c","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"8e246866-2e79-11e6-b380-fde52155a85a","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"8e246867-2e79-11e6-b380-ad74529488e4","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}