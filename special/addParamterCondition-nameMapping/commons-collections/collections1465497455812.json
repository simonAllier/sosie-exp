{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":271,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":80,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":159,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":225,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":182,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":126,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":124,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":272,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":238,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":44,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":211,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":324,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":248,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":252,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":186,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":189,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":280,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":343,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":342,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":6,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":241,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":23,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":226,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":262,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":219,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":309,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":345,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":276,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":152,"org.apache.commons.collections4.CollectionUtilsTest.get":214,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":151,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":321,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":47,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":270,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":279,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":202,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":229,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":145,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":143,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":332,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":336,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":188,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":63,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":250,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":82,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":203,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":15,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":205,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":123,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":175,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":118,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":236,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":13,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":119,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":244,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":120,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":107,"org.apache.commons.collections4.CollectionUtilsTest.select":209,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":311,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":316,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":50,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":300,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":206,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":344,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":78,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":287,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":291,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":24,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":162,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":329,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":10,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":258,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":46,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":333,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":38,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":153,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":97,"org.apache.commons.collections4.CollectionUtilsTest.intersection":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":281,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":273,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":111,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":218,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":29,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":45,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":3,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":60,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":317,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":88,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":207,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":89,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":112,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":90,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":224,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":298,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":334,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":142,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":42,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":1,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":290,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":148,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":147,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":178,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":41,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":149,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":265,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":212,"org.apache.commons.collections4.map.CompositeMapTest.testPut":240,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":213,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":267,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":11,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":76,"org.apache.commons.collections4.map.CompositeMapTest.testGet":239,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":299,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":104,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":154,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":286,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":302,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":106,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":105,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":0,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":36,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":282,"org.apache.commons.collections4.set.CompositeSetTest.testContains":190,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":198,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":103,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":129,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":191,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":314,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":156,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":227,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":161,"org.apache.commons.collections4.ListUtilsTest.testSelect":260,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":328,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":113,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":288,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":254,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":222,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":93,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":65,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":295,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.CollectionUtilsTest.union":216,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":232,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":167,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":259,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":221,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":320,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":220,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":228,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":305,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":285,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":59,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":193,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":194,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":174,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":49,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":14,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":246,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":61,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":340,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":337,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":73,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":323,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":233,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":43,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":52,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":37,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":322,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":200,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":34,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":53,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":181,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":315,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":70,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":84,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":99,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":255,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":318,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":67,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":7,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":69,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":301,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":155,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":249,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":35,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":253,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":187,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":313,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":170,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":230,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":40,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":12,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":235,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":116,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":231,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":117,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":115,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":184,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":215,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":269,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":310,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":177,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":94,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":296,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":339,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":289,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":85,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":268,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":110,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":319,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":128,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":331,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":326,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":95,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":196,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":237,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":257,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":28,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":83,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":307,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":297,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":48,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":263,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":137,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":64,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":141,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":304,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":185,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":160,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":8,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":55,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":168,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":283,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":338,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":26,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":247,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":335,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":308,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":133,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":294,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":135,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":134,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":293,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":201,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":19,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":251,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":306,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":131,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":132,"org.apache.commons.collections4.map.SingletonMapTest.testClone":180,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":31,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":39,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":173,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":210,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":87,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":140,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":62,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":243,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":204,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":341,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":242,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":17,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":18,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":139,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":303,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":130,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":5,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":292,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":327,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":74,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":127},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"3c43d79b-2e71-11e6-9788-87ee69709722","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"3c4473dc-2e71-11e6-9788-7d295d4b8ae6","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[0],"tindex":"3c46e4dd-2e71-11e6-9788-99d1d0a61ca2","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (retain != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"retain"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"3c470bee-2e71-11e6-9788-97fcaa12ff48","method":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:112","type":"CtMethodImpl","sourcecode":"protected void checkBound(final int bound, final int len, final java.lang.String type) {\n    if (bound < 0) {\n        {\n            if (bound > len) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"));\n            } \n            if (bound < 0) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s before the start of the array. \"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"bound"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"3c470bef-2e71-11e6-9788-ef53b714b403","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"3c473300-2e71-11e6-9788-b966315f05bc","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY)) != null"},"failures":[154,155,156,157,158,159,160,161,162,163],"tindex":"3c4907c1-2e71-11e6-9788-4bf20caa323d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"tindex":"3c4955e2-2e71-11e6-9788-f94419f2d2dc","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Double"},"failures":[],"tindex":"3c4955e3-2e71-11e6-9788-7b53f93adc71","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:852","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object entry) {\n    if (entry instanceof java.lang.Double) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (entry instanceof java.util.Map.Entry) {\n                final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(entry));\n                final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.getEntry(e.getKey());\n                return (match != null) && (match.equals(e));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"3c497cf4-2e71-11e6-9788-057adc10e55c","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"3c497cf5-2e71-11e6-9788-4f2501124798","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtBinaryOperatorImpl","sourcecode":"cmp < 0"},"failures":[],"tindex":"3c49a406-2e71-11e6-9788-55c268ee8188","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"3c49a407-2e71-11e6-9788-f10d4d316cdc","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:312","type":"CtMethodImpl","sourcecode":"protected void broadcastNodeChanged(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n            final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator();\n            while (it.hasNext()) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cursor == null) {\n                    it.remove();\n                } else {\n                    cursor.nodeChanged(node);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:257","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[180,181,182,183,184],"tindex":"3c49cb18-2e71-11e6-9788-b7a01e6cbde7","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return isEqualKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtBinaryOperatorImpl","sourcecode":"retval != 0"},"failures":[185,186,187],"tindex":"3c49cb19-2e71-11e6-9788-93ede749b410","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"retval":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[188,189,190,191,192,193,194,195,196,197,198,199,157,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261],"tindex":"3c49f22a-2e71-11e6-9788-57d154ea7042","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if ((coll == null) || (coll == null)) {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"3c4a193b-2e71-11e6-9788-3d6761032399","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[],"tindex":"3c4a193c-2e71-11e6-9788-65f07735978c","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:174","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hash(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.System.identityHashCode(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343],"tindex":"3c4adc8d-2e71-11e6-9788-cfc9706333e5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) > (coll.size())) {\n        {\n            return addAll(int, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtBinaryOperatorImpl","sourcecode":"(entry.before) == null"},"failures":[],"tindex":"3c4b039e-2e71-11e6-9788-c7f1f8213414","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","before":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[344,345],"tindex":"3c4b039f-2e71-11e6-9788-f1bb1433d31f","method":{"position":"org.apache.commons.collections4.list.TreeList:810","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> addAll(org.apache.commons.collections4.list.TreeList.AVLNode<E> otherTree, final int currentSize) {\n    if (currentSize < 0) {\n        {\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = max();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = otherTree.min();\n            if ((otherTree.int) > (int)) {\n                final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = removeMax();\n                final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>();\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = otherTree;\n                int int = (s.int) + currentSize;\n                int int = 0;\n                while ((s != null) && ((s.int) > (getHeight(leftSubTree)))) {\n                    sParentAbsolutePosition = sAbsolutePosition;\n                    sAncestors.push(s);\n                    s = s.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n                    if (s != null) {\n                        sAbsolutePosition += s.int;\n                    } \n                }\n                maxNode.setLeft(leftSubTree, null);\n                maxNode.setRight(s, otherTreeMin);\n                if (leftSubTree != null) {\n                    leftSubTree.max().setRight(null, maxNode);\n                    leftSubTree.int -= currentSize - 1;\n                } \n                if (s != null) {\n                    s.min().setLeft(null, maxNode);\n                    s.int = (sAbsolutePosition - currentSize) + 1;\n                } \n                maxNode.int = (currentSize - 1) - sParentAbsolutePosition;\n                otherTree.int += currentSize;\n                s = maxNode;\n                while (!(sAncestors.isEmpty())) {\n                    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = sAncestors.pop();\n                    sAncestor.setLeft(s, null);\n                    s = sAncestor.balance();\n                }\n                return s;\n            } else {\n                otherTree = otherTree.removeMin();\n                final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>();\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode.this;\n                int int = s.int;\n                int int = 0;\n                while ((s != null) && ((s.int) > (getHeight(otherTree)))) {\n                    sParentAbsolutePosition = sAbsolutePosition;\n                    sAncestors.push(s);\n                    s = s.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n                    if (s != null) {\n                        sAbsolutePosition += s.int;\n                    } \n                }\n                otherTreeMin.setRight(otherTree, null);\n                otherTreeMin.setLeft(s, maxNode);\n                if (otherTree != null) {\n                    otherTree.min().setLeft(null, otherTreeMin);\n                    (otherTree.int)++;\n                } \n                if (s != null) {\n                    s.max().setRight(null, otherTreeMin);\n                    s.int = sAbsolutePosition - currentSize;\n                } \n                otherTreeMin.int = currentSize - sParentAbsolutePosition;\n                s = otherTreeMin;\n                while (!(sAncestors.isEmpty())) {\n                    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = sAncestors.pop();\n                    sAncestor.setRight(s, null);\n                    s = sAncestor.balance();\n                }\n                return s;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"currentSize"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":21,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}