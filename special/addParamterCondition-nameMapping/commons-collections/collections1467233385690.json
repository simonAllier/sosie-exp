{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":616,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":75,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":223,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":43,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":384,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":5,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":628,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":348,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":286,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":452,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":176,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":258,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":351,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":394,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":336,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":440,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":473,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":33,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":624,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":529,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":570,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":141,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":324,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":358,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":363,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":636,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":357,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":83,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":564,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":586,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":380,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":630,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":631,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":125,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":552,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":589,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":471,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":512,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":582,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":90,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":277,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":597,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":620,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":219,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":296,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":579,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":485,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":576,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":67,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":203,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":104,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":396,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":493,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":527,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":120,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":48,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":292,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":360,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":304,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":467,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":159,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":497,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":151,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":217,"org.apache.commons.collections4.CollectionUtilsTest.select":557,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":583,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":647,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":338,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":453,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":466,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":354,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":496,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":230,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":385,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":132,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":314,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":238,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":639,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":640,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable":424,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":638,"org.apache.commons.collections4.CollectionUtilsTest.intersection":562,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":216,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":374,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":295,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":633,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":345,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":62,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":625,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":183,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":482,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":226,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":233,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":293,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":463,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":138,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":343,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":195,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":617,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":135,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":99,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":478,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":402,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":614,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":332,"org.apache.commons.collections4.map.CompositeMapTest.testPut":569,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":588,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":387,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":390,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":398,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":425,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":499,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":507,"org.apache.commons.collections4.map.CompositeMapTest.testGet":568,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":613,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":341,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":0,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalEmptyCollectionExists":444,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":437,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":112,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":331,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":438,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":220,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":522,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":68,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":111,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":549,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":376,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectHashCodeEqualsContract":248,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":178,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":315,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":7,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":451,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":105,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":457,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":648,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":70,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":411,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":523,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":490,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":41,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":232,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":488,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":475,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":607,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":205,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":291,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":267,"org.apache.commons.collections4.CollectionUtilsTest.union":561,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":644,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":201,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":565,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":93,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":124,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":157,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":121,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":60,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":637,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":262,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":24,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":509,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":629,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":14,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":462,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":575,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":73,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":210,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":537,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":634,"org.apache.commons.collections4.list.TreeListTest.testRemove":161,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":401,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":84,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":356,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":4,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":25,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":383,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":500,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":621,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":408,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":326,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":415,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":81,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":80,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":535,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":459,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":349,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalFullCollectionExists":442,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":524,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":235,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":429,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":603,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":632,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":77,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":78,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":395,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":79,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":20,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":400,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":643,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":642,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":641,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":9,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":192,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":302,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":542,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":148,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":335,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":443,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":18,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":378,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":55,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":413,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":114,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":367,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionSize":432,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":208,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":321,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":87,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":107,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":251,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":479,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":337,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":470,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":275,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueElement":426,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":65,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":414,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":476,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":409,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":225,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":519,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":587,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":581,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":627,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":218,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":272,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":417,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":290,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":483,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":536,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":495,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":212,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":517,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":189,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":600,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":516,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":622,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":6,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":615,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":28,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":180,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":504,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":505,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":543,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectEqualsSelf":197,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":388,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":165,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":266,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":646,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":494,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":133,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":525,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":407,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":572,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":554,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":571,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":32,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":423,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":175,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":327,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":237,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":472,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectEqualsSelf":346,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":145,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":227,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":474,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":36,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":511,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":419,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":117,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":421,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":190,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":27,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":126,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":626,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":61,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":118,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":163,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":464,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":96,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":547,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":435,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":142,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":156,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":333,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":255,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":300,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":318,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":11,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":177,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":113,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":264,"org.apache.commons.collections4.ListUtilsTest.testPartition":137,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":393,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":484,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":168,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":539,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":503,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":534,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":276,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":531,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":513,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":431,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":86,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":271,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":228,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":242,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":369,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":428,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":590,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":546,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":26,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":12,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":329,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":213,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":131,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":204,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":221,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":143,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":297,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":214,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":110,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":553,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":259,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":555,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":455,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":188,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":573,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":158,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":538,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":418,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":533,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":550,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":416,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":10,"org.apache.commons.collections4.map.HashedMapTest.testClone":108,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":491,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":119,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":611,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":74,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":263,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":339,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":391,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":187,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":236,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":311,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":185,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":307,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectHashCodeEqualsContract":261,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":200,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":282,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":498,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":379,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":563,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":480,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":57,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":556,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":193,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":577,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":319,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":330,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":316,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":481,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":515,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":449,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":584,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":207,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":540,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":420,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":574,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":179,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":619,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":340,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":559,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":94,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":274,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":287,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":605,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":585,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":71,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":580,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":172,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":40,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":405,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":506,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":128,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":492,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":386,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":377,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":97,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":229,"org.apache.commons.collections4.set.CompositeSetTest.testContains":548,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":514,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":152,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":508,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":186,"org.apache.commons.collections4.map.LinkedMapTest.testClone":123,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":273,"org.apache.commons.collections4.ListUtilsTest.testSelect":544,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":198,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":278,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":468,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":567,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":359,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":51,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":72,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":454,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":155,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":299,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":612,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":85,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":566,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":256,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":458,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":52,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectEqualsSelf":247,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":140,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":241,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":602,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":153,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":154,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":181,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":599,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":592,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":306,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectHashCodeEqualsContract":371,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":352,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":521,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":606,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":328,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":164,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":365,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectHashCodeEqualsContract":347,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":66,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":134,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":593,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":17,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":122,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":149,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":211,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove":422,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":257,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":361,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":460,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":406,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectEqualsSelf":389,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":399,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":596,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":595,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":594,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":601,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":253,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":284,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":313,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":501,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":448,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":645,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":1,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":167,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":103,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":604,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":174,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":368,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":305,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":95,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":270,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":450,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":199,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":239,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":560,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":436,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":375,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":635,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToString":433,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":231,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":44,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":101,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":283,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":518,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":3,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":38,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":317,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":281,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":441,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":209,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":224,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":46,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":623,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":47,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":146,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":520,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":29,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":469,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":303,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":166,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":240,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":578,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":366,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":100,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":412,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsSelfHashCode":447,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":309,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":344,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":526,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":528,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":404,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":434,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":298,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":249,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":502,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":430,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":312,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":280,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":353,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":194,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":184,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":254,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":144,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":532,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":618,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":129,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":610,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":364,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":558,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":486,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":591,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":64,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectEqualsSelf":370,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":288,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":350,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":308,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":265,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":477,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":510,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":427,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":92,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":410},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"031503bf-3e3b-11e6-b76a-f1b62bbdcd76","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[10,11],"tindex":"031550e0-3e3b-11e6-b76a-91390c212f13","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:404","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"031550e1-3e3b-11e6-b76a-814975500a00","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (comparator == null) {\n                        comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n                    } \n                    return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[12],"tindex":"031577f2-3e3b-11e6-b76a-f7c5795dd0d1","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[13],"tindex":"031577f3-3e3b-11e6-b76a-2f3526fd3f7e","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:47","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((closures.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[14],"tindex":"031577f4-3e3b-11e6-b76a-b171f685464b","method":{"position":"org.apache.commons.collections4.SplitMapUtils:158","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"031577f5-3e3b-11e6-b76a-1124cb57875e","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[],"tindex":"03159f06-3e3b-11e6-b76a-579916b2ca66","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[15],"tindex":"03159f07-3e3b-11e6-b76a-f515626e48c4","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"03159f08-3e3b-11e6-b76a-01f16b9dfbd7","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (comparator == null) {\n                        comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n                    } \n                    return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[16,17,18,19,20,21,22],"tindex":"0315c619-3e3b-11e6-b76a-b9066d3474f4","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"0315c61a-3e3b-11e6-b76a-ebfee2cb371c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"0315c61b-3e3b-11e6-b76a-e73aec7cabe8","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i == (-1)) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[35,36],"tindex":"0315c61c-3e3b-11e6-b76a-a37c213f23a0","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0315ed2d-3e3b-11e6-b76a-1111f9833d9f","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"0315ed2e-3e3b-11e6-b76a-17c3cc7ff2e5","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[37,38,39],"tindex":"0315ed2f-3e3b-11e6-b76a-e1f8d6be4e38","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[40,41,42],"tindex":"03161440-3e3b-11e6-b76a-5b05312b3b5f","method":{"position":"org.apache.commons.collections4.map.Flat3Map:126","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                {\n                    if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                        return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(key);\n                    } \n                    if (key == null) {\n                        switch (int) {\n                            case 3 :\n                                if ((K) == null) {\n                                    return V;\n                                } \n                            case 2 :\n                                if ((K) == null) {\n                                    return V;\n                                } \n                            case 1 :\n                                if ((K) == null) {\n                                    return V;\n                                } \n                        }\n                    } else {\n                        if ((int) > 0) {\n                            final int int = key.hashCode();\n                            switch (int) {\n                                case 3 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        return V;\n                                    } \n                                case 2 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        return V;\n                                    } \n                                case 1 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        return V;\n                                    } \n                            }\n                        } \n                    }\n                    return null;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[43],"tindex":"03161441-3e3b-11e6-b76a-e3bb4c3e5caa","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"03161442-3e3b-11e6-b76a-57b44eb0522a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (k == null) {\n                        return null;\n                    } \n                    final K K = castKey(k);\n                    final int int = lengthInBits(key);\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    while (true) {\n                        if ((current.int) <= (path.int)) {\n                            if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                                return removeEntry(current);\n                            } else {\n                                return null;\n                            }\n                        } \n                        path = current;\n                        if (!(isBitSet(key, current.int, lengthInBits))) {\n                            current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        } else {\n                            current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[44],"tindex":"03161443-3e3b-11e6-b76a-2739c75eb270","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"03163b54-3e3b-11e6-b76a-37a09e6effd4","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"03163b55-3e3b-11e6-b76a-459930a3d6d1","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"03163b56-3e3b-11e6-b76a-03ddfaa204d7","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"03163b57-3e3b-11e6-b76a-1330b3917604","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[45,46],"tindex":"03163b58-3e3b-11e6-b76a-5befc414e727","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[47,48,10,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"03166269-3e3b-11e6-b76a-a9887d32bfbd","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                throw new java.lang.NullPointerException(\"Key must not be null\");\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[95],"tindex":"0316626a-3e3b-11e6-b76a-5fe27438aacf","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[96],"tindex":"0316626b-3e3b-11e6-b76a-db0b6dfd70e0","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"0316626c-3e3b-11e6-b76a-19fcea696c21","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            if (coll == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n                    for (final E E : coll) {\n                        list.add(transform(item));\n                    }\n                    return list;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[97],"tindex":"0316897d-3e3b-11e6-b76a-3f20f43d31ba","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closure == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[98],"tindex":"0316897e-3e3b-11e6-b76a-a91e06e73ce7","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"0316897f-3e3b-11e6-b76a-7b1dbf99ae90","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[13],"tindex":"03168980-3e3b-11e6-b76a-6da8303a538f","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[99,100,101,102,103,104],"tindex":"03168981-3e3b-11e6-b76a-812ec8a97c47","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[105,106],"tindex":"0316b092-3e3b-11e6-b76a-c7e5fadceddf","method":{"position":"org.apache.commons.collections4.CollectionUtils:1770","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> transformingCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(collection, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"0316b093-3e3b-11e6-b76a-0b5ab26b2078","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[107],"tindex":"0316b094-3e3b-11e6-b76a-b1e72f5b5136","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"0316b095-3e3b-11e6-b76a-1f77d6277804","method":{"position":"org.apache.commons.collections4.map.Flat3Map:126","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                {\n                    if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                        return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(key);\n                    } \n                    if (key == null) {\n                        switch (int) {\n                            case 3 :\n                                if ((K) == null) {\n                                    return V;\n                                } \n                            case 2 :\n                                if ((K) == null) {\n                                    return V;\n                                } \n                            case 1 :\n                                if ((K) == null) {\n                                    return V;\n                                } \n                        }\n                    } else {\n                        if ((int) > 0) {\n                            final int int = key.hashCode();\n                            switch (int) {\n                                case 3 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        return V;\n                                    } \n                                case 2 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        return V;\n                                    } \n                                case 1 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        return V;\n                                    } \n                            }\n                        } \n                    }\n                    return null;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,40,41,42,123,124,125,126,127,128,129,130,131,132,133,47,65,92,93],"tindex":"0316d7a6-3e3b-11e6-b76a-8db7c193b18f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[134,135],"tindex":"0316d7a7-3e3b-11e6-b76a-8d7fc2527db7","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1498","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[136],"tindex":"0316d7a8-3e3b-11e6-b76a-bb220aca5fb0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[137],"tindex":"0316d7a9-3e3b-11e6-b76a-45e9a5247fc2","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[138,139],"tindex":"0316feba-3e3b-11e6-b76a-81a169b25a91","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"0316febb-3e3b-11e6-b76a-a5d3b8cfaa4d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (k == null) {\n                        return null;\n                    } \n                    final K K = castKey(k);\n                    final int int = lengthInBits(key);\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    while (true) {\n                        if ((current.int) <= (path.int)) {\n                            if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                                return removeEntry(current);\n                            } else {\n                                return null;\n                            }\n                        } \n                        path = current;\n                        if (!(isBitSet(key, current.int, lengthInBits))) {\n                            current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        } else {\n                            current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[140,141],"tindex":"0316febc-3e3b-11e6-b76a-5923a159cefc","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[142,143],"tindex":"0316febd-3e3b-11e6-b76a-378342a2db9f","method":{"position":"org.apache.commons.collections4.list.PredicatedList:132","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[144,145],"tindex":"0316febe-3e3b-11e6-b76a-d5076642016b","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[],"tindex":"031725cf-3e3b-11e6-b76a-a78c9f069633","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((start2 - end2) > (start2 - start2)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end2","end2":"start2","end1":"start2","start2":"start2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"031725d0-3e3b-11e6-b76a-abe47a880597","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[146,147,148,149,150,151,41,42,152],"tindex":"031725d1-3e3b-11e6-b76a-b5e082c36904","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[105],"tindex":"03174ce2-3e3b-11e6-b76a-0f428c54b124","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"03174ce3-3e3b-11e6-b76a-550fe584590a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return false;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[153,154,155,156],"tindex":"03174ce4-3e3b-11e6-b76a-1f63e5bad01c","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[157],"tindex":"031773f5-3e3b-11e6-b76a-17532bea3fb2","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[158],"tindex":"031773f6-3e3b-11e6-b76a-ffca5306ceae","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"031773f7-3e3b-11e6-b76a-d5f93bf7df6f","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[159],"tindex":"031773f8-3e3b-11e6-b76a-df4e88d6c4f3","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasNext()) == false"},"failures":[],"tindex":"03179b09-3e3b-11e6-b76a-5d67dc153f90","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if ((iterator.hasNext()) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (arrayClass == null) {\n                throw new java.lang.NullPointerException(\"Array class must not be null\");\n            } \n            final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n            return list.toArray(array);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[160,161,162,163],"tindex":"03179b0a-3e3b-11e6-b76a-67fffd41d735","method":{"position":"org.apache.commons.collections4.list.TreeList:493","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> insert(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe <= 0) {\n                return insertOnLeft(indexRelativeToMe, obj);\n            } \n            return insertOnRight(indexRelativeToMe, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[164,165,166,167,168,169,170,171],"tindex":"03179b0b-3e3b-11e6-b76a-2f090ffb89dc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            return node == null ? null : node.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[172],"tindex":"03179b0c-3e3b-11e6-b76a-c13f20f84f3b","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:847","type":"CtBinaryOperatorImpl","sourcecode":"(input != null) && (predicate != null)"},"failures":[173],"tindex":"03179b0d-3e3b-11e6-b76a-eddec5fe7a38","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        {\n            if (predicate == null) {\n                return false;\n            } \n            if (input != null) {\n                for (final C C : input) {\n                    if (!(predicate.evaluate(o))) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[174,175,176,177,178],"tindex":"0317c21e-3e3b-11e6-b76a-cd1f53d4ca9b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isInternalNode())"},"failures":[],"tindex":"0317c21f-3e3b-11e6-b76a-f9d570c0a486","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isInternalNode())) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[179,180],"tindex":"0317c220-3e3b-11e6-b76a-15402663588a","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"0317e931-3e3b-11e6-b76a-4dac63e5ed98","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closure == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"0317e932-3e3b-11e6-b76a-5587fb3dcabd","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:161","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"0317e933-3e3b-11e6-b76a-39bf2819fd0e","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,58,60,61,62,63,64,65,67,69,72,73,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414],"tindex":"0317e934-3e3b-11e6-b76a-b73080d527e7","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"03181045-3e3b-11e6-b76a-19e2fc0d0830","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[20,21],"tindex":"03181046-3e3b-11e6-b76a-1f091ac19f1b","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"03181047-3e3b-11e6-b76a-138baaf21f11","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"03181048-3e3b-11e6-b76a-29384b8b8af2","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[415],"tindex":"03181049-3e3b-11e6-b76a-f10842c3ad93","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[416],"tindex":"0318104a-3e3b-11e6-b76a-8bfcdbaf392f","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[417],"tindex":"0318375b-3e3b-11e6-b76a-adcc26f61f18","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447],"tindex":"0318375c-3e3b-11e6-b76a-ef9c84bd48d9","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"0318375d-3e3b-11e6-b76a-27f17783b550","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0318375e-3e3b-11e6-b76a-31482518ebdc","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"0318375f-3e3b-11e6-b76a-477d710891e4","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n <= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.util.EmptyStackException();\n    } else {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"03183760-3e3b-11e6-b76a-45adc63576fb","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            if (coll == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n                    for (final E E : coll) {\n                        list.add(transform(item));\n                    }\n                    return list;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[448,362,366,449,450],"tindex":"03185e71-3e3b-11e6-b76a-9994d0aa624f","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:357","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            removeAllExpired(now());\n            return super.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[451,452],"tindex":"03185e72-3e3b-11e6-b76a-976212fc34a9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[453,454],"tindex":"03185e73-3e3b-11e6-b76a-93ea7eae60db","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"03185e74-3e3b-11e6-b76a-f3fc3c560a2d","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map != null) {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalArgumentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,103,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,143,520,521,522,43,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543],"tindex":"03188585-3e3b-11e6-b76a-cbd7ed3d76d2","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"03188586-3e3b-11e6-b76a-9f859069acf3","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575],"tindex":"03188587-3e3b-11e6-b76a-51561a4a032f","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"03188588-3e3b-11e6-b76a-218b38ce15bd","method":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:134","type":"CtMethodImpl","sourcecode":"public void setEnumeration(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.EnumerationIterator.this.java.util.Enumeration<? extends E> = enumeration;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"03188589-3e3b-11e6-b76a-b78f36e86408","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[576,577,578,579,580,581,164,165,166,582,583,584,585,586,181,182,587,183,184,185,186,588,187,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,167,168,169,170,613,171,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,0,632,633,634,1,635,636,637,638,639,640,641,642,643,2,644,645,3,4,646,647,5,6,7,8,9],"tindex":"0318858a-3e3b-11e6-b76a-bf01d23dff53","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"0318ac9b-3e3b-11e6-b76a-d51b23a1f8e0","method":{"position":"org.apache.commons.collections4.IteratorUtils:588","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[10,11],"tindex":"0318ac9c-3e3b-11e6-b76a-4be59abca264","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[581,612,3,5,7,8,9],"tindex":"0318ac9d-3e3b-11e6-b76a-ff7d7c09a8d5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"0318ac9e-3e3b-11e6-b76a-5b21d147abcf","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            return decorated().add(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"0318ac9f-3e3b-11e6-b76a-0d0da06a5ed8","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[0,1,2,4,6],"tindex":"0318aca0-3e3b-11e6-b76a-8dd8c71a1e27","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:851","type":"CtMethodImpl","sourcecode":"private void rotateRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getLeft(dataElement);\n            node.setLeft(leftChild.getRight(dataElement), dataElement);\n            if ((leftChild.getRight(dataElement)) != null) {\n                leftChild.getRight(dataElement).setParent(node, dataElement);\n            } \n            leftChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = leftChild;\n            } else if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                node.getParent(dataElement).setRight(leftChild, dataElement);\n            } else {\n                node.getParent(dataElement).setLeft(leftChild, dataElement);\n            }\n            leftChild.setRight(node, dataElement);\n            node.setParent(leftChild, dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[648],"tindex":"0318d3b1-3e3b-11e6-b76a-bd226ad08360","method":{"position":"org.apache.commons.collections4.BagUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[97],"tindex":"0318d3b2-3e3b-11e6-b76a-b7c475e5a3e1","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229086953/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}