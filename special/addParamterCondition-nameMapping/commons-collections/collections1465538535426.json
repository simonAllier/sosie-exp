{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":14,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":141,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":616,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":617,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":172,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":193,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":384,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":603,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":299,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":408,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":225,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":545,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":615,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":286,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":247,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":613,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":244,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":434,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":4,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":158,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":27,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":638,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":26,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":454,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":647,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":516,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":113,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":530,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":201,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":128,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":394,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":426,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":115,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":470,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":623,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":36,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":522,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":618,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":625,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":624,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":231,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":523,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":366,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":480,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":8,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":435,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":194,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":449,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":605,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":622,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":368,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":466,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":208,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":488,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":55,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":91,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":349,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":512,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":654,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":460,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":257,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":71,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":648,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":458,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":645,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":185,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":170,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":89,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":335,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":650,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":544,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":374,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":389,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":104,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":217,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":295,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":320,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":303,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":111,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":395,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":632,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":597,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":534,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":532,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":118,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":139,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":649,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":228,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":526,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":431,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":579,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":310,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":180,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":241,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":92,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":517,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":243,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":448,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":474,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":153,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":123,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":604,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":224,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":332,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":365,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":417,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":51,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":437,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":508,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":5,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":630,"org.apache.commons.collections4.map.CompositeMapTest.testPut":401,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":558,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":478,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":344,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":305,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":438,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":220,"org.apache.commons.collections4.map.CompositeMapTest.testGet":400,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":507,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":283,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalEmptyCollectionExists":657,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":367,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":410,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":524,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":163,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":556,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":87,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":284,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":61,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":447,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":659,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":348,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":78,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":586,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":302,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":186,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":46,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":254,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":280,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":287,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":281,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":282,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":376,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":155,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":547,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":16,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":81,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":311,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":188,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":150,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":151,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":149,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":263,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":336,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":498,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":627,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":539,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":211,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":350,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":531,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":569,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":319,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":562,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":261,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":94,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":521,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":80,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":407,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":415,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":191,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":639,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":181,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":527,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":583,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":202,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":542,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":21,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":602,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":147,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":146,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":513,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":37,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":148,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":631,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":200,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":637,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":199,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":276,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":372,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":198,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":371,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":234,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":275,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":35,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":525,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":195,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":197,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":568,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":500,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":537,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":549,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":355,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":626,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":427,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":316,"org.apache.commons.collections4.map.LRUMapTest.testClone":339,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":387,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":229,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":317,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":343,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":377,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":352,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":174,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":90,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":633,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":596,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":205,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":49,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":160,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":183,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":588,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":572,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":388,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":473,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":413,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":581,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":519,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":550,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":251,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":651,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":43,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":300,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":259,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":411,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":412,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":15,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":436,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":642,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":120,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":628,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":640,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":164,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":491,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":144,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":425,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":489,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":514,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":610,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":595,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":187,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":227,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":364,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":546,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":278,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":594,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":587,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":609,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":24,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":19,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":156,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":464,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":543,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":433,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":296,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":404,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":658,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":403,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":135,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":361,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":99,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":386,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":206,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":416,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":505,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":357,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":126,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":82,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":575,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":328,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":95,"org.apache.commons.collections4.map.LinkedMapTest.testReset":346,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":289,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":39,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":23,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":393,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":518,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":226,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":291,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":423,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":18,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":66,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":439,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":272,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":396,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsSelfHashCode":660,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":88,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":48,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":551,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":77,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":216,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":555,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":504,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":52,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":383,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":58,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":67,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":375,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":382,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":381,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":119,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":373,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":430,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":85,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":576,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":481,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":288,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":385,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":117,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":271,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":22,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":68,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":334,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":644,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":570,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":268,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":661,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":98,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":455,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":554,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":646,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":230,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":253,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":112,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":324,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":619,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":325,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":405,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":326,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":143,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":577,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":267,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":223,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":108,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":601,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":171,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":634,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":109,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":213,"org.apache.commons.collections4.map.HashedMapTest.testClone":215,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":110,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":446,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":629,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":502,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":548,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":479,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":161,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":269,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":476,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":262,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":392,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":270,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":585,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":307,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalFullCollectionExists":655,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":173,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":607,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":63,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":235,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":32,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":360,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":561,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":653,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":457,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":571,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":6,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":553,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":428,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":468,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":379,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":378,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":129,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":380,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":406,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":219,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":559,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":511,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":356,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":606,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":175,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":252,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":359,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":212,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":620,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":496,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":469,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":453,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":189,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":461,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":578,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":29,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":309,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":256,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":11,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":391,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":390,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":50,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":246,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":345,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":338,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":354,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":538,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":582,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":566,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":477,"org.apache.commons.collections4.map.LinkedMapTest.testClone":347,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":598,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":131,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":600,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":621,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":165,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":264,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":255,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":190,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":221,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":560,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":503,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":593,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":203,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":274,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":168,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":167,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":421,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":429,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":297,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":493,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":236,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":214,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":580,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":273,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":490,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":483,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":38,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":232,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":497,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":591,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":463,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":612,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":184,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":418,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":656,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":420,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":419,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":327,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":484,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":298,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":331,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":369,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":140,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":641,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":124,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":592,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":487,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":485,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":492,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":17,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":564,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":540,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":134,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":528,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":563,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":318,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":432,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":614,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":84,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":440,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":567,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":635,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":495,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":574,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":76,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":322,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":323,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":321,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":397,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":557,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":456,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":529,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":584,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":96,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":314,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":590,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":541,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":248,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":64,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":636,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":358,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":238,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":573,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":515,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":306,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":333,"org.apache.commons.collections4.map.LRUMapTest.testLRU":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":459,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":266,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":443,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":304,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":233,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":162,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":611,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":56,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":301,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":31,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":53,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":312,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":42,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":341,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":414,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":643,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":475,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":589,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":652,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":510,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":222,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":398,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":169,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":501,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":444,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":599,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":608,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":127,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":482,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":363,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":472,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":182,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":75,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":342,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":260,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":279,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":122,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":210,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":45},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"e19e93cb-2ed0-11e6-900b-532bc5565589","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value != null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"e1a01a6c-2ed0-11e6-900b-edbff2735092","method":{"position":"org.apache.commons.collections4.ArrayStack:152","type":"CtMethodImpl","sourcecode":"public int search(final java.lang.Object object) {\n    if (object != null) {\n        {\n            int int = (size()) - 1;\n            int int = 1;\n            while (i >= 0) {\n                final java.lang.Object java.lang.Object = get(i);\n                if (((object == null) && (current == null)) || ((object != null) && (object.equals(current)))) {\n                    return n;\n                } \n                i--;\n                n++;\n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtBinaryOperatorImpl","sourcecode":"listIterator == null"},"failures":[],"tindex":"e1a0417d-2ed0-11e6-900b-b5d3fbe423a6","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:186","type":"CtMethodImpl","sourcecode":"public void setListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.java.util.ListIterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"listIterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[0,1],"tindex":"e1a08f9e-2ed0-11e6-900b-b56a4f92ed96","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if ((b == null) || (b == null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"e1a0b6af-2ed0-11e6-900b-e7574468bedc","method":{"position":"org.apache.commons.collections4.ClosureUtils:304","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"e1a0ddc0-2ed0-11e6-900b-97dbcda3a7f3","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[2],"tindex":"e1a104d1-2ed0-11e6-900b-0f47f31ef95c","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:186","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[],"tindex":"e1a12be2-2ed0-11e6-900b-5b724042bc75","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value != null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[],"tindex":"e1a17a03-2ed0-11e6-900b-f7a70f189f1f","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (bitIndex < 0) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"bitIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[],"tindex":"e1a1a114-2ed0-11e6-900b-5506c3a9c7ec","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"key3"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[3,4,5,6,7,8,9,10],"tindex":"e1a1ef35-2ed0-11e6-900b-73877ef06172","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:537","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.getValue(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[11],"tindex":"e1a21646-2ed0-11e6-900b-bb47076c0953","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            if (closure == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (closure == null) {\n                        throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl","sourcecode":"cachedNode == null"},"failures":[],"tindex":"e1a23d57-2ed0-11e6-900b-55bac0b26c63","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:465","type":"CtMethodImpl","sourcecode":"protected void addNodeBefore(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[12,13,14],"tindex":"e1a28b78-2ed0-11e6-900b-f151353be001","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2065","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"e1a28b79-2ed0-11e6-900b-678dd5772d50","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        {\n            return entry.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"e1a28b7a-2ed0-11e6-900b-d5622e410fdd","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[15,16,17,18,19],"tindex":"e1a2b28b-2ed0-11e6-900b-7bdbe655ecc4","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof java.util.Map<?, ?>) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(object, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"e1a2b28c-2ed0-11e6-900b-c72d82606d13","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtBinaryOperatorImpl","sourcecode":"(callCounter) == 0"},"failures":[20,1,21,22,23,24,25,26,27,28],"tindex":"e1a2d99d-2ed0-11e6-900b-455ace1dc282","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i == 0) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"callCounter":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"e1a2d99e-2ed0-11e6-900b-5784cdd42727","method":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:201","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.removeNode(node);\n            addNodeToCache(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"e1a2d99f-2ed0-11e6-900b-3fd3e6ad7c0c","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map == null) {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395],"tindex":"e1a300b0-2ed0-11e6-900b-df76a1143643","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:625","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected void ensureCapacity(final int newCapacity) {\n    if (newCapacity == 0) {\n        {\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int;\n            if (newCapacity <= oldCapacity) {\n                return ;\n            } \n            if ((int) == 0) {\n                int = calculateThreshold(newCapacity, float);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[newCapacity];\n            } else {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[newCapacity];\n                (int)++;\n                for (int int = oldCapacity - 1 ; i >= 0 ; i--) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = oldEntries[i];\n                    if (entry != null) {\n                        oldEntries[i] = null;\n                        do {\n                            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            final int int = hashIndex(entry.int, newCapacity);\n                            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = newEntries[index];\n                            newEntries[index] = entry;\n                            entry = next;\n                        } while (entry != null );\n                    } \n                }\n                int = calculateThreshold(newCapacity, float);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = newEntries;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"newCapacity"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"e1a34ed1-2ed0-11e6-900b-63a7f07b67f7","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.iterators.ArrayListIterator.this.lastItemIndex) == (-1)"},"failures":[],"tindex":"e1a34ed2-2ed0-11e6-900b-73db6fa5c979","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (bitIndex == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[172,396,164,169],"tindex":"e1a375e3-2ed0-11e6-900b-09a4a8d8f067","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:528","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[397,256,398,257,399,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297],"tindex":"e1a375e4-2ed0-11e6-900b-db678c68ce85","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456],"tindex":"e1a39cf5-2ed0-11e6-900b-f3279872a410","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map != null) {\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"e1a46046-2ed0-11e6-900b-e3c32e3b00b9","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,12,508,13,14,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549],"tindex":"e1a54aa7-2ed0-11e6-900b-4dc1875a83b4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"e1a571b8-2ed0-11e6-900b-297369f62d2f","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            if (closure == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (closure == null) {\n                        throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[550,551,552,553,554,555,556,557,558,559,560,561,562],"tindex":"e1a598c9-2ed0-11e6-900b-2bee03291d88","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtBinaryOperatorImpl","sourcecode":"(1 <= otherCount) && (otherCount <= myCount)"},"failures":[],"tindex":"e1a598ca-2ed0-11e6-900b-a7424457a49c","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if ((1 <= index) && (otherCount <= index)) {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"myCount":"index","otherCount":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"e1a5bfdb-2ed0-11e6-900b-d173afc1be38","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(count)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"count"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,563,504,505,506,507,12,508,13,14,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549],"tindex":"e1a5e6ec-2ed0-11e6-900b-efcb27aa326e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1888","type":"CtMethodImpl","sourcecode":"private void setParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"e1a60dfd-2ed0-11e6-900b-79fc1e891d21","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o instanceof org.w3c.dom.Node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[564,565],"tindex":"e1a6350e-2ed0-11e6-900b-81e353c28e55","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:143","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (int) - 1;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i--;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasNext()) == false"},"failures":[],"tindex":"e1a6350f-2ed0-11e6-900b-957cb2a48da3","method":{"position":"org.apache.commons.collections4.IteratorUtils:460","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> unmodifiableListIterator(final java.util.ListIterator<E> listIterator) {\n    if ((listIterator.hasNext()) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(listIterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"listIterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.iterators.ArrayListIterator.this.lastItemIndex) == (-1)"},"failures":[],"tindex":"e1a63510-2ed0-11e6-900b-f349b2250233","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:514","type":"CtMethodImpl","sourcecode":"protected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashIndex == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = createEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex], hashCode, key, value);\n            addEntry(entry, hashIndex);\n            (int)++;\n            checkCapacity();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"hashIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[566],"tindex":"e1a65c21-2ed0-11e6-900b-ef2224f9f18a","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (input != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                return false;\n            } \n            if (input != null) {\n                for (final C C : input) {\n                    if (!(predicate.evaluate(o))) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590],"tindex":"e1a65c22-2ed0-11e6-900b-bb4e4a4867c6","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:504","type":"CtMethodImpl","sourcecode":"protected void nodeRemoved(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) && (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>))) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n                boolean = true;\n            } else if (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                boolean = false;\n            } else if (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n                boolean = true;\n                (int)--;\n            } else {\n                boolean = false;\n                boolean = false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e1a68333-2ed0-11e6-900b-ddc59185e210","method":{"position":"org.apache.commons.collections4.map.LinkedMap:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtBinaryOperatorImpl","sourcecode":"(beforeFirst) || (removed)"},"failures":[],"tindex":"e1a68334-2ed0-11e6-900b-cda584c2c3c5","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1945","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) {\n    if (toInclusive || toInclusive) {\n        {\n            return new RangeEntryMap(fromKey , fromInclusive , toKey , toInclusive);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removed":"toInclusive","beforeFirst":"toInclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[591,592,593,594,595,596,597,598,599],"tindex":"e1a6aa45-2ed0-11e6-900b-ab9d5203ef86","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[600,601,602,603,604],"tindex":"e1a6aa46-2ed0-11e6-900b-35e9180949b0","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (value instanceof java.util.Iterator<?>) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtBinaryOperatorImpl","sourcecode":"cmp < 0"},"failures":[169,340,341,344,605,606,607,608,609],"tindex":"e1a6aa47-2ed0-11e6-900b-db22e424e63e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:492","type":"CtMethodImpl","sourcecode":"protected void reuseEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashIndex < 0) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex];\n            entry.int = hashCode;\n            entry.java.lang.Object = key;\n            entry.java.lang.Object = value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"hashIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Double"},"failures":[],"tindex":"e1a6d158-2ed0-11e6-900b-d18702a62901","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 instanceof java.lang.Double) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661],"tindex":"e1a6d159-2ed0-11e6-900b-a97f63c38216","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[],"tindex":"e1a6f86a-2ed0-11e6-900b-e9cc7ad0e056","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":48,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}