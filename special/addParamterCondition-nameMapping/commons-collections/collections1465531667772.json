{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":238,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":26,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":78,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":233,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":344,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":93,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":505,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":258,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":203,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":256,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":319,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":120,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":310,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":324,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":218,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":146,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":7,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":370,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":469,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":173,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":271,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":375,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":90,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":77,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":332,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":460,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":396,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":239,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":453,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":210,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":400,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":352,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":429,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":51,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":15,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":485,"org.apache.commons.collections4.CollectionUtilsTest.select":139,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":43,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":80,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":311,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":436,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":354,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":281,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":470,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":314,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":228,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":176,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":175,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":408,"org.apache.commons.collections4.CollectionUtilsTest.intersection":144,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":349,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":494,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":434,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":476,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":291,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":18,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":323,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":451,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":170,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":392,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":440,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":219,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":441,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":187,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":36,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":348,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":72,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":303,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":495,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":0,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":163,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":33,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":162,"org.apache.commons.collections4.map.CompositeMapTest.testPut":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":189,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":474,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":206,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":248,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":34,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":345,"org.apache.commons.collections4.map.CompositeMapTest.testGet":118,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":368,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":299,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":430,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":153,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":389,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":393,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":432,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":431,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":57,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":500,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":493,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":364,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":446,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":131,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":27,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":276,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":246,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":358,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":217,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":382,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":383,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":381,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":338,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":198,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":427,"org.apache.commons.collections4.CollectionUtilsTest.union":143,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":449,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":11,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":475,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":147,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":463,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":465,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":478,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":450,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":296,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":172,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":125,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":159,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":252,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":455,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":452,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":174,"org.apache.commons.collections4.list.TreeListTest.testRemove":41,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":209,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":156,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":379,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":67,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":378,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":317,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":8,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":214,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":380,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":220,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":269,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":458,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":343,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":457,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":320,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":456,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":351,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":418,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":225,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":251,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":65,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":204,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":21,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":29,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":71,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":42,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":244,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":110,"org.apache.commons.collections4.map.LRUMapTest.testClone":88,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":359,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":473,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":300,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":316,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":395,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":459,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":501,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":10,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":386,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":322,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":215,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":466,"org.apache.commons.collections4.list.TreeListTest.testListEquals":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":277,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":30,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":167,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":443,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":410,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":63,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":367,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":292,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":423,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":195,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":307,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":414,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":504,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":168,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":109,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":454,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":157,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":270,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":17,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":108,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":107,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":261,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":384,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":301,"org.apache.commons.collections4.map.SingletonMapTest.testMapRemove":366,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":437,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":122,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":213,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":280,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":121,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":259,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":40,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":221,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":227,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":37,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":477,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":390,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":47,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":398,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":468,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":171,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":377,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":66,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":399,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":62,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":247,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":342,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":425,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":304,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":394,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":3,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":325,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":202,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":362,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":16,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":309,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":496,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":86,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":85,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":84,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":397,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":79,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":257,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":409,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":231,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":263,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":128,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":222,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":313,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":484,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":48,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":363,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":4,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEqualsNull":328,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":135,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":350,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":445,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":137,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":95,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":327,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":480,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":123,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":237,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":481,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":482,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":435,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":336,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":132,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":347,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":404,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":490,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":424,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":405,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":406,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":161,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":245,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":28,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":190,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":226,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":387,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":184,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":337,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":111,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":87,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":341,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":357,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":145,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":308,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":138,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":260,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":73,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":420,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":223,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":60,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":182,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":479,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":64,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":53,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":82,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":81,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":371,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":83,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":124,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":165,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":13,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":141,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":250,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":444,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":499,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":183,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":150,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":498,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":181,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":278,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":68,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":211,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":56,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":467,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":275,"org.apache.commons.collections4.set.CompositeSetTest.testContains":130,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":14,"org.apache.commons.collections4.CollectionUtilsTest.isFull":5,"org.apache.commons.collections4.list.TreeListTest.testBug35258":46,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":101,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":488,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":155,"org.apache.commons.collections4.ListUtilsTest.testSelect":126,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":9,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":372,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":149,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":69,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":44,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":447,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":242,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":346,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":401,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":148,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":403,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":12,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":230,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":290,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":438,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":205,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":112,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":315,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":185,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":266,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":461,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsContract":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":268,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":197,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":224,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":330,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":385,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":253,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":255,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":297,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":94,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":35,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":321,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":326,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":295,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":243,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":483,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":32,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":212,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":265,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":282,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":154,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":374,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":232,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":369,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":306,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":298,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":117,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":421,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":272,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":419,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":91,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":158,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":318,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":262,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":289,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":288,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":391,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":287,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":229,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":335,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":284,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":285,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":286,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":339,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":376,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":25,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":442,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":361,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":169,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":356,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":113,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":100,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":334,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":235,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":417,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":340,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":249,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":355,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":241,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":388,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":416,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":31,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":502,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":39,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":503,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":491,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":471,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":201,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":188,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":38,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":105,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":302,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":164,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":415,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":103,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":104,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":413,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":426,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":140,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":186,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":448,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":489,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":58,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":492,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":428,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":472,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":412,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":365,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":462,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":216},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[0,1,2,3,4],"tindex":"e42de46b-2ec0-11e6-a21f-7bfdeaec8471","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[5],"tindex":"e42ea7bc-2ec0-11e6-a21f-ab09bda3e959","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e42ea7bd-2ec0-11e6-a21f-fb60aacb1916","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[6,7,8,9,10,11,12],"tindex":"e42ecece-2ec0-11e6-a21f-391cd6557b96","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[13,14,15],"tindex":"e42ececf-2ec0-11e6-a21f-e552506b5369","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[16,17],"tindex":"e42ef5e0-2ec0-11e6-a21f-674f623d621f","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"e42f1cf1-2ec0-11e6-a21f-21bbcc9c6256","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"e42f4402-2ec0-11e6-a21f-c7291527cfaa","method":{"position":"org.apache.commons.collections4.ListUtils:147","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> sum(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list1.size())) {\n        {\n            return org.apache.commons.collections4.ListUtils.subtract(org.apache.commons.collections4.ListUtils.union(list1, list2), org.apache.commons.collections4.ListUtils.intersection(list1, list2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[18,19,20,21,22,23],"tindex":"e42f6b13-2ec0-11e6-a21f-d160ea1c59cc","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[24,25,26,27,28,29,30],"tindex":"e42f6b14-2ec0-11e6-a21f-8d14baa643e0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[31,32,33,34,35],"tindex":"e42f9225-2ec0-11e6-a21f-5d01f100404c","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[36,37],"tindex":"e42fb936-2ec0-11e6-a21f-231626c9501e","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[38,39],"tindex":"e42fb937-2ec0-11e6-a21f-0fb53e4f1bb2","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if ((b == null) || (a == null)) {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,6,7,8,9,64,10,65,66,11,67,68,69],"tindex":"e42fe048-2ec0-11e6-a21f-a3229f0c4446","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index > 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"e42fe049-2ec0-11e6-a21f-cf5a2c2a09db","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[112,113],"tindex":"e430075a-2ec0-11e6-a21f-a765022fb1be","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e430075b-2ec0-11e6-a21f-b52d00a2e493","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) == 0"},"failures":[114],"tindex":"e430075c-2ec0-11e6-a21f-2f384b63aecf","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:92","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> map) {\n    if ((map.size()) == 0) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n            } \n            if ((map.size()) == 0) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = map.remove(null);\n            final int int = map.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : map.entrySet()) {\n                preds[i] = entry.getKey();\n                transformers[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , preds , transformers , defaultTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[21,22],"tindex":"e4302e6d-2ec0-11e6-a21f-f1cc9ab40a8b","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"e4302e6e-2ec0-11e6-a21f-23924c172dee","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"e430557f-2ec0-11e6-a21f-99d5a453e9f4","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"e4305580-2ec0-11e6-a21f-51a3061a0fc3","method":{"position":"org.apache.commons.collections4.list.TransformedList:79","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.TransformedList<E> org.apache.commons.collections4.list.TransformedList<E> = new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(list.toArray()));\n                list.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[115,116,117],"tindex":"e4305581-2ec0-11e6-a21f-af92dd8ed9af","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"e4307c92-2ec0-11e6-a21f-29d726b6de5f","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"e4307c93-2ec0-11e6-a21f-756560c5ac46","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (offsetInBits == 0) {\n        {\n            final int int = offsetInBits + lengthInBits;\n            if (offsetLength > (lengthInBits(key))) {\n                throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n            } \n            if (offsetLength == 0) {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n            } \n            return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[150],"tindex":"e4307c94-2ec0-11e6-a21f-a373726629f9","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e430a3a5-2ec0-11e6-a21f-3d7590a8198f","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[151],"tindex":"e430a3a6-2ec0-11e6-a21f-f1288dbb10f6","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[152],"tindex":"e430a3a7-2ec0-11e6-a21f-0fb61f3b42c6","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[153,154,155,25,156,26,157,27,28,29],"tindex":"e430cab8-2ec0-11e6-a21f-79c57c6170d9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node == null) || (node.isBlack(dataElement));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:238","type":"CtBinaryOperatorImpl","sourcecode":"put instanceof java.util.Map"},"failures":[158,159],"tindex":"e430cab9-2ec0-11e6-a21f-c5c45c074df9","method":{"position":"org.apache.commons.collections4.SplitMapUtils:234","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> writableMap(final org.apache.commons.collections4.Put<K, V> put) {\n    if (put instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (put == null) {\n                throw new java.lang.IllegalArgumentException(\"Put must not be null\");\n            } \n            if (put instanceof java.util.Map) {\n                return ((java.util.Map<K, V>)(put));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(put);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"put":"put"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[160],"tindex":"e430f1ca-2ec0-11e6-a21f-5f928d79cadc","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,153,174,154,175,176,177,178,179,180,155,25,156,26,157,27,28,29,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],"tindex":"e430f1cb-2ec0-11e6-a21f-0b971e2c278d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getRight(dataElement)) != null) {\n                rval = leastNode(node.getRight(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235],"tindex":"e43118dc-2ec0-11e6-a21f-7bc615b70573","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[236,237],"tindex":"e43118dd-2ec0-11e6-a21f-dd5113b17d89","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e43118de-2ec0-11e6-a21f-b1861175cdd8","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[238,239,240,241,242,79,101,243,244,245,246],"tindex":"e4313fef-2ec0-11e6-a21f-932591407f4c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:318","type":"CtMethodImpl","sourcecode":"private void _putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = map.size();\n            if (mapSize == 0) {\n                return ;\n            } \n            final int int = ((int)((((int) + mapSize) / (float)) + 1));\n            ensureCapacity(calculateNewCapacity(newSize));\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"e4313ff0-2ec0-11e6-a21f-ef5ff4620a60","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(obj);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    final java.lang.Object java.lang.Object = n.getKey();\n                    if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"e4316701-2ec0-11e6-a21f-adc2ff8d4062","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e4316702-2ec0-11e6-a21f-4fd810d095fd","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[247,248,249],"tindex":"e4316703-2ec0-11e6-a21f-1701acb2ba6c","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[250,251],"tindex":"e4318e14-2ec0-11e6-a21f-55c8ae45ddb2","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[252,253,254,255],"tindex":"e4318e15-2ec0-11e6-a21f-3bb0899ca62c","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                if (set.contains(obj)) {\n                    return set.remove(obj);\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"e4318e16-2ec0-11e6-a21f-5121aa5a3de8","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"e431b527-2ec0-11e6-a21f-93030f7c6f48","method":{"position":"org.apache.commons.collections4.PredicateUtils:273","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[],"tindex":"e431b528-2ec0-11e6-a21f-57d88572aa0c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301],"tindex":"e431dc39-2ec0-11e6-a21f-8f359140631a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[302],"tindex":"e432034a-2ec0-11e6-a21f-9b15f02d7b3b","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[303],"tindex":"e4322a5b-2ec0-11e6-a21f-a563818a48a0","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e4322a5c-2ec0-11e6-a21f-6786f3032045","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[304],"tindex":"e4322a5d-2ec0-11e6-a21f-9b098757b9d5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[305],"tindex":"e4322a5e-2ec0-11e6-a21f-479a76cb717e","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[306],"tindex":"e432516f-2ec0-11e6-a21f-7f8fa3b81e05","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[112],"tindex":"e4325170-2ec0-11e6-a21f-4d751a332657","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[307,308],"tindex":"e4325171-2ec0-11e6-a21f-c3959dfbbca8","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"e4327882-2ec0-11e6-a21f-c9e010d297c9","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[309,310,311,312,313],"tindex":"e4327883-2ec0-11e6-a21f-1d4223a5eee9","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"e4327884-2ec0-11e6-a21f-f781aa75d462","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e4329f95-2ec0-11e6-a21f-f38b7287eb66","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[314,315,316,317,18,19,20,21,22,23,318,319],"tindex":"e4329f96-2ec0-11e6-a21f-a1415572a7d6","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[320,321,322,323,324,325,326,327,328,329,330],"tindex":"e432c6a7-2ec0-11e6-a21f-0b7eebb45864","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"e432c6a8-2ec0-11e6-a21f-6b2a844b601d","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[331,332,333,334],"tindex":"e432c6a9-2ec0-11e6-a21f-916138c6bcc3","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (index > 0) {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[140,143,147,148],"tindex":"e432edba-2ec0-11e6-a21f-011c1cb853f4","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"e432edbb-2ec0-11e6-a21f-fb7058f4468c","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"e432edbc-2ec0-11e6-a21f-4d2723f0aa8c","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"e43314cd-2ec0-11e6-a21f-3f90838282d9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2069","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e43314ce-2ec0-11e6-a21f-f1075c84b62a","method":{"position":"org.apache.commons.collections4.MapUtils:1262","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[36,335,239,336,337,338,339,340,341,342,240,343,344,345,346,347,348,349,350,241,351,352,72,73,74,75,76,77,78,79,80,93,94,95,96,97,99,100,101,102,353,354,355,356,357,358,359,37,360,361,362,363,364,365],"tindex":"e43314cf-2ec0-11e6-a21f-213d7126af90","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[366],"tindex":"e4333ae0-2ec0-11e6-a21f-bb25cd5ccb14","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[152],"tindex":"e4333ae1-2ec0-11e6-a21f-ef8e04071ca5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1770","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> transformingCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(collection, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[367],"tindex":"e4333ae2-2ec0-11e6-a21f-d3d5b9dd76f4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[368,369,370,371,372,373,374,375,376,238,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,245,400,401,402,403,404,405,406,407,408,409,410,411,412],"tindex":"e4333ae3-2ec0-11e6-a21f-0d6685848af7","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                return null;\n            } \n            return super.getEntry(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[413],"tindex":"e43361f4-2ec0-11e6-a21f-0f60634c90f0","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    if ((preds.int) == 0) {\n                        return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n                    } \n                    return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[414,415],"tindex":"e43361f5-2ec0-11e6-a21f-95196aeacecc","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e43361f6-2ec0-11e6-a21f-61ccc5765b89","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"e43361f7-2ec0-11e6-a21f-7108a702bf2a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"e4338908-2ec0-11e6-a21f-c77963cd0ac9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:627","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if (getEntrySet().contains(obj)) {\n                final java.lang.Object java.lang.Object = ((java.util.Map.Entry<K, V>)(obj)).getKey();\n                org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"e4338909-2ec0-11e6-a21f-f98cd9bb7bee","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[416],"tindex":"e433890a-2ec0-11e6-a21f-cd542356216b","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e433b01b-2ec0-11e6-a21f-ab9ef96e1583","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[417,418,419,420],"tindex":"e433b01c-2ec0-11e6-a21f-a7234b1d26e1","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[421],"tindex":"e433b01d-2ec0-11e6-a21f-31c04c87a21e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:423","type":"CtMethodImpl","sourcecode":"public V setValue(final int index, final V value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = java.util.List<K>.get(index);\n            return put(key, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[422,423,424,425],"tindex":"e433b01e-2ec0-11e6-a21f-59606c90129a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[426,427,428],"tindex":"e433d72f-2ec0-11e6-a21f-27fca3a3fa83","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[429],"tindex":"e433d730-2ec0-11e6-a21f-9949a847f83e","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll2.isEmpty()) {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"e433fe41-2ec0-11e6-a21f-01681a583d93","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:141","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.java.util.Iterator<? extends E> = iterator;\n            E = null;\n            boolean = false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"e433fe42-2ec0-11e6-a21f-3395ead13770","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    if ((preds.int) == 0) {\n                        return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n                    } \n                    return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"e433fe43-2ec0-11e6-a21f-b1302a6fb00b","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e433fe44-2ec0-11e6-a21f-59b1a3a67573","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e4342555-2ec0-11e6-a21f-8d7b2a39c330","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[335,239,336,337,338,339,340,341,342,240,343,430,431,432,433,434,435,436,437,438,344,345,346,347,348,349,350,241,351,439,440,441,442,443,444,445,446,447,425,448,449,450,451,452,453,454,242,455,456,457,458,459,460,461,462,463,464,465,72,73,74,75,76,77,78,79,80,84,85,86,466,467,87,468,469,470,471,472,473,474,93,94,95,96,97,99,100,101,102,106,107,108,475,476,109,110,111,477,243,478,353,354,355,356,357,358,479,244,359,480,481,482,483,484,485,486,487,488,392,393,394,395,396,398,399,245,400,360,361,489,490,491,492,362,493,494,363,364,495,496,497,498,365,499,500],"tindex":"e4342556-2ec0-11e6-a21f-0d2a21035136","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"e4344c67-2ec0-11e6-a21f-75415e02f7b3","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"e4344c68-2ec0-11e6-a21f-53cac52ef0eb","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"e4344c69-2ec0-11e6-a21f-b1c40fc351ce","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[501,160],"tindex":"e434737a-2ec0-11e6-a21f-390440b6daf3","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:56","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (closures == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((predicates.int) != (closures.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(predicates , closures , defaultClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[],"tindex":"e434737b-2ec0-11e6-a21f-931b8f62d1b0","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"e434737c-2ec0-11e6-a21f-4b6f0f67d85f","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[502,503,504],"tindex":"e4349a8d-2ec0-11e6-a21f-21177c25dfb2","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[505],"tindex":"e4349a8e-2ec0-11e6-a21f-019ca3ba0d08","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}