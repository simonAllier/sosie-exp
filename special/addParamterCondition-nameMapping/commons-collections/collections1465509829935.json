{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":101,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":711,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":607,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":849,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":878,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":801,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":163,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":428,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":556,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":748,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":160,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":564,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":601,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":109,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":277,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":266,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":59,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":299,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":514,"org.apache.commons.collections4.CollectionUtilsTest.get":446,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":591,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":69,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":397,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":348,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":788,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":77,"org.apache.commons.collections4.ListUtilsTest.testLazyList":405,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":233,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":105,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":311,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":49,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":515,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":635,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":891,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":47,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":468,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":494,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":249,"org.apache.commons.collections4.CollectionUtilsTest.select":182,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":137,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":257,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":557,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":367,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":382,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":777,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":199,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":756,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":463,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":837,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":297,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":267,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":162,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":37,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":491,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":418,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":300,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":758,"org.apache.commons.collections4.CollectionUtilsTest.intersection":448,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":119,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":624,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":884,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":293,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":63,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":737,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":674,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":732,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":423,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":877,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":482,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":531,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":687,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":102,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":508,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":831,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":763,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":67,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":270,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":226,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":680,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":412,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":573,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":709,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":117,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":399,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":575,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":829,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":28,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":534,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":385,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":450,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":859,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":700,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":616,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKey":210,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":631,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":701,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":312,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":574,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":461,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":723,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":310,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":309,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":667,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":250,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":306,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":679,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":893,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":666,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":87,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":212,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":132,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":284,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":351,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":538,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":342,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":885,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":321,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":135,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":144,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":201,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":558,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":425,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":781,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":532,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":504,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":395,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":356,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":654,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":698,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":804,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":749,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":627,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":726,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":684,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":142,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":370,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":833,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":586,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":625,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":340,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":36,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":671,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":315,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":383,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":569,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":145,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":546,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":62,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":708,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":43,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":854,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":51,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":745,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":328,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":741,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":240,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":452,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":282,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":572,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":803,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":391,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":744,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":389,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":98,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":759,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":80,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":193,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":78,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":753,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":107,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":846,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":100,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":275,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":561,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":786,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":692,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":281,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":280,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":313,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":734,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":424,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":161,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":231,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":665,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":506,"org.apache.commons.collections4.map.SingletonMapTest.testMapRemove":540,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":662,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":775,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":365,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":386,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":438,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":511,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":512,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":844,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":371,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":565,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":486,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":825,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":95,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":255,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":307,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":298,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":812,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":632,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":691,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":360,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":265,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":560,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":308,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":408,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":283,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":478,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":663,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":237,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":645,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":169,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":218,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":791,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":584,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":860,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":388,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":2,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":810,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":710,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":603,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":785,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":460,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":159,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":480,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":301,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":477,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":547,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":559,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":203,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":880,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":704,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":660,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":420,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":372,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":583,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":568,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":612,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":440,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":876,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":295,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":296,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":413,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":771,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":793,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":91,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":68,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":65,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":892,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":168,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":264,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":615,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":610,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":840,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":5,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":273,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":525,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":441,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":579,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":597,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":374,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":26,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":230,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":595,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":757,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":104,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":254,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":754,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":445,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":329,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":341,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":739,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":352,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":453,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":799,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":214,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":58,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":178,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":19,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":18,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":15,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":14,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":17,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":16,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":11,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":503,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":13,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":263,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":12,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":415,"org.apache.commons.collections4.list.TreeListTest.testBug35258":473,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":252,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":66,"org.apache.commons.collections4.ListUtilsTest.testSelect":177,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":432,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":187,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":334,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":332,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":889,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":797,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":628,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":419,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":590,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":738,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":337,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":336,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":278,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":335,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":366,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":410,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":82,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":529,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":599,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":349,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":593,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":86,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":740,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":501,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":533,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":73,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":245,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":390,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":305,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":74,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":510,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":29,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":727,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToString":375,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":783,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":246,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":502,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":84,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":821,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":550,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":433,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":183,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":830,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":626,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":816,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":225,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":820,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":658,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":872,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":327,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":835,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":256,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":173,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":839,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":562,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":234,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":589,"org.apache.commons.collections4.map.LRUMapTest.testLRU":268,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":629,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":764,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":416,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":648,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":881,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":317,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":497,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":195,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":229,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":528,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":400,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":554,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":166,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":725,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":784,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":227,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":714,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":520,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":824,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":689,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":464,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":690,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":103,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":490,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":90,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":802,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":39,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":274,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":442,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":61,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":724,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":639,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":279,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":355,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":211,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":204,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":807,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":713,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":350,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":551,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":873,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":790,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":260,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":805,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":113,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":823,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":855,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":359,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":0,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":326,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":609,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":325,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":10,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":566,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":487,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":345,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":449,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":866,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":646,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":814,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":116,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":467,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":179,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":871,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":848,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":455,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":598,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":862,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":563,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":664,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":429,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":887,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":746,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":774,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":219,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":496,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":294,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":685,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":217,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":476,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":778,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":9,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":640,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":368,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":587,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":475,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":822,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":392,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":3,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":320,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":721,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":694,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":792,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":361,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":456,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":752,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":127,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":125,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":196,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":879,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":206,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":285,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":148,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":481,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":541,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":729,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":181,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":571,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":167,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":847,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":509,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":553,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":869,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":44,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":154,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":670,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":99,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":198,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":761,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":780,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":238,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":683,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":722,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":874,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":407,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":695,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":466,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":357,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":643,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":88,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":765,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":318,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":728,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":832,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":228,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":358,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":331,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":836,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":651,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":140,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":842,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":454,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":146,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":762,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":834,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":621,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":769,"org.apache.commons.collections4.CollectionUtilsTest.union":447,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":882,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":644,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":733,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":883,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":693,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":114,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":495,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":221,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":500,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":120,"org.apache.commons.collections4.list.TreeListTest.testRemove":469,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":719,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":106,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":717,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":592,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":817,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":451,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":730,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":344,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":343,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":373,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":394,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":647,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":479,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":322,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":899,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":588,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":735,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":353,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":150,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":128,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":287,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":808,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":261,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":242,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":718,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":276,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":637,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":796,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":861,"org.apache.commons.collections4.ListUtilsTest.testSubtract":787,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":436,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":347,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":493,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":697,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":699,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":688,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":435,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":618,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":668,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":262,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":381,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":384,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":549,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":582,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":576,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":112,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":543,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":736,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":600,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":354,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":642,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":675,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":760,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":776,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":742,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":333,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":427,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":819,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":622,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":35,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":286,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":888,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":139,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":34,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":617,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":457,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":794,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":191,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":580,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":772,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":513,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":567,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":53,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":634,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":136,"org.apache.commons.collections4.CollectionUtilsTest.filter":27,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":633,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":485,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":619,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":499,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":170,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":472,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":608,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":377,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":715,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":811,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":289,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":474,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":853,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":863,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":443,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":524,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":594,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":678,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":111,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":194,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":864,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":681,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":614,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":828,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":898,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":290,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":544,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":755,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":545,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":676,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":200,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":517,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":94,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":190,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":581,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":611,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":259,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":555,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":258,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":406,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":527,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":613,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":346,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":850,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":70,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":519,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":248,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":202,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":147,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":6,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":21,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":180,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":330,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":439,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":852,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":188,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":243,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":244,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":363,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":404,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":896,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":623,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":767,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":768,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":25,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":686,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":865,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":141,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":158,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":316,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":526,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":537,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":409,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":288,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":542,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":751,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":897,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":779,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":164,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":184,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":672,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":380,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":339,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":702,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":484,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":401,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":843,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":46,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":841,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":630,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":673,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":155,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":826,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":462,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":220,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":706,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":867,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":652,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":444,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":650,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":272,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":153,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":743,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":152,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":492,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":770,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":85,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":705,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":50,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":682,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":773,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":800,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":151,"org.apache.commons.collections4.CollectionUtilsTest.isFull":23,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":552,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":720,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":858,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":656,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":789,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":131,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":403,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":596,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":806,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":38,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":157,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":232,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":868,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":716,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":766,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":216,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":470,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":875,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":659,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":653,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":703,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":417,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":750,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":186,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":422,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":205,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":570,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":40,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":636,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":72,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":209,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":376,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":578,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":712,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":523,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":52,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":314,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":414,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":851,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":426,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":247,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":813,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":171,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":488,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":32,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":747,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":81,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":696,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":176,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":795,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":121,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":870,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":93,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":782,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":539,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":291,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":731,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":602,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":507,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":434,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":890,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":638,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":809,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":122,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":516,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":649,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":894,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":465,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":134,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":604,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":707,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":857,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":54,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":483,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":48,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":657,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":895,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":838,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":393,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":522,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":189,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":241,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":798,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":222,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":489,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":535,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":223,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":458,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":269,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":620,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":437,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":815,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":827,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":338,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":498,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":845,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":548,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":886,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":459,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":669,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":818,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":421,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":304,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":641,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":661,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":7,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":387,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":856},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[0],"tindex":"0bce450a-2e8e-11e6-b439-01a02482f62f","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[1,2,3,4,5,6,7,8,9,10],"tindex":"0bcf2f6b-2e8e-11e6-b439-ad6ff64a109a","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"0bcf567c-2e8e-11e6-b439-7d90ab64c01a","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index < 0) {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[25],"tindex":"0bcf567d-2e8e-11e6-b439-fd31f2f1fd47","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[26,27,28,29],"tindex":"0bcf7d8e-2e8e-11e6-b439-a3f5290b07a1","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (collection == null) {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"0bcfa49f-2e8e-11e6-b439-17a3d40294cf","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"0bcfcbb0-2e8e-11e6-b439-a36dfc9dbb8f","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"0bcff2c1-2e8e-11e6-b439-63e1dc0c42ab","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"0bd019d2-2e8e-11e6-b439-2f30ba2127c8","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"0bd019d3-2e8e-11e6-b439-93c007a63204","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0bd040e4-2e8e-11e6-b439-6330f69afd36","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0bd067f5-2e8e-11e6-b439-f389746fd001","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[143,144,145,146],"tindex":"0bd08f06-2e8e-11e6-b439-89f40e38f73d","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"0bd08f07-2e8e-11e6-b439-cd4830206990","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"tindex":"0bd0b618-2e8e-11e6-b439-f58ae6047a01","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            decorated().add(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"0bd0b619-2e8e-11e6-b439-039333e34a7d","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (otherOffsetInBits == 0) {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"otherOffsetInBits"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[175,176],"tindex":"0bd0dd2a-2e8e-11e6-b439-6bc4ee62cb1f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:143","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (int) - 1;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i--;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"0bd0dd2b-2e8e-11e6-b439-73373df96345","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"0bd1043c-2e8e-11e6-b439-978386e69841","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"0bd1043d-2e8e-11e6-b439-53ead9ace031","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[177,178,179,180,181,182,183,184,185,186,187],"tindex":"0bd12b4e-2e8e-11e6-b439-4fc245cd090e","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) != (a.size())) {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0bd12b4f-2e8e-11e6-b439-f7684375f84d","method":{"position":"org.apache.commons.collections4.MapUtils:386","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key, final java.lang.String defaultValue) {\n    if (map != null) {\n        {\n            java.lang.String java.lang.String = org.apache.commons.collections4.MapUtils.getString(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[188],"tindex":"0bd12b50-2e8e-11e6-b439-c5c27a7a696f","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[189],"tindex":"0bd15261-2e8e-11e6-b439-83a1d00d2709","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"0bd15262-2e8e-11e6-b439-ebfe9fd89feb","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list.isEmpty()) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.list.GrowthList<E>(list);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[190,191],"tindex":"0bd15263-2e8e-11e6-b439-79907911341f","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[192,193],"tindex":"0bd1a084-2e8e-11e6-b439-77cc10359d30","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"0bd1a085-2e8e-11e6-b439-ff3f05f2d2db","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"0bd1a086-2e8e-11e6-b439-a16e781723a4","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219],"tindex":"0bd1a087-2e8e-11e6-b439-c5f021db3241","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[220,221],"tindex":"0bd1c798-2e8e-11e6-b439-7fe50f1b3113","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[222,223,224],"tindex":"0bd1c799-2e8e-11e6-b439-832b4b5df4c6","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"0bd1c79a-2e8e-11e6-b439-45fe4584dbac","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"0bd1eeab-2e8e-11e6-b439-41e28b5d5e16","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:183","type":"CtBinaryOperatorImpl","sourcecode":"reverse == true"},"failures":[225,226,227,228,229,230,231,232,233,234,235,236],"tindex":"0bd1eeac-2e8e-11e6-b439-93ac9aac21eb","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (reverse == true) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.add(comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reverse":"reverse"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[237,238],"tindex":"0bd1eead-2e8e-11e6-b439-fd049c880a63","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366],"tindex":"0bd215be-2e8e-11e6-b439-19d9c77af7f6","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((entry.getValue()) == null) {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"0bd215bf-2e8e-11e6-b439-a953ae37e80a","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[367,368,369],"tindex":"0bd215c0-2e8e-11e6-b439-d7be4b3f95c1","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403],"tindex":"0bd23cd1-2e8e-11e6-b439-bd00b1bb1446","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"0bd23cd2-2e8e-11e6-b439-59b3049da1d8","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key4"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[404],"tindex":"0bd263e3-2e8e-11e6-b439-77ec5dfc5ac9","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:92","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n            } \n            if ((map.size()) == 0) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = map.remove(null);\n            final int int = map.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : map.entrySet()) {\n                preds[i] = entry.getKey();\n                transformers[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , preds , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[405],"tindex":"0bd263e4-2e8e-11e6-b439-bff0e2305f7f","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[369],"tindex":"0bd28af5-2e8e-11e6-b439-a93e138460b2","method":{"position":"org.apache.commons.collections4.map.LazyMap:96","type":"CtMethodImpl","sourcecode":"public static <V, K>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[406,407,408,409],"tindex":"0bd28af6-2e8e-11e6-b439-bda21369e8d0","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[80,134,410,411,412,413,414,415,416,417,418,177,178,419,246,420,261,283,421,298,312,422,423,424,425,426,427,326,428,429,430,346,431,432,433,360,434,435,436,437,179,180,438,439,440,181,441,182,442,443,444,445,446,183,447,448,184,449,185,186,187],"tindex":"0bd28af7-2e8e-11e6-b439-cfd6a1898d1f","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"0bd2b208-2e8e-11e6-b439-917741d8ba19","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"0bd2b209-2e8e-11e6-b439-bb9384a581d0","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[450],"tindex":"0bd2d91a-2e8e-11e6-b439-a94e448500e7","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"0bd2d91b-2e8e-11e6-b439-dd0aaac1cd96","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"0bd2d91c-2e8e-11e6-b439-7f5f131104fa","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"0bd2d91d-2e8e-11e6-b439-5d6688ffeb56","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[451],"tindex":"0bd3002e-2e8e-11e6-b439-a5effe126829","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"0bd3002f-2e8e-11e6-b439-251315943000","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[452],"tindex":"0bd32740-2e8e-11e6-b439-bb05240e023c","method":{"position":"org.apache.commons.collections4.TransformerUtils:208","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[453,454,455,456,457,458,459,460,461,462,463,464,465,466],"tindex":"0bd32741-2e8e-11e6-b439-d70749aebc2b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[467],"tindex":"0bd32742-2e8e-11e6-b439-0f380b5ca966","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"values"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[468],"tindex":"0bd32743-2e8e-11e6-b439-39d587e138c7","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[469,470,471,472,473,474,475,476,477,478,479,480],"tindex":"0bd34e54-2e8e-11e6-b439-bf1345b2acc1","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl","sourcecode":"bound > len"},"failures":[481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537],"tindex":"0bd34e55-2e8e-11e6-b439-1be1ec367231","method":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:112","type":"CtMethodImpl","sourcecode":"protected void checkBound(final int bound, final int len, final java.lang.String type) {\n    if (len > bound) {\n        {\n            if (bound > len) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"));\n            } \n            if (bound < 0) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s before the start of the array. \"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"bound","bound":"len"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[538,539],"tindex":"0bd37566-2e8e-11e6-b439-831148402919","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                {\n                    return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[369],"tindex":"0bd37567-2e8e-11e6-b439-e1ae4b47d535","method":{"position":"org.apache.commons.collections4.MapUtils:1363","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"0bd37568-2e8e-11e6-b439-85c8c4eb391e","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[540],"tindex":"0bd37569-2e8e-11e6-b439-2f03f58a7001","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"0bd39c7a-2e8e-11e6-b439-5501d0e56876","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:476","type":"CtMethodImpl","sourcecode":"protected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.setValue(newValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[541,542,543,544,545],"tindex":"0bd39c7b-2e8e-11e6-b439-9b584643f2de","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[546],"tindex":"0bd39c7c-2e8e-11e6-b439-bd00d663ad2e","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"0bd3c38d-2e8e-11e6-b439-1b3921df6708","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            return node == null ? null : node.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"0bd3c38e-2e8e-11e6-b439-35c8c2d6d872","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list.isEmpty()) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.list.GrowthList<E>(list);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtBinaryOperatorImpl","sourcecode":"previous == null"},"failures":[547,548,549,550,551,552,553,554,555,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,293,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366],"tindex":"0bd3c38f-2e8e-11e6-b439-53c9de4f2cd3","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry == null) {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"0bd3eaa0-2e8e-11e6-b439-e3ac9e7e02d3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[556],"tindex":"0bd3eaa1-2e8e-11e6-b439-7fe025f5f0b0","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[557],"tindex":"0bd411b2-2e8e-11e6-b439-11fff058b25f","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0bd411b3-2e8e-11e6-b439-5b1b0bf1c52f","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        return null;\n                    } \n                    if (answer instanceof java.lang.Double) {\n                        return ((java.lang.Double)(answer));\n                    } \n                    return java.lang.Double.valueOf(answer.doubleValue());\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"0bd411b4-2e8e-11e6-b439-f9169a38aad1","method":{"position":"org.apache.commons.collections4.map.LinkedMap:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>"},"failures":[558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577],"tindex":"0bd411b5-2e8e-11e6-b439-392073d04a02","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[578],"tindex":"0bd438c6-2e8e-11e6-b439-7db330917742","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[579,580,581,582,583,584,585,586,175,587,588,589,590,591,592,593,594,595,596,453,454,455,456,597,457,598,599,458,600,601,602,603,604,605,606,607,608,609,610,176,611,612,613,614,615,616,617,618,460,461,462,463,619,464,620,621,465,622,623],"tindex":"0bd438c7-2e8e-11e6-b439-7789b9d85174","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"0bd438c8-2e8e-11e6-b439-95cdc859f70c","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        return null;\n                    } \n                    if (answer instanceof java.lang.Double) {\n                        return ((java.lang.Double)(answer));\n                    } \n                    return java.lang.Double.valueOf(answer.doubleValue());\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[624,625,626,627,628,629],"tindex":"0bd45fd9-2e8e-11e6-b439-5bc2ce67c8fd","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"0bd45fda-2e8e-11e6-b439-11f92f2137e3","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[630,631,632,633,634],"tindex":"0bd45fdb-2e8e-11e6-b439-af868daa290d","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"0bd486ec-2e8e-11e6-b439-a95fe74066f0","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[452],"tindex":"0bd486ed-2e8e-11e6-b439-6144abd4dea0","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[635],"tindex":"0bd486ee-2e8e-11e6-b439-dd69ba15adcb","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,143,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,144,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,145,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788],"tindex":"0bd4adff-2e8e-11e6-b439-85055263c092","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next());\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[789],"tindex":"0bd4ae00-2e8e-11e6-b439-c5c18d58cb1b","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[442,185,186],"tindex":"0bd4ae01-2e8e-11e6-b439-b5407e388350","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[25,790,791,333],"tindex":"0bd4d512-2e8e-11e6-b439-d115d6f4d7cf","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"0bd4d513-2e8e-11e6-b439-87828157a6ef","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[101],"tindex":"0bd4fc24-2e8e-11e6-b439-e1616ab99109","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[405],"tindex":"0bd4fc25-2e8e-11e6-b439-81da19eaaef3","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[792,11,12,13,14,15,16,17,18,19,793,794,795,796,797,798,799,800,801,802,803,804,20,805,806,807,21,808,22,809,810,811,23,24],"tindex":"0bd4fc26-2e8e-11e6-b439-915e5a016067","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:325","type":"CtMethodImpl","sourcecode":"private int increment(int index) {\n    if (index < 0) {\n        {\n            index++;\n            if (index >= (int)) {\n                index = 0;\n            } \n            return index;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"0bd52337-2e8e-11e6-b439-37bb300373db","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[198,812,813,814,815,203,816,817,818,819,820,821,822,214,823,824,825,826,827,828,829,219,830,831,832,833],"tindex":"0bd52338-2e8e-11e6-b439-adef678ea4f7","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0bd52339-2e8e-11e6-b439-53408422a060","method":{"position":"org.apache.commons.collections4.MapUtils:822","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key, final float defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return defaultValue;\n            } \n            return floatObject.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[834],"tindex":"0bd5233a-2e8e-11e6-b439-273203968371","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[1,835,2,6,836,7,837,838,839,840,841,842,242,843,844,845,846,847,848,849,850,257,851,852,853,854,855,856,857,858,279,859,860,861,862,293,863,864,865,294,866,867,868,869,870,871,872,873,308,874,875,876,877,878,879,880,881,322,882,883,884,885,886,887,888,889,342,890,891,892,893,894,895,896,897,898,899,356],"tindex":"0bd54a4b-2e8e-11e6-b439-afdbf43b88a3","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"0bd54a4c-2e8e-11e6-b439-f5273bdcce18","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"0bd54a4d-2e8e-11e6-b439-6798aad777a2","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                {\n                    return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}