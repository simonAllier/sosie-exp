{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":107,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":177,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":353,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":144,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":246,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":363,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":212,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":333,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":322,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":331,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":244,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":178,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":23,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":26,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":243,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":117,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":204,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":22,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":355,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":215,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":288,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":195,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":34,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":159,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":160,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":30,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":161,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":115,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":170,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":263,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection":291,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":296,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":169,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":354,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":168,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":268,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":129,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":240,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":100,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":325,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":190,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":266,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":275,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":300,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":65,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":191,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":9,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":121,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":122,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":273,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":75,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":76,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":311,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":83,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":111,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":256,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":57,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":154,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":52,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToString":222,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":237,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":0,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":329,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":50,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":247,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":143,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":286,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":33,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":277,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":231,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":269,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":271,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":74,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":236,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":186,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":220,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":133,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":279,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":339,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":362,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":131,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":239,"org.apache.commons.collections4.CollectionUtilsTest.intersection":2,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testGetSetComparator":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":167,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":202,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":358,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":125,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":359,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":248,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":314,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":197,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":1,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":51,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":164,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":357,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":53,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":227,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":116,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":301,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":69,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":283,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection":290,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":39,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":281,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":218,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":226,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":63,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":166,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":344,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":105,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":110,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":257,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":73,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":313,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":250,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":310,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":367,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":103,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":91,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":372,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":64,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":94,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":153,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":289,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":13,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":235,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":156,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":179,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":203,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":364,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":366,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":365,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":208,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":294,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":341,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":321,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":102,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":146,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":174,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":72,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":175,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":176,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":214,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":42,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":46,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":224,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":171,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":187,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":21,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":274,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":93,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":97,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":182,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":138,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":356,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":3,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":149,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":326,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":38,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":130,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":5,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":120,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":6,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":303,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":251,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":267,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":299,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":193,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":126,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":307,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":141,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":24,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":312,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":370,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":278,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":92,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":270,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":8,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":112,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":58,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":20,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":327,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":223,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":368,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":79,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":124,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":136,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":148,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":48,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":127,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":361,"org.apache.commons.collections4.map.LRUMapTest.testClone":318,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":99,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":213,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":293,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":272,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":245,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":210,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":309,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":292,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":196,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":249,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":330,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":90,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":340,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":185,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":265,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":4,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":150,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":320,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":151,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":225,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":152,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":209,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":285,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":37,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":199,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":7,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":68,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":242,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":44,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":304,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":228,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":258,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":332,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":118,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":284,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":172,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":352,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":255,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":114,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":28,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":338,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":60,"org.apache.commons.collections4.map.LRUMapTest.testLRU":306,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":206,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":201,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":298,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":86,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":253,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":47,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":302,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":113,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":337,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":184,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":360,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":276,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":145,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":19,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":295,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":106,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":261,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":308,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":316,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":70,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":18,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":348,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":351,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":262,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":350,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":349,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":234,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":109,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":35,"org.apache.commons.collections4.list.GrowthListTest.testCollectionSize":221,"org.apache.commons.collections4.map.LRUMapTest.testReset":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":287,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":305,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":346,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":347,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":98,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":343,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":188,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":142,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":232,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":67,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":282,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":207,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":317,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":32,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":342,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":16,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":297,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":101,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":336},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c1a7b78d-2e89-11e6-a7b0-112c847e2810","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[0,1,2,3],"tindex":"c1a87ade-2e89-11e6-a7b0-8ddea75203eb","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if (b instanceof java.util.Set<?>) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"c1a8a1ef-2e89-11e6-a7b0-39282c95d61c","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[4],"tindex":"c1a8c800-2e89-11e6-a7b0-115ced6cf9d2","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"c1a8ef11-2e89-11e6-a7b0-3f040cd9bb51","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:320","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[5],"tindex":"c1a8ef12-2e89-11e6-a7b0-ef89c635edaa","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[6,7],"tindex":"c1a91623-2e89-11e6-a7b0-2ff9a9c76a4c","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"c1a93d34-2e89-11e6-a7b0-0508d98215a3","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c1a93d35-2e89-11e6-a7b0-a3658c135d63","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtBinaryOperatorImpl","sourcecode":"(preds.length) == 1"},"failures":[8,9,10,11,12,13],"tindex":"c1a96446-2e89-11e6-a7b0-b794e38c097e","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (nCopies == 1) {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"nCopies","preds":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"c1a96447-2e89-11e6-a7b0-1b2fc48c5a9e","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (bitIndex == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:278","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[14,15,16,17],"tindex":"c1a98b58-2e89-11e6-a7b0-61ff941988ee","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtBinaryOperatorImpl","sourcecode":"(node.parent.left) == (root)"},"failures":[],"tindex":"c1a9b269-2e89-11e6-a7b0-e30eb39e4f01","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2363","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> findNext(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> prior) {\n    if (prior == prior) {\n        {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(prior, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"prior","parent":"prior","left":"prior","root":"prior"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[18,19,20,21,22,23],"tindex":"c1a9d97a-2e89-11e6-a7b0-6dfb78fa7502","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if (start1 < 0) {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"start1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"c1aa4eab-2e89-11e6-a7b0-e52ecfef7441","method":{"position":"org.apache.commons.collections4.IteratorUtils:1052","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> getIterator(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == null) {\n                return org.apache.commons.collections4.IteratorUtils.emptyIterator();\n            } \n            if (obj instanceof java.util.Iterator) {\n                return ((java.util.Iterator<?>)(obj));\n            } \n            if (obj instanceof java.util.Collection) {\n                return ((java.util.Collection<?>)(obj)).iterator();\n            } \n            if (obj instanceof java.lang.Object[]) {\n                return new org.apache.commons.collections4.iterators.ObjectArrayIterator<java.lang.Object>(((java.lang.Object[])(obj)));\n            } \n            if (obj instanceof java.util.Enumeration) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n            } \n            if (obj instanceof java.util.Map) {\n                return ((java.util.Map<?, ?>)(obj)).values().iterator();\n            } \n            if (obj instanceof org.w3c.dom.NodeList) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.NodeList)(obj)));\n            } \n            if (obj instanceof org.w3c.dom.Node) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.Node)(obj)));\n            } \n            if (obj instanceof java.util.Dictionary) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Dictionary<?, ?>)(obj)).elements());\n            } else if (obj.getClass().isArray()) {\n                return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(obj);\n            } \n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = obj.getClass().getMethod(\"iterator\", ((java.lang.Class[])(null)));\n                if (java.util.Iterator.java.util.Iterator.java.lang.Class.isAssignableFrom(method.getReturnType())) {\n                    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))));\n                    if (it != null) {\n                        return it;\n                    } \n                } \n            } catch (final java.lang.RuntimeException e) {\n            } catch (final java.lang.NoSuchMethodException e) {\n            } catch (final java.lang.IllegalAccessException e) {\n            } catch (final java.lang.reflect.InvocationTargetException e) {\n            }\n            return org.apache.commons.collections4.IteratorUtils.singletonIterator(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"c1aa75bc-2e89-11e6-a7b0-7d440fda7031","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:224","type":"CtMethodImpl","sourcecode":"public void setComparator(final java.util.Comparator<? super E> comp) {\n    if (comp == null) {\n        {\n            checkNotStarted();\n            java.util.Comparator<? super E> = comp;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comp"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:586","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[46],"tindex":"c1ab11fd-2e89-11e6-a7b0-8b7c8a2f9e87","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:162","type":"CtVariableReadImpl","sourcecode":"makeClone"},"failures":[47],"tindex":"c1ab390e-2e89-11e6-a7b0-1b0b67fe8330","method":{"position":"org.apache.commons.collections4.functors.WhileClosure:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure, final boolean doLoop) {\n    if (doLoop) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.WhileClosure<E>(predicate , closure , doLoop);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"makeClone":"doLoop"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[48],"tindex":"c1ab390f-2e89-11e6-a7b0-05fec0127c61","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                {\n                    return getList().lastIndexOf(object);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl","sourcecode":"key5 != null"},"failures":[],"tindex":"c1ab3910-2e89-11e6-a7b0-497071089a3f","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[49],"tindex":"c1ab6021-2e89-11e6-a7b0-e7fe44cc8426","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == 0) {\n        {\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[50],"tindex":"c1ab6022-2e89-11e6-a7b0-1d55af362975","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[51],"tindex":"c1ab8733-2e89-11e6-a7b0-31568035ffe0","method":{"position":"org.apache.commons.collections4.ClosureUtils:182","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName, paramTypes, args));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtBinaryOperatorImpl","sourcecode":"pos < index"},"failures":[],"tindex":"c1ab8734-2e89-11e6-a7b0-55c36fac3423","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < index) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"index","index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"c1ab8735-2e89-11e6-a7b0-3193e77dd817","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                {\n                    return getList().lastIndexOf(object);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:428","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"c1abae46-2e89-11e6-a7b0-ef3060cce25e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"tindex":"c1abd557-2e89-11e6-a7b0-176ba17df7c4","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"c1abd558-2e89-11e6-a7b0-e78998c38603","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[179],"tindex":"c1abfc69-2e89-11e6-a7b0-a16f1678e763","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195],"tindex":"c1abfc6a-2e89-11e6-a7b0-8bd4eae56f8c","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[196],"tindex":"c1ac237b-2e89-11e6-a7b0-d989af5d4f1e","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (methodName == null) {\n                        throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"c1ac237c-2e89-11e6-a7b0-e1dcafc779cc","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"c1ac4a8d-2e89-11e6-a7b0-51e4ae30667e","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[],"tindex":"c1ac719e-2e89-11e6-a7b0-a55351bc32b6","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233],"tindex":"c1ac719f-2e89-11e6-a7b0-15aaf876d793","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[234,235],"tindex":"c1ac98b0-2e89-11e6-a7b0-03fe3fb297c3","method":{"position":"org.apache.commons.collections4.ListUtils:318","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> retainAll(final java.util.Collection<E> collection, final java.util.Collection<?> retain) {\n    if (collection == null) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.lang.Math.min(collection.size(), retain.size()));\n            for (final E E : collection) {\n                if (retain.contains(obj)) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289],"tindex":"c1acbfc1-2e89-11e6-a7b0-a15c408712f3","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[290,291,292,293,294],"tindex":"c1ace6d2-2e89-11e6-a7b0-41161fd0d04a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1414","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (coll == null) || (coll.isEmpty());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[295],"tindex":"c1ace6d3-2e89-11e6-a7b0-5ddd77e71ffe","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:320","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[296],"tindex":"c1ad0de4-2e89-11e6-a7b0-09b6902ccc62","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"c1ad0de5-2e89-11e6-a7b0-617b1e5e39d0","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"c1ad34f6-2e89-11e6-a7b0-cdcc5de8c652","method":{"position":"org.apache.commons.collections4.SplitMapUtils:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object arg0) {\n    if (null == arg0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (arg0 == (org.apache.commons.collections4.SplitMapUtils.WrappedGet.this)) {\n                return true;\n            } \n            return (arg0 instanceof org.apache.commons.collections4.SplitMapUtils.WrappedGet) && (((org.apache.commons.collections4.SplitMapUtils.WrappedGet<?, ?>)(arg0)).org.apache.commons.collections4.Get<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedGet.this.org.apache.commons.collections4.Get<K, V>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"arg0"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[297],"tindex":"c1ad5c07-2e89-11e6-a7b0-73a6552ab3ce","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate1 == null) {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"c1ad5c08-2e89-11e6-a7b0-d157a251d0c3","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Double"},"failures":[298],"tindex":"c1ad8319-2e89-11e6-a7b0-0f953a202a86","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 instanceof java.lang.Double) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key4"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[299],"tindex":"c1adaa2a-2e89-11e6-a7b0-6fa515cda456","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:162","type":"CtMethodImpl","sourcecode":"public void setUnknownObjectBehavior(final org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior unknownObjectBehavior) {\n    if (unknownObjectBehavior == null) {\n        {\n            checkLocked();\n            if (unknownObjectBehavior == null) {\n                throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n            } \n            org.apache.commons.collections4.comparators.FixedOrderComparator.this.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior = unknownObjectBehavior;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"unknownObjectBehavior"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c1adaa2b-2e89-11e6-a7b0-755c126f0458","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"c1add13c-2e89-11e6-a7b0-a7e6fe501f0a","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[300],"tindex":"c1add13d-2e89-11e6-a7b0-4d045ae79f75","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[50],"tindex":"c1adf84e-2e89-11e6-a7b0-0f0920929a02","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[301,302],"tindex":"c1adf84f-2e89-11e6-a7b0-876a417d3c87","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[47],"tindex":"c1ae1f60-2e89-11e6-a7b0-f1c7b2ac8570","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"c1ae1f61-2e89-11e6-a7b0-c99e377ee265","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"c1ae4672-2e89-11e6-a7b0-2763e138cdc7","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:129","type":"CtMethodImpl","sourcecode":"public void setTransformer(final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.org.apache.commons.collections4.Transformer<? super I, ? extends O> = transformer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[303],"tindex":"c1ae4673-2e89-11e6-a7b0-f7ba0c79dd44","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.util.Iterator) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"c1ae6d84-2e89-11e6-a7b0-dd05944c7a48","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"c1ae6d85-2e89-11e6-a7b0-d165fc306d2c","method":{"position":"org.apache.commons.collections4.map.LinkedMap:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:52","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[304],"tindex":"c1ae9496-2e89-11e6-a7b0-51e062157a38","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"c1aebba7-2e89-11e6-a7b0-578a5633ab96","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (methodName == null) {\n                        throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c1aebba8-2e89-11e6-a7b0-cd8b3934926f","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:99","type":"CtBinaryOperatorImpl","sourcecode":"endIndex < startIndex"},"failures":[305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363],"tindex":"c1aee2b9-2e89-11e6-a7b0-f9827b455eea","method":{"position":"org.apache.commons.collections4.map.LRUMap:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashCode < hashCode) {\n        {\n            if (isFull()) {\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                boolean boolean = false;\n                if (boolean) {\n                    while ((reuse != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (reuse != null)) {\n                        if (removeLRU(reuse)) {\n                            removeLRUEntry = true;\n                            break;\n                        } \n                        reuse = reuse.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                    }\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                } else {\n                    removeLRUEntry = removeLRU(reuse);\n                }\n                if (removeLRUEntry) {\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                    reuseMapping(reuse, hashIndex, hashCode, key, value);\n                } else {\n                    super.addMapping(hashIndex, hashCode, key, value);\n                }\n            } else {\n                super.addMapping(hashIndex, hashCode, key, value);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"hashCode","endIndex":"hashCode"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[364,365,366,367,368,369,370,371],"tindex":"c1af30da-2e89-11e6-a7b0-692dade821ba","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:627","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if (getEntrySet().contains(obj)) {\n                final java.lang.Object java.lang.Object = ((java.util.Map.Entry<K, V>)(obj)).getKey();\n                org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[372],"tindex":"c1af30db-2e89-11e6-a7b0-019f6947ebc7","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"c1af57ec-2e89-11e6-a7b0-0971e6391d55","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:74","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map, final V dummyValue) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n            } \n            return new org.apache.commons.collections4.set.MapBackedSet<E, V>(map , dummyValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":64,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}