{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":703,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":144,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":403,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":950,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":258,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":532,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":561,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":52,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":98,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":596,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":372,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":134,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":373,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":370,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":760,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":190,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":56,"org.apache.commons.collections4.CollectionUtilsTest.collect":602,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":333,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":242,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":283,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":928,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":229,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":363,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":776,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":637,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":105,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":689,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":766,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":646,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":704,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":327,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":11,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":817,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":781,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":291,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":575,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":585,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":193,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":842,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":414,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":922,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":266,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":730,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":461,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":485,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":341,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":795,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":108,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":378,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":416,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":429,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":543,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":155,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":310,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":774,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":547,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":227,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":284,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":505,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":831,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":78,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":230,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":426,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":69,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":371,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":308,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":13,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":486,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":691,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":210,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":211,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":223,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":642,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":94,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":751,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":425,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":531,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":806,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":754,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":34,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":455,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":237,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":843,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":769,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":810,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":150,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectEqualsSelf":890,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":61,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":872,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":931,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":780,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":345,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":768,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":866,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":679,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":680,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":681,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":292,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":526,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":152,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":852,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":290,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":886,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":289,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":267,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":564,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":458,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":726,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":250,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":909,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":330,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":665,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":656,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":773,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":412,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":321,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":919,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":675,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":692,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":895,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":935,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":709,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":925,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":207,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":573,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":647,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":941,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":43,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":120,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":850,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":302,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":748,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":668,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":705,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":706,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":841,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":707,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":140,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":868,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":554,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":124,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":920,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":660,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":645,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":171,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":783,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":318,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":749,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":517,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":809,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEqualsNull":192,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":295,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":627,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":858,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":865,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":579,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":694,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":722,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":142,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":408,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":337,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":541,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":215,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":256,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":139,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":232,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":5,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":60,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":401,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":752,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":334,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":558,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":598,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":433,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":432,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":241,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":903,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":431,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":26,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":654,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":247,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":246,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":293,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":581,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":483,"org.apache.commons.collections4.map.LRUMapTest.testReset":745,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":815,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":574,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":311,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":62,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":129,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":849,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":711,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":659,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":462,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":271,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":286,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":228,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":863,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":411,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":775,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":746,"org.apache.commons.collections4.map.LinkedMapTest.testReset":782,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":306,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":911,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":912,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":282,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":750,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":910,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":288,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":249,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":940,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":690,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":24,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":30,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":937,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":685,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":945,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":451,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":873,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":757,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":619,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":382,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":39,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":628,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":151,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":25,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":464,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":231,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":413,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":23,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":793,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":197,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":515,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":87,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":741,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":587,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":534,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":170,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":443,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":719,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":148,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":530,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":225,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":948,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":614,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":226,"org.apache.commons.collections4.map.HashedMapTest.testClone":636,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":878,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":902,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":444,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":702,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":191,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":608,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":799,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":563,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":820,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":344,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":904,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":145,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":744,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":550,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":115,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":239,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":393,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":609,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":491,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":110,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":513,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":184,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":508,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":821,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":175,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":814,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":923,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":657,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":938,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":77,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":671,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":670,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":672,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":732,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":929,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":273,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":93,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":319,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":95,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":785,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":179,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":331,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":473,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":525,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":797,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":942,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":352,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":527,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":930,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":280,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":796,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":509,"org.apache.commons.collections4.list.TreeListTest.testBug35258":17,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":667,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":269,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":899,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":104,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":460,"org.apache.commons.collections4.map.LinkedMapTest.testClone":666,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":798,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":857,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":107,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":467,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":943,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":767,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":314,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":137,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":701,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":421,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":362,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":710,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":678,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":686,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":316,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":243,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":315,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":312,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":828,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":737,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":381,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":747,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":109,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":368,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":643,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":187,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":388,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":328,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":365,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":638,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":49,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":695,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":262,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":789,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":287,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":848,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":40,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":822,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":132,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":263,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":835,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":494,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":762,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":772,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":520,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":607,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":375,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":536,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":592,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":896,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":200,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":571,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":113,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":804,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":601,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":138,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":484,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":808,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":885,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":901,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":214,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":610,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":153,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":406,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":516,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":272,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":549,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":778,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":361,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":818,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":524,"org.apache.commons.collections4.map.LRUMapTest.testLRU":235,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":933,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":181,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":367,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":133,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":535,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":908,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":297,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":725,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":813,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":204,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":71,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":354,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":728,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":629,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":755,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":811,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":944,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":500,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":839,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":803,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":233,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":779,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":157,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":733,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":753,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":240,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":116,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":454,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":245,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":300,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":589,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":716,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":501,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":86,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":329,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":8,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":201,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":623,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":870,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":742,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":376,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":756,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":165,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":836,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":542,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":195,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":305,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":67,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":339,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":212,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":900,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":840,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":729,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":441,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":593,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":897,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":14,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":478,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":324,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":380,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":499,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":855,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":879,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":143,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":786,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":584,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":884,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":916,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":597,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":560,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":182,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":917,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":186,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":396,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":631,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":875,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":615,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":332,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":511,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":696,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":123,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":436,"org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":224,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":588,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":106,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":801,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":22,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":91,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":72,"org.apache.commons.collections4.CollectionUtilsTest.transform2":600,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":727,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":476,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":173,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":15,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":788,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":603,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":442,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":445,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":206,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":394,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":127,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":407,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":183,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":307,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":576,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":898,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":424,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":135,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":759,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":3,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":533,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":621,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":251,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":718,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":51,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":770,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":446,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":379,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":599,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":409,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":951,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":349,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":777,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":559,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":203,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":882,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsContract":892,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":894,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":889,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":338,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":42,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":528,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":350,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":303,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":787,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":826,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":41,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":298,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":682,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":812,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":118,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":304,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":635,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":620,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":697,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":218,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":435,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":624,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":537,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":791,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":358,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":506,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":472,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":37,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":47,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":552,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":479,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":699,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":180,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":33,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":420,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":400,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":335,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":159,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":687,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":859,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":2,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":117,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":452,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":270,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":427,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":688,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":27,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":914,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":915,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":268,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":502,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":731,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":383,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":384,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":385,"org.apache.commons.collections4.list.TreeListTest.testRemove":20,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":846,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":507,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":70,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":949,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":496,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":422,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":477,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":578,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":856,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":913,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":364,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":604,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":862,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":708,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":323,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":359,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":669,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":322,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":819,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":924,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":21,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":209,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":570,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":946,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":174,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":829,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":939,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":301,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":519,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":351,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":845,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":784,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":114,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":800,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":410,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":802,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":253,"org.apache.commons.collections4.map.LRUMapTest.testClone":648,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":278,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":735,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":430,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":259,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":392,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":792,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":391,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":390,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":590,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":46,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":244,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":907,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":874,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":326,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":194,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":577,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":402,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":475,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":739,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":405,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":347,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":851,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":59,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":279,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":199,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":169,"org.apache.commons.collections4.list.TreeListTest.testListEquals":921,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":447,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":594,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":189,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":465,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":299,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":31,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":79,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":90,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":97,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":474,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":81,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":927,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":313,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":386,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":606,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":453,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":399,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":720,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":161,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":522,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":4,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":252,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":466,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":698,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":734,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":346,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":185,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":167,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":764,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":714,"org.apache.commons.collections4.map.SingletonMapTest.testClone":861,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":456,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":459,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":103,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":469,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":353,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":178,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":794,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":19,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":57,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":255,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":823,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":18,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":540,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":876,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":366,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":582,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":877,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsNull":164,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":48,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":765,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":612,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":343,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":569,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":630,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":222,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":512,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":76,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":626,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":32,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":487,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":488,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":121,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":489,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":208,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":168,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":147,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":673,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":205,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":276,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":613,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":790,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":340,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":342,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":325,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":562,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":834,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":221,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":523,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":265,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":936,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":622,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":761,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":36,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":217,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":539,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":825,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":867,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":260,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":261,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":664,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":309,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":567,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":162,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":493,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":684,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":163,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":437,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":625,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":743,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":837,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":869,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":448,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":838,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":296,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":830,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":497,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":649,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":254,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":568,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":125,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":320,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":736,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":397,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":418,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":360,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":555,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":28,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":758,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":551,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":131,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":934,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":154,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":854,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":880,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":336,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":893,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":238,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":440,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":634,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEqualsNull":891,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":438,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":580,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":439,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":84,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":490,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":632,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":700,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":471,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":611,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":906,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":583,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":847,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":572,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":674,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":864,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":415,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":202,"org.apache.commons.collections4.CollectionUtilsTest.isFull":887,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":546,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":740,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":926,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":177,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":172,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":553,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":68,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":468,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":176,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":816,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":881,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":947,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":398,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":80,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":112,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":16,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":529,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":348,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":717,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":860,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":605,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":111,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":480,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":824,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":481,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":807,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":805,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":482,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":518,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":591,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":677,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":419,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":9,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":721,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":428,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":514,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":10,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":495,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":713,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":853,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":538,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":423,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":128,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":655,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":264,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":918,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":723,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":844,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":905,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":146,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":503,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":65,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":492,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":387,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":883,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":595,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":220,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":58,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":650,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":712,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":100,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":53,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":463,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":662,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":663,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":661,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":871,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":738,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":586,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":832,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":417,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":35,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":658,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":565,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":160,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":449,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":510,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":763,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":639,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":640,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":683,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":827,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":85,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":715,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":833,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":952,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":566,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":548,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":257,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":888,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":470,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":771,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":617,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":188,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":236,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":158,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":374,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":653,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":395,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":676,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":450,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":317,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":651,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":652,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":0,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":74,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":724,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":1,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":29,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":641,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":66,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":557,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":198,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":521,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":693,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":130,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":932,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":369,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":618,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":644,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":234,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":633,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":498,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":544},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[0,1,2,3,4],"tindex":"cac3e9fd-3e58-11e6-808f-8b06bf8f94d5","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[5],"tindex":"cac4381e-3e58-11e6-808f-f90c00e2a341","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"cac45f2f-3e58-11e6-808f-07b7fa7dec0e","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[6,7,8,9,10,11],"tindex":"cac45f30-3e58-11e6-808f-81bf037002de","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[12,13,14],"tindex":"cac45f31-3e58-11e6-808f-7f8321ade886","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            return containsValue(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[15,16,17,18,19,20,21,22,23,24,25],"tindex":"cac48642-3e58-11e6-808f-55e533fc6bd3","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"cac48643-3e58-11e6-808f-61b7af81be76","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[46,47],"tindex":"cac4ad54-3e58-11e6-808f-fde1b1186eb5","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,28,70,71,72,73,74,75,76,77,78,79,34,80,81,82,83,84,85,39,86,87,88,89,90,91,43,92,93,94,95,96,97,45,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"tindex":"cac4ad55-3e58-11e6-808f-6dead5257b26","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (null == object) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().contains(object);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"cac4d466-3e58-11e6-808f-db94a1eae799","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:537","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.getValue(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],"tindex":"cac4d467-3e58-11e6-808f-ff05e8d9ed87","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"cac4d468-3e58-11e6-808f-dd7cb04fb51d","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator == null) {\n        {\n            if (predicate == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    if (predicate == null) {\n                        throw new java.lang.NullPointerException(\"Predicate must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[195,196],"tindex":"cac4fb79-3e58-11e6-808f-c7d97c98acaa","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331],"tindex":"cac4fb7a-3e58-11e6-808f-9b4e5123ef58","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((previous.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"previous"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"cac5becb-3e58-11e6-808f-671bf2cbed97","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[332],"tindex":"cac5becc-3e58-11e6-808f-b7971e69bbd8","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:47","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((closures.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[333,334,335,336,337,338,141,142,143,144,339,145,146,340,147,341,148,342,343,344,345,346,347,348,150,152,153,154,155,156,157,158,159,160,161,349,350,162,351,163,352,353,354,355,356,357,167,168,169,170,358,171,172,359,173,360,174,361,362,363,364,365,366,175,176,367,178,180,181,182,183,184,185,186,187,188,189,368,369,190,370,191],"tindex":"cac5becd-3e58-11e6-808f-31e0502a6122","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                {\n                    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n                    for (final E E : coll) {\n                        addNodeBefore(node, e);\n                    }\n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[371,372,373,374,375],"tindex":"cac5e5de-3e58-11e6-808f-11a629fd8f86","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[376],"tindex":"cac5e5df-3e58-11e6-808f-7db10cbdffcb","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key5 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key5"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[377],"tindex":"cac5e5e0-3e58-11e6-808f-a5413e0bd67b","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525],"tindex":"cac60cf1-3e58-11e6-808f-f7035af300e1","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[526,527],"tindex":"cac60cf2-3e58-11e6-808f-254cafc0667b","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[528,529,530,531,532,533,534,535,209,216,536,537,538,539,540,541,542,543,544,545,546,245,252,253,254,547,548,549,550,551,552,259,266,553,554,555,556,557,558,559,560,561,562,274,281,563,564,565,566,567,568,569,570,302,309],"tindex":"cac60cf3-3e58-11e6-808f-c16c7596ea19","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key != null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"cac63404-3e58-11e6-808f-6f64c067f883","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"cac63405-3e58-11e6-808f-ed2bd8620b2a","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[571],"tindex":"cac63406-3e58-11e6-808f-cfc2731e9cda","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[572,573,574,575,576,577,578,579,580,581],"tindex":"cac63407-3e58-11e6-808f-7d33509fd830","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[582,217,218,583,267,268,584,282,283,585,586,587,310,311,588],"tindex":"cac65b18-3e58-11e6-808f-9977817d4f6e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[],"tindex":"cac65b19-3e58-11e6-808f-af908da2e43c","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[589],"tindex":"cac65b1a-3e58-11e6-808f-1f54d324cfed","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:45","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> umodifiableListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableListIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[],"tindex":"cac6822b-3e58-11e6-808f-adb69e98d5de","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[590],"tindex":"cac6822c-3e58-11e6-808f-7788d391d53e","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[591,592,593],"tindex":"cac6822d-3e58-11e6-808f-51660e414bce","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[594,595,596,597,598],"tindex":"cac6822e-3e58-11e6-808f-1b53dc22f9f3","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[599],"tindex":"cac6a93f-3e58-11e6-808f-d1d217ab1f87","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:126","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformer) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))"},"failures":[],"tindex":"cac6a940-3e58-11e6-808f-c391e4e4eefd","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtBinaryOperatorImpl","sourcecode":"inputCollection != null"},"failures":[600,601,602],"tindex":"cac6a941-3e58-11e6-808f-b99bf261fd6b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1037","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.lang.Iterable<? extends I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (inputCollection != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (inputCollection != null) {\n                return org.apache.commons.collections4.CollectionUtils.collect(inputCollection.iterator(), transformer, outputCollection);\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"cac6a942-3e58-11e6-808f-45ef303791d9","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:543","type":"CtBinaryOperatorImpl","sourcecode":"equator == null"},"failures":[603],"tindex":"cac6a943-3e58-11e6-808f-119497c6c107","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((a.size()) != (a.size())) {\n        {\n            if (equator == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (equator == null) {\n                        throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n                    } \n                    if ((a.size()) != (b.size())) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                        public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                        }\n                    };\n                    return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[604],"tindex":"cac6d054-3e58-11e6-808f-f129a502325e","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"cac6d055-3e58-11e6-808f-5578af5d3e41","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[605],"tindex":"cac6d056-3e58-11e6-808f-5d65edde2f17","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[606],"tindex":"cac6f767-3e58-11e6-808f-b7de53416cb8","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[607],"tindex":"cac6f768-3e58-11e6-808f-fff45ff76376","method":{"position":"org.apache.commons.collections4.ListUtils:418","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> predicatedList(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.PredicatedList.predicatedList(list, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"cac6f769-3e58-11e6-808f-d7183c62097f","method":{"position":"org.apache.commons.collections4.MapUtils:1060","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<V, K> invertMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<V, K> java.util.Map<V, K> = new java.util.HashMap<V, K>(map.size());\n            for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                out.put(entry.getValue(), entry.getKey());\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[608,609,610,611,612,613,197,198,614,615,616,617,199,618,200,619,620,621,201,622,623,624,625,626,627,202,203,628,629,630,631,204,632,205,633,634,635,636,206,207,208,528,529,530,531,532,582,533,534,637,638,535,209,639,640,641,210,211,642,212,213,214,215,216,217,218,219,235,643,236,644,645,237,646,647,238,239,240,241,648,536,537,242,243,244,538,539,540,541,542,543,544,545,649,650,546,245,651,652,653,246,247,654,248,249,250,251,252,253,254,255,655,656,256,257,258,547,548,549,550,551,583,552,657,658,659,660,259,661,662,663,260,261,664,262,263,264,265,266,267,268,269,665,270,666,667,553,554,271,272,273,555,556,557,558,559,584,560,561,668,669,562,274,670,671,672,275,276,673,277,278,279,280,281,282,283,284,586,674,675,585,676,299,300,301,563,564,565,566,567,587,568,569,677,678,570,302,679,680,681,303,304,682,305,306,307,308,309,310,311,312,588,683,684,376,685,313,314,315,316,686,318,319,320,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,321,702,703,704,705,706,707,322,323,708,324,709,710,325,326,711,712,327,328,329,330,331],"tindex":"cac6f76a-3e58-11e6-808f-39882f8f5ac8","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[713,714,715,716,717,718,719,720,721],"tindex":"cac71e7b-3e58-11e6-808f-79944a6bbb13","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().getKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:57","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"cac71e7c-3e58-11e6-808f-6993d87f49b2","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator == null) {\n        {\n            if (predicate == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    if (predicate == null) {\n                        throw new java.lang.NullPointerException(\"Predicate must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl","sourcecode":"expirationTimeObject != null"},"failures":[722,723,724],"tindex":"cac71e7d-3e58-11e6-808f-e7680547bf25","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject != null) {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"expirationTimeObject"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[608,610,198,614,617,618,619,620,621,622,624,203,628,631,632,633,634,635,528,529,530,531,532,533,534,535,209,214,215,216,217,218,219,538,539,540,541,542,544,545,546,245,250,251,252,253,254,255,547,548,549,550,551,552,657,660,259,264,265,266,267,268,269,555,556,557,558,559,560,561,562,274,279,280,281,282,283,284,586,585,563,564,565,566,567,568,569,570,302,307,308,309,310,311,312,588],"tindex":"cac71e7e-3e58-11e6-808f-07ff49f301ab","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"cac7458f-3e58-11e6-808f-2bd5eba76440","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:141","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.java.util.Iterator<? extends E> = iterator;\n            E = null;\n            boolean = false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[581,725],"tindex":"cac74590-3e58-11e6-808f-1754d98919f2","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().retainAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"cac74591-3e58-11e6-808f-2dbc827f6b5d","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"cac74592-3e58-11e6-808f-7bdb790ce4c0","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[608,609,610,611,612,613,197,198,614,615,616,617,199,618,200,619,620,621,201,622,623,624,625,626,627,202,203,628,629,630,631,204,632,205,633,634,635,726,727,728,729,730,731,206,207,208,528,732,529,733,530,531,532,582,734,533,735,534,637,638,535,209,736,737,738,639,640,641,210,211,642,212,739,740,213,214,741,742,215,216,217,218,219,743,744,648,235,643,236,644,645,237,646,647,238,239,240,241,745,746,747,536,537,242,243,244,538,748,539,749,540,541,542,543,750,544,751,752,545,649,650,546,245,753,754,755,651,652,653,246,247,654,248,756,757,249,250,758,759,251,252,253,254,255,760,761,762,763,764,765,766,767,256,257,258,547,768,548,769,549,550,551,583,770,552,771,657,658,659,660,259,772,773,774,661,662,663,260,261,664,262,775,776,263,264,777,778,265,266,267,268,269,665,666,779,780,781,270,667,782,783,784,553,554,271,272,273,555,785,556,786,557,558,559,584,787,560,788,789,561,668,669,562,274,790,791,792,670,671,672,275,276,673,277,793,794,278,279,795,796,280,281,282,283,284,797,798,799,800,801,802,803,804,805,806,588,317],"tindex":"cac76ca3-3e58-11e6-808f-cb5bc2f888cc","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"cac793b4-3e58-11e6-808f-0db4480c051a","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[807],"tindex":"cac7bac5-3e58-11e6-808f-ddac2c9dbd2f","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[808,809,810,811,812,813,814,815,816,817,818,819,820],"tindex":"cac7bac6-3e58-11e6-808f-67df5e2bc52b","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (comparator == null) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.add(comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"cac7bac7-3e58-11e6-808f-7d2f9822eaee","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[821,822,823],"tindex":"cac7bac8-3e58-11e6-808f-99872fb0df50","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"cac7bac9-3e58-11e6-808f-1dbb0d1e9bfc","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"cac7e1da-3e58-11e6-808f-fb8dfe35575d","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[824],"tindex":"cac7e1db-3e58-11e6-808f-6ba7608fd4d8","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (offsetInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[825,826],"tindex":"cac7e1dc-3e58-11e6-808f-5397e86cef18","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                {\n                    if (map == null) {\n                        return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n                    } \n                    return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[684,376,685,313],"tindex":"cac808ed-3e58-11e6-808f-476a547eacef","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"cac808ee-3e58-11e6-808f-ebd4b5f84cc2","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"cac808ef-3e58-11e6-808f-a9a9d665b384","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"cac808f0-3e58-11e6-808f-81bc59d36976","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n            if ((queue.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(queue.toArray()));\n                queue.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"cac808f1-3e58-11e6-808f-953f9af71696","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                {\n                    if (map == null) {\n                        return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n                    } \n                    return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[827,828],"tindex":"cac83002-3e58-11e6-808f-5b4c4ff29806","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"cac83003-3e58-11e6-808f-abd897dc312f","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().removeValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"cac83004-3e58-11e6-808f-1db3acb5b375","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852],"tindex":"cac83005-3e58-11e6-808f-d5b700150d93","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"cac85716-3e58-11e6-808f-a5ca0b1d7aaf","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (null == object) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().contains(object);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"cac85717-3e58-11e6-808f-b934d343874d","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"cac85718-3e58-11e6-808f-8f941be11fb6","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[853],"tindex":"cac85719-3e58-11e6-808f-fb1033a43681","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[19,854,25,855,856,857,858,859,860],"tindex":"cac8571a-3e58-11e6-808f-d7ef7495049e","method":{"position":"org.apache.commons.collections4.list.TreeList:430","type":"CtMethodImpl","sourcecode":"int indexOf(final java.lang.Object object, final int index) {\n    if (null == object) {\n        {\n            if ((getLeftSubTree()) != null) {\n                final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                if (result != (-1)) {\n                    return result;\n                } \n            } \n            if ((E) == null ? (E) == object : E.equals(object)) {\n                return index;\n            } \n            if ((getRightSubTree()) != null) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"cac87e2b-3e58-11e6-808f-d361fe93728a","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[861,862,863,864,865],"tindex":"cac87e2c-3e58-11e6-808f-c7606ef0bed9","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return isEqualKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:110","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"cac87e2d-3e58-11e6-808f-cddd282132a3","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"cac87e2e-3e58-11e6-808f-a7ff3547c712","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"cac87e2f-3e58-11e6-808f-f1f31f685f54","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1214","type":"CtBinaryOperatorImpl","sourcecode":"iterable instanceof java.util.List<?>"},"failures":[866,867],"tindex":"cac87e30-3e58-11e6-808f-0308dc9adb4f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (iterable instanceof java.util.List<?>) {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"iterable"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"cac8a541-3e58-11e6-808f-69d8a4c34509","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((a.size()) != (a.size())) {\n        {\n            if (equator == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (equator == null) {\n                        throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n                    } \n                    if ((a.size()) != (b.size())) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                        public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                        }\n                    };\n                    return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[868],"tindex":"cac8a542-3e58-11e6-808f-bd6153b02e6d","method":{"position":"org.apache.commons.collections4.TrieUtils:44","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(trie);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"cac8cc53-3e58-11e6-808f-b74c3515d81d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                {\n                    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n                    for (final E E : coll) {\n                        addNodeBefore(node, e);\n                    }\n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[636,535,869,648,546,655,660,666,562,870,674,585,570,701,526],"tindex":"cac8cc54-3e58-11e6-808f-07b7dba1e40b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:318","type":"CtMethodImpl","sourcecode":"private void _putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final int int = map.size();\n            if (mapSize == 0) {\n                return ;\n            } \n            final int int = ((int)((((int) + mapSize) / (float)) + 1));\n            ensureCapacity(calculateNewCapacity(newSize));\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[871,872,873,874,875,223,876,877,869,224,225,226,878,229,230,231,232,233,234,879,880,881,882,883,884,885,870,288,289,290,886,293,294,295,296,297,298],"tindex":"cac8cc55-3e58-11e6-808f-2ffb109deecf","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[887],"tindex":"cac8cc56-3e58-11e6-808f-91deab43ff82","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[888,889],"tindex":"cac8f367-3e58-11e6-808f-f99308e81210","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[890,891,892,893],"tindex":"cac8f368-3e58-11e6-808f-7bc9adbe8368","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"cac8f369-3e58-11e6-808f-036621792258","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[894,895,896,897,898,899,900,901,902,903,904,905,906,907,111,908,853,113],"tindex":"cac8f36a-3e58-11e6-808f-abfe2243316a","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"cac8f36b-3e58-11e6-808f-e973ad29d346","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[909,656,910,911,912,913,914,915,916,917,918,655,549,657,660,260,261,664,264,265,266,267,268,269],"tindex":"cac91a7c-3e58-11e6-808f-af1a38df2002","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[19,16,919,17,18,920,15,20,21,22,23,921,922,923,924,854,925,926,927,928,929,930,931,932,933,934,935,24,936,25,855,937,856,857,938,858,939,940,859,941,942,943,944,945],"tindex":"cac91a7d-3e58-11e6-808f-612b14a0e1a7","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if (endIndex < 0) {\n        {\n            if ((index < startIndex) || (index > endIndex)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"endIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[946],"tindex":"cac91a7e-3e58-11e6-808f-9da917701d23","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[947,948,949,950,951],"tindex":"cac91a7f-3e58-11e6-808f-a3315c99390c","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[952],"tindex":"cac91a80-3e58-11e6-808f-c1a74bb97e25","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}