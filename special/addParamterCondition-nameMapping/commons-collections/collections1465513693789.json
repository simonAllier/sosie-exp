{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":435,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":626,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":725,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":4,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":309,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":169,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":375,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":100,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":622,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":804,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":562,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":803,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":238,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":495,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":672,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":111,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":302,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":679,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":522,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":399,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":695,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":782,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":339,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":417,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":87,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":568,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":436,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":511,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":450,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":810,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":354,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":287,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":635,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":459,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":663,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":1,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":456,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":618,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":345,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":629,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":379,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":394,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":730,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":531,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":498,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":747,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":313,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":236,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":400,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":13,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":821,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":243,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":689,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":671,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":421,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":186,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":187,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":216,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":188,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":534,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":168,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":404,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":542,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":615,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":845,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":832,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":510,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":315,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":828,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":841,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":741,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":211,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":271,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":656,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":90,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":353,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":280,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":735,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":312,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":483,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":490,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":484,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":485,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":140,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":114,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":290,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":501,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":608,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":742,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":285,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":286,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":284,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":259,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":346,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":465,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":69,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":554,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":814,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":70,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":453,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":349,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":329,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":218,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":639,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":433,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":422,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":444,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":655,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":162,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":658,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":512,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":138,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":847,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":143,"org.apache.commons.collections4.map.MultiKeyMapTest.testEmptyMapCompatibility":427,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":479,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":524,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":376,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":580,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":437,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":438,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":439,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":715,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":26,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":38,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":357,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":326,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":624,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":509,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":775,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":358,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":415,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":18,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":527,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":118,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":74,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":75,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":76,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":295,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":594,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":424,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":660,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":738,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":723,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":691,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":529,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":720,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":852,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":196,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":636,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":310,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":625,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":550,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":808,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":714,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":651,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":851,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":245,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":77,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":45,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":97,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":279,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":535,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":716,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":760,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":67,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":481,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":516,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":303,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":549,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":819,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":548,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":291,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":547,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":666,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":455,"org.apache.commons.collections4.map.LRUMapTest.testReset":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":703,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":662,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":228,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":499,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":9,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":365,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":224,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":448,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":325,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":361,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":30,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":124,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":260,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":205,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":239,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":682,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":338,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":519,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":146,"org.apache.commons.collections4.map.LinkedMapTest.testReset":355,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":492,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":611,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":398,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":532,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":277,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":848,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":553,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":420,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":759,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":212,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":61,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":60,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":552,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":674,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":585,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":786,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":612,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":842,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":718,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":597,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":744,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":702,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":705,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":696,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":244,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":686,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":3,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":7,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":822,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":390,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":576,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":68,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":194,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":470,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":645,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":223,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":248,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":175,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":37,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":649,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":278,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":773,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":731,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":812,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":167,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":233,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":578,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":66,"org.apache.commons.collections4.map.HashedMapTest.testClone":157,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":434,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":301,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":805,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":471,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":570,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":464,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":29,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":397,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":642,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":480,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":734,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":727,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":317,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":514,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":571,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":764,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":613,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":712,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":796,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":768,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":323,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":52,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":384,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":383,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":385,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":163,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":130,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":289,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":360,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":416,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":363,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":454,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":792,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":95,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":112,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":401,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":761,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":396,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":395,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":105,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":348,"org.apache.commons.collections4.map.LinkedMapTest.testClone":351,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":569,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":408,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":200,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":432,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":669,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":230,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":231,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":445,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":781,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":232,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":477,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":411,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":410,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":409,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":523,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":500,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":252,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":181,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":520,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":801,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":506,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":816,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":798,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":818,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":451,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":72,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":177,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":784,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":425,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":850,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":15,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":337,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":374,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":258,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":272,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":643,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":227,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":824,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":340,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":564,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":697,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":517,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":681,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":584,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":641,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":10,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":835,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":713,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":630,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":221,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":85,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":273,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":829,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":193,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":572,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":653,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":745,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":680,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":316,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":343,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":780,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":88,"org.apache.commons.collections4.map.LRUMapTest.testLRU":505,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":132,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":793,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":833,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":787,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":92,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":178,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":297,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":81,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":601,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":763,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":607,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":543,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":598,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":246,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":352,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":749,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":166,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":823,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":541,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":150,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":515,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":78,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":261,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":675,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":540,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":462,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":482,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":452,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":590,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":684,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":276,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":195,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":406,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":551,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":389,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":623,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":530,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":489,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":726,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":125,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":673,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":293,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":23,"org.apache.commons.collections4.map.HashedMapTest.testEmptyMapCompatibility":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":443,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":262,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":241,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":839,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":724,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":366,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":370,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":270,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":372,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":794,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":791,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":215,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":600,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":58,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":579,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":426,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":644,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":413,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":213,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":650,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":769,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":677,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":93,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":373,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":229,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":844,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":668,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":493,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":661,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":795,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":274,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":556,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":172,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":587,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":557,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":25,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":145,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":320,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":834,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":153,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":288,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":256,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":299,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":342,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":753,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":369,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":683,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":42,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":596,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":266,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":706,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":846,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":164,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":144,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":257,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":619,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":754,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":255,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":486,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":371,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":79,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":298,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":825,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":488,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":201,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":487,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":606,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":300,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":586,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":428,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":199,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":591,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":381,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":518,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":107,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":840,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":774,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":119,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":120,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":121,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":638,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":827,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":321,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":430,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":790,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":831,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":717,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":750,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":251,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":646,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":418,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":137,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":110,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":350,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":617,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":419,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":699,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":820,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":463,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":306,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":347,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":609,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":693,"org.apache.commons.collections4.list.TreeListTest.testRemove":129,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":652,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":634,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":282,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":281,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":659,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":783,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":283,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":817,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":442,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":377,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":441,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":777,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":440,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":710,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":779,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":135,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":460,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":698,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":756,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":359,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":402,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":559,"org.apache.commons.collections4.map.LRUMapTest.testClone":503,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":392,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":670,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":117,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":174,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":83,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":327,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":382,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":521,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":214,"org.apache.commons.collections4.ListUtilsTest.testSubtract":809,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":447,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":664,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":807,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":737,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":678,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":393,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":582,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":772,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":685,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":458,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":800,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":461,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":836,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":28,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":202,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":407,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":632,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":752,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":155,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":648,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":558,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":429,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":676,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":736,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":797,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":770,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":565,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":19,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":156,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":154,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":56,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":269,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":762,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":748,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":789,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":391,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":127,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":159,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":561,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":502,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":206,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":219,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":528,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":785,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":813,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":170,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":222,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":305,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":567,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":574,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":475,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":733,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":599,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":102,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":207,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":593,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":837,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":304,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":160,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":771,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":721,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":388,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":380,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":387,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":575,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":603,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":729,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":732,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":446,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":378,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":126,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":209,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":292,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":491,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":242,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":474,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":344,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":647,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":704,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":80,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":589,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":563,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":826,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":198,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":237,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":220,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":811,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":526,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":637,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":334,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":335,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":687,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":497,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":469,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":755,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":405,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":620,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":757,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":307,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":592,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":758,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":296,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":610,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":537,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":849,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":560,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":472,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":414,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":180,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":44,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":98,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":364,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":778,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":555,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":853,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":318,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":139,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":142,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":133,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":640,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":746,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":263,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":719,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":513,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":605,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":46,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":665,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":431,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":602,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":573,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":688,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":104,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":319,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":657,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":457,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":33,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":250,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":595,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":191,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":539,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":788,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":356,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":776,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":692,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":767,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":701,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":628,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":830,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":466,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":165,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":633,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":815,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":708,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":109,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":765,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":739,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":96,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":20,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":403,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":690,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":476,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":27,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":838,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEmptyMapCompatibility":473,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":148,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":525,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":341,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":806,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":728,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":36,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":268,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":106,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":631,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":16,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":208,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":449,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":538,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":711,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":700,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":6,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":332,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":333,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":108,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":203,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":331,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":694,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":324,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":751,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":566,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":14,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":183,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":184,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":627,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":722,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":0,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":536,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":709,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":468,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":314,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":311,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":322,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":581,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":799,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":507,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":253,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":614,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":667,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":740,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":546,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":743,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":707,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":843,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":654,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":116,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":43,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":766,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":412,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":544,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":545,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":854,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":621,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":185,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":367,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":423,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":577,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":131,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":149,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":151,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":583,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":802,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":508,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":210,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":247,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":604,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":533},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[0],"tindex":"0ad7e81e-2e97-11e6-b712-01afa2c58233","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[1],"tindex":"0ad8d27f-2e97-11e6-b712-4f9760512d6d","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[2,3],"tindex":"0ad8f990-2e97-11e6-b712-9395af773153","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"0ad8f991-2e97-11e6-b712-b1842db9ab23","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"0ad920a2-2e97-11e6-b712-7f8ad2d9cff3","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return entry.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[],"tindex":"0ad947b3-2e97-11e6-b712-4f28efd13fb2","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"key3"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"0ad96ec4-2e97-11e6-b712-15ad0b8b6cdd","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:504","type":"CtMethodImpl","sourcecode":"protected void nodeRemoved(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n            if ((node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) && (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>))) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n                boolean = true;\n            } else if (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                boolean = false;\n            } else if (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n                boolean = true;\n                (int)--;\n            } else {\n                boolean = false;\n                boolean = false;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:679","type":"CtBinaryOperatorImpl","sourcecode":"floatObject == null"},"failures":[4],"tindex":"0ad995d5-2e97-11e6-b712-236578306149","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) > 0"},"failures":[5],"tindex":"0ad995d6-2e97-11e6-b712-bf0c2e887123","method":{"position":"org.apache.commons.collections4.IteratorUtils:278","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start) {\n    if (start > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtBinaryOperatorImpl","sourcecode":"h == (root)"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"0ad9bce7-2e97-11e6-b712-d951f656297f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h == h) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"h","h":"h"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[31,32,33],"tindex":"0ada3218-2e97-11e6-b712-8faf3e08927d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[34],"tindex":"0ada5929-2e97-11e6-b712-279224c19378","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"tindex":"0ada592a-2e97-11e6-b712-955553faebd3","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if ((key instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtBinaryOperatorImpl","sourcecode":"size <= 0"},"failures":[129,130,131,132,133,134,135,136,137,138],"tindex":"0ada803b-2e97-11e6-b712-c78679809a71","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0adbb8bc-2e97-11e6-b712-c9b7c5cb1e88","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"0adbdfcd-2e97-11e6-b712-c96fccf93259","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if (index == 1) {\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            setComparator(index, comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"0adbdfce-2e97-11e6-b712-410cac6746d7","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"0adc06df-2e97-11e6-b712-47f25147afdd","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:51","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lengthInBits(final java.lang.String key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key != null ? (key.length()) * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) : 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"0adc06e0-2e97-11e6-b712-b772c659beb8","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Byte"},"failures":[139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156],"tindex":"0adc2df1-2e97-11e6-b712-9dc231b8a858","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if (label instanceof java.lang.Byte) {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"label"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:510","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609],"tindex":"0adc5502-2e97-11e6-b712-19650fbcff02","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:686","type":"CtMethodImpl","sourcecode":"protected int calculateThreshold(final int newCapacity, final float factor) {\n    if (newCapacity > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((int)(newCapacity * factor));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"newCapacity"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[609],"tindex":"0adc7c13-2e97-11e6-b712-bd1d5f8a2eee","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration<?>) {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"0adca324-2e97-11e6-b712-7903d1da01f2","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(startIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < startIndex) || (index > endIndex)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"startIndex"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[610],"tindex":"0adcca35-2e97-11e6-b712-6d4c83f99d8c","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (array == null) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:157","type":"CtInvocationImpl","sourcecode":"it.hasNext()"},"failures":[611,612,38,613,614,615,616,617,618,619,57,620,621,622,623,624,625,626,627,72,628,629,630,631,632,633,634,635,99,636,637,638,639,640,641,642,110,643,644,645,646,647,648,649,117,650,651,652,653,654],"tindex":"0ade29c6-2e97-11e6-b712-8530a140a654","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:264","type":"CtMethodImpl","sourcecode":"protected java.util.Iterator<K> createKeySetIterator(final java.util.Iterator<K> iterator) {\n    if (iterator.hasNext()) {\n        {\n            return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySetIterator<K>(iterator , org.apache.commons.collections4.bidimap.AbstractDualBidiMap.this);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"0ade29c7-2e97-11e6-b712-652e25c0ecf6","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[655,656],"tindex":"0ade50d8-2e97-11e6-b712-71cb6bc1c921","method":{"position":"org.apache.commons.collections4.list.TreeList:144","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if (fromIndex > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(fromIndex, 0, size());\n            return new org.apache.commons.collections4.list.TreeList.TreeListIterator<E>(org.apache.commons.collections4.list.TreeList.this , fromIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[],"tindex":"0ade50d9-2e97-11e6-b712-c5fe2f99dccf","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[657,658,659,660,661,662,663,664,665,666],"tindex":"0ade77ea-2e97-11e6-b712-c556d0081b5d","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"nCopies"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"0ade77eb-2e97-11e6-b712-633739d7cf93","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[667],"tindex":"0ade9efc-2e97-11e6-b712-0130e7f93166","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (b == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808],"tindex":"0ade9efd-2e97-11e6-b712-87e44430dc17","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index == 0) {\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl","sourcecode":"key5 != null"},"failures":[809,810,811,812,813,814,815,816,817,657,818,819,820,658,821,822,659,823,824,825,660,826,827,828,829,661,830,831,832,833,834,662,835,836,837,663,838,839,664,840,841,842,843,844,665,845,846,847,848,849,666,850,851,852,853,854],"tindex":"0adeed1e-2e97-11e6-b712-f3108bd0dd30","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"object"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":33,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}