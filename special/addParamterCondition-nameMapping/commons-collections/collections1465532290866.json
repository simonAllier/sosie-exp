{"failureDictionary":{"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":19,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":24,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":14,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":16,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":33,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":38,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":22,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":6,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":35,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":30,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":15,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":28,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":2,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":23,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":20,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":1,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":13,"org.apache.commons.collections4.list.TreeListTest.testRemove":4,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":32,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":36,"org.apache.commons.collections4.list.TreeListTest.testBug35258":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":27,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":3,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":31,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":26,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":29,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":11,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":17,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":10,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":12,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":21,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":34,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":37,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":7,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":8,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":9,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":25,"org.apache.commons.collections4.CollectionUtilsTest.get":0,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":18},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[0,1,2,3],"tindex":"5790337e-2ec2-11e6-9d62-d73d6bf4260c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (index < (index / 2)) {\n        {\n            int int = index;\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n            while (iterator.hasNext()) {\n                i--;\n                if (i == (-1)) {\n                    return iterator.next();\n                } \n                iterator.next();\n            }\n            throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"579144ef-2ec2-11e6-9d62-ebcac8933ba3","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:219","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (value1 instanceof java.util.Iterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return value1 == value2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"579144f0-2ec2-11e6-9d62-4547bf4fb92c","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtBinaryOperatorImpl","sourcecode":"(root) != null"},"failures":[18,19,4,20,5,6,21,22,9,10,11,12,13,23,24,25,14,15,16,17],"tindex":"57916c01-2ec2-11e6-9d62-a1255938de67","method":{"position":"org.apache.commons.collections4.list.TreeList:730","type":"CtMethodImpl","sourcecode":"private int getHeight(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? -1 : node.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[26],"tindex":"57919312-2ec2-11e6-9d62-8512899b0da6","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"57919313-2ec2-11e6-9d62-7fff891c04d5","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtConditionalImpl","sourcecode":"nextElement == null ? p == null : nextElement.equals(p)"},"failures":[],"tindex":"5791ba24-2ec2-11e6-9d62-29a1913f7c89","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key == null ? key == null : nextElement.equals(p)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"key","nextElement":"key"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[27,28,29,30,31,32,33,34,35],"tindex":"5791e135-2ec2-11e6-9d62-6916fc3f6d7a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"initialCapacity < 0"},"failures":[],"tindex":"57922f56-2ec2-11e6-9d62-75a6e70535a7","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"initialCapacity":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtBinaryOperatorImpl","sourcecode":"((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)"},"failures":[36,37],"tindex":"57925667-2ec2-11e6-9d62-634613c4a497","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:298","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (((index % index) != 0) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        {\n            if (!(contains(object))) {\n                decorated().add(object);\n                java.util.List<E>.add(index, object);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtBinaryOperatorImpl","sourcecode":"index1 >= endIndex1"},"failures":[38],"tindex":"57927d78-2ec2-11e6-9d62-51d2d33b5531","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start >= start) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"endIndex1":"start","index1":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:94","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[],"tindex":"57927d79-2ec2-11e6-9d62-df3240eced05","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"5792a48a-2ec2-11e6-9d62-fde0ec61db17","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[],"tindex":"5792a48b-2ec2-11e6-9d62-a5c46b079475","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"o"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":14,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}