{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":505,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":240,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":264,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":0,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":178,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":82,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":164,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":308,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":117,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":220,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":408,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":497,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":468,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":480,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":294,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":411,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":479,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":307,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":534,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":78,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":332,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":422,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":329,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":90,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":215,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":483,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":110,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":188,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":84,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":85,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":156,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":160,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":39,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":419,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":358,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":553,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":25,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":47,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":102,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":132,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":144,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":490,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":74,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":461,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":501,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":21,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":288,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":17,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":258,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":426,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":390,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":271,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":540,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectHashCodeEqualsContract":313,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":320,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":302,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":433,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":532,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":26,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":535,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":101,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":168,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":364,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":537,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":183,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":470,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":221,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":492,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":189,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":104,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":385,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":92,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":245,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testRemove":515,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":87,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":33,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":106,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":546,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":477,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":159,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":128,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":379,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":195,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":231,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":282,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":499,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":68,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":402,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":312,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":472,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":37,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":205,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":303,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":161,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":325,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":4,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":388,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":2,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":457,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":440,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":138,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":527,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":143,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":361,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":391,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":123,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":170,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":213,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":474,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":403,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":375,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":476,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":502,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":11,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":405,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":118,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":406,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":407,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":292,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap":453,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":398,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":348,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":338,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":57,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":260,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":114,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":98,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":243,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":256,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":339,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":387,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":146,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":147,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":91,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":83,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":139,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":293,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":430,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":481,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":88,"org.apache.commons.collections4.collection.CompositeCollectionTest.testClear":421,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":444,"org.apache.commons.collections4.list.TreeListTest.testRemove":429,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":437,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":8,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":207,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":287,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":75,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":111,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEqualsNull":518,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":435,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":529,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":166,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":251,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSerializeDeserializeThenCompare":523,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":165,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":452,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":86,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":97,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":150,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":13,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":279,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":152,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":541,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":503,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":543,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":248,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":396,"org.apache.commons.collections4.map.LRUMapTest.testClone":196,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":181,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":314,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":311,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":171,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":204,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":333,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":354,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":149,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":217,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":214,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":530,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSimpleSerialization":520,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":324,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":340,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":341,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":342,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":113,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":126,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":463,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":182,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":32,"org.apache.commons.collections4.list.TreeListTest.testListEquals":432,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":81,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":290,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":119,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":399,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":263,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":239,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":460,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":321,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":343,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":67,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":409,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":416,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":507,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":50,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":417,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":273,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":382,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":368,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":378,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":76,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":224,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":317,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":247,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":158,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":274,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":482,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":352,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":401,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":10,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":69,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":199,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":238,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":237,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":236,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalEmptyCollectionExists":519,"org.apache.commons.collections4.map.LRUMapTest.testReset":197,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":549,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":100,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":300,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":192,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":64,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":414,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":154,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":413,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":410,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":493,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":250,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":210,"org.apache.commons.collections4.map.LinkedMapTest.testReset":148,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":218,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":498,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":277,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":187,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":80,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectHashCodeEqualsContract":275,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":242,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":449,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":491,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":445,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":552,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":508,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":384,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":496,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":131,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":369,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":370,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectEqualsSelf":516,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":371,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":506,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":330,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":395,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":464,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":125,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":241,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":394,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":393,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":63,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":129,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":467,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":177,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":135,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":169,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":176,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":175,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":484,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":167,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":412,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":40,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":349,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":431,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":327,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":179,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":337,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":425,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":316,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testNormalIteration":512,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":259,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":346,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":446,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":121,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":548,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":478,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":253,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":351,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":291,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":318,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":528,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":305,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":504,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":400,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":124,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":35,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":538,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":226,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":249,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":186,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":392,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":141,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":331,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":485,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":524,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":310,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":209,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":418,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsContract":521,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":280,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":285,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":381,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":191,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":244,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":16,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":357,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":526,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":443,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":296,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":362,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":365,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":27,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":486,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":389,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":447,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":261,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":173,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":436,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":172,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":454,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":174,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":404,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":73,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":153,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":208,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":272,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":190,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":137,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":383,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":336,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":366,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":55,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":28,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap":456,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":304,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":18,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":451,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":372,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":298,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":15,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":439,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":185,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":184,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testFullIterator":514,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":373,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":334,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":127,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":142,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":228,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":36,"org.apache.commons.collections4.map.LinkedMapTest.testClone":145,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":539,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":112,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":284,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":267,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":554,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":428,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":473,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":60,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":286,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":377,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":216,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":115,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":367,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":52,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":194,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":201,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":42,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":266,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":43,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":487,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":252,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":163,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":420,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":44,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":257,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":51,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":424,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":3,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":5,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":488,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":270,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":374,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":547,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalFullCollectionExists":517,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectHashCodeEqualsContract":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":227,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":466,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":212,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":459,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":360,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":376,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":489,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":545,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":108,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":471,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsSelfHashCode":522,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":89,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":423,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":427,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":462,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":356,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":500,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":295,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":550,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":323,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":155,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":77,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":265,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":355,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":455,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":359,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":225,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":24,"org.apache.commons.collections4.map.LRUMapTest.testLRU":200,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":442,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":495,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":363,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":415,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":347,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":299,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEmptyIterator":513,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":133,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":533,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":130,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":232,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":469,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":202,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":281,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":34,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":544,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":235,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":536,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":14,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":72,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":326,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":315,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":380,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":386,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":193,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":233,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":62,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":230,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":198,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":509,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":344,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":306,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":511,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":31,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":157,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":441,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":203,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":229,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":262,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":136,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":223,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":120,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":122},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:679","type":"CtBinaryOperatorImpl","sourcecode":"floatObject == null"},"failures":[0],"tindex":"8669fb08-2e81-11e6-b6d0-391e49cba726","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[1,2,3],"tindex":"866abe59-2e81-11e6-b6d0-9d7910552d4e","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[],"tindex":"866abe5a-2e81-11e6-b6d0-1925f2c4b41a","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"866ae56b-2e81-11e6-b6d0-21779d69d262","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[4,5,6,7,8,9,10,11,12,13],"tindex":"866ae56c-2e81-11e6-b6d0-e3f680cdc49a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((from.getParent(dataElement)) == null) {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"from","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[14,15],"tindex":"866b0c7d-2e81-11e6-b6d0-ef8d2468a4d6","method":{"position":"org.apache.commons.collections4.ListUtils:318","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> retainAll(final java.util.Collection<E> collection, final java.util.Collection<?> retain) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.lang.Math.min(collection.size(), retain.size()));\n            for (final E E : collection) {\n                if (retain.contains(obj)) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,4,86,87,88,5,89,90,91,92,93,94,95,96,97,6,98,99,7,8,100,101,9,10,11,12,13],"tindex":"866b338e-2e81-11e6-b6d0-c3144efd8799","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[102,103,104,105,106],"tindex":"866b5a9f-2e81-11e6-b6d0-bb14addf270e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"866b81b0-2e81-11e6-b6d0-e9b385b83cc7","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[],"tindex":"866b81b1-2e81-11e6-b6d0-6964f2508f30","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if (b instanceof java.util.Set<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[107],"tindex":"866ba8c2-2e81-11e6-b6d0-91f39c8456dc","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[108],"tindex":"866bcfd3-2e81-11e6-b6d0-4f68cc4600cd","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[109,110,111,112,113,114,115],"tindex":"866bf6e4-2e81-11e6-b6d0-4363bbbf43b2","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[116,117,118],"tindex":"866bf6e5-2e81-11e6-b6d0-0fbe588ee320","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value instanceof java.util.Enumeration<?>) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"866c1df6-2e81-11e6-b6d0-576b0a556908","method":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:134","type":"CtMethodImpl","sourcecode":"public void setEnumeration(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            org.apache.commons.collections4.iterators.EnumerationIterator.this.java.util.Enumeration<? extends E> = enumeration;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[119],"tindex":"866c1df7-2e81-11e6-b6d0-d9f22cd51295","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if (collection.isEmpty()) {\n        {\n            final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n            final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n            while (it.hasNext()) {\n                result.add(it.next());\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtBinaryOperatorImpl","sourcecode":"cmp == 0"},"failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"866c4508-2e81-11e6-b6d0-e35b5b6d96d7","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (hashIndex == 0) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"hashIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"tindex":"866c9329-2e81-11e6-b6d0-f7375078bdce","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[330],"tindex":"866c932a-2e81-11e6-b6d0-055e453c5775","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                {\n                    if (collection == null) {\n                        throw new java.lang.NullPointerException(\"The collection must not be null\");\n                    } \n                    return (object != null) && (collection.add(object));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtBinaryOperatorImpl","sourcecode":"(bitIndex >= 0) && (bitIndex < lengthInBits)"},"failures":[],"tindex":"866cba3b-2e81-11e6-b6d0-054b2c5ddfab","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if ((index >= 0) && (bitIndex < index)) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index","bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[331],"tindex":"866cba3c-2e81-11e6-b6d0-57a61382c64a","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[332],"tindex":"866ce14d-2e81-11e6-b6d0-0fe9cba87976","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[],"tindex":"866ce14e-2e81-11e6-b6d0-61a064612111","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[333],"tindex":"866d085f-2e81-11e6-b6d0-eba363782520","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[],"tindex":"866d5680-2e81-11e6-b6d0-ff1cad6e5759","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"866d5681-2e81-11e6-b6d0-831f2d992e59","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"866d7d92-2e81-11e6-b6d0-55a4c7a38e07","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if ((value instanceof java.util.Map.Entry) == false) {\n        {\n            return decorated().getKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl","sourcecode":"null != (orderingBits)"},"failures":[334,256,335,336,337,338,339,262,266,271,340,341,342,343,344,345,346,347,348,349,350,351,279,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,285,289,294,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,300,304,309,393,394,395,396,397,398,399,400,401,402,403,404,315,319,324,405,406,407,408,409,410,411,412,413],"tindex":"866d7d93-2e81-11e6-b6d0-e5edcc28cdd2","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (null != key) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[414,415,416],"tindex":"866d7d94-2e81-11e6-b6d0-d5dd4fa7e5fc","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"866da4a5-2e81-11e6-b6d0-db569df152f5","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"866da4a6-2e81-11e6-b6d0-e3e9900117f9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:663","type":"CtMethodImpl","sourcecode":"protected int calculateNewCapacity(final int proposedCapacity) {\n    if (proposedCapacity > 0) {\n        {\n            if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(proposedCapacity)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    int int = 1;\n                    if (proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                        newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n                    } else {\n                        while (newCapacity < proposedCapacity) {\n                            newCapacity <<= 1;\n                        }\n                        if (newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                            newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n                        } \n                    }\n                    return newCapacity;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"proposedCapacity"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[417,418],"tindex":"866dcbb7-2e81-11e6-b6d0-95db3e011bcd","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:744","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[],"tindex":"866dcbb8-2e81-11e6-b6d0-85f1bf5f5526","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[419],"tindex":"866dcbb9-2e81-11e6-b6d0-f7491f55f39a","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtFieldReadImpl","sourcecode":"hasNext"},"failures":[],"tindex":"866dcbba-2e81-11e6-b6d0-4163f184a14d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hasNext":"forceInclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[420,421,422,423,424,425],"tindex":"866df2cb-2e81-11e6-b6d0-05b36a629777","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:359","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Collection<E> compositeCollection1, final java.util.Collection<E> compositeCollection2) {\n    if (compositeCollection2 == null) {\n        {\n            java.util.List<java.util.Collection<E>>.add(compositeCollection1);\n            java.util.List<java.util.Collection<E>>.add(compositeCollection2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"compositeCollection2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"866df2cc-2e81-11e6-b6d0-017f599204c8","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"866df2cd-2e81-11e6-b6d0-9d8b70e5c526","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list.isEmpty()) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.list.GrowthList<E>(list);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[426],"tindex":"866e19de-2e81-11e6-b6d0-17ff7ddd329e","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:47","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((closures.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(closures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"866e19df-2e81-11e6-b6d0-b7cf83c0b2d6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1415","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(entry.getKey());\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"866e19e0-2e81-11e6-b6d0-214938a1ed47","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[427],"tindex":"866e40f1-2e81-11e6-b6d0-9711a20173ff","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"866e40f2-2e81-11e6-b6d0-5bd456daf0b5","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:210","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends J, ? extends U> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().putAll(transformMap(mapToCopy));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:255","type":"CtUnaryOperatorImpl","sourcecode":"!contains"},"failures":[],"tindex":"866e40f3-2e81-11e6-b6d0-e937ed56d5c0","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (!defaultValue) {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"contains":"defaultValue"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) > 0"},"failures":[],"tindex":"866e6804-2e81-11e6-b6d0-7bd11960ac3d","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index > 0) {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"866e6805-2e81-11e6-b6d0-ad2aeb0c5ac3","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:99","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength resolve(final int value) {\n    if (value < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            switch (value) {\n                case 0 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                case 1 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                case 2 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                default :\n                    throw new java.lang.IllegalArgumentException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:916","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"866e8f16-2e81-11e6-b6d0-cbbd4ff06fb8","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[70,95,96,97,10],"tindex":"866e8f17-2e81-11e6-b6d0-7dec10045abf","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator<?>) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:136","type":"CtBinaryOperatorImpl","sourcecode":"(cacheSize) == 0"},"failures":[428,429,430,431,432,433,434,435,436,437,416,438,439,440,441,442,443,444,445,446,109,110,111,112,447,113,448,449,114,450,451],"tindex":"866e8f18-2e81-11e6-b6d0-537a2383e21d","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cacheSize":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[452],"tindex":"866eb629-2e81-11e6-b6d0-079b8c9f3413","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) > 0"},"failures":[],"tindex":"866eb62a-2e81-11e6-b6d0-41612da85b5a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:663","type":"CtMethodImpl","sourcecode":"protected int calculateNewCapacity(final int proposedCapacity) {\n    if (proposedCapacity > 0) {\n        {\n            if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(proposedCapacity)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    int int = 1;\n                    if (proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                        newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n                    } else {\n                        while (newCapacity < proposedCapacity) {\n                            newCapacity <<= 1;\n                        }\n                        if (newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                            newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n                        } \n                    }\n                    return newCapacity;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"proposedCapacity"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtInvocationImpl","sourcecode":"hm.isEmpty()"},"failures":[453,454,455,456,457,458,459,139],"tindex":"866edd3b-2e81-11e6-b6d0-8966c2eef6fa","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hm":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtConditionalImpl","sourcecode":"nextElement == null ? p == null : nextElement.equals(p)"},"failures":[],"tindex":"866edd3c-2e81-11e6-b6d0-1f6a719fae25","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object == null ? object == null : nextElement.equals(p)) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"object","nextElement":"object"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"866edd3d-2e81-11e6-b6d0-65f05300803d","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:257","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[460,461,462,463,464,465,466],"tindex":"866edd3e-2e81-11e6-b6d0-07f10192d58f","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:257","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[467,468,469,422,470,424,471,425,472,473,474,475,476],"tindex":"866f044f-2e81-11e6-b6d0-ef8e2eebbea7","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtBinaryOperatorImpl","sourcecode":"rval != null"},"failures":[17,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,4,86,87,88,5,89,90,91,92,93,94,95,96,97,6,98,99,7,8,100,101,9,10,11,12,13],"tindex":"866f0450-2e81-11e6-b6d0-bf4f343fee0e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rval":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"tindex":"866f2b61-2e81-11e6-b6d0-55f9ed5f46bd","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    if (value == null) {\n                        for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                            while (entry != null) {\n                                if ((entry.getValue()) == null) {\n                                    return true;\n                                } \n                                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            }\n                        }\n                    } else {\n                        for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                            while (entry != null) {\n                                if (isEqualValue(value, entry.getValue())) {\n                                    return true;\n                                } \n                                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            }\n                        }\n                    }\n                    return false;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"866f2b62-2e81-11e6-b6d0-014e191cb56e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"866f5273-2e81-11e6-b6d0-752d3528f60f","method":{"position":"org.apache.commons.collections4.CollectionUtils:994","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Collection<O> collect(final java.lang.Iterable<I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.collect(inputCollection, transformer, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:127","type":"CtBinaryOperatorImpl","sourcecode":"(size % 2) == 0"},"failures":[],"tindex":"866f5274-2e81-11e6-b6d0-d940c42f5b04","method":{"position":"org.apache.commons.collections4.map.LinkedMap:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<K> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n    if ((toIndexExclusive % 2) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(super.subList(fromIndexInclusive, toIndexExclusive));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"toIndexExclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:128","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[486,503],"tindex":"866f5275-2e81-11e6-b6d0-3f3c0b29f75d","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:94","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[504,505,506,507],"tindex":"866f5276-2e81-11e6-b6d0-1f713b65ceb5","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 == null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1077","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"866f7987-2e81-11e6-b6d0-4996a0c11df2","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(defaultValue)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"defaultValue"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:844","type":"CtBinaryOperatorImpl","sourcecode":"doubleObject == null"},"failures":[],"tindex":"866f7988-2e81-11e6-b6d0-9f3ecce1a679","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"key1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[508],"tindex":"866fa099-2e81-11e6-b6d0-1b09abb3cf7b","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl","sourcecode":"java.util.Iterator.class.isAssignableFrom(method.getReturnType())"},"failures":[],"tindex":"866fa09a-2e81-11e6-b6d0-095f8e1225ba","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object.isAssignableFrom(object.getReturnType())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"object","method":"object"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"866fa09b-2e81-11e6-b6d0-1d6050ef4548","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[509,510,511,512,513,514,515,516,517,518,519,520,521,522,523],"tindex":"866fa09c-2e81-11e6-b6d0-e1ff6fa87c50","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[524],"tindex":"866fc7ad-2e81-11e6-b6d0-23e9740c388b","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl","sourcecode":"index >= size"},"failures":[525,526,527],"tindex":"866fc7ae-2e81-11e6-b6d0-2f39acb7edc7","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index >= index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"866fc7af-2e81-11e6-b6d0-2f06a3fe105e","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(estimatedSize)) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"estimatedSize"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:318","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[],"tindex":"866fc7b0-2e81-11e6-b6d0-77ce94442ea3","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    if (value == null) {\n                        for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                            while (entry != null) {\n                                if ((entry.getValue()) == null) {\n                                    return true;\n                                } \n                                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            }\n                        }\n                    } else {\n                        for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                            while (entry != null) {\n                                if (isEqualValue(value, entry.getValue())) {\n                                    return true;\n                                } \n                                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            }\n                        }\n                    }\n                    return false;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[],"tindex":"866fedc1-2e81-11e6-b6d0-ad52f70fa6be","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtBinaryOperatorImpl","sourcecode":"removeCollection == null"},"failures":[],"tindex":"867014d2-2e81-11e6-b6d0-dd6fd2137357","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return addAll(int, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeCollection":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"867014d3-2e81-11e6-b6d0-375ae678712a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:427","type":"CtMethodImpl","sourcecode":"protected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        {\n            node.setValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[528],"tindex":"867014d4-2e81-11e6-b6d0-b1caae60aa8f","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtFieldReadImpl","sourcecode":"scanUntilRemovable"},"failures":[],"tindex":"867014d5-2e81-11e6-b6d0-15de03a0b24a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) {\n    if (toInclusive) {\n        {\n            return new RangeEntryMap(fromKey , fromInclusive , toKey , toInclusive);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"scanUntilRemovable":"toInclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtBinaryOperatorImpl","sourcecode":"(uniqueSet) == null"},"failures":[],"tindex":"86703be6-2e81-11e6-b6d0-876df531566b","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"uniqueSet":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[529],"tindex":"86703be7-2e81-11e6-b6d0-af3ab1cdfa05","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"86703be8-2e81-11e6-b6d0-a7c9b111ae7b","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[],"tindex":"867062f9-2e81-11e6-b6d0-09146e63fbc1","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                {\n                    if (collection == null) {\n                        throw new java.lang.NullPointerException(\"The collection must not be null\");\n                    } \n                    return (object != null) && (collection.add(object));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:107","type":"CtBinaryOperatorImpl","sourcecode":"(collection) != null"},"failures":[],"tindex":"867062fa-2e81-11e6-b6d0-7f4915439670","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[],"tindex":"867062fb-2e81-11e6-b6d0-89574ea1f471","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[],"tindex":"867062fc-2e81-11e6-b6d0-37208696b50a","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[67,72,73,74,5],"tindex":"86708a0d-2e81-11e6-b6d0-43a281757010","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return doRemoveKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"86708a0e-2e81-11e6-b6d0-310b1292afcf","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[530],"tindex":"86708a0f-2e81-11e6-b6d0-ad578be55c4b","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"86708a10-2e81-11e6-b6d0-1f488ec69381","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list.isEmpty()) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.list.GrowthList<E>(list);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl","sourcecode":"(pendingDeletions.isEmpty()) && (pendingInsertions.isEmpty())"},"failures":[],"tindex":"8670b121-2e81-11e6-b6d0-25516bc7b6cd","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if ((collection.isEmpty()) && (collection.isEmpty())) {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"collection","pendingInsertions":"collection"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"8670b122-2e81-11e6-b6d0-433f9f8b7798","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (nCopies < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"nCopies"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"8670b123-2e81-11e6-b6d0-618c81cd4f66","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl","sourcecode":"index >= size"},"failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,531,532,533,534,535,139,140,141,143,144,145,536,142,146,147,148,149,150,151,152,153,154,155,190,191,192,156,157,158,159,160,161,162,537,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,538,539,540,541,542,543,544,545,193,194,195,200,201,202,203,204,205,206,207,208,196,209,198,199,197,210,211,212,213,214,215,216,251,252,253,217,218,219,220,221,222,223,546,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,547,548,549,550,551,552,553,554],"tindex":"8670d834-2e81-11e6-b6d0-df6db78b3861","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode >= hashCode) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>(next , hashCode , convertKey(key) , value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashCode","index":"hashCode"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtBinaryOperatorImpl","sourcecode":"(index < 0) || (index >= sz)"},"failures":[],"tindex":"8670d835-2e81-11e6-b6d0-5749d160ffaa","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if ((hashIndex < 0) || (index >= hashCode)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"hashCode","index":"hashIndex"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"8670ff46-2e81-11e6-b6d0-7dff4e31f942","method":{"position":"org.apache.commons.collections4.CollectionUtils:1414","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (coll == null) || (coll.isEmpty());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[],"tindex":"8670ff47-2e81-11e6-b6d0-45e2736985f4","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":96,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}