{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":625,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":35,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":44,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":370,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":544,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":100,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":178,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":246,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":280,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":231,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":537,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":609,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":531,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":530,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":67,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":642,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":568,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":569,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":289,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":714,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":119,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":315,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":577,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":455,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":333,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":192,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":331,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":425,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":12,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":341,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":106,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":519,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":470,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":287,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":494,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":655,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":443,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":650,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":669,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":690,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":4,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":453,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":587,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":297,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":408,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":130,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":279,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":473,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":630,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":51,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":198,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":506,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":104,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":79,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalFullCollectionExists":46,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":257,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":398,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":362,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":335,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":65,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":121,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":374,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":423,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":715,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":489,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":116,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":161,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":449,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":691,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":2,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":378,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":154,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":223,"org.apache.commons.collections4.CollectionUtilsTest.select":317,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":575,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":578,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":282,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":448,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":377,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":526,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":579,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":617,"org.apache.commons.collections4.ListUtilsTest.testEquals":318,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":271,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":338,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":212,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":492,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":288,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":710,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":189,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":312,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":686,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":268,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":126,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":327,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":696,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":495,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":193,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":247,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":567,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":211,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":562,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":589,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":269,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":92,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":237,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":664,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":640,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":528,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":488,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":529,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":647,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":653,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testSerializeDeserializeThenCompare":82,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":660,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":395,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":245,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":599,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":716,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":180,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":146,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":278,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":445,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":196,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":181,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":319,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":131,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":678,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":75,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":391,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":128,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":122,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":380,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":242,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":404,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":314,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToString":688,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":535,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":303,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":33,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":594,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":627,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":513,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":648,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":717,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":556,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":536,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":202,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":23,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":369,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":50,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":210,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":604,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":132,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":195,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":255,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":22,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":616,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":608,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":7,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":24,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":507,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":302,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":439,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":217,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":366,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":703,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":115,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":419,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":505,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":612,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":388,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":504,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":224,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":260,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":401,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":501,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":137,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":606,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":387,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":152,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":168,"org.apache.commons.collections4.CollectionUtilsTest.union":621,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":574,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":563,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":236,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToString":73,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":105,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":622,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode":546,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":476,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":49,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":367,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":593,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":225,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":700,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":444,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":433,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":467,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":724,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":656,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":125,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":527,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":48,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":332,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":381,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":457,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":112,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":684,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalEmptyCollectionExists":346,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":296,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":267,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":469,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":468,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":9,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":431,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":441,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":41,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":266,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":420,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":668,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":171,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":54,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":91,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":120,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":532,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":637,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":18,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":103,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":437,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":619,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":153,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":219,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":239,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":552,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":605,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":545,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsSelfHashCode":42,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":585,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":220,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":635,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":683,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":465,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":663,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":293,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":518,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":472,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":392,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":555,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":351,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":510,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":452,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":719,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":11,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalEmptyCollectionExists":582,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":705,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":389,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":114,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":72,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":283,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":364,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":415,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":583,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":32,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":713,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":135,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":94,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":632,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":654,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":64,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":55,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":252,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":60,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":479,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":533,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":523,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":674,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":157,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":396,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":63,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":432,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":376,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":413,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":61,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":692,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":187,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":344,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":497,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":76,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":607,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":25,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":623,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":673,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":460,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":15,"org.apache.commons.collections4.IteratorUtilsTest.testToList":596,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":720,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":412,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":566,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":151,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":651,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":572,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":238,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":277,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":601,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":624,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":339,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":517,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":620,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":386,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":522,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":508,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":521,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":372,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":438,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":292,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":127,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":95,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":676,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":158,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":183,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":602,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":375,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":272,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":421,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":304,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":47,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":275,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":85,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":540,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":39,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":454,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":502,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":493,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":43,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":241,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":665,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":456,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":184,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":407,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":573,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":229,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":538,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":286,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":400,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":626,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":643,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":524,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":108,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":446,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":550,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":359,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":265,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":78,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":354,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":670,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":485,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":633,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":680,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":8,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSimpleSerialization":345,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":581,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":645,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":336,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":634,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":350,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":708,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":397,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":209,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":325,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":525,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":34,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":693,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":166,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":435,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":197,"org.apache.commons.collections4.list.TransformedListTest.testCollectionSize":687,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":385,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":430,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":712,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":144,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":356,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":360,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":427,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":543,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":81,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":409,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":542,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":471,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":281,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":316,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":496,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":176,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":725,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":487,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":666,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":291,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":722,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalEmptyCollectionExists":45,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":361,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":592,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":222,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":194,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":416,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":248,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":254,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":17,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":28,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":228,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":322,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":0,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":671,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":681,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":481,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":482,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":83,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":141,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":270,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":434,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":557,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":263,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":74,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":429,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":337,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":19,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":244,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":553,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":490,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":548,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":206,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":349,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":371,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":491,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":188,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":89,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":179,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":300,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":102,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":134,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":136,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":662,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":667,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":672,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":172,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":511,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":661,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":1,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalFullCollectionExists":580,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":259,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":240,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":600,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":631,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":551,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":264,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":379,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":215,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":613,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":393,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":129,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":584,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":464,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":515,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":324,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":597,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":357,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":140,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":274,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":53,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":20,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":699,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":368,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":394,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":411,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":342,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":218,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":436,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":30,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":707,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":334,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":539,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":514,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":253,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":466,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":58,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":62,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":201,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":477,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":186,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":107,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":586,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":726,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":199,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":727,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":93,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":614,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":358,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":611,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":109,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":403,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":373,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":284,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":155,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":301,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":3,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":159,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":718,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":352,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":410,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":87,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":234,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":226,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":405,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":704,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":618,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":628,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":328,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":694,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":458,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":450,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":165,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":143,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":461,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":256,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":243,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":638,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":90,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":69,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":57,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":96,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":440,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":463,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":462,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":520,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":311,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":711,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":610,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":697,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":185,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":721,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":658,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":698,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":167,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":474,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":554,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":343,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":162,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":170,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":564,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":565,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":295,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":36,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":418,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":6,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":59,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":509,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":701,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":313,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":483,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":227,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":641,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":221,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":723,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":142,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":500,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":163,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":442,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":66,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":110,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":644,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":123,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":147,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":649,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":383,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":682,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":484,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":657,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":177,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":148,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":382,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":486,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":298,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":329,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":571,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":615,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":139,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":365,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":547,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":290,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":679,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":706,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":310,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":309,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":308,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":174,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":258,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":306,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":330,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":307,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":591,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":636,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":16,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":590,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":709,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":261,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":414,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":603,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":99,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":646,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":251,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":204,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":541,"org.apache.commons.collections4.list.TransformedListTest.testFullListSerialization":675,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":652,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":214,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":417,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":451,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":31,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":233,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":677,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":175,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":323,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":639,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":164,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":689,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":262,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":598,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":213,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalFullCollectionExists":347,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":422,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":249,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":424,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":685,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":86,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator":320,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":512,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":80,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":340,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":355,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":480,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":384,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":576,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":353,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":71,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":558,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":595,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":559,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":207,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":13,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":38,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":191,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":629,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":498,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":570,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":428,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":149,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":426,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":560,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":98,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":516,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":561,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":399,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":447,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":659,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":205,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":549,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":208,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":169,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":695,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":235,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":390,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":406,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":534,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":702,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":499,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":200,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":588,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":182,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":37,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":232,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":475,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":348,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":459},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"af39529a-3f58-11e6-90f0-132929cdfb26","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:93","type":"CtBinaryOperatorImpl"},"failures":[1],"tindex":"af39eedb-3f58-11e6-90f0-0f031414b547","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (start < end) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl"},"failures":[2],"tindex":"af39eedc-3f58-11e6-90f0-5bb0184d3198","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"af39eedd-3f58-11e6-90f0-fbd9736bdbd3","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3a15ee-3f58-11e6-90f0-77b2bfacfaad","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        return null;\n                    } \n                    if (answer instanceof java.lang.Double) {\n                        return ((java.lang.Double)(answer));\n                    } \n                    return java.lang.Double.valueOf(answer.doubleValue());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[48,49,50,51],"tindex":"af3a15ef-3f58-11e6-90f0-43cb229f97fd","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:228","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" is less than zero\"));\n            } \n            if (index >= (int)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" is invalid for size \") + (int)));\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            if (index < ((int) / 2)) {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            } else {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            }\n            return entry;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1498","type":"CtBinaryOperatorImpl"},"failures":[52],"tindex":"af3a3c00-3f58-11e6-90f0-cb23f1279625","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3a6311-3f58-11e6-90f0-d9a11a397eab","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                {\n                    boolean boolean = false;\n                    final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                    while (it.hasNext()) {\n                        if ((coll.contains(it.next())) == false) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[53],"tindex":"af3a6312-3f58-11e6-90f0-1537d9cab1d6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"af3a8a23-3f58-11e6-90f0-db230e1ea9d5","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[85,86,87,88],"tindex":"af3a8a24-3f58-11e6-90f0-679882f0d71a","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index > 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl"},"failures":[89,90,91,92,93,94],"tindex":"af3ab135-3f58-11e6-90f0-072d02a381f5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl"},"failures":[95],"tindex":"af3ab136-3f58-11e6-90f0-b73543f29473","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3ad847-3f58-11e6-90f0-9b31c45607a9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:492","type":"CtMethodImpl","sourcecode":"protected void reuseEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex];\n            entry.int = hashCode;\n            entry.java.lang.Object = key;\n            entry.java.lang.Object = value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3ad848-3f58-11e6-90f0-2f2098e6bb1e","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[96],"tindex":"af3aff59-3f58-11e6-90f0-8d585e03671e","method":{"position":"org.apache.commons.collections4.MapUtils:1191","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> emptyIfNull(final java.util.Map<K, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return map == null ? java.util.Collections.<K, V>emptyMap() : map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3aff5a-3f58-11e6-90f0-1fb5443de4d1","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:543","type":"CtBinaryOperatorImpl"},"failures":[97],"tindex":"af3aff5b-3f58-11e6-90f0-5947486410e2","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((a.size()) != (b.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (equator == null) {\n                {\n                    if (equator == null) {\n                        throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n                    } \n                    if ((a.size()) != (b.size())) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                        public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                        }\n                    };\n                    return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl"},"failures":[98,90,99,100,101,102,103,104,94],"tindex":"af3b266c-3f58-11e6-90f0-474bc0aba1f7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193],"tindex":"af3b266d-3f58-11e6-90f0-9b0c33519648","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,116,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288],"tindex":"af3b4d7e-3f58-11e6-90f0-05f1daa135b7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key != null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3b4d7f-3f58-11e6-90f0-137c48cd10f4","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                {\n                    boolean boolean = false;\n                    final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                    while (it.hasNext()) {\n                        if ((coll.contains(it.next())) == false) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl"},"failures":[289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316],"tindex":"af3b7490-3f58-11e6-90f0-3d830a3d8098","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                {\n                    while (true) {\n                        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        if (child.isEmpty()) {\n                            child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        } \n                        if ((child.int) <= (node.int)) {\n                            return child;\n                        } \n                        node = child;\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl"},"failures":[317],"tindex":"af3b7491-3f58-11e6-90f0-2911123e42cc","method":{"position":"org.apache.commons.collections4.CollectionUtils:898","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl"},"failures":[318],"tindex":"af3b9ba2-3f58-11e6-90f0-c50d15e362d4","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (list2 == list1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[49,50],"tindex":"af3b9ba3-3f58-11e6-90f0-67ccacdc61ca","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        {\n            return getEntry(index).getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl"},"failures":[319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347],"tindex":"af3b9ba4-3f58-11e6-90f0-a98998c56730","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl"},"failures":[194,348,195,349,350,351,352,196,197,353,354,198,355,356,200,201,202,203,357,204,358,359,360,361,205,206,362,363,207,364,365,209,210,211],"tindex":"af3b9ba5-3f58-11e6-90f0-8315f6e31224","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3bc2b6-3f58-11e6-90f0-b58cf76d1e39","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3bc2b7-3f58-11e6-90f0-e52beca55787","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl"},"failures":[366],"tindex":"af3bc2b8-3f58-11e6-90f0-eb7d1c8bef83","method":{"position":"org.apache.commons.collections4.BagUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[367,368,369],"tindex":"af3bc2b9-3f58-11e6-90f0-c5e92b1b4eeb","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3be9ca-3f58-11e6-90f0-7b7c3a8399a7","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3be9cb-3f58-11e6-90f0-2bf865caf96b","method":{"position":"org.apache.commons.collections4.MapUtils:386","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key, final java.lang.String defaultValue) {\n    if (map != null) {\n        {\n            java.lang.String java.lang.String = org.apache.commons.collections4.MapUtils.getString(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3be9cc-3f58-11e6-90f0-c1598b04426d","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl"},"failures":[370],"tindex":"af3be9cd-3f58-11e6-90f0-dbc58a22f3a4","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (null == object) {\n                {\n                    return decorated().indexOf(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl"},"failures":[371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,367,406,407,408,409,410,411,412,413,414,415,416,417,418,369,370,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,322,327,457],"tindex":"af3c10de-3f58-11e6-90f0-a579d6016178","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl"},"failures":[458],"tindex":"af3c10df-3f58-11e6-90f0-dd2b7bcd9db8","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:332","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.ComparatorChain.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n                return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3c37f0-3f58-11e6-90f0-214b60419c50","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:168","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O>[] copy(final org.apache.commons.collections4.Transformer<? super I, ? extends O>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl"},"failures":[459,352,196,355,356,361,205,364,365,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,220,481,482,483,484,221,222,223,224,225,226,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,235,521,522,523,524,236,237,238,239,240,241,525,526,527,250,528,529,530,531,251,252,253,254,255,256,532,533,534,267,535,536,537,538,268,269,270,271,272,273,49,539,540,541,282,542,543,544,545,283,284,285,286,287,288],"tindex":"af3c37f1-3f58-11e6-90f0-b79ce5563cc5","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((previous.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"previous"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl"},"failures":[546],"tindex":"af3c37f2-3f58-11e6-90f0-73b754eb9d39","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl"},"failures":[547],"tindex":"af3c5f03-3f58-11e6-90f0-8969a5c72468","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndTransformers == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (objectsAndTransformers == null) {\n                        throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n                    } \n                    final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n                    final int int = objectsAndTransformers.size();\n                    final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n                    final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n                    int int = 0;\n                    for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                        preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                        trs[(i++)] = entry.getValue();\n                    }\n                    return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3c5f04-3f58-11e6-90f0-8dd2ef9c47d5","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3c5f05-3f58-11e6-90f0-0d5e2165d9e8","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[548],"tindex":"af3c8616-3f58-11e6-90f0-a36033460823","method":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:46","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3c8617-3f58-11e6-90f0-07c102e9bac0","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[549,549,550,551,551,552,553,554,555,556,547,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573],"tindex":"af3c8618-3f58-11e6-90f0-a9b06005df30","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3c8619-3f58-11e6-90f0-efa76b37f264","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl"},"failures":[459,194,348,195,349,350,351,352,196,197,353,354,198,355,199,356,200,201,202,574,575,576,577,578,203,357,204,358,359,360,361,205,206,362,363,207,364,208,365,209,210,211,579,580,581,582,583,584,585],"tindex":"af3cad2a-3f58-11e6-90f0-477dad33aab4","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:74","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map, final V dummyValue) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n            } \n            return new org.apache.commons.collections4.set.MapBackedSet<E, V>(map , dummyValue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl"},"failures":[586,587],"tindex":"af3cad2b-3f58-11e6-90f0-555f371ef9c8","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3cad2c-3f58-11e6-90f0-e123bc1413a6","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (b.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:697","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3cd43d-3f58-11e6-90f0-df5d3b54a807","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[588,589,590,591],"tindex":"af3cd43e-3f58-11e6-90f0-a37a00f8060b","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = decorated().entrySet();\n            if (pairs != null) {\n                for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : pairs) {\n                    if (((java.util.Collection<V>)(entry.getValue())).contains(value)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3cd43f-3f58-11e6-90f0-8badfeffcd78","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:57","type":"CtBinaryOperatorImpl"},"failures":[592,593,594,595,596,597],"tindex":"af3cd440-3f58-11e6-90f0-b36bb8dac1d7","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3cfb51-3f58-11e6-90f0-7d7afc0c3393","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndTransformers == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (objectsAndTransformers == null) {\n                        throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n                    } \n                    final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n                    final int int = objectsAndTransformers.size();\n                    final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n                    final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n                    int int = 0;\n                    for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                        preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                        trs[(i++)] = entry.getValue();\n                    }\n                    return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl"},"failures":[598,599,600,601,602,603],"tindex":"af3cfb52-3f58-11e6-90f0-f39cb7f899b6","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:284","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[604,605,606,607,608,609,610,611],"tindex":"af3cfb53-3f58-11e6-90f0-f75614baaf10","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl"},"failures":[612],"tindex":"af3d2264-3f58-11e6-90f0-8d7c3fcaa5b2","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl"},"failures":[613,614],"tindex":"af3d2265-3f58-11e6-90f0-45fd23da5c32","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3d2266-3f58-11e6-90f0-79eabfab33f5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3d2267-3f58-11e6-90f0-1f5bd2c39e54","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[615,616,238,239,240,227,228,229,230,231,617,232,233,234,235,618,619,285,274,275,276,277,278,279,280,281,282],"tindex":"af3d2268-3f58-11e6-90f0-8bd5d8405f04","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl"},"failures":[620],"tindex":"af3d4979-3f58-11e6-90f0-e7ab13cbc4da","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3d497a-3f58-11e6-90f0-fdf92f32c1b7","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (null == object) {\n                {\n                    return decorated().indexOf(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl"},"failures":[621,622],"tindex":"af3d497b-3f58-11e6-90f0-979aa562ec69","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3d708c-3f58-11e6-90f0-3118be26d29d","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl"},"failures":[623,624,625,626,627,628,99,629,630],"tindex":"af3d708d-3f58-11e6-90f0-1547d0619918","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[631,632,633,634],"tindex":"af3d708e-3f58-11e6-90f0-41408b8649dc","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl"},"failures":[635,636,637,638,639,640,641],"tindex":"af3d979f-3f58-11e6-90f0-17a4bc1d67b0","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3d97a0-3f58-11e6-90f0-05b38955120b","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        return null;\n                    } \n                    if (answer instanceof java.lang.Double) {\n                        return ((java.lang.Double)(answer));\n                    } \n                    return java.lang.Double.valueOf(answer.doubleValue());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3d97a1-3f58-11e6-90f0-bd2da788f97f","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(obj);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    final java.lang.Object java.lang.Object = n.getKey();\n                    if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3d97a2-3f58-11e6-90f0-ab5a8c2645c6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            for (final E E : coll) {\n                addNodeBefore(node, e);\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3dbeb3-3f58-11e6-90f0-5984b60b8639","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((a.size()) != (b.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (equator == null) {\n                {\n                    if (equator == null) {\n                        throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n                    } \n                    if ((a.size()) != (b.size())) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                        public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                        }\n                    };\n                    return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3dbeb4-3f58-11e6-90f0-774bf93d5a86","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (enumeration == null) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3dbeb5-3f58-11e6-90f0-f96c4b866351","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3de5c6-3f58-11e6-90f0-4f066b00fe5c","method":{"position":"org.apache.commons.collections4.MapUtils:506","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key, final java.lang.Long defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3de5c7-3f58-11e6-90f0-0361f6ef6f61","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3de5c8-3f58-11e6-90f0-a3f60525eb44","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[642],"tindex":"af3de5c9-3f58-11e6-90f0-d7386a8f1d51","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3de5ca-3f58-11e6-90f0-a90ddd800c2d","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3e0cdb-3f58-11e6-90f0-dba4f2f3444f","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl"},"failures":[407],"tindex":"af3e0cdc-3f58-11e6-90f0-45aba9465ec0","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3e0cdd-3f58-11e6-90f0-2bf685eea0a9","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[643,644],"tindex":"af3e0cde-3f58-11e6-90f0-a75d6357d08c","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        {\n            return decorated().listIterator(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[645,646,647],"tindex":"af3e33ef-3f58-11e6-90f0-2f1714bd9c25","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[648,649,650],"tindex":"af3e33f0-3f58-11e6-90f0-9faa74353ea7","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtBinaryOperatorImpl"},"failures":[651,652,653,626,654,655,627,656,657,658,659,660,629,661,662],"tindex":"af3e33f1-3f58-11e6-90f0-4525e5d66acd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1815","type":"CtMethodImpl","sourcecode":"private java.util.Map.Entry<V, K> createEntry(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node) {\n    if (node == null) {\n        {\n            return new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry<V, K>(node.getValue() , node.getKey());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl"},"failures":[663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699],"tindex":"af3e33f2-3f58-11e6-90f0-b35e4aef6715","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3e33f3-3f58-11e6-90f0-151ad5b3dfc0","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl"},"failures":[700,701,702],"tindex":"af3e5b04-3f58-11e6-90f0-b30651c6d5f3","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl"},"failures":[703,392,704,705,706],"tindex":"af3e5b05-3f58-11e6-90f0-7dc3a4795d9b","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl"},"failures":[23,34],"tindex":"af3e5b06-3f58-11e6-90f0-cf6b60bbae36","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl"},"failures":[707],"tindex":"af3e5b07-3f58-11e6-90f0-d598b4a67ac3","method":{"position":"org.apache.commons.collections4.QueueUtils:93","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(queue, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtBinaryOperatorImpl"},"failures":[708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726],"tindex":"af3e5b08-3f58-11e6-90f0-9b01a58e25ee","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3e8219-3f58-11e6-90f0-f383d53be48f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                {\n                    while (true) {\n                        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        if (child.isEmpty()) {\n                            child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        } \n                        if ((child.int) <= (node.int)) {\n                            return child;\n                        } \n                        node = child;\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3e821a-3f58-11e6-90f0-21bb90502cd7","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[727],"tindex":"af3e821b-3f58-11e6-90f0-c362607b5914","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3e821c-3f58-11e6-90f0-9f776732bb35","method":{"position":"org.apache.commons.collections4.set.TransformedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSet<E> transformingSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"af3ea92d-3f58-11e6-90f0-4b103f1f6e0d","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351485295/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}