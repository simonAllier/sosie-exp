{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":275,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":483,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":459,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":66,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":311,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":418,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":50,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":362,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":142,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":529,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":170,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":219,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":283,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":360,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":350,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection":3,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":296,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":91,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":199,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":516,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":352,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":436,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":458,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":290,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":121,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":400,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":244,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":497,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":370,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":98,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":252,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":80,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":508,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":226,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":323,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":525,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":137,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":78,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":41,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":55,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":186,"org.apache.commons.collections4.CollectionUtilsTest.select":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":310,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":125,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":341,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":470,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":106,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":414,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":386,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":484,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":299,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":298,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":487,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":355,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":51,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":68,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":430,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":416,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":393,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":133,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":284,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":238,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection":2,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":175,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":65,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":102,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":120,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":506,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":276,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":273,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":445,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":143,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":61,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":271,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":377,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":263,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":291,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":158,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":212,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":543,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":76,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":72,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":194,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":511,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":103,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":493,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":504,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":93,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":73,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":270,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":313,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":156,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":376,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":111,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":155,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":465,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":536,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":537,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":535,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":473,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":130,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":305,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":406,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":297,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":440,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":4,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":210,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":519,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":140,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":177,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":58,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":433,"org.apache.commons.collections4.list.TreeListTest.testRemove":180,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":308,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":520,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":53,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":533,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":208,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":532,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":42,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":280,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":534,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":188,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":368,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":154,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":189,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":449,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":317,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":292,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":200,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":439,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":477,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":454,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":315,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":129,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":415,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":114,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":486,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":161,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":389,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":79,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":205,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":540,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":463,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":457,"org.apache.commons.collections4.list.TreeListTest.testListEquals":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":237,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":518,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":432,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":286,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":49,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":453,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":27,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":40,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":48,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":357,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":31,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":184,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":272,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":255,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":10,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":409,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":253,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":281,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":1,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":138,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":274,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":369,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":105,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":523,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":538,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":366,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":141,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":530,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":228,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":390,"org.apache.commons.collections4.map.SingletonMapTest.testMapRemove":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":309,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":340,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":378,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":116,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":527,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":338,"org.apache.commons.collections4.bag.HashBagTest.testEqualsNull":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":174,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":351,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":330,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":83,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":162,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":179,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":396,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":522,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":285,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":67,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":206,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":132,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":183,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":480,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":331,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":23,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":11,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":77,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":421,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":268,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":507,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":455,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":442,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":444,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":329,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":82,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":437,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":356,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":395,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":333,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":391,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":428,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":245,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":365,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":489,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":354,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":521,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":443,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":150,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":12,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":182,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":337,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":171,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":319,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":87,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":214,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":412,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":69,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":401,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":349,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":32,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":419,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":462,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":476,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":64,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":492,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":345,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":528,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":413,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":501,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":346,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":347,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":374,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":479,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":243,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":104,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":411,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":541,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":240,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":144,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":460,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectEqualsSelf":157,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":405,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":363,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":115,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":221,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":451,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":213,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":197,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":16,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":187,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":232,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":469,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":25,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":190,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":92,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":216,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":278,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":394,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":490,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":45,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":46,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":499,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":510,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":260,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":126,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":233,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":324,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":509,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":223,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":399,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":209,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":429,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":37,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":218,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":193,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":375,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":89,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":168,"org.apache.commons.collections4.list.TreeListTest.testBug35258":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":241,"org.apache.commons.collections4.ListUtilsTest.testSelect":398,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":127,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":203,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":441,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":408,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":146,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":176,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":420,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":265,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":342,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":343,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":407,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":482,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":447,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":464,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":257,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":254,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":372,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":247,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":261,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":47,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":227,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":539,"org.apache.commons.collections4.bag.TreeBagTest.testEqualsNull":316,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":387,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":159,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":485,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":251,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":250,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":249,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":256,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":326,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":339,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":461,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":498,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":306,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":294,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":96,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":327,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":361,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":6,"org.apache.commons.collections4.CollectionUtilsTest.find":512,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":438,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":371,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":259,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":450,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":427,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":384,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":328,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":383,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":382,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":211,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":404,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":379,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":380,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":381,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":295,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":435,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":336,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":474,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":307,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":468,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":456,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":108,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":524,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":34,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":229,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":148,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":107,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":70,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":542,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":397,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":43,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":54,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":514,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":9,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":502,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":239,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":513,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":466,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":446,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":277,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":63,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":410,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":488,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":267,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":246,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":236,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":135,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":500,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":195,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":24,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":422,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":169,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":334,"org.apache.commons.collections4.map.HashedMapTest.testObjectEqualsSelf":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":359,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":36,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":166},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:679","type":"CtBinaryOperatorImpl","sourcecode":"floatObject == null"},"failures":[],"tindex":"36ed0df5-2ea7-11e6-a1a1-47120d1707dc","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[0],"tindex":"36ee1f66-2ea7-11e6-a1a1-3bec95571c7c","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if ((index - index) > (index - index)) {\n        {\n            return getEntry(index).getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"index","end2":"index","end1":"index","start2":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[],"tindex":"36ee4677-2ea7-11e6-a1a1-fb423f63b1e5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:565","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprivate <T extends java.lang.Comparable<T>>org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookup(final java.lang.Object data, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (data == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n            while (node != null) {\n                final int int = org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(data)), ((T)(node.getData(dataElement))));\n                if (cmp == 0) {\n                    rval = node;\n                    break;\n                } else {\n                    node = cmp < 0 ? node.getLeft(dataElement) : node.getRight(dataElement);\n                }\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"data"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[1,2,3,4,5,6,7],"tindex":"36ee6d88-2ea7-11e6-a1a1-37c609074d90","method":{"position":"org.apache.commons.collections4.CollectionUtils:1414","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return (coll == null) || (coll.isEmpty());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"36ee6d89-2ea7-11e6-a1a1-db30598c6eb9","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[8,9,10,11],"tindex":"36ee949a-2ea7-11e6-a1a1-9f7c454d1f33","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[12,13,14,15,16,17,18,19,20,21,22],"tindex":"36eebbab-2ea7-11e6-a1a1-3fc165b247af","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index == index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"36eebbac-2ea7-11e6-a1a1-1b65c8dc955a","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if ((object == null) || (object == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"object","b":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[58],"tindex":"36eee2bd-2ea7-11e6-a1a1-6986293cb789","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[59,60],"tindex":"36eee2be-2ea7-11e6-a1a1-2f1dfaf235d1","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"36ef09cf-2ea7-11e6-a1a1-dd32ee5288c0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:190","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"tindex":"36ef09d0-2ea7-11e6-a1a1-77739bce474a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.String) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[174,175],"tindex":"36ef57f1-2ea7-11e6-a1a1-d36f6ec37a9b","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:227","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            if (value == null) {\n                return false;\n            } \n            return super.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl","sourcecode":"integerObject == null"},"failures":[],"tindex":"36ef57f2-2ea7-11e6-a1a1-f3a14e5bf668","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtBinaryOperatorImpl","sourcecode":"((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)"},"failures":[176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209],"tindex":"36ef7f03-2ea7-11e6-a1a1-4de0f6c907b6","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (((((index % index) != 0) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"36efa614-2ea7-11e6-a1a1-79bbc0581667","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"36efa615-2ea7-11e6-a1a1-372471396384","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"36efcd26-2ea7-11e6-a1a1-1fce3698460e","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof java.util.List) == false) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[210,211,212,213,214,28,215,35,216,42,49,217,52],"tindex":"36efcd27-2ea7-11e6-a1a1-7fb19e1d5e82","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if ((object instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[218],"tindex":"36eff438-2ea7-11e6-a1a1-676aa8054224","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (retain == retain) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"retain","list2":"retain"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[180,192,200,206,207,208],"tindex":"36eff439-2ea7-11e6-a1a1-8fd63647739e","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[],"tindex":"36f01b4a-2ea7-11e6-a1a1-9dfd495259c4","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:162","type":"CtMethodImpl","sourcecode":"public void setUnknownObjectBehavior(final org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior unknownObjectBehavior) {\n    if (unknownObjectBehavior == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            if (unknownObjectBehavior == null) {\n                throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n            } \n            org.apache.commons.collections4.comparators.FixedOrderComparator.this.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior = unknownObjectBehavior;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"unknownObjectBehavior"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[219],"tindex":"36f0425b-2ea7-11e6-a1a1-5915d3cfc34f","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"36f0425c-2ea7-11e6-a1a1-4d60166f308a","method":{"position":"org.apache.commons.collections4.IteratorUtils:491","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (iterator1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[220],"tindex":"36f0696d-2ea7-11e6-a1a1-6516b849175f","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        {\n            if (key == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtBinaryOperatorImpl","sourcecode":"(x.getLeft(dataElement)) != null"},"failures":[221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,58,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"tindex":"36f0696e-2ea7-11e6-a1a1-95b39bba84ff","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"x":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl","sourcecode":"key5 != null"},"failures":[316,317,318,319,320,321,322,323,324,325,326],"tindex":"36f0907f-2ea7-11e6-a1a1-e9fb5efb574a","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object != null) {\n                {\n                    if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                        return true;\n                    } \n                    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n                    if ((other.size()) != (size())) {\n                        return false;\n                    } \n                    for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                        if ((other.getCount(element)) != (getCount(element))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl","sourcecode":"key5 != null"},"failures":[221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,327,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,58,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"tindex":"36f0b790-2ea7-11e6-a1a1-4375771f3b07","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[328,329,174,330,331,332,333,334,76,77,78,79,80,81,82,335,83,336,84,337,338,85,86,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359],"tindex":"36f0dea1-2ea7-11e6-a1a1-519e96219db9","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:174","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hash(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.System.identityHashCode(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl","sourcecode":"(position1 == null) || (position2 == null)"},"failures":[360],"tindex":"36f0dea2-2ea7-11e6-a1a1-4719b0fb8dac","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj == null) || (obj == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"obj","position2":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[361],"tindex":"36f105b3-2ea7-11e6-a1a1-7b69db80c4a1","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:128","type":"CtBinaryOperatorImpl","sourcecode":"maxSize < 1"},"failures":[],"tindex":"36f105b4-2ea7-11e6-a1a1-d70486aef4d2","method":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:113","type":"CtMethodImpl","sourcecode":"protected void setMaximumCacheSize(final int maximumCacheSize) {\n    if (maximumCacheSize < 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.list.NodeCachingLinkedList.this.int = maximumCacheSize;\n            shrinkCacheToMaximumSize();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxSize":"maximumCacheSize"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"36f105b5-2ea7-11e6-a1a1-cb379b118132","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll2 != null) {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[112,113],"tindex":"36f12cc6-2ea7-11e6-a1a1-3540dd49ef1d","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration<?>) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtInvocationImpl","sourcecode":"current.isEmpty()"},"failures":[362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395],"tindex":"36f12cc7-2ea7-11e6-a1a1-491a47ea4dc8","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node.isEmpty()) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[396,397],"tindex":"36f153d8-2ea7-11e6-a1a1-3787354e7a04","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"36f153d9-2ea7-11e6-a1a1-0db5c7fae66a","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[398,399,400,401,402,403,404,405,406,407,408],"tindex":"36f153da-2ea7-11e6-a1a1-976678b6d669","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if (a != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"36f17aeb-2ea7-11e6-a1a1-8fa2307b609c","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object != null) {\n                {\n                    if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                        return true;\n                    } \n                    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n                    if ((other.size()) != (size())) {\n                        return false;\n                    } \n                    for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                        if ((other.getCount(element)) != (getCount(element))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[409,410],"tindex":"36f17aec-2ea7-11e6-a1a1-736a8d9fb499","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"36f17aed-2ea7-11e6-a1a1-99710eb2c3bf","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[411,412],"tindex":"36f1a1fe-2ea7-11e6-a1a1-ff5cb40e9ef3","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[413],"tindex":"36f1a1ff-2ea7-11e6-a1a1-2f02245992eb","method":{"position":"org.apache.commons.collections4.PredicateUtils:487","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482],"tindex":"36f1a200-2ea7-11e6-a1a1-076f1552eecf","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:126","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if (fromIndex < 0) {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(org.apache.commons.collections4.list.AbstractLinkedList.this , fromIndex);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"fromIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtBinaryOperatorImpl","sourcecode":"(isLocked) == true"},"failures":[],"tindex":"36f1c811-2ea7-11e6-a1a1-2d2b84fc5896","method":{"position":"org.apache.commons.collections4.ComparatorUtils:135","type":"CtMethodImpl","sourcecode":"public static java.util.Comparator<java.lang.Boolean> booleanComparator(final boolean trueFirst) {\n    if (trueFirst == true) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(trueFirst);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isLocked":"trueFirst"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[483],"tindex":"36f1c812-2ea7-11e6-a1a1-37c6e70a125e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[484,485,486,487,488,489,490,212,491,492,493,494,495,496,497,35],"tindex":"36f30093-2ea7-11e6-a1a1-4db8cdcb81b5","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return getBag().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"36f30094-2ea7-11e6-a1a1-37f7aa18948f","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:278","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[235,236,238,239,240,243,249,250,251,281,282,284,285,286,289,291,58,294,298,299,300],"tindex":"36f327a5-2ea7-11e6-a1a1-d3f435b9482e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"36f327a6-2ea7-11e6-a1a1-ffb6b49c015a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[],"tindex":"36f327a7-2ea7-11e6-a1a1-29d06ff7840c","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[],"tindex":"36f34eb8-2ea7-11e6-a1a1-03052e80a401","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof org.apache.commons.collections4.KeyValue) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"36f34eb9-2ea7-11e6-a1a1-f97ed71ae2c8","method":{"position":"org.apache.commons.collections4.MapUtils:677","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return 0.0F;\n            } \n            return floatObject.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[],"tindex":"36f34eba-2ea7-11e6-a1a1-6bdf7c7b6ad4","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[498],"tindex":"36f375cb-2ea7-11e6-a1a1-81632739bd84","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[483],"tindex":"36f375cc-2ea7-11e6-a1a1-397b5dbf871e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:110","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"36f375cd-2ea7-11e6-a1a1-d9a9b03e2695","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"36f39cde-2ea7-11e6-a1a1-73e8d5e90b7e","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(i)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"i"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[499],"tindex":"36f39cdf-2ea7-11e6-a1a1-c90bb1319ff3","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[500,501,502,503,504,505,506,507,508,509,510,511],"tindex":"36f39ce0-2ea7-11e6-a1a1-8dea325dd477","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"36f3c3f1-2ea7-11e6-a1a1-dd13e6861808","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"36f3c3f2-2ea7-11e6-a1a1-3993f4aac2f8","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"36f3c3f3-2ea7-11e6-a1a1-4b0c91c04930","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"label"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[512],"tindex":"36f3c3f4-2ea7-11e6-a1a1-ff7e29c97dde","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[513,514],"tindex":"36f3eb05-2ea7-11e6-a1a1-a772bb518319","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (b == null) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"36f3eb06-2ea7-11e6-a1a1-d1ad4b0ba9c5","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:278","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"36f41217-2ea7-11e6-a1a1-a93caff505e1","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:383","type":"CtBinaryOperatorImpl","sourcecode":"size < 4"},"failures":[179,178,180,515,516,192,195,196,197,198,200,206,207,208],"tindex":"36f41218-2ea7-11e6-a1a1-41e4bdf0c3e1","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 4) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"36f41219-2ea7-11e6-a1a1-9d9415909d96","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.CollectionUtils.isSubCollection(mapToCopy.keySet(), keySet())) {\n                throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n            } \n            java.util.Map<K, V>.putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[],"tindex":"36f4392a-2ea7-11e6-a1a1-fd9181b1e2fb","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        {\n            if (key == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[422,470,517],"tindex":"36f4392b-2ea7-11e6-a1a1-cbf09ba6bf1e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"36f4392c-2ea7-11e6-a1a1-1f88ba55efe4","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) < (wrappedIteratorIndex)"},"failures":[],"tindex":"36f4603d-2ea7-11e6-a1a1-077db5fdc6b0","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies < nCopies) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrappedIteratorIndex":"nCopies","currentIndex":"nCopies"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl","sourcecode":"(position1 == null) || (position2 == null)"},"failures":[],"tindex":"36f4603e-2ea7-11e6-a1a1-37e9d54451f2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if ((o == null) || (o == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveKey(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"o","position2":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"36f4874f-2ea7-11e6-a1a1-e92b9e728cbb","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (listIterator == null) {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"listIterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl","sourcecode":"null != (orderingBits)"},"failures":[518,519,520,521,522,523,524,525,526,527,528,529,530],"tindex":"36f48750-2ea7-11e6-a1a1-4d9956b1a77e","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:382","type":"CtMethodImpl","sourcecode":"private boolean anyValueSet(final java.util.BitSet set) {\n    if (null != set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < (set.size()) ; i++) {\n                if (set.get(i)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"36f48751-2ea7-11e6-a1a1-27c449a67c8e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:318","type":"CtMethodImpl","sourcecode":"private void _putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = map.size();\n            if (mapSize == 0) {\n                return ;\n            } \n            final int int = ((int)((((int) + mapSize) / (float)) + 1));\n            ensureCapacity(calculateNewCapacity(newSize));\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[328,330,76,77,79,80,81,82,83,84,85,86,342,343,344,345,346,347,352,355,356,357,358,359,531,91,92,94,95,96,97,98,99,100,101,532,533,534,535,536,537,538,539,540,541,542,543],"tindex":"36f4ae62-2ea7-11e6-a1a1-87af9026f904","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                return null;\n            } \n            return super.getEntry(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":78,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}